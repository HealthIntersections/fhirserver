Unit v2_dictionary_v26;

{
Copyright (c) 2011+, HL7 and Health Intersections Pty Ltd (http://www.healthintersections.com.au)
All rights reserved.

Redistribution and use in source and binary forms, with or without modification,
are permitted provided that the following conditions are met:

 * Redistributions of source code must retain the above copyright notice, this
   list of conditions and the following disclaimer.
 * Redistributions in binary form must reproduce the above copyright notice,
   this list of conditions and the following disclaimer in the documentation
   and/or other materials provided with the distribution.
 * Neither the name of HL7 nor the names of its contributors may be used to
   endorse or promote products derived from this software without specific
   prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS' AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
POSSIBILITY OF SUCH DAMAGE.
}

{$I fhir.inc}
{ WARNING: This is generated code. Do not make any changes here }

Interface

Uses
  v2_dictionary;

procedure Definitions26LoadTables(oTables : THL7V2ModelTables);
procedure Definitions26LoadComponents(oComponents : THL7V2ModelComponents);
procedure Definitions26LoadDataElements(oDataElements : THL7V2ModelDataElements);
procedure Definitions26LoadDataTypes(oDataTypes : THL7V2ModelDataTypes);
procedure Definitions26LoadEvents(oEvents : THL7V2ModelEvents);
procedure Definitions26LoadStructures(oStructures : THL7V2ModelStructures; oComponents : THL7V2ModelComponents);
procedure Definitions26LoadSegments(oSegments : THL7V2ModelSegments);
procedure Definitions26LoadMessageStructures(oStructures : THL7V2ModelMessageStructures);

Implementation

procedure LoadTable0(oTables : THL7V2ModelTables);
Begin
  oTables.Add(0, 'no table');
End;

procedure LoadTable1(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(1, 'Administrative Sex');
    oTable.Items.Add(5, 'A', 'Ambiguous');
    oTable.Items.Add(1, 'F', 'Female');
    oTable.Items.Add(2, 'M', 'Male');
    oTable.Items.Add(6, 'N', 'Not applicable');
    oTable.Items.Add(3, 'O', 'Other');
    oTable.Items.Add(4, 'U', 'Unknown');
End;

procedure LoadTable2(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(2, 'Marital Status');
    oTable.Items.Add(1, 'A', 'Separated');
    oTable.Items.Add(13, 'B', 'Unmarried');
    oTable.Items.Add(6, 'C', 'Common law');
    oTable.Items.Add(2, 'D', 'Divorced');
    oTable.Items.Add(10, 'E', 'Legally Separated');
    oTable.Items.Add(7, 'G', 'Living together');
    oTable.Items.Add(12, 'I', 'Interlocutory');
    oTable.Items.Add(3, 'M', 'Married');
    oTable.Items.Add(11, 'N', 'Annulled');
    oTable.Items.Add(15, 'O', 'Other');
    oTable.Items.Add(8, 'P', 'Domestic partner');
    oTable.Items.Add(9, 'R', 'Registered domestic partner');
    oTable.Items.Add(4, 'S', 'Single');
    oTable.Items.Add(16, 'T', 'Unreported');
    oTable.Items.Add(14, 'U', 'Unknown');
    oTable.Items.Add(5, 'W', 'Widowed');
End;

procedure LoadTable3(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(3, 'Event type');
    oTable.Items.Add(1, 'A01', 'ADT/ACK - Admit/visit notification');
    oTable.Items.Add(2, 'A02', 'ADT/ACK - Transfer a patient');
    oTable.Items.Add(3, 'A03', 'ADT/ACK -  Discharge/end visit');
    oTable.Items.Add(4, 'A04', 'ADT/ACK -  Register a patient');
    oTable.Items.Add(5, 'A05', 'ADT/ACK -  Pre-admit a patient');
    oTable.Items.Add(6, 'A06', 'ADT/ACK -  Change an outpatient to an inpatient');
    oTable.Items.Add(7, 'A07', 'ADT/ACK -  Change an inpatient to an outpatient');
    oTable.Items.Add(8, 'A08', 'ADT/ACK -  Update patient information');
    oTable.Items.Add(9, 'A09', 'ADT/ACK -  Patient departing - tracking');
    oTable.Items.Add(10, 'A10', 'ADT/ACK -  Patient arriving - tracking');
    oTable.Items.Add(11, 'A11', 'ADT/ACK -  Cancel admit/visit notification');
    oTable.Items.Add(12, 'A12', 'ADT/ACK -  Cancel transfer');
    oTable.Items.Add(13, 'A13', 'ADT/ACK -  Cancel discharge/end visit');
    oTable.Items.Add(14, 'A14', 'ADT/ACK -  Pending admit');
    oTable.Items.Add(15, 'A15', 'ADT/ACK -  Pending transfer');
    oTable.Items.Add(16, 'A16', 'ADT/ACK -  Pending discharge');
    oTable.Items.Add(17, 'A17', 'ADT/ACK -  Swap patients');
    oTable.Items.Add(18, 'A18', 'ADT/ACK -  Merge patient information (for backward compatibility only)');
    oTable.Items.Add(19, 'A19', 'QRY/ADR -  Patient query');
    oTable.Items.Add(20, 'A20', 'ADT/ACK -  Bed status update');
    oTable.Items.Add(21, 'A21', 'ADT/ACK -  Patient goes on a "leave of absence"');
    oTable.Items.Add(22, 'A22', 'ADT/ACK -  Patient returns from a "leave of absence"');
    oTable.Items.Add(23, 'A23', 'ADT/ACK -  Delete a patient record');
    oTable.Items.Add(24, 'A24', 'ADT/ACK -  Link patient information');
    oTable.Items.Add(25, 'A25', 'ADT/ACK -  Cancel pending discharge');
    oTable.Items.Add(26, 'A26', 'ADT/ACK -  Cancel pending transfer');
    oTable.Items.Add(27, 'A27', 'ADT/ACK -  Cancel pending admit');
    oTable.Items.Add(28, 'A28', 'ADT/ACK -  Add person information');
    oTable.Items.Add(29, 'A29', 'ADT/ACK -  Delete person information');
    oTable.Items.Add(30, 'A30', 'ADT/ACK -  Merge person information (for backward compatibility only)');
    oTable.Items.Add(31, 'A31', 'ADT/ACK -  Update person information');
    oTable.Items.Add(32, 'A32', 'ADT/ACK -  Cancel patient arriving - tracking');
    oTable.Items.Add(33, 'A33', 'ADT/ACK -  Cancel patient departing - tracking');
    oTable.Items.Add(34, 'A34', 'ADT/ACK -  Merge patient information - patient ID only (for backward compatibility only)');
    oTable.Items.Add(35, 'A35', 'ADT/ACK -  Merge patient information - account number only (for backward compatibility only)');
    oTable.Items.Add(36, 'A36', 'ADT/ACK -  Merge patient information - patient ID and account number (for backward compatibility only)');
    oTable.Items.Add(37, 'A37', 'ADT/ACK -  Unlink patient information');
    oTable.Items.Add(38, 'A38', 'ADT/ACK - Cancel pre-admit');
    oTable.Items.Add(39, 'A39', 'ADT/ACK - Merge person - patient ID (for backward compatibility only)');
    oTable.Items.Add(40, 'A40', 'ADT/ACK - Merge patient - patient identifier list');
    oTable.Items.Add(41, 'A41', 'ADT/ACK - Merge account - patient account number');
    oTable.Items.Add(42, 'A42', 'ADT/ACK - Merge visit - visit number');
    oTable.Items.Add(43, 'A43', 'ADT/ACK - Move patient information - patient identifier list');
    oTable.Items.Add(44, 'A44', 'ADT/ACK - Move account information - patient account number');
    oTable.Items.Add(45, 'A45', 'ADT/ACK - Move visit information - visit number');
    oTable.Items.Add(46, 'A46', 'ADT/ACK - Change patient ID (for backward compatibility only)');
    oTable.Items.Add(47, 'A47', 'ADT/ACK - Change patient identifier list');
    oTable.Items.Add(48, 'A48', 'ADT/ACK - Change alternate patient ID (for backward compatibility only)');
    oTable.Items.Add(49, 'A49', 'ADT/ACK - Change patient account number');
    oTable.Items.Add(50, 'A50', 'ADT/ACK - Change visit number');
    oTable.Items.Add(51, 'A51', 'ADT/ACK - Change alternate visit ID');
    oTable.Items.Add(52, 'A52', 'ADT/ACK - Cancel leave of absence for a patient');
    oTable.Items.Add(53, 'A53', 'ADT/ACK - Cancel patient returns from a leave of absence');
    oTable.Items.Add(54, 'A54', 'ADT/ACK - Change attending doctor');
    oTable.Items.Add(55, 'A55', 'ADT/ACK - Cancel change attending doctor');
    oTable.Items.Add(56, 'A60', 'ADT/ACK - Update allergy information');
    oTable.Items.Add(57, 'A61', 'ADT/ACK - Change consulting doctor');
    oTable.Items.Add(58, 'A62', 'ADT/ACK - Cancel change consulting doctor');
    oTable.Items.Add(59, 'B01', 'PMU/ACK - Add personnel record');
    oTable.Items.Add(60, 'B02', 'PMU/ACK - Update personnel record');
    oTable.Items.Add(61, 'B03', 'PMU/ACK - Delete personnel re cord');
    oTable.Items.Add(62, 'B04', 'PMU/ACK - Active practicing person');
    oTable.Items.Add(63, 'B05', 'PMU/ACK - Deactivate practicing person');
    oTable.Items.Add(64, 'B06', 'PMU/ACK - Terminate practicing person');
    oTable.Items.Add(65, 'B07', 'PMU/ACK - Grant Certificate/Permission');
    oTable.Items.Add(66, 'B08', 'PMU/ACK - Revoke Certificate/Permission');
    oTable.Items.Add(67, 'C01', 'CRM - Register a patient on a clinical trial');
    oTable.Items.Add(68, 'C02', 'CRM - Cancel a patient registration on clinical trial (for clerical mistakes only)');
    oTable.Items.Add(69, 'C03', 'CRM - Correct/update registration information');
    oTable.Items.Add(70, 'C04', 'CRM - Patient has gone off a clinical trial');
    oTable.Items.Add(71, 'C05', 'CRM - Patient enters phase of clinical trial');
    oTable.Items.Add(72, 'C06', 'CRM - Cancel patient entering a phase (clerical mistake)');
    oTable.Items.Add(73, 'C07', 'CRM - Correct/update phase information');
    oTable.Items.Add(74, 'C08', 'CRM - Patient has gone off phase of clinical trial');
    oTable.Items.Add(75, 'C09', 'CSU - Automated time intervals for reporting, like monthly');
    oTable.Items.Add(76, 'C10', 'CSU - Patient completes the clinical trial');
    oTable.Items.Add(77, 'C11', 'CSU - Patient completes a phase of the clinical trial');
    oTable.Items.Add(78, 'C12', 'CSU - Update/correction of patient order/result information');
    oTable.Items.Add(79, 'E01', 'Submit HealthCare Services Invoice');
    oTable.Items.Add(80, 'E02', 'Cancel HealthCare Services Invoice');
    oTable.Items.Add(81, 'E03', 'HealthCare Services Invoice Status');
    oTable.Items.Add(82, 'E04', 'Re-Assess HealthCare Services Invoice Request');
    oTable.Items.Add(83, 'E10', 'Edit/Adjudication Results');
    oTable.Items.Add(84, 'E12', 'Request Additional Information');
    oTable.Items.Add(85, 'E13', 'Additional Information Response');
    oTable.Items.Add(86, 'E15', 'Payment/Remittance Advice');
    oTable.Items.Add(87, 'E20', 'Submit Authorization Request');
    oTable.Items.Add(88, 'E21', 'Cancel Authorization Request');
    oTable.Items.Add(89, 'E22', 'Authorization Request Status');
    oTable.Items.Add(90, 'E24', 'Authorization Response');
    oTable.Items.Add(91, 'E30', 'Submit Health Document related to Authorization Request');
    oTable.Items.Add(92, 'E31', 'Cancel Health Document related to Authorization Request');
    oTable.Items.Add(93, 'I01', 'RQI/RPI - Request for insurance information');
    oTable.Items.Add(94, 'I02', 'RQI/RPL - Request/receipt of patient selection display list');
    oTable.Items.Add(95, 'I03', 'RQI/RPR - Request/receipt of patient selection list');
    oTable.Items.Add(96, 'I04', 'RQD/RPI - Request for patient demographic data');
    oTable.Items.Add(97, 'I05', 'RQC/RCI - Request for patient clinical information');
    oTable.Items.Add(98, 'I06', 'RQC/RCL - Request/receipt of clinical data listing');
    oTable.Items.Add(99, 'I07', 'PIN/ACK - Unsolicited insurance information');
    oTable.Items.Add(100, 'I08', 'RQA/RPA - Request for treatment authorization information');
    oTable.Items.Add(101, 'I09', 'RQA/RPA - Request for modification to an authorization');
    oTable.Items.Add(102, 'I10', 'RQA/RPA - Request for resubmission of an authorization');
    oTable.Items.Add(103, 'I11', 'RQA/RPA - Request for cancellation of an authorization');
    oTable.Items.Add(104, 'I12', 'REF/RRI - Patient referral');
    oTable.Items.Add(105, 'I13', 'REF/RRI - Modify patient referral');
    oTable.Items.Add(106, 'I14', 'REF/RRI - Cancel patient referral');
    oTable.Items.Add(107, 'I15', 'REF/RRI - Request patient referral status');
    oTable.Items.Add(108, 'J01', 'QCN/ACK - Cancel query/acknowledge message');
    oTable.Items.Add(109, 'J02', 'QSX/ACK - Cancel subscription/acknowledge message');
    oTable.Items.Add(110, 'K11', 'RSP - Segment pattern response in response to QBP^Q11');
    oTable.Items.Add(111, 'K13', 'RTB - Tabular response in response to QBP^Q13');
    oTable.Items.Add(112, 'K15', 'RDY - Display response in response to QBP^Q15');
    oTable.Items.Add(113, 'K21', 'RSP - Get person demographics response');
    oTable.Items.Add(114, 'K22', 'RSP - Find candidates response');
    oTable.Items.Add(115, 'K23', 'RSP - Get corresponding identifiers response');
    oTable.Items.Add(116, 'K24', 'RSP - Allocate identifiers response');
    oTable.Items.Add(117, 'K25', 'RSP - Personnel Information by Segment Response');
    oTable.Items.Add(118, 'K31', 'RSP -Dispense History Response');
    oTable.Items.Add(119, 'M01', 'MFN/MFK - Master file not otherwise specified (for backward compatibility only)');
    oTable.Items.Add(120, 'M02', 'MFN/MFK - Master file - staff practitioner');
    oTable.Items.Add(121, 'M03', 'MFN/MFK - Master file - test/observation (for backward compatibility only)');
    oTable.Items.Add(122, 'M04', 'MFN/MFK - Master files charge description');
    oTable.Items.Add(123, 'M05', 'MFN/MFK - Patient location master file');
    oTable.Items.Add(124, 'M06', 'MFN/MFK - Clinical study with phases and schedules master file');
    oTable.Items.Add(125, 'M07', 'MFN/MFK - Clinical study without phases but with schedules master file');
    oTable.Items.Add(126, 'M08', 'MFN/MFK - Test/observation (numeric) master file');
    oTable.Items.Add(127, 'M09', 'MFN/MFK - Test/observation (categorical) master file');
    oTable.Items.Add(128, 'M10', 'MFN/MFK - Test /observation batteries master file');
    oTable.Items.Add(129, 'M11', 'MFN/MFK - Test/calculated observations master file');
    oTable.Items.Add(130, 'M12', 'MFN/MFK - Master file notification message');
    oTable.Items.Add(131, 'M13', 'MFN/MFK - Master file notification - general');
    oTable.Items.Add(132, 'M14', 'MFN/MFK - Master file notification - site defined');
    oTable.Items.Add(133, 'M15', 'MFN/MFK - Inventory item master file notification');
    oTable.Items.Add(134, 'M16', 'MFN/MFK - Master File Notification Inventory Item Enhanced');
    oTable.Items.Add(135, 'M17', 'DRG Master File Message');
    oTable.Items.Add(136, 'N01', 'NMQ/NMR - Application management query message');
    oTable.Items.Add(137, 'N02', 'NMD/ACK - Application management data message (unsolicited)');
    oTable.Items.Add(138, 'O01', 'ORM - Order message (also RDE, RDS, RGV, RAS)');
    oTable.Items.Add(139, 'O02', 'ORR - Order response (also RRE, RRD, RRG, RRA)');
    oTable.Items.Add(140, 'O03', 'OMD - Diet order');
    oTable.Items.Add(141, 'O04', 'ORD - Diet order acknowledgment');
    oTable.Items.Add(142, 'O05', 'OMS - Stock requisition order');
    oTable.Items.Add(143, 'O06', 'ORS - Stock requisition acknowledgment');
    oTable.Items.Add(144, 'O07', 'OMN - Non-stock requisition order');
    oTable.Items.Add(145, 'O08', 'ORN - Non-stock requisition acknowledgment');
    oTable.Items.Add(146, 'O09', 'OMP - Pharmacy/treatment order');
    oTable.Items.Add(147, 'O10', 'ORP - Pharmacy/treatment order acknowledgment');
    oTable.Items.Add(148, 'O11', 'RDE - Pharmacy/treatment encoded order');
    oTable.Items.Add(149, 'O12', 'RRE - Pharmacy/treatment encoded order acknowledgment');
    oTable.Items.Add(150, 'O13', 'RDS - Pharmacy/treatment dispense');
    oTable.Items.Add(151, 'O14', 'RRD - Pharmacy/treatment dispense acknowledgment');
    oTable.Items.Add(152, 'O15', 'RGV - Pharmacy/treatment give');
    oTable.Items.Add(153, 'O16', 'RRG - Pharmacy/treatment give acknowledgment');
    oTable.Items.Add(154, 'O17', 'RAS - Pharmacy/treatment administration');
    oTable.Items.Add(155, 'O18', 'RRA - Pharmacy/treatment administration acknowledgment');
    oTable.Items.Add(156, 'O19', 'OMG - General clinical order');
    oTable.Items.Add(157, 'O20', 'ORG/ORL - General clinical order response');
    oTable.Items.Add(158, 'O21', 'OML - Laboratory order');
    oTable.Items.Add(159, 'O22', 'ORL - General laboratory order response message to any OML');
    oTable.Items.Add(160, 'O23', 'OMI - Imaging order');
    oTable.Items.Add(161, 'O24', 'ORI - Imaging order response message to any OMI');
    oTable.Items.Add(162, 'O25', 'RDE - Pharmacy/treatment refill authorization request');
    oTable.Items.Add(163, 'O26', 'RRE - Pharmacy/Treatment Refill Authorization Acknowledgement');
    oTable.Items.Add(164, 'O27', 'OMB - Blood product order');
    oTable.Items.Add(165, 'O28', 'ORB - Blood product order acknowledgment');
    oTable.Items.Add(166, 'O29', 'BPS - Blood product dispense status');
    oTable.Items.Add(167, 'O30', 'BRP - Blood product dispense status acknowledgment');
    oTable.Items.Add(168, 'O31', 'BTS - Blood product transfusion/disposition');
    oTable.Items.Add(169, 'O32', 'BRT - Blood product transfusion/disposition acknowledgment');
    oTable.Items.Add(170, 'O33', 'OML - Laboratory order for multiple orders related to a single specimen');
    oTable.Items.Add(171, 'O34', 'ORL - Laboratory order response message to a multiple order related to single specimen OML');
    oTable.Items.Add(172, 'O35', 'OML - Laboratory order for multiple orders related to a single container of a specimen');
    oTable.Items.Add(173, 'O36', 'ORL - Laboratory order response message to a single container of a specimen OML');
    oTable.Items.Add(174, 'O37', 'OPL - Population/Location-Based Laboratory Order Message');
    oTable.Items.Add(175, 'O38', 'OPR - Population/Location-Based Laboratory Order Acknowledgment Message');
    oTable.Items.Add(176, 'P01', 'BAR/ACK - Add patient accounts');
    oTable.Items.Add(177, 'P02', 'BAR/ACK - Purge patient accounts');
    oTable.Items.Add(178, 'P03', 'DFT/ACK - Post detail financial transaction');
    oTable.Items.Add(179, 'P04', 'QRY/DSP - Generate bill and A/R statements');
    oTable.Items.Add(180, 'P05', 'BAR/ACK - Update account');
    oTable.Items.Add(181, 'P06', 'BAR/ACK - End account');
    oTable.Items.Add(182, 'P07', 'PEX - Unsolicited initial individual product experience report');
    oTable.Items.Add(183, 'P08', 'PEX - Unsolicited update individual product experience report');
    oTable.Items.Add(184, 'P09', 'SUR - Summary product experience report');
    oTable.Items.Add(185, 'P10', 'BAR/ACK -Transmit Ambulatory Payment  Classification(APC)');
    oTable.Items.Add(186, 'P11', 'DFT/ACK - Post Detail Financial Transactions - New');
    oTable.Items.Add(187, 'P12', 'BAR/ACK - Update Diagnosis/Procedure');
    oTable.Items.Add(188, 'PC1', 'PPR - PC/ problem add');
    oTable.Items.Add(189, 'PC2', 'PPR - PC/ problem update');
    oTable.Items.Add(190, 'PC3', 'PPR - PC/ problem delete');
    oTable.Items.Add(191, 'PC4', 'QRY - PC/ problem query');
    oTable.Items.Add(192, 'PC5', 'PRR - PC/ problem response');
    oTable.Items.Add(193, 'PC6', 'PGL - PC/ goal add');
    oTable.Items.Add(194, 'PC7', 'PGL - PC/ goal update');
    oTable.Items.Add(195, 'PC8', 'PGL - PC/ goal delete');
    oTable.Items.Add(196, 'PC9', 'QRY - PC/ goal query');
    oTable.Items.Add(197, 'PCA', 'PPV - PC/ goal response');
    oTable.Items.Add(198, 'PCB', 'PPP - PC/ pathway (problem-oriented) add');
    oTable.Items.Add(199, 'PCC', 'PPP - PC/ pathway (problem-oriented) update');
    oTable.Items.Add(200, 'PCD', 'PPP - PC/ pathway (problem-oriented) delete');
    oTable.Items.Add(201, 'PCE', 'QRY - PC/ pathway (problem-oriented) query');
    oTable.Items.Add(202, 'PCF', 'PTR - PC/ pathway (problem-oriented) query response');
    oTable.Items.Add(203, 'PCG', 'PPG - PC/ pathway (goal-oriented) add');
    oTable.Items.Add(204, 'PCH', 'PPG - PC/ pathway (goal-oriented) update');
    oTable.Items.Add(205, 'PCJ', 'PPG - PC/ pathway (goal-oriented) delete');
    oTable.Items.Add(206, 'PCK', 'QRY - PC/ pathway (goal-oriented) query');
    oTable.Items.Add(207, 'PCL', 'PPT - PC/ pathway (goal-oriented) query response');
    oTable.Items.Add(208, 'Q01', 'QRY/DSR - Query sent for immediate response');
    oTable.Items.Add(209, 'Q02', 'QRY/QCK - Query sent for deferred response');
    oTable.Items.Add(210, 'Q03', 'DSR/ACK - Deferred response to a query');
    oTable.Items.Add(211, 'Q05', 'UDM/ACK - Unsolicited display update message');
    oTable.Items.Add(212, 'Q06', 'OSQ/OSR - Query for order status');
    oTable.Items.Add(213, 'Q11', 'QBP - Query by parameter requesting an RSP segment pattern response');
    oTable.Items.Add(214, 'Q13', 'QBP - Query by parameter requesting an  RTB - tabular response');
    oTable.Items.Add(215, 'Q15', 'QBP - Query by parameter requesting an RDY display response');
    oTable.Items.Add(216, 'Q16', 'QSB - Create subscription');
    oTable.Items.Add(217, 'Q17', 'QVR - Query for previous events');
    oTable.Items.Add(218, 'Q21', 'QBP - Get person demographics');
    oTable.Items.Add(219, 'Q22', 'QBP - Find candidates');
    oTable.Items.Add(220, 'Q23', 'QBP - Get corresponding identifiers');
    oTable.Items.Add(221, 'Q24', 'QBP - Allocate identifiers');
    oTable.Items.Add(222, 'Q25', 'QBP - Personnel Information by Segment Query');
    oTable.Items.Add(223, 'Q26', 'ROR - Pharmacy/treatment order response');
    oTable.Items.Add(224, 'Q27', 'RAR - Pharmacy/treatment administration information');
    oTable.Items.Add(225, 'Q28', 'RDR - Pharmacy/treatment dispense information');
    oTable.Items.Add(226, 'Q29', 'RER - Pharmacy/treatment encoded order information');
    oTable.Items.Add(227, 'Q30', 'RGR - Pharmacy/treatment dose information');
    oTable.Items.Add(228, 'Q31', 'QBP Query Dispense history');
    oTable.Items.Add(229, 'R01', 'ORU/ACK - Unsolicited transmission of an observation message');
    oTable.Items.Add(230, 'R02', 'QRY - Query for results of observation');
    oTable.Items.Add(231, 'R04', 'ORF - Response to query; transmission of requested observation');
    oTable.Items.Add(233, 'R21', 'OUL - Unsolicited laboratory observation');
    oTable.Items.Add(234, 'R22', 'OUL - Unsolicited Specimen Oriented Observation Message');
    oTable.Items.Add(235, 'R23', 'OUL - Unsolicited Specimen Container Oriented Observation Message');
    oTable.Items.Add(236, 'R24', 'OUL - Unsolicited Order Oriented Observation Message');
    oTable.Items.Add(237, 'R25', 'OPU - Unsolicited Population/Location-Based Laboratory Observation Message');
    oTable.Items.Add(238, 'R30', 'ORU - Unsolicited Point-Of-Care Observation Message Without Existing Order - Place An Order');
    oTable.Items.Add(239, 'R31', 'ORU - Unsolicited New Point-Of-Care Observation Message - Search For An Order');
    oTable.Items.Add(240, 'R32', 'ORU - Unsolicited Pre-Ordered Point-Of-Care Observation');
    oTable.Items.Add(232, 'ROR', 'ROR - Pharmacy prescription order query response');
    oTable.Items.Add(241, 'S01', 'SRM/SRR - Request new appointment booking');
    oTable.Items.Add(242, 'S02', 'SRM/SRR - Request appointment rescheduling');
    oTable.Items.Add(243, 'S03', 'SRM/SRR - Request appointment modification');
    oTable.Items.Add(244, 'S04', 'SRM/SRR - Request appointment cancellation');
    oTable.Items.Add(245, 'S05', 'SRM/SRR - Request appointment discontinuation');
    oTable.Items.Add(246, 'S06', 'SRM/SRR - Request appointment deletion');
    oTable.Items.Add(247, 'S07', 'SRM/SRR - Request addition of service/resource on appointment');
    oTable.Items.Add(248, 'S08', 'SRM/SRR - Request modification of service/resource on appointment');
    oTable.Items.Add(249, 'S09', 'SRM/SRR - Request cancellation of service/resource on appointment');
    oTable.Items.Add(250, 'S10', 'SRM/SRR - Request discontinuation of service/resource on appointment');
    oTable.Items.Add(251, 'S11', 'SRM/SRR - Request deletion of service/resource on appointment');
    oTable.Items.Add(252, 'S12', 'SIU/ACK - Notification of new appointment booking');
    oTable.Items.Add(253, 'S13', 'SIU/ACK - Notification of appointment rescheduling');
    oTable.Items.Add(254, 'S14', 'SIU/ACK - Notification of appointment modification');
    oTable.Items.Add(255, 'S15', 'SIU/ACK - Notification of appointment cancellation');
    oTable.Items.Add(256, 'S16', 'SIU/ACK - Notification of appointment discontinuation');
    oTable.Items.Add(257, 'S17', 'SIU/ACK - Notification of appointment deletion');
    oTable.Items.Add(258, 'S18', 'SIU/ACK - Notification of addition of service/resource on appointment');
    oTable.Items.Add(259, 'S19', 'SIU/ACK - Notification of modification of service/resource on appointment');
    oTable.Items.Add(260, 'S20', 'SIU/ACK - Notification of cancellation of service/resource on appointment');
    oTable.Items.Add(261, 'S21', 'SIU/ACK - Notification of discontinuation of service/resource on appointment');
    oTable.Items.Add(262, 'S22', 'SIU/ACK - Notification of deletion of service/resource on appointment');
    oTable.Items.Add(263, 'S23', 'SIU/ACK - Notification of blocked schedule time slot(s)');
    oTable.Items.Add(264, 'S24', 'SIU/ACK - Notification of opened ("unblocked") schedule time slot(s)');
    oTable.Items.Add(265, 'S25', 'SQM/SQR - Schedule query message and response');
    oTable.Items.Add(266, 'S26', 'SIU/ACK Notification that patient did not show up for schedule appointment');
    oTable.Items.Add(267, 'S28', 'SLR/SLS - Request new sterilization lot');
    oTable.Items.Add(268, 'S29', 'SLR/SLS - Request Sterilization lot deletion');
    oTable.Items.Add(269, 'S30', 'STI/STS - Request item');
    oTable.Items.Add(270, 'S31', 'SDR/SDS - Request anti-microbial device data');
    oTable.Items.Add(271, 'S32', 'SMD/SMS - Request anti-microbial device cycle data');
    oTable.Items.Add(272, 'S33', 'STC/ACK - Notification of sterilization configuration');
    oTable.Items.Add(273, 'S34', 'SLN/ACK - Notification of sterilization lot');
    oTable.Items.Add(274, 'S35', 'SLN/ACK - Notification of sterilization lot deletion');
    oTable.Items.Add(275, 'S36', 'SDN/ACK - Notification of anti-microbial device data');
    oTable.Items.Add(276, 'S37', 'SCN/ACK - Notification of anti-microbial device cycle data');
    oTable.Items.Add(277, 'T01', 'MDM/ACK - Original document notification');
    oTable.Items.Add(278, 'T02', 'MDM/ACK - Original document notification and content');
    oTable.Items.Add(279, 'T03', 'MDM/ACK - Document status change notification');
    oTable.Items.Add(280, 'T04', 'MDM/ACK - Document status change notification and content');
    oTable.Items.Add(281, 'T05', 'MDM/ACK - Document addendum notification');
    oTable.Items.Add(282, 'T06', 'MDM/ACK - Document addendum notification and content');
    oTable.Items.Add(283, 'T07', 'MDM/ACK - Document edit notification');
    oTable.Items.Add(284, 'T08', 'MDM/ACK - Document edit notification and content');
    oTable.Items.Add(285, 'T09', 'MDM/ACK - Document replacement notification');
    oTable.Items.Add(286, 'T10', 'MDM/ACK - Document replacement notification and content');
    oTable.Items.Add(287, 'T11', 'MDM/ACK - Document cancel notification');
    oTable.Items.Add(288, 'T12', 'QRY/DOC - Document query');
    oTable.Items.Add(289, 'U01', 'ESU/ACK - Automated equipment status update');
    oTable.Items.Add(290, 'U02', 'ESR/ACK - Automated equipment status request');
    oTable.Items.Add(291, 'U03', 'SSU/ACK - Specimen status update');
    oTable.Items.Add(292, 'U04', 'SSR/ACK - specimen status request');
    oTable.Items.Add(293, 'U05', 'INU/ACK  - Automated equipment inventory update');
    oTable.Items.Add(294, 'U06', 'INR/ACK - Automated equipment inventory request');
    oTable.Items.Add(295, 'U07', 'EAC/ACK - Automated equipment command');
    oTable.Items.Add(296, 'U08', 'EAR/ACK - Automated equipment response');
    oTable.Items.Add(297, 'U09', 'EAN/ACK - Automated equipment notification');
    oTable.Items.Add(298, 'U10', 'TCU/ACK - Automated equipment test code settings update');
    oTable.Items.Add(299, 'U11', 'TCR/ACK - Automated equipment test code settings request');
    oTable.Items.Add(300, 'U12', 'LSU/ACK - Automated equipment log/service update');
    oTable.Items.Add(301, 'U13', 'LSR/ACK - Automated equipment log/service request');
    oTable.Items.Add(302, 'V01', 'VXQ - Query for vaccination record');
    oTable.Items.Add(303, 'V02', 'VXX - Response to vaccination query returning multiple PID matches');
    oTable.Items.Add(304, 'V03', 'VXR - Vaccination record response');
    oTable.Items.Add(305, 'V04', 'VXU - Unsolicited vaccination record update');
    oTable.Items.Add(306, 'Varies', 'MFQ/MFR - Master files query (use event same as asking for e.g., M05 - location)');
    oTable.Items.Add(307, 'W01', 'ORU - Waveform result, unsolicited transmission of requested information');
    oTable.Items.Add(308, 'W02', 'QRF - Waveform result, response to query');
End;

procedure LoadTable4(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(4, 'Patient Class');
    oTable.Items.Add(6, 'B', 'Obstetrics');
    oTable.Items.Add(7, 'C', 'Commercial Account');
    oTable.Items.Add(1, 'E', 'Emergency');
    oTable.Items.Add(2, 'I', 'Inpatient');
    oTable.Items.Add(8, 'N', 'Not Applicable');
    oTable.Items.Add(3, 'O', 'Outpatient');
    oTable.Items.Add(4, 'P', 'Preadmit');
    oTable.Items.Add(5, 'R', 'Recurring patient');
    oTable.Items.Add(9, 'U', 'Unknown');
End;

procedure LoadTable5(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(5, 'Race');
    oTable.Items.Add(1, '1002-5', 'American Indian or Alaska Native');
    oTable.Items.Add(2, '2028-9', 'Asian');
    oTable.Items.Add(3, '2054-5', 'Black or African American');
    oTable.Items.Add(4, '2076-8', 'Native Hawaiian or Other Pacific Islander');
    oTable.Items.Add(5, '2106-3', 'White');
    oTable.Items.Add(6, '2131-1', 'Other Race');
End;

procedure LoadTable6(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(6, 'Religion');
    oTable.Items.Add(12, 'ABC', 'Christian: American Baptist Church');
    oTable.Items.Add(1, 'AGN', 'Agnostic');
    oTable.Items.Add(14, 'AME', 'Christian: African Methodist Episcopal Zion');
    oTable.Items.Add(13, 'AMT', 'Christian: African Methodist Episcopal');
    oTable.Items.Add(15, 'ANG', 'Christian: Anglican');
    oTable.Items.Add(16, 'AOG', 'Christian: Assembly of God');
    oTable.Items.Add(2, 'ATH', 'Atheist');
    oTable.Items.Add(3, 'BAH', 'Baha''i');
    oTable.Items.Add(17, 'BAP', 'Christian: Baptist');
    oTable.Items.Add(6, 'BMA', 'Buddhist: Mahayana');
    oTable.Items.Add(9, 'BOT', 'Buddhist: Other');
    oTable.Items.Add(4, 'BRE', 'Brethren');
    oTable.Items.Add(8, 'BTA', 'Buddhist: Tantrayana');
    oTable.Items.Add(7, 'BTH', 'Buddhist: Theravada');
    oTable.Items.Add(5, 'BUD', 'Buddhist');
    oTable.Items.Add(48, 'CAT', 'Christian: Roman Catholic');
    oTable.Items.Add(10, 'CFR', 'Chinese Folk Religionist');
    oTable.Items.Add(11, 'CHR', 'Christian');
    oTable.Items.Add(19, 'CHS', 'Christian: Christian Science');
    oTable.Items.Add(20, 'CMA', 'Christian: Christian Missionary Alliance');
    oTable.Items.Add(59, 'CNF', 'Confucian');
    oTable.Items.Add(21, 'COC', 'Christian: Church of Christ');
    oTable.Items.Add(22, 'COG', 'Christian: Church of God');
    oTable.Items.Add(23, 'COI', 'Christian: Church of God in Christ');
    oTable.Items.Add(25, 'COL', 'Christian: Congregational');
    oTable.Items.Add(24, 'COM', 'Christian: Community');
    oTable.Items.Add(42, 'COP', 'Christian: Other Pentecostal');
    oTable.Items.Add(58, 'COT', 'Christian: Other');
    oTable.Items.Add(18, 'CRR', 'Christian: Christian Reformed');
    oTable.Items.Add(60, 'DOC', 'Disciples of Christ');
    oTable.Items.Add(26, 'EOT', 'Christian: Eastern Orthodox');
    oTable.Items.Add(28, 'EPI', 'Christian: Episcopalian');
    oTable.Items.Add(61, 'ERL', 'Ethnic Religionist');
    oTable.Items.Add(27, 'EVC', 'Christian: Evangelical Church');
    oTable.Items.Add(30, 'FRQ', 'Christian: Friends');
    oTable.Items.Add(31, 'FUL', 'Christian: Full Gospel');
    oTable.Items.Add(29, 'FWB', 'Christian: Free Will Baptist');
    oTable.Items.Add(32, 'GRE', 'Christian: Greek Orthodox');
    oTable.Items.Add(62, 'HIN', 'Hindu');
    oTable.Items.Add(65, 'HOT', 'Hindu: Other');
    oTable.Items.Add(63, 'HSH', 'Hindu: Shaivites');
    oTable.Items.Add(64, 'HVA', 'Hindu: Vaishnavites');
    oTable.Items.Add(66, 'JAI', 'Jain');
    oTable.Items.Add(68, 'JCO', 'Jewish: Conservative');
    oTable.Items.Add(67, 'JEW', 'Jewish');
    oTable.Items.Add(69, 'JOR', 'Jewish: Orthodox');
    oTable.Items.Add(73, 'JOT', 'Jewish: Other');
    oTable.Items.Add(70, 'JRC', 'Jewish: Reconstructionist');
    oTable.Items.Add(71, 'JRF', 'Jewish: Reform');
    oTable.Items.Add(72, 'JRN', 'Jewish: Renewal');
    oTable.Items.Add(33, 'JWN', 'Christian: Jehovah''s Witness');
    oTable.Items.Add(36, 'LMS', 'Christian: Lutheran Missouri Synod');
    oTable.Items.Add(35, 'LUT', 'Christian: Lutheran');
    oTable.Items.Add(37, 'MEN', 'Christian: Mennonite');
    oTable.Items.Add(38, 'MET', 'Christian: Methodist');
    oTable.Items.Add(34, 'MOM', 'Christian: Latter-day Saints');
    oTable.Items.Add(74, 'MOS', 'Muslim');
    oTable.Items.Add(77, 'MOT', 'Muslim: Other');
    oTable.Items.Add(75, 'MSH', 'Muslim: Shiite');
    oTable.Items.Add(76, 'MSU', 'Muslim: Sunni');
    oTable.Items.Add(78, 'NAM', 'Native American');
    oTable.Items.Add(39, 'NAZ', 'Christian: Church of the Nazarene');
    oTable.Items.Add(80, 'NOE', 'Nonreligious');
    oTable.Items.Add(79, 'NRL', 'New Religionist');
    oTable.Items.Add(40, 'ORT', 'Christian: Orthodox');
    oTable.Items.Add(84, 'OTH', 'Other');
    oTable.Items.Add(41, 'PEN', 'Christian: Pentecostal');
    oTable.Items.Add(45, 'PRC', 'Christian: Other Protestant');
    oTable.Items.Add(43, 'PRE', 'Christian: Presbyterian');
    oTable.Items.Add(44, 'PRO', 'Christian: Protestant');
    oTable.Items.Add(46, 'REC', 'Christian: Reformed Church');
    oTable.Items.Add(47, 'REO', 'Christian: Reorganized Church of Jesus Christ-LDS');
    oTable.Items.Add(49, 'SAA', 'Christian: Salvation Army');
    oTable.Items.Add(50, 'SEV', 'Christian: Seventh Day Adventist');
    oTable.Items.Add(81, 'SHN', 'Shintoist');
    oTable.Items.Add(82, 'SIK', 'Sikh');
    oTable.Items.Add(51, 'SOU', 'Christian: Southern Baptist');
    oTable.Items.Add(83, 'SPI', 'Spiritist');
    oTable.Items.Add(52, 'UCC', 'Christian: United Church of Christ');
    oTable.Items.Add(53, 'UMD', 'Christian: United Methodist');
    oTable.Items.Add(54, 'UNI', 'Christian: Unitarian');
    oTable.Items.Add(55, 'UNU', 'Christian: Unitarian Universalist');
    oTable.Items.Add(85, 'VAR', 'Unknown');
    oTable.Items.Add(56, 'WES', 'Christian: Wesleyan');
    oTable.Items.Add(57, 'WMC', 'Christian: Wesleyan Methodist');
End;

procedure LoadTable7(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(7, 'Admission Type');
    oTable.Items.Add(1, 'A', 'Accident');
    oTable.Items.Add(7, 'C', 'Elective');
    oTable.Items.Add(2, 'E', 'Emergency');
    oTable.Items.Add(3, 'L', 'Labor and Delivery');
    oTable.Items.Add(5, 'N', 'Newborn (Birth in healthcare facility)');
    oTable.Items.Add(4, 'R', 'Routine');
    oTable.Items.Add(6, 'U', 'Urgent');
End;

procedure LoadTable8(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(8, 'Acknowledgment code');
    oTable.Items.Add(1, 'AA', 'Original mode: Application Accept - Enhanced mode: Application acknowledgment: Accept');
    oTable.Items.Add(2, 'AE', 'Original mode: Application Error - Enhanced mode: Application acknowledgment: Error');
    oTable.Items.Add(3, 'AR', 'Original mode: Application Reject - Enhanced mode: Application acknowledgment: Reject');
    oTable.Items.Add(4, 'CA', 'Enhanced mode: Accept acknowledgment: Commit Accept');
    oTable.Items.Add(5, 'CE', 'Enhanced mode: Accept acknowledgment: Commit Error');
    oTable.Items.Add(6, 'CR', 'Enhanced mode: Accept acknowledgment: Commit Reject');
End;

procedure LoadTable9(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(9, 'Ambulatory Status');
    oTable.Items.Add(1, 'A0', 'No functional limitations');
    oTable.Items.Add(2, 'A1', 'Ambulates with assistive device');
    oTable.Items.Add(3, 'A2', 'Wheelchair/stretcher bound');
    oTable.Items.Add(4, 'A3', 'Comatose; non-responsive');
    oTable.Items.Add(5, 'A4', 'Disoriented');
    oTable.Items.Add(6, 'A5', 'Vision impaired');
    oTable.Items.Add(7, 'A6', 'Hearing impaired');
    oTable.Items.Add(8, 'A7', 'Speech impaired');
    oTable.Items.Add(9, 'A8', 'Non-English speaking');
    oTable.Items.Add(10, 'A9', 'Functional level unknown');
    oTable.Items.Add(11, 'B1', 'Oxygen therapy');
    oTable.Items.Add(12, 'B2', 'Special equipment (tubes, IVs, catheters)');
    oTable.Items.Add(13, 'B3', 'Amputee');
    oTable.Items.Add(14, 'B4', 'Mastectomy');
    oTable.Items.Add(15, 'B5', 'Paraplegic');
    oTable.Items.Add(16, 'B6', 'Pregnant');
End;

procedure LoadTable10(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(10, 'Physician ID');
    oTable.Items.Add(1, '...', 'no suggested values');
End;

procedure LoadTable17(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(17, 'Transaction Type');
    oTable.Items.Add(4, 'AJ', 'Adjustment');
    oTable.Items.Add(2, 'CD', 'Credit');
    oTable.Items.Add(1, 'CG', 'Charge');
    oTable.Items.Add(5, 'CO', 'Co-payment');
    oTable.Items.Add(3, 'PY', 'Payment');
End;

procedure LoadTable18(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(18, 'Patient Type');
    oTable.Items.Add(1, '...', 'no suggested values');
End;

procedure LoadTable19(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(19, 'Anesthesia Code');
    oTable.Items.Add(1, '...', 'No suggested values defined');
End;

procedure LoadTable21(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(21, 'Bad Debt Agency Code');
    oTable.Items.Add(1, '...', 'no suggested values');
End;

procedure LoadTable22(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(22, 'Billing Status');
    oTable.Items.Add(1, '...', 'No suggested values defined');
End;

procedure LoadTable23(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(23, 'Admit Source');
    oTable.Items.Add(1, '1', 'Physician referral');
    oTable.Items.Add(2, '2', 'Clinic referral');
    oTable.Items.Add(3, '3', 'HMO referral');
    oTable.Items.Add(4, '4', 'Transfer from a hospital');
    oTable.Items.Add(5, '5', 'Transfer from a skilled nursing facility');
    oTable.Items.Add(6, '6', 'Transfer from another health care facility');
    oTable.Items.Add(7, '7', 'Emergency room');
    oTable.Items.Add(8, '8', 'Court/law enforcement');
    oTable.Items.Add(9, '9', 'Information not available');
End;

procedure LoadTable24(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(24, 'Fee Schedule');
    oTable.Items.Add(1, '...', 'No suggested values defined');
End;

procedure LoadTable27(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(27, 'Priority');
    oTable.Items.Add(2, 'A', 'As soon as possible (a priority lower than stat)');
    oTable.Items.Add(4, 'P', 'Preoperative (to be done prior to surgery)');
    oTable.Items.Add(3, 'R', 'Routine');
    oTable.Items.Add(1, 'S', 'Stat (do immediately)');
    oTable.Items.Add(5, 'T', 'Timing critical (do as near as possible to requested time)');
End;

procedure LoadTable32(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(32, 'Charge/Price Indicator');
    oTable.Items.Add(1, '...', 'no suggested values');
End;

procedure LoadTable38(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(38, 'Order status');
    oTable.Items.Add(1, 'A', 'Some, but not all, results available');
    oTable.Items.Add(2, 'CA', 'Order was canceled');
    oTable.Items.Add(3, 'CM', 'Order is completed');
    oTable.Items.Add(4, 'DC', 'Order was discontinued');
    oTable.Items.Add(5, 'ER', 'Error, order not found');
    oTable.Items.Add(6, 'HD', 'Order is on hold');
    oTable.Items.Add(7, 'IP', 'In process, unspecified');
    oTable.Items.Add(8, 'RP', 'Order has been replaced');
    oTable.Items.Add(9, 'SC', 'In process, scheduled');
End;

procedure LoadTable42(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(42, 'Company Plan Code');
    oTable.Items.Add(1, '...', 'No suggested values defined');
End;

procedure LoadTable43(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(43, 'Condition Code');
    oTable.Items.Add(1, '...', 'No suggested values');
End;

procedure LoadTable44(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(44, 'Contract Code');
    oTable.Items.Add(1, '...', 'no suggested values');
End;

procedure LoadTable45(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(45, 'Courtesy Code');
    oTable.Items.Add(1, '...', 'no suggested values');
End;

procedure LoadTable46(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(46, 'Credit Rating');
    oTable.Items.Add(1, '...', 'no suggested values');
End;

procedure LoadTable48(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(48, 'What subject filter');
    oTable.Items.Add(1, 'ADV', 'Advice/diagnosis');
    oTable.Items.Add(2, 'ANU', 'Nursing unit lookup (returns patients in beds, excluding empty beds)');
    oTable.Items.Add(7, 'APA', 'Account number query, return matching visit');
    oTable.Items.Add(6, 'APM', 'Medical record number query, returns visits for a medical record number');
    oTable.Items.Add(3, 'APN', 'Patient name lookup');
    oTable.Items.Add(4, 'APP', 'Physician lookup');
    oTable.Items.Add(5, 'ARN', 'Nursing unit lookup (returns patients in beds, including empty beds)');
    oTable.Items.Add(8, 'CAN', 'Cancel.  Used to cancel a query');
    oTable.Items.Add(9, 'DEM', 'Demographics');
    oTable.Items.Add(10, 'FIN', 'Financial');
    oTable.Items.Add(11, 'GID', 'Generate new identifier');
    oTable.Items.Add(12, 'GOL', 'Goals');
    oTable.Items.Add(13, 'MRI', 'Most recent inpatient');
    oTable.Items.Add(14, 'MRO', 'Most recent outpatient');
    oTable.Items.Add(15, 'NCK', 'Network clock');
    oTable.Items.Add(16, 'NSC', 'Network status change');
    oTable.Items.Add(17, 'NST', 'Network statistic');
    oTable.Items.Add(18, 'ORD', 'Order');
    oTable.Items.Add(19, 'OTH', 'Other');
    oTable.Items.Add(20, 'PRB', 'Problems');
    oTable.Items.Add(21, 'PRO', 'Procedure');
    oTable.Items.Add(23, 'RAR', 'Pharmacy administration information');
    oTable.Items.Add(25, 'RDR', 'Pharmacy dispense information');
    oTable.Items.Add(24, 'RER', 'Pharmacy encoded order information');
    oTable.Items.Add(22, 'RES', 'Result');
    oTable.Items.Add(26, 'RGR', 'Pharmacy give information');
    oTable.Items.Add(27, 'ROR', 'Pharmacy prescription information');
    oTable.Items.Add(28, 'SAL', 'All schedule related information, including open slots, booked slots, blocked slots');
    oTable.Items.Add(29, 'SBK', 'Booked slots on the identified schedule');
    oTable.Items.Add(30, 'SBL', 'Blocked slots on the identified schedule');
    oTable.Items.Add(31, 'SOF', 'First open slot on the identified schedule after the start date/tiem');
    oTable.Items.Add(32, 'SOP', 'Open slots on the identified schedule between the begin and end of the start date/time range');
    oTable.Items.Add(33, 'SSA', 'Time slots available for a single appointment');
    oTable.Items.Add(34, 'SSR', 'Time slots available for a recurring appointment');
    oTable.Items.Add(35, 'STA', 'Status');
    oTable.Items.Add(36, 'VXI', 'Vaccine Information');
    oTable.Items.Add(37, 'XID', 'Get cross-referenced identifiers');
End;

procedure LoadTable49(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(49, 'Department Code');
    oTable.Items.Add(1, '...', 'No suggested values defined');
End;

procedure LoadTable50(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(50, 'Accident Code');
    oTable.Items.Add(1, '...', 'No suggested values defined');
End;

procedure LoadTable51(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(51, 'Diagnosis Code');
    oTable.Items.Add(1, '...', 'No suggested values defined');
End;

procedure LoadTable52(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(52, 'Diagnosis Type');
    oTable.Items.Add(1, 'A', 'Admitting');
    oTable.Items.Add(3, 'F', 'Final');
    oTable.Items.Add(2, 'W', 'Working');
End;

procedure LoadTable55(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(55, 'Diagnosis related group');
    oTable.Items.Add(1, '...', 'No suggested values defined');
End;

procedure LoadTable56(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(56, 'DRG grouper review code');
    oTable.Items.Add(1, '...', 'No suggested values defined');
End;

procedure LoadTable59(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(59, 'Consent Code');
    oTable.Items.Add(1, '...', 'No suggested values defined');
End;

procedure LoadTable61(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(61, 'Check digit scheme');
    oTable.Items.Add(1, 'BCV', 'Bank Card Validation Number');
    oTable.Items.Add(3, 'ISO', 'ISO 7064: 1983');
    oTable.Items.Add(4, 'M10', 'Mod 10 algorithm');
    oTable.Items.Add(5, 'M11', 'Mod 11 algorithm');
    oTable.Items.Add(2, 'NPI', 'Check digit algorithm in the US National Provider Identifier');
End;

procedure LoadTable62(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(62, 'Event reason');
    oTable.Items.Add(1, '01', 'Patient request');
    oTable.Items.Add(2, '02', 'Physician/health practitioner order');
    oTable.Items.Add(3, '03', 'Census management');
    oTable.Items.Add(4, 'O', 'Other');
    oTable.Items.Add(5, 'U', 'Unknown');
End;

procedure LoadTable63(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(63, 'Relationship');
    oTable.Items.Add(25, 'ASC', 'Associate');
    oTable.Items.Add(19, 'BRO', 'Brother');
    oTable.Items.Add(14, 'CGV', 'Care giver');
    oTable.Items.Add(4, 'CHD', 'Child');
    oTable.Items.Add(9, 'DEP', 'Handicapped dependent');
    oTable.Items.Add(3, 'DOM', 'Life partner');
    oTable.Items.Add(26, 'EMC', 'Emergency contact');
    oTable.Items.Add(23, 'EME', 'Employee');
    oTable.Items.Add(24, 'EMR', 'Employer');
    oTable.Items.Add(17, 'EXF', 'Extended family');
    oTable.Items.Add(8, 'FCH', 'Foster child');
    oTable.Items.Add(21, 'FND', 'Friend');
    oTable.Items.Add(13, 'FTH', 'Father');
    oTable.Items.Add(5, 'GCH', 'Grandchild');
    oTable.Items.Add(15, 'GRD', 'Guardian');
    oTable.Items.Add(16, 'GRP', 'Grandparent');
    oTable.Items.Add(29, 'MGR', 'Manager');
    oTable.Items.Add(12, 'MTH', 'Mother');
    oTable.Items.Add(6, 'NCH', 'Natural child');
    oTable.Items.Add(30, 'NON', 'None');
    oTable.Items.Add(22, 'OAD', 'Other adult');
    oTable.Items.Add(32, 'OTH', 'Other');
    oTable.Items.Add(27, 'OWN', 'Owner');
    oTable.Items.Add(11, 'PAR', 'Parent');
    oTable.Items.Add(7, 'SCH', 'Stepchild');
    oTable.Items.Add(1, 'SEL', 'Self');
    oTable.Items.Add(18, 'SIB', 'Sibling');
    oTable.Items.Add(20, 'SIS', 'Sister');
    oTable.Items.Add(2, 'SPO', 'Spouse');
    oTable.Items.Add(28, 'TRA', 'Trainer');
    oTable.Items.Add(31, 'UNK', 'Unknown');
    oTable.Items.Add(10, 'WRD', 'Ward of court');
End;

procedure LoadTable64(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(64, 'Financial class');
    oTable.Items.Add(1, '...', 'No suggested values defined');
End;

procedure LoadTable65(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(65, 'Specimen Action Code');
    oTable.Items.Add(1, 'A', 'Add ordered tests to the existing specimen');
    oTable.Items.Add(2, 'G', 'Generated order; reflex order');
    oTable.Items.Add(3, 'L', 'Lab to obtain specimen from patient');
    oTable.Items.Add(4, 'O', 'Specimen obtained by service other than Lab');
    oTable.Items.Add(5, 'P', 'Pending specimen; Order sent prior to delivery');
    oTable.Items.Add(6, 'R', 'Revised order');
    oTable.Items.Add(7, 'S', 'Schedule the tests specified below');
End;

procedure LoadTable66(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(66, 'Employment Status');
    oTable.Items.Add(1, '...', 'see chapter 6');
    oTable.Items.Add(1, '1', 'Full time employed');
    oTable.Items.Add(2, '2', 'Part time employed');
    oTable.Items.Add(7, '3', 'Unemployed');
    oTable.Items.Add(3, '4', 'Self-employed,');
    oTable.Items.Add(8, '5', 'Retired');
    oTable.Items.Add(9, '6', 'On active military duty');
    oTable.Items.Add(11, '9', 'Unknown');
    oTable.Items.Add(4, 'C', 'Contract, per diem');
    oTable.Items.Add(5, 'L', 'Leave of absence (e.g., family leave, sabbatical, etc.)');
    oTable.Items.Add(10, 'O', 'Other');
    oTable.Items.Add(6, 'T', 'Temporarily unemployed');
End;

procedure LoadTable68(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(68, 'Guarantor Type');
    oTable.Items.Add(1, '...', 'No suggested values defined');
End;

procedure LoadTable69(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(69, 'Hospital Service');
    oTable.Items.Add(5, 'CAR', 'Cardiac Service');
    oTable.Items.Add(1, 'MED', 'Medical Service');
    oTable.Items.Add(4, 'PUL', 'Pulmonary Service');
    oTable.Items.Add(2, 'SUR', 'Surgical Service');
    oTable.Items.Add(3, 'URO', 'Urology Service');
End;

procedure LoadTable70(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(70, 'Specimen Source Codes');
    oTable.Items.Add(1, 'ABS', 'Abscess');
    oTable.Items.Add(2, 'AMN', 'Amniotic fluid');
    oTable.Items.Add(3, 'ASP', 'Aspirate');
    oTable.Items.Add(7, 'BBL', 'Blood bag');
    oTable.Items.Add(118, 'BDY', 'Whole body');
    oTable.Items.Add(5, 'BIFL', 'Bile fluid');
    oTable.Items.Add(117, 'BLD', 'Whole blood');
    oTable.Items.Add(6, 'BLDA', 'Blood  arterial');
    oTable.Items.Add(8, 'BLDC', 'Blood  capillary');
    oTable.Items.Add(23, 'BLDCO', 'Cord blood');
    oTable.Items.Add(10, 'BLDV', 'Blood  venous');
    oTable.Items.Add(11, 'BON', 'Bone');
    oTable.Items.Add(4, 'BPH', 'Basophils');
    oTable.Items.Add(9, 'BPU', 'Blood product unit');
    oTable.Items.Add(14, 'BRN', 'Burn');
    oTable.Items.Add(13, 'BRO', 'Bronchial');
    oTable.Items.Add(12, 'BRTH', 'Breath (use EXHLD)');
    oTable.Items.Add(15, 'CALC', 'Calculus (=Stone)');
    oTable.Items.Add(16, 'CDM', 'Cardiac muscle');
    oTable.Items.Add(24, 'CNJT', 'Conjunctiva');
    oTable.Items.Add(17, 'CNL', 'Cannula');
    oTable.Items.Add(22, 'COL', 'Colostrum');
    oTable.Items.Add(19, 'CSF', 'Cerebral spinal fluid');
    oTable.Items.Add(18, 'CTP', 'Catheter tip');
    oTable.Items.Add(25, 'CUR', 'Curettage');
    oTable.Items.Add(20, 'CVM', 'Cervical mucus');
    oTable.Items.Add(21, 'CVX', 'Cervix');
    oTable.Items.Add(26, 'CYST', 'Cyst');
    oTable.Items.Add(27, 'DIAF', 'Dialysis fluid');
    oTable.Items.Add(28, 'DOSE', 'Dose med or substance');
    oTable.Items.Add(29, 'DRN', 'Drain');
    oTable.Items.Add(30, 'DUFL', 'Duodenal fluid');
    oTable.Items.Add(31, 'EAR', 'Ear');
    oTable.Items.Add(32, 'EARW', 'Ear wax (cerumen)');
    oTable.Items.Add(33, 'ELT', 'Electrode');
    oTable.Items.Add(34, 'ENDC', 'Endocardium');
    oTable.Items.Add(35, 'ENDM', 'Endometrium');
    oTable.Items.Add(36, 'EOS', 'Eosinophils');
    oTable.Items.Add(39, 'EXG', 'Exhaled gas (=breath)');
    oTable.Items.Add(38, 'EYE', 'Eye');
    oTable.Items.Add(40, 'FIB', 'Fibroblasts');
    oTable.Items.Add(42, 'FIST', 'Fistula');
    oTable.Items.Add(41, 'FLT', 'Filter');
    oTable.Items.Add(43, 'FLU', 'Body fluid, unsp');
    oTable.Items.Add(44, 'GAS', 'Gas');
    oTable.Items.Add(45, 'GAST', 'Gastric fluid/contents');
    oTable.Items.Add(46, 'GEN', 'Genital');
    oTable.Items.Add(47, 'GENC', 'Genital cervix');
    oTable.Items.Add(48, 'GENL', 'Genital lochia');
    oTable.Items.Add(49, 'GENV', 'Genital vaginal');
    oTable.Items.Add(50, 'HAR', 'Hair');
    oTable.Items.Add(51, 'IHG', 'Inhaled Gas');
    oTable.Items.Add(53, 'ISLT', 'Isolate');
    oTable.Items.Add(52, 'IT', 'Intubation tube');
    oTable.Items.Add(54, 'LAM', 'Lamella');
    oTable.Items.Add(59, 'LIQ', 'Liquid NOS');
    oTable.Items.Add(56, 'LN', 'Line');
    oTable.Items.Add(57, 'LNA', 'Line arterial');
    oTable.Items.Add(58, 'LNV', 'Line venous');
    oTable.Items.Add(60, 'LYM', 'Lymphocytes');
    oTable.Items.Add(61, 'MAC', 'Macrophages');
    oTable.Items.Add(62, 'MAR', 'Marrow');
    oTable.Items.Add(64, 'MBLD', 'Menstrual blood');
    oTable.Items.Add(63, 'MEC', 'Meconium');
    oTable.Items.Add(66, 'MILK', 'Breast milk');
    oTable.Items.Add(65, 'MLK', 'Milk');
    oTable.Items.Add(67, 'NAIL', 'Nail');
    oTable.Items.Add(68, 'NOS', 'Nose (nasal passage)');
    oTable.Items.Add(69, 'ORH', 'Other');
    oTable.Items.Add(70, 'PAFL', 'Pancreatic fluid');
    oTable.Items.Add(71, 'PAT', 'Patient');
    oTable.Items.Add(74, 'PLAS', 'Plasma');
    oTable.Items.Add(75, 'PLB', 'Plasma bag');
    oTable.Items.Add(73, 'PLC', 'Placenta');
    oTable.Items.Add(76, 'PLR', 'Pleural fluid (thoracentesis fld)');
    oTable.Items.Add(77, 'PMN', 'Polymorphonuclear neutrophils');
    oTable.Items.Add(78, 'PPP', 'Platelet poor plasma');
    oTable.Items.Add(79, 'PRP', 'Platelet rich plasma');
    oTable.Items.Add(72, 'PRT', 'Peritoneal fluid /ascites');
    oTable.Items.Add(80, 'PUS', 'Pus');
    oTable.Items.Add(37, 'RBC', 'Erythrocytes');
    oTable.Items.Add(81, 'RT', 'Route of medicine');
    oTable.Items.Add(82, 'SAL', 'Saliva');
    oTable.Items.Add(84, 'SER', 'Serum');
    oTable.Items.Add(86, 'SKM', 'Skeletal muscle');
    oTable.Items.Add(85, 'SKN', 'Skin');
    oTable.Items.Add(83, 'SMN', 'Seminal fluid');
    oTable.Items.Add(94, 'SNV', 'Synovial fluid (Joint fluid)');
    oTable.Items.Add(87, 'SPRM', 'Spermatozoa');
    oTable.Items.Add(88, 'SPT', 'Sputum');
    oTable.Items.Add(89, 'SPTC', 'Sputum - coughed');
    oTable.Items.Add(90, 'SPTT', 'Sputum - tracheal aspirate');
    oTable.Items.Add(92, 'STL', 'Stool = Fecal');
    oTable.Items.Add(91, 'STON', 'Stone (use CALC)');
    oTable.Items.Add(93, 'SWT', 'Sweat');
    oTable.Items.Add(95, 'TEAR', 'Tears');
    oTable.Items.Add(97, 'THRB', 'Thrombocyte (platelet)');
    oTable.Items.Add(96, 'THRT', 'Throat');
    oTable.Items.Add(99, 'TISG', 'Tissue gall bladder');
    oTable.Items.Add(102, 'TISPL', 'Tissue placenta');
    oTable.Items.Add(98, 'TISS', 'Tissue');
    oTable.Items.Add(104, 'TISU', 'Tissue ulcer');
    oTable.Items.Add(100, 'TLGI', 'Tissue large intestine');
    oTable.Items.Add(101, 'TLNG', 'Tissue lung');
    oTable.Items.Add(103, 'TSMI', 'Tissue small intestine');
    oTable.Items.Add(105, 'TUB', 'Tube NOS');
    oTable.Items.Add(106, 'ULC', 'Ulcer');
    oTable.Items.Add(107, 'UMB', 'Umbilical blood');
    oTable.Items.Add(108, 'UMED', 'Unknown medicine');
    oTable.Items.Add(110, 'UR', 'Urine');
    oTable.Items.Add(111, 'URC', 'Urine clean catch');
    oTable.Items.Add(113, 'URNS', 'Urine sediment');
    oTable.Items.Add(112, 'URT', 'Urine catheter');
    oTable.Items.Add(109, 'URTH', 'Urethra');
    oTable.Items.Add(114, 'USUB', 'Unknown substance');
    oTable.Items.Add(115, 'VITF', 'Vitreous Fluid');
    oTable.Items.Add(116, 'VOM', 'Vomitus');
    oTable.Items.Add(119, 'WAT', 'Water');
    oTable.Items.Add(55, 'WBC', 'Leukocytes');
    oTable.Items.Add(120, 'WICK', 'Wick');
    oTable.Items.Add(121, 'WND', 'Wound');
    oTable.Items.Add(122, 'WNDA', 'Wound abscess');
    oTable.Items.Add(124, 'WNDD', 'Wound drainage');
    oTable.Items.Add(123, 'WNDE', 'Wound exudate');
    oTable.Items.Add(125, 'XXX', 'To be specified in another part of the message');
End;

procedure LoadTable72(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(72, 'Insurance Plan ID');
    oTable.Items.Add(1, '...', 'No suggested values defined');
End;

procedure LoadTable73(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(73, 'Interest Rate Code');
    oTable.Items.Add(1, '...', 'no suggested values');
End;

procedure LoadTable74(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(74, 'Diagnostic Service Section ID');
    oTable.Items.Add(1, 'AU', 'Audiology');
    oTable.Items.Add(2, 'BG', 'Blood Gases');
    oTable.Items.Add(3, 'BLB', 'Blood Bank');
    oTable.Items.Add(7, 'CH', 'Chemistry');
    oTable.Items.Add(8, 'CP', 'Cytopathology');
    oTable.Items.Add(6, 'CT', 'CAT Scan');
    oTable.Items.Add(5, 'CTH', 'Cardiac Catheterization');
    oTable.Items.Add(4, 'CUS', 'Cardiac Ultrasound');
    oTable.Items.Add(9, 'EC', 'Electrocardiac (e.g., EKG,  EEC, Holter)');
    oTable.Items.Add(10, 'EN', 'Electroneuro (EEG, EMG,EP,PSG)');
    oTable.Items.Add(11, 'HM', 'Hematology');
    oTable.Items.Add(12, 'ICU', 'Bedside ICU Monitoring');
    oTable.Items.Add(13, 'IMM', 'Immunology');
    oTable.Items.Add(14, 'LAB', 'Laboratory');
    oTable.Items.Add(15, 'MB', 'Microbiology');
    oTable.Items.Add(16, 'MCB', 'Mycobacteriology');
    oTable.Items.Add(17, 'MYC', 'Mycology');
    oTable.Items.Add(19, 'NMR', 'Nuclear Magnetic Resonance');
    oTable.Items.Add(18, 'NMS', 'Nuclear Medicine Scan');
    oTable.Items.Add(20, 'NRS', 'Nursing Service Measures');
    oTable.Items.Add(24, 'OSL', 'Outside Lab');
    oTable.Items.Add(22, 'OT', 'Occupational Therapy');
    oTable.Items.Add(23, 'OTH', 'Other');
    oTable.Items.Add(21, 'OUS', 'OB Ultrasound');
    oTable.Items.Add(28, 'PF', 'Pulmonary Function');
    oTable.Items.Add(25, 'PHR', 'Pharmacy');
    oTable.Items.Add(27, 'PHY', 'Physician (Hx. Dx, admission note, etc.)');
    oTable.Items.Add(26, 'PT', 'Physical Therapy');
    oTable.Items.Add(29, 'RAD', 'Radiology');
    oTable.Items.Add(32, 'RC', 'Respiratory Care (therapy)');
    oTable.Items.Add(33, 'RT', 'Radiation Therapy');
    oTable.Items.Add(31, 'RUS', 'Radiology Ultrasound');
    oTable.Items.Add(30, 'RX', 'Radiograph');
    oTable.Items.Add(35, 'SP', 'Surgical Pathology');
    oTable.Items.Add(34, 'SR', 'Serology');
    oTable.Items.Add(36, 'TX', 'Toxicology');
    oTable.Items.Add(38, 'VR', 'Virology');
    oTable.Items.Add(37, 'VUS', 'Vascular Ultrasound');
    oTable.Items.Add(39, 'XRC', 'Cineradiograph');
End;

procedure LoadTable76(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(76, 'Message type');
    oTable.Items.Add(1, 'ACK', 'General acknowledgment message');
    oTable.Items.Add(2, 'ADR', 'ADT response');
    oTable.Items.Add(3, 'ADT', 'ADT message');
    oTable.Items.Add(4, 'BAR', 'Add/change billing account');
    oTable.Items.Add(6, 'BPS', 'Blood product dispense status message');
    oTable.Items.Add(7, 'BRP', 'Blood product dispense status acknowledgement message');
    oTable.Items.Add(8, 'BRT', 'Blood product transfusion/disposition acknowledgement message');
    oTable.Items.Add(9, 'BTS', 'Blood product transfusion/disposition message');
    oTable.Items.Add(5, 'CRM', 'Clinical study registration message');
    oTable.Items.Add(10, 'CSU', 'Unsolicited study data message');
    oTable.Items.Add(11, 'DFT', 'Detail financial transactions');
    oTable.Items.Add(12, 'DOC', 'Document response');
    oTable.Items.Add(13, 'DSR', 'Display response');
    oTable.Items.Add(14, 'EAC', 'Automated equipment command message');
    oTable.Items.Add(15, 'EAN', 'Automated equipment notification message');
    oTable.Items.Add(16, 'EAR', 'Automated equipment response message');
    oTable.Items.Add(17, 'EHC', 'Health Care Invoice');
    oTable.Items.Add(18, 'ESR', 'Automated equipment status update acknowledgment message');
    oTable.Items.Add(19, 'ESU', 'Automated equipment status update message');
    oTable.Items.Add(20, 'INR', 'Automated equipment inventory request message');
    oTable.Items.Add(21, 'INU', 'Automated equipment inventory update message');
    oTable.Items.Add(22, 'LSR', 'Automated equipment log/service request message');
    oTable.Items.Add(23, 'LSU', 'Automated equipment log/service update message');
    oTable.Items.Add(24, 'MDM', 'Medical document management');
    oTable.Items.Add(25, 'MFD', 'Master files delayed application acknowledgment');
    oTable.Items.Add(26, 'MFK', 'Master files application acknowledgment');
    oTable.Items.Add(27, 'MFN', 'Master files notification');
    oTable.Items.Add(28, 'MFQ', 'Master files query');
    oTable.Items.Add(29, 'MFR', 'Master files response');
    oTable.Items.Add(30, 'NMD', 'Application management data message');
    oTable.Items.Add(31, 'NMQ', 'Application management query message');
    oTable.Items.Add(32, 'NMR', 'Application management response message');
    oTable.Items.Add(33, 'OMB', 'Blood product order message');
    oTable.Items.Add(34, 'OMD', 'Dietary order');
    oTable.Items.Add(35, 'OMG', 'General clinical order message');
    oTable.Items.Add(36, 'OMI', 'Imaging order');
    oTable.Items.Add(37, 'OML', 'Laboratory order message');
    oTable.Items.Add(38, 'OMN', 'Non-stock requisition order message');
    oTable.Items.Add(39, 'OMP', 'Pharmacy/treatment order message');
    oTable.Items.Add(40, 'OMS', 'Stock requisition order message');
    oTable.Items.Add(42, 'OPL', 'Population/Location-Based Laboratory Order Message');
    oTable.Items.Add(43, 'OPR', 'Population/Location-Based Laboratory Order Acknowledgment Message');
    oTable.Items.Add(44, 'OPU', 'Unsolicited Population/Location-Based Laboratory Observation Message');
    oTable.Items.Add(45, 'ORB', 'Blood product order acknowledgement message');
    oTable.Items.Add(46, 'ORD', 'Dietary order acknowledgment message');
    oTable.Items.Add(47, 'ORF', 'Query for results of observation');
    oTable.Items.Add(48, 'ORG', 'General clinical order acknowledgment message');
    oTable.Items.Add(49, 'ORI', 'Imaging order acknowledgement message');
    oTable.Items.Add(50, 'ORL', 'Laboratory acknowledgment message (unsolicited)');
    oTable.Items.Add(51, 'ORM', 'Pharmacy/treatment order message');
    oTable.Items.Add(52, 'ORN', 'Non-stock requisition - General order acknowledgment message');
    oTable.Items.Add(53, 'ORP', 'Pharmacy/treatment order acknowledgment message');
    oTable.Items.Add(54, 'ORR', 'General order response message response to any ORM');
    oTable.Items.Add(55, 'ORS', 'Stock requisition - Order acknowledgment message');
    oTable.Items.Add(56, 'ORU', 'Unsolicited transmission of an observation message');
    oTable.Items.Add(57, 'OSQ', 'Query response for order status');
    oTable.Items.Add(58, 'OSR', 'Query response for order status');
    oTable.Items.Add(59, 'OUL', 'Unsolicited laboratory observation message');
    oTable.Items.Add(60, 'PEX', 'Product experience message');
    oTable.Items.Add(61, 'PGL', 'Patient goal message');
    oTable.Items.Add(62, 'PIN', 'Patient insurance information');
    oTable.Items.Add(63, 'PMU', 'Add personnel record');
    oTable.Items.Add(64, 'PPG', 'Patient pathway message (goal-oriented)');
    oTable.Items.Add(65, 'PPP', 'Patient pathway message (problem-oriented)');
    oTable.Items.Add(66, 'PPR', 'Patient problem message');
    oTable.Items.Add(67, 'PPT', 'Patient pathway goal-oriented response');
    oTable.Items.Add(68, 'PPV', 'Patient goal response');
    oTable.Items.Add(69, 'PRR', 'Patient problem response');
    oTable.Items.Add(70, 'PTR', 'Patient pathway problem-oriented response');
    oTable.Items.Add(71, 'QBP', 'Query by parameter');
    oTable.Items.Add(72, 'QCK', 'Deferred query');
    oTable.Items.Add(73, 'QCN', 'Cancel query');
    oTable.Items.Add(74, 'QRY', 'Query, original mode');
    oTable.Items.Add(75, 'QSB', 'Create subscription');
    oTable.Items.Add(76, 'QSX', 'Cancel subscription/acknowledge message');
    oTable.Items.Add(77, 'QVR', 'Query for previous events');
    oTable.Items.Add(78, 'RAR', 'Pharmacy/treatment administration information');
    oTable.Items.Add(79, 'RAS', 'Pharmacy/treatment administration message');
    oTable.Items.Add(80, 'RCI', 'Return clinical information');
    oTable.Items.Add(81, 'RCL', 'Return clinical list');
    oTable.Items.Add(82, 'RDE', 'Pharmacy/treatment encoded order message');
    oTable.Items.Add(83, 'RDR', 'Pharmacy/treatment dispense information');
    oTable.Items.Add(84, 'RDS', 'Pharmacy/treatment dispense message');
    oTable.Items.Add(85, 'RDY', 'Display based response');
    oTable.Items.Add(86, 'REF', 'Patient referral');
    oTable.Items.Add(87, 'RER', 'Pharmacy/treatment encoded order information');
    oTable.Items.Add(88, 'RGR', 'Pharmacy/treatment dose information');
    oTable.Items.Add(89, 'RGV', 'Pharmacy/treatment give message');
    oTable.Items.Add(90, 'ROR', 'Pharmacy/treatment order response');
    oTable.Items.Add(91, 'RPA', 'Return patient authorization');
    oTable.Items.Add(92, 'RPI', 'Return patient information');
    oTable.Items.Add(93, 'RPL', 'Return patient display list');
    oTable.Items.Add(94, 'RPR', 'Return patient list');
    oTable.Items.Add(95, 'RQA', 'Request patient authorization');
    oTable.Items.Add(96, 'RQC', 'Request clinical information');
    oTable.Items.Add(97, 'RQI', 'Request patient information');
    oTable.Items.Add(98, 'RQP', 'Request patient demographics');
    oTable.Items.Add(99, 'RRA', 'Pharmacy/treatment administration acknowledgment message');
    oTable.Items.Add(100, 'RRD', 'Pharmacy/treatment dispense acknowledgment message');
    oTable.Items.Add(101, 'RRE', 'Pharmacy/treatment encoded order acknowledgment message');
    oTable.Items.Add(102, 'RRG', 'Pharmacy/treatment give acknowledgment message');
    oTable.Items.Add(103, 'RRI', 'Return referral information');
    oTable.Items.Add(104, 'RSP', 'Segment pattern response');
    oTable.Items.Add(105, 'RTB', 'Tabular response');
    oTable.Items.Add(106, 'SCN', 'Notification of Anti-Microbial Device Cycle Data');
    oTable.Items.Add(107, 'SDN', 'Notification of Anti-Microbial Device Data');
    oTable.Items.Add(108, 'SDR', 'Sterilization anti-microbial device data request');
    oTable.Items.Add(109, 'SIU', 'Schedule information unsolicited');
    oTable.Items.Add(110, 'SLN', 'Notification of New Sterilization Lot');
    oTable.Items.Add(111, 'SLR', 'Sterilization lot request');
    oTable.Items.Add(112, 'SMD', 'Sterilization anti-microbial device cycle data request');
    oTable.Items.Add(113, 'SQM', 'Schedule query message');
    oTable.Items.Add(114, 'SQR', 'Schedule query response');
    oTable.Items.Add(115, 'SRM', 'Schedule request message');
    oTable.Items.Add(116, 'SRR', 'Scheduled request response');
    oTable.Items.Add(117, 'SSR', 'Specimen status request message');
    oTable.Items.Add(118, 'SSU', 'Specimen status update message');
    oTable.Items.Add(119, 'STC', 'Notification of Sterilization Configuration');
    oTable.Items.Add(120, 'STI', 'Sterilization item request');
    oTable.Items.Add(121, 'SUR', 'Summary product experience report');
    oTable.Items.Add(122, 'TBR', 'Tabular data response');
    oTable.Items.Add(123, 'TCR', 'Automated equipment test code settings request message');
    oTable.Items.Add(124, 'TCU', 'Automated equipment test code settings update message');
    oTable.Items.Add(125, 'UDM', 'Unsolicited display update message');
    oTable.Items.Add(126, 'VXQ', 'Query for vaccination record');
    oTable.Items.Add(127, 'VXR', 'Vaccination record response');
    oTable.Items.Add(128, 'VXU', 'Unsolicited vaccination record update');
    oTable.Items.Add(129, 'VXX', 'Response for vaccination query with multiple PID matches');
End;

procedure LoadTable78(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(78, 'Abnormal flags');
    oTable.Items.Add(5, '<', 'Below absolute low-off instrument scale');
    oTable.Items.Add(6, '>', 'Above absolute high-off instrument scale');
    oTable.Items.Add(8, 'A', 'Abnormal (applies to non-numeric results)');
    oTable.Items.Add(9, 'AA', 'Very abnormal (applies to non-numeric units, analogous to panic limits for numeric units)');
    oTable.Items.Add(13, 'B', 'Better--use when direction not relevant');
    oTable.Items.Add(12, 'D', 'Significant change down');
    oTable.Items.Add(2, 'H', 'Above high normal');
    oTable.Items.Add(4, 'HH', 'Above upper panic limits');
    oTable.Items.Add(17, 'I', 'Intermediate. Indicates for microbiology susceptibilities only.');
    oTable.Items.Add(1, 'L', 'Below low normal');
    oTable.Items.Add(3, 'LL', 'Below lower panic limits');
    oTable.Items.Add(18, 'MS', 'Moderately susceptible. Indicates for microbiology susceptibilities only.');
    oTable.Items.Add(7, 'N', 'Normal (applies to non-numeric results)');
    oTable.Items.Add(10, 'null', 'No range defined, or normal ranges don''t apply');
    oTable.Items.Add(16, 'R', 'Resistant. Indicates for microbiology susceptibilities only.');
    oTable.Items.Add(15, 'S', 'Susceptible. Indicates for microbiology susceptibilities only.');
    oTable.Items.Add(11, 'U', 'Significant change up');
    oTable.Items.Add(19, 'VS', 'Very susceptible. Indicates for microbiology susceptibilities only.');
    oTable.Items.Add(14, 'W', 'Worse--use when direction not relevant');
End;

procedure LoadTable80(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(80, 'Nature of Abnormal Testing');
    oTable.Items.Add(1, 'A', 'An age-based population');
    oTable.Items.Add(6, 'B', 'Breed');
    oTable.Items.Add(2, 'N', 'None - generic normal range');
    oTable.Items.Add(3, 'R', 'A race-based population');
    oTable.Items.Add(4, 'S', 'A sex-based population');
    oTable.Items.Add(5, 'SP', 'Species');
    oTable.Items.Add(7, 'ST', 'Strain');
End;

procedure LoadTable83(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(83, 'Outlier Type');
    oTable.Items.Add(2, 'C', 'Outlier cost');
    oTable.Items.Add(1, 'D', 'Outlier days');
End;

procedure LoadTable84(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(84, 'Performed by');
    oTable.Items.Add(1, '...', 'No suggested values defined');
End;

procedure LoadTable85(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(85, 'Observation result status codes interpretation');
    oTable.Items.Add(1, 'C', 'Record coming over is a correction and thus replaces a final result');
    oTable.Items.Add(2, 'D', 'Deletes the OBX record');
    oTable.Items.Add(3, 'F', 'Final results; Can only be changed with a corrected result.');
    oTable.Items.Add(4, 'I', 'Specimen in lab; results pending');
    oTable.Items.Add(5, 'N', 'Not asked; used to affirmatively document that the observation identified in the OBX was not sought when the universal service ID in OBR-4 implies that it would be sought.');
    oTable.Items.Add(6, 'O', 'Order detail description only (no result)');
    oTable.Items.Add(7, 'P', 'Preliminary results');
    oTable.Items.Add(8, 'R', 'Results entered -- not verified');
    oTable.Items.Add(9, 'S', 'Partial results.   Deprecated. Retained only for backward compatibility as of V2.6.');
    oTable.Items.Add(11, 'U', 'Results status change to final without retransmitting results already sent as ''preliminary.''  E.g., radiology changes status from preliminary to final');
    oTable.Items.Add(12, 'W', 'Post original as wrong, e.g., transmitted for wrong patient');
    oTable.Items.Add(10, 'X', 'Results cannot be obtained for this observation');
End;

procedure LoadTable86(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(86, 'Plan ID');
    oTable.Items.Add(1, '...', 'No suggested values defined');
End;

procedure LoadTable87(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(87, 'Pre-Admit Test Indicator');
    oTable.Items.Add(1, '...', 'no suggested values');
End;

procedure LoadTable88(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(88, 'Procedure Code');
    oTable.Items.Add(1, '...', 'No suggested values defined');
End;

procedure LoadTable91(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(91, 'Query priority');
    oTable.Items.Add(1, 'D', 'Deferred');
    oTable.Items.Add(2, 'I', 'Immediate');
End;

procedure LoadTable92(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(92, 'Re-Admission Indicator');
    oTable.Items.Add(1, 'R', 'Re-admission');
End;

procedure LoadTable93(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(93, 'Release Information');
    oTable.Items.Add(3, '...', 'user-defined codes');
    oTable.Items.Add(2, 'N', 'No');
    oTable.Items.Add(1, 'Y', 'Yes');
End;

procedure LoadTable98(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(98, 'Type of Agreement');
    oTable.Items.Add(3, 'M', 'Maternity');
    oTable.Items.Add(1, 'S', 'Standard');
    oTable.Items.Add(2, 'U', 'Unified');
End;

procedure LoadTable99(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(99, 'VIP Indicator');
    oTable.Items.Add(1, '...', 'no suggested values');
End;

procedure LoadTable100(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(100, 'Invocation event');
    oTable.Items.Add(1, 'D', 'On discharge');
    oTable.Items.Add(2, 'O', 'On receipt of order');
    oTable.Items.Add(3, 'R', 'At time service is completed');
    oTable.Items.Add(4, 'S', 'At time service is started');
    oTable.Items.Add(5, 'T', 'At a designated date/time');
End;

procedure LoadTable103(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(103, 'Processing ID');
    oTable.Items.Add(1, 'D', 'Debugging');
    oTable.Items.Add(2, 'P', 'Production');
    oTable.Items.Add(3, 'T', 'Training');
End;

procedure LoadTable104(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(104, 'Version ID');
    oTable.Items.Add(1, '2.0', 'Release 2.0');
    oTable.Items.Add(2, '2.0D', 'Demo 2.0');
    oTable.Items.Add(3, '2.1', 'Release 2. 1');
    oTable.Items.Add(4, '2.2', 'Release 2.2');
    oTable.Items.Add(5, '2.3', 'Release 2.3');
    oTable.Items.Add(6, '2.3.1', 'Release 2.3.1');
    oTable.Items.Add(7, '2.4', 'Release 2.4');
    oTable.Items.Add(8, '2.5', 'Release 2.5');
    oTable.Items.Add(9, '2.5.1', 'Release 1.5.1');
    oTable.Items.Add(10, '2.6', 'Release 2.6');
End;

procedure LoadTable105(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(105, 'Source of comment');
    oTable.Items.Add(1, 'L', 'Ancillary (filler) department is source of comment');
    oTable.Items.Add(3, 'O', 'Other system is source of comment');
    oTable.Items.Add(2, 'P', 'Orderer (placer) is source of comment');
End;

procedure LoadTable106(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(106, 'Query/response format code');
    oTable.Items.Add(1, 'D', 'Response is in display format');
    oTable.Items.Add(2, 'R', 'Response is in record-oriented format');
    oTable.Items.Add(3, 'T', 'Response is in tabular format');
End;

procedure LoadTable107(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(107, 'Deferred response type');
    oTable.Items.Add(1, 'B', 'Before the Date/Time specified');
    oTable.Items.Add(2, 'L', 'Later than the Date/Time specified');
End;

procedure LoadTable108(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(108, 'Query results level');
    oTable.Items.Add(1, 'O', 'Order plus order status');
    oTable.Items.Add(2, 'R', 'Results without bulk text');
    oTable.Items.Add(3, 'S', 'Status only');
    oTable.Items.Add(4, 'T', 'Full results');
End;

procedure LoadTable109(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(109, 'Report priority');
    oTable.Items.Add(1, 'R', 'Routine');
    oTable.Items.Add(2, 'S', 'Stat');
End;

procedure LoadTable110(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(110, 'Transfer to Bad Debt Code');
    oTable.Items.Add(1, '...', 'no suggested values');
End;

procedure LoadTable111(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(111, 'Delete Account Code');
    oTable.Items.Add(1, '...', 'no suggested values');
End;

procedure LoadTable112(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(112, 'Discharge Disposition');
    oTable.Items.Add(1, '01', 'Discharged to home or self care (routine discharge)');
    oTable.Items.Add(2, '02', 'Discharged/transferred to another short term general hospital for inpatient care');
    oTable.Items.Add(3, '03', 'Discharged/transferred to skilled nursing facility (SNF)');
    oTable.Items.Add(4, '04', 'Discharged/transferred to an intermediate care facility (ICF)');
    oTable.Items.Add(5, '05', 'Discharged/transferred to another type of institution for inpatient care or referred for outpatient services to another institution');
    oTable.Items.Add(6, '06', 'Discharged/transferred to home under care of organized home health service organization');
    oTable.Items.Add(7, '07', 'Left against medical advice or discontinued care');
    oTable.Items.Add(8, '08', 'Discharged/transferred to home under care of Home IV provider');
    oTable.Items.Add(9, '09', 'Admitted as an inpatient to this hospital');
    oTable.Items.Add(10, '10 ... 19', 'Discharge to be defined at state level, if necessary');
    oTable.Items.Add(11, '20', 'Expired (i.e. dead)');
    oTable.Items.Add(12, '21 ... 29', 'Expired to be defined at state level, if necessary');
    oTable.Items.Add(13, '30', 'Still patient or expected to return for outpatient services (i.e. still a patient)');
    oTable.Items.Add(14, '31 ... 39', 'Still patient to be defined at state level, if necessary  (i.e. still a patient)');
    oTable.Items.Add(15, '40', 'Expired (i.e. died) at home');
    oTable.Items.Add(16, '41', 'Expired (i.e. died) in a medical facility; e.g., hospital, SNF, ICF, or free standing hospice');
    oTable.Items.Add(17, '42', 'Expired (i.e. died)  - place unknown');
End;

procedure LoadTable113(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(113, 'Discharged to location');
    oTable.Items.Add(1, '...', 'No suggested values defined');
End;

procedure LoadTable114(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(114, 'Diet Type');
    oTable.Items.Add(1, '...', 'no suggested values');
End;

procedure LoadTable115(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(115, 'Servicing Facility');
    oTable.Items.Add(1, '...', 'no suggested values');
End;

procedure LoadTable116(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(116, 'Bed Status');
    oTable.Items.Add(1, 'C', 'Closed');
    oTable.Items.Add(2, 'H', 'Housekeeping');
    oTable.Items.Add(6, 'I', 'Isolated');
    oTable.Items.Add(5, 'K', 'Contaminated');
    oTable.Items.Add(3, 'O', 'Occupied');
    oTable.Items.Add(4, 'U', 'Unoccupied');
End;

procedure LoadTable117(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(117, 'Account Status');
    oTable.Items.Add(1, '...', 'no suggested values');
End;

procedure LoadTable118(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(118, 'Major Diagnostic Category');
    oTable.Items.Add(1, '...', 'No suggested values defined');
End;

procedure LoadTable119(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(119, 'Order control codes');
    oTable.Items.Add(1, 'AF', 'Order/service refill request approval');
    oTable.Items.Add(2, 'CA', 'Cancel order/service request');
    oTable.Items.Add(3, 'CH', 'Child order/service');
    oTable.Items.Add(4, 'CN', 'Combined result');
    oTable.Items.Add(5, 'CR', 'Canceled as requested');
    oTable.Items.Add(6, 'DC', 'Discontinue order/service request');
    oTable.Items.Add(7, 'DE', 'Data errors');
    oTable.Items.Add(8, 'DF', 'Order/service refill request denied');
    oTable.Items.Add(9, 'DR', 'Discontinued as requested');
    oTable.Items.Add(10, 'FU', 'Order/service refilled, unsolicited');
    oTable.Items.Add(11, 'HD', 'Hold order request');
    oTable.Items.Add(12, 'HR', 'On hold as requested');
    oTable.Items.Add(13, 'LI', 'Link order/service to patient care problem or goal');
    oTable.Items.Add(108, 'MC', 'Miscellaneous Charge - not associated with an order');
    oTable.Items.Add(14, 'NA', 'Number assigned');
    oTable.Items.Add(25, 'NW', 'New order/service');
    oTable.Items.Add(23, 'NW or RO', 'Other application to filler application');
    oTable.Items.Add(26, 'OC', 'Order/service canceled');
    oTable.Items.Add(27, 'OD', 'Order/service discontinued');
    oTable.Items.Add(28, 'OE', 'Order/service released');
    oTable.Items.Add(29, 'OF', 'Order/service refilled as requested');
    oTable.Items.Add(30, 'OH', 'Order/service held');
    oTable.Items.Add(31, 'OK', 'Order/service accepted & OK');
    oTable.Items.Add(32, 'OP', 'Notification of order for outside dispense');
    oTable.Items.Add(33, 'OR', 'Released as requested');
    oTable.Items.Add(34, 'PA', 'Parent order/service');
    oTable.Items.Add(35, 'PR', 'Previous Results with new order/service');
    oTable.Items.Add(36, 'PY', 'Notification of replacement order for outside dispense');
    oTable.Items.Add(37, 'RE', 'Observations/Performed Service to follow');
    oTable.Items.Add(55, 'RF', 'Refill order/service request');
    oTable.Items.Add(56, 'RL', 'Release previous hold');
    oTable.Items.Add(57, 'RO', 'Replacement order');
    oTable.Items.Add(88, 'RP', 'Order/service replace request');
    oTable.Items.Add(89, 'RQ', 'Replaced as requested');
    oTable.Items.Add(90, 'RR', 'Request received');
    oTable.Items.Add(91, 'RU', 'Replaced unsolicited');
    oTable.Items.Add(92, 'SC', 'Status changed');
    oTable.Items.Add(15, 'SN', 'filler application');
    oTable.Items.Add(94, 'SR', 'Response to send order/service status request');
    oTable.Items.Add(95, 'SS', 'Send order/service status request');
    oTable.Items.Add(96, 'UA', 'Unable to accept order/service');
    oTable.Items.Add(97, 'UC', 'Unable to cancel');
    oTable.Items.Add(98, 'UD', 'Unable to discontinue');
    oTable.Items.Add(99, 'UF', 'Unable to refill');
    oTable.Items.Add(100, 'UH', 'Unable to put on hold');
    oTable.Items.Add(101, 'UM', 'Unable to replace');
    oTable.Items.Add(102, 'UN', 'Unlink order/service from patient care problem or goal');
    oTable.Items.Add(103, 'UR', 'Unable to release');
    oTable.Items.Add(104, 'UX', 'Unable to change');
    oTable.Items.Add(105, 'XO', 'Change order/service request');
    oTable.Items.Add(106, 'XR', 'Changed as requested');
    oTable.Items.Add(107, 'XX', 'Order/service changed, unsol.');
End;

procedure LoadTable121(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(121, 'Response flag');
    oTable.Items.Add(3, 'D', 'Same as R, also other associated segments');
    oTable.Items.Add(1, 'E', 'Report exceptions only');
    oTable.Items.Add(4, 'F', 'Same as D, plus confirmations explicitly');
    oTable.Items.Add(5, 'N', 'Only the MSA segment is returned');
    oTable.Items.Add(2, 'R', 'Same as E, also Replacement and Parent-Child');
End;

procedure LoadTable122(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(122, 'Charge type');
    oTable.Items.Add(1, 'CH', 'Charge');
    oTable.Items.Add(2, 'CO', 'Contract');
    oTable.Items.Add(3, 'CR', 'Credit');
    oTable.Items.Add(4, 'DP', 'Department');
    oTable.Items.Add(5, 'GR', 'Grant');
    oTable.Items.Add(6, 'NC', 'No Charge');
    oTable.Items.Add(7, 'PC', 'Professional');
    oTable.Items.Add(8, 'RS', 'Research');
End;

procedure LoadTable123(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(123, 'Result Status');
    oTable.Items.Add(4, 'A', 'Some, but not all, results available');
    oTable.Items.Add(6, 'C', 'Correction to results');
    oTable.Items.Add(8, 'F', 'Final results; results stored and verified.  Can only be changed with a corrected result.');
    oTable.Items.Add(2, 'I', 'No results available; specimen received, procedure incomplete');
    oTable.Items.Add(1, 'O', 'Order received; specimen not yet received');
    oTable.Items.Add(5, 'P', 'Preliminary: A verified early result is available, final results not yet obtained');
    oTable.Items.Add(7, 'R', 'Results stored; not yet verified');
    oTable.Items.Add(3, 'S', 'No results available; procedure scheduled, but not done');
    oTable.Items.Add(9, 'X', 'No results available; Order canceled.');
    oTable.Items.Add(10, 'Y', 'No order on record for this test.  (Used only on queries)');
    oTable.Items.Add(11, 'Z', 'No record of this patient. (Used only on queries)');
End;

procedure LoadTable124(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(124, 'Transportation Mode');
    oTable.Items.Add(1, 'CART', 'Cart - patient travels on cart or gurney');
    oTable.Items.Add(2, 'PORT', 'The examining device goes to patient''s location');
    oTable.Items.Add(3, 'WALK', 'Patient walks to diagnostic service');
    oTable.Items.Add(4, 'WHLC', 'Wheelchair');
End;

procedure LoadTable125(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(125, 'Value type');
    oTable.Items.Add(1, 'AD', 'Address');
    oTable.Items.Add(3, 'CF', 'Coded Element With Formatted Values');
    oTable.Items.Add(4, 'CK', 'Composite ID With Check Digit');
    oTable.Items.Add(5, 'CN', 'Composite ID And Name');
    oTable.Items.Add(6, 'CP', 'Composite Price');
    oTable.Items.Add(2, 'CWE', 'Coded Entry');
    oTable.Items.Add(7, 'CX', 'Extended Composite ID With Check Digit');
    oTable.Items.Add(8, 'DT', 'Date');
    oTable.Items.Add(19, 'DTM', 'Time Stamp (Date & Time)');
    oTable.Items.Add(9, 'ED', 'Encapsulated Data');
    oTable.Items.Add(10, 'FT', 'Formatted Text (Display)');
    oTable.Items.Add(11, 'MO', 'Money');
    oTable.Items.Add(12, 'NM', 'Numeric');
    oTable.Items.Add(13, 'PN', 'Person Name');
    oTable.Items.Add(14, 'RP', 'Reference Pointer');
    oTable.Items.Add(15, 'SN', 'Structured Numeric');
    oTable.Items.Add(16, 'ST', 'String Data.');
    oTable.Items.Add(17, 'TM', 'Time');
    oTable.Items.Add(18, 'TN', 'Telephone Number');
    oTable.Items.Add(20, 'TX', 'Text Data (Display)');
    oTable.Items.Add(21, 'XAD', 'Extended Address');
    oTable.Items.Add(22, 'XCN', 'Extended Composite Name And Number For Persons');
    oTable.Items.Add(23, 'XON', 'Extended Composite Name And Number For Organizations');
    oTable.Items.Add(24, 'XPN', 'Extended Person Name');
    oTable.Items.Add(25, 'XTN', 'Extended Telecommunications Number');
End;

procedure LoadTable126(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(126, 'Quantity limited request');
    oTable.Items.Add(1, 'CH', 'Characters');
    oTable.Items.Add(2, 'LI', 'Lines');
    oTable.Items.Add(3, 'PG', 'Pages');
    oTable.Items.Add(4, 'RD', 'Records');
    oTable.Items.Add(5, 'ZO', 'Locally defined');
End;

procedure LoadTable127(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(127, 'Allergen Type');
    oTable.Items.Add(6, 'AA', 'Animal Allergy');
    oTable.Items.Add(1, 'DA', 'Drug allergy');
    oTable.Items.Add(5, 'EA', 'Environmental Allergy');
    oTable.Items.Add(2, 'FA', 'Food allergy');
    oTable.Items.Add(8, 'LA', 'Pollen Allergy');
    oTable.Items.Add(3, 'MA', 'Miscellaneous allergy');
    oTable.Items.Add(4, 'MC', 'Miscellaneous contraindication');
    oTable.Items.Add(7, 'PA', 'Plant Allergy');
End;

procedure LoadTable128(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(128, 'Allergy Severity');
    oTable.Items.Add(3, 'MI', 'Mild');
    oTable.Items.Add(2, 'MO', 'Moderate');
    oTable.Items.Add(1, 'SV', 'Severe');
    oTable.Items.Add(4, 'U', 'Unknown');
End;

procedure LoadTable129(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(129, 'Accommodation code');
    oTable.Items.Add(1, '...', 'No suggested values defined');
End;

procedure LoadTable130(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(130, 'Visit User Code');
    oTable.Items.Add(2, 'HO', 'Home');
    oTable.Items.Add(3, 'MO', 'Mobile Unit');
    oTable.Items.Add(4, 'PH', 'Phone');
    oTable.Items.Add(1, 'TE', 'Teaching');
End;

procedure LoadTable131(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(131, 'Contact Role');
    oTable.Items.Add(2, 'C', 'Emergency Contact');
    oTable.Items.Add(1, 'E', 'Employer');
    oTable.Items.Add(3, 'F', 'Federal Agency');
    oTable.Items.Add(4, 'I', 'Insurance Company');
    oTable.Items.Add(5, 'N', 'Next-of-Kin');
    oTable.Items.Add(7, 'O', 'Other');
    oTable.Items.Add(6, 'S', 'State Agency');
    oTable.Items.Add(8, 'U', 'Unknown');
End;

procedure LoadTable132(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(132, 'Transaction Code');
    oTable.Items.Add(1, '...', 'No suggested values defined');
End;

procedure LoadTable135(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(135, 'Assignment of Benefits');
    oTable.Items.Add(3, 'M', 'Modified assignment');
    oTable.Items.Add(2, 'N', 'No');
    oTable.Items.Add(1, 'Y', 'Yes');
End;

procedure LoadTable136(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(136, 'Yes/no indicator');
    oTable.Items.Add(2, 'N', 'No');
    oTable.Items.Add(1, 'Y', 'Yes');
End;

procedure LoadTable137(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(137, 'Mail Claim Party');
    oTable.Items.Add(1, 'E', 'Employer');
    oTable.Items.Add(2, 'G', 'Guarantor');
    oTable.Items.Add(3, 'I', 'Insurance company');
    oTable.Items.Add(4, 'O', 'Other');
    oTable.Items.Add(5, 'P', 'Patient');
End;

procedure LoadTable139(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(139, 'Employer Information Data');
    oTable.Items.Add(1, '...', 'No suggested values defined');
End;

procedure LoadTable140(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(140, 'Military Service');
    oTable.Items.Add(9, 'AUSA', 'Australian Army');
    oTable.Items.Add(11, 'AUSAF', 'Australian Air Force');
    oTable.Items.Add(10, 'AUSN', 'Australian Navy');
    oTable.Items.Add(8, 'NATO', 'North Atlantic Treaty Organization');
    oTable.Items.Add(7, 'NOAA', 'National Oceanic and Atmospheric Administration');
    oTable.Items.Add(1, 'USA', 'US Army');
    oTable.Items.Add(3, 'USAF', 'US Air Force');
    oTable.Items.Add(5, 'USCG', 'US Coast Guard');
    oTable.Items.Add(4, 'USMC', 'US Marine Corps');
    oTable.Items.Add(2, 'USN', 'US Navy');
    oTable.Items.Add(6, 'USPHS', 'US Public Health Service');
End;

procedure LoadTable141(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(141, 'Military Rank/Grade');
    oTable.Items.Add(1, 'E1... E9', 'Enlisted');
    oTable.Items.Add(2, 'O1 ... O9', 'Officers');
    oTable.Items.Add(3, 'W1 ... W4', 'Warrant Officers');
End;

procedure LoadTable142(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(142, 'Military Status');
    oTable.Items.Add(1, 'ACT', 'Active duty');
    oTable.Items.Add(3, 'DEC', 'Deceased');
    oTable.Items.Add(2, 'RET', 'Retired');
End;

procedure LoadTable143(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(143, 'Non-covered Insurance Code');
    oTable.Items.Add(1, '...', 'No suggested values defined');
End;

procedure LoadTable144(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(144, 'Eligibility Source');
    oTable.Items.Add(1, '1', 'Insurance company');
    oTable.Items.Add(2, '2', 'Employer');
    oTable.Items.Add(3, '3', 'Insured presented policy');
    oTable.Items.Add(4, '4', 'Insured presented card');
    oTable.Items.Add(5, '5', 'Signed statement on file');
    oTable.Items.Add(6, '6', 'Verbal information');
    oTable.Items.Add(7, '7', 'None');
End;

procedure LoadTable145(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(145, 'Room type');
    oTable.Items.Add(6, '2ICU', 'Second intensive care unit');
    oTable.Items.Add(2, '2PRI', 'Second private room');
    oTable.Items.Add(4, '2SPR', 'Second semi-private room');
    oTable.Items.Add(5, 'ICU', 'Intensive care unit');
    oTable.Items.Add(1, 'PRI', 'Private room');
    oTable.Items.Add(3, 'SPR', 'Semi-private room');
End;

procedure LoadTable146(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(146, 'Amount type');
    oTable.Items.Add(1, 'DF', 'Differential');
    oTable.Items.Add(2, 'LM', 'Limit');
    oTable.Items.Add(3, 'PC', 'Percentage');
    oTable.Items.Add(4, 'RT', 'Rate');
    oTable.Items.Add(5, 'UL', 'Unlimited');
End;

procedure LoadTable147(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(147, 'Policy type');
    oTable.Items.Add(2, '2ANC', 'Second ancillary');
    oTable.Items.Add(4, '2MMD', 'Second major medical');
    oTable.Items.Add(5, '3MMD', 'Third major medical');
    oTable.Items.Add(1, 'ANC', 'Ancillary');
    oTable.Items.Add(3, 'MMD', 'Major medical');
End;

procedure LoadTable148(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(148, 'Money or percentage indicator');
    oTable.Items.Add(1, 'AT', 'Currency amount');
    oTable.Items.Add(2, 'PC', 'Percentage');
End;

procedure LoadTable149(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(149, 'Day type');
    oTable.Items.Add(1, 'AP', 'Approved');
    oTable.Items.Add(2, 'DE', 'Denied');
    oTable.Items.Add(3, 'PE', 'Pending');
End;

procedure LoadTable150(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(150, 'Certification patient type');
    oTable.Items.Add(1, 'ER', 'Emergency');
    oTable.Items.Add(2, 'IPE', 'Inpatient elective');
    oTable.Items.Add(3, 'OPE', 'Outpatient elective');
    oTable.Items.Add(4, 'UR', 'Urgent');
End;

procedure LoadTable151(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(151, 'Second Opinion Status');
    oTable.Items.Add(1, '...', 'No suggested values defined');
End;

procedure LoadTable152(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(152, 'Second Opinion Documentation Received');
    oTable.Items.Add(1, '...', 'No suggested values defined');
End;

procedure LoadTable153(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(153, 'Value code');
    oTable.Items.Add(1, '...', 'See NUBC codes');
End;

procedure LoadTable155(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(155, 'Accept/application acknowledgment conditions');
    oTable.Items.Add(1, 'AL', 'Always');
    oTable.Items.Add(3, 'ER', 'Error/reject conditions only');
    oTable.Items.Add(2, 'NE', 'Never');
    oTable.Items.Add(4, 'SU', 'Successful completion only');
End;

procedure LoadTable156(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(156, 'Which date/time qualifier');
    oTable.Items.Add(1, 'ANY', 'Any date/time within a range');
    oTable.Items.Add(2, 'COL', 'Collection date/time, equivalent to film or sample collection date/time');
    oTable.Items.Add(3, 'ORD', 'Order date/time');
    oTable.Items.Add(4, 'RCT', 'Specimen receipt date/time, receipt of specimen in filling ancillary (Lab)');
    oTable.Items.Add(5, 'REP', 'Report date/time, report date/time at filing ancillary (i.e., Lab)');
    oTable.Items.Add(6, 'SCHED', 'Schedule date/time');
End;

procedure LoadTable157(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(157, 'Which date/time status qualifier');
    oTable.Items.Add(1, 'ANY', 'Any status');
    oTable.Items.Add(2, 'CFN', 'Current final value, whether final or corrected');
    oTable.Items.Add(3, 'COR', 'Corrected only (no final with corrections)');
    oTable.Items.Add(4, 'FIN', 'Final only (no corrections)');
    oTable.Items.Add(5, 'PRE', 'Preliminary');
    oTable.Items.Add(6, 'REP', 'Report completion date/time');
End;

procedure LoadTable158(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(158, 'Date/time selection qualifier');
    oTable.Items.Add(1, '1ST', 'First value within range');
    oTable.Items.Add(2, 'ALL', 'All values within the range');
    oTable.Items.Add(3, 'LST', 'Last value within the range');
    oTable.Items.Add(4, 'REV', 'All values within the range returned in reverse chronological order (This is the default if not otherwise specified.)');
End;

procedure LoadTable159(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(159, 'Diet Code Specification Type');
    oTable.Items.Add(1, 'D', 'Diet');
    oTable.Items.Add(3, 'P', 'Preference');
    oTable.Items.Add(2, 'S', 'Supplement');
End;

procedure LoadTable160(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(160, 'Tray Type');
    oTable.Items.Add(1, 'EARLY', 'Early tray');
    oTable.Items.Add(3, 'GUEST', 'Guest tray');
    oTable.Items.Add(2, 'LATE', 'Late tray');
    oTable.Items.Add(5, 'MSG', 'Tray message only');
    oTable.Items.Add(4, 'NO', 'No tray');
End;

procedure LoadTable161(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(161, 'Allow Substitution');
    oTable.Items.Add(2, 'G', 'Allow generic substitutions.');
    oTable.Items.Add(1, 'N', 'Substitutions are NOT authorized.  (This is the default - null.)');
    oTable.Items.Add(3, 'T', 'Allow therapeutic substitutions');
End;

procedure LoadTable162(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(162, 'Route of Administration');
    oTable.Items.Add(1, 'AP', 'Apply Externally');
    oTable.Items.Add(2, 'B', 'Buccal');
    oTable.Items.Add(3, 'DT', 'Dental');
    oTable.Items.Add(4, 'EP', 'Epidural');
    oTable.Items.Add(5, 'ET', 'Endotrachial Tube*');
    oTable.Items.Add(6, 'GTT', 'Gastrostomy Tube');
    oTable.Items.Add(7, 'GU', 'GU Irrigant');
    oTable.Items.Add(9, 'IA', 'Intra-arterial');
    oTable.Items.Add(10, 'IB', 'Intrabursal');
    oTable.Items.Add(11, 'IC', 'Intracardiac');
    oTable.Items.Add(12, 'ICV', 'Intracervical (uterus)');
    oTable.Items.Add(13, 'ID', 'Intradermal');
    oTable.Items.Add(14, 'IH', 'Inhalation');
    oTable.Items.Add(15, 'IHA', 'Intrahepatic Artery');
    oTable.Items.Add(16, 'IM', 'Intramuscular');
    oTable.Items.Add(8, 'IMR', 'Immerse (Soak) Body Part');
    oTable.Items.Add(17, 'IN', 'Intranasal');
    oTable.Items.Add(18, 'IO', 'Intraocular');
    oTable.Items.Add(19, 'IP', 'Intraperitoneal');
    oTable.Items.Add(20, 'IS', 'Intrasynovial');
    oTable.Items.Add(21, 'IT', 'Intrathecal');
    oTable.Items.Add(22, 'IU', 'Intrauterine');
    oTable.Items.Add(23, 'IV', 'Intravenous');
    oTable.Items.Add(25, 'MM', 'Mucous Membrane');
    oTable.Items.Add(24, 'MTH', 'Mouth/Throat');
    oTable.Items.Add(27, 'NG', 'Nasogastric');
    oTable.Items.Add(28, 'NP', 'Nasal Prongs*');
    oTable.Items.Add(26, 'NS', 'Nasal');
    oTable.Items.Add(29, 'NT', 'Nasotrachial Tube');
    oTable.Items.Add(30, 'OP', 'Ophthalmic');
    oTable.Items.Add(31, 'OT', 'Otic');
    oTable.Items.Add(32, 'OTH', 'Other/Miscellaneous');
    oTable.Items.Add(33, 'PF', 'Perfusion');
    oTable.Items.Add(34, 'PO', 'Oral');
    oTable.Items.Add(35, 'PR', 'Rectal');
    oTable.Items.Add(36, 'RM', 'Rebreather Mask*');
    oTable.Items.Add(38, 'SC', 'Subcutaneous');
    oTable.Items.Add(37, 'SD', 'Soaked Dressing');
    oTable.Items.Add(39, 'SL', 'Sublingual');
    oTable.Items.Add(42, 'TD', 'Transdermal');
    oTable.Items.Add(43, 'TL', 'Translingual');
    oTable.Items.Add(40, 'TP', 'Topical');
    oTable.Items.Add(41, 'TRA', 'Tracheostomy*');
    oTable.Items.Add(44, 'UR', 'Urethral');
    oTable.Items.Add(45, 'VG', 'Vaginal');
    oTable.Items.Add(46, 'VM', 'Ventimask');
    oTable.Items.Add(47, 'WND', 'Wound');
End;

procedure LoadTable163(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(163, 'Body site');
    oTable.Items.Add(1, 'BE', 'Bilateral Ears');
    oTable.Items.Add(3, 'BN', 'Bilateral Nares');
    oTable.Items.Add(4, 'BU', 'Buttock');
    oTable.Items.Add(5, 'CT', 'Chest Tube');
    oTable.Items.Add(6, 'LA', 'Left Arm');
    oTable.Items.Add(7, 'LAC', 'Left Anterior Chest');
    oTable.Items.Add(8, 'LACF', 'Left Antecubital Fossa');
    oTable.Items.Add(9, 'LD', 'Left Deltoid');
    oTable.Items.Add(10, 'LE', 'Left Ear');
    oTable.Items.Add(11, 'LEJ', 'Left External Jugular');
    oTable.Items.Add(13, 'LF', 'Left Foot');
    oTable.Items.Add(14, 'LG', 'Left Gluteus Medius');
    oTable.Items.Add(15, 'LH', 'Left Hand');
    oTable.Items.Add(16, 'LIJ', 'Left Internal Jugular');
    oTable.Items.Add(17, 'LLAQ', 'Left Lower Abd Quadrant');
    oTable.Items.Add(18, 'LLFA', 'Left Lower Forearm');
    oTable.Items.Add(19, 'LMFA', 'Left Mid Forearm');
    oTable.Items.Add(20, 'LN', 'Left Naris');
    oTable.Items.Add(21, 'LPC', 'Left Posterior Chest');
    oTable.Items.Add(22, 'LSC', 'Left Subclavian');
    oTable.Items.Add(23, 'LT', 'Left Thigh');
    oTable.Items.Add(24, 'LUA', 'Left Upper Arm');
    oTable.Items.Add(25, 'LUAQ', 'Left Upper Abd Quadrant');
    oTable.Items.Add(26, 'LUFA', 'Left Upper Forearm');
    oTable.Items.Add(27, 'LVG', 'Left Ventragluteal');
    oTable.Items.Add(28, 'LVL', 'Left Vastus Lateralis');
    oTable.Items.Add(29, 'NB', 'Nebulized');
    oTable.Items.Add(38, 'OD', 'Right Eye');
    oTable.Items.Add(12, 'OS', 'Left Eye');
    oTable.Items.Add(2, 'OU', 'Bilateral Eyes');
    oTable.Items.Add(30, 'PA', 'Perianal');
    oTable.Items.Add(31, 'PERIN', 'Perineal');
    oTable.Items.Add(32, 'RA', 'Right Arm');
    oTable.Items.Add(33, 'RAC', 'Right Anterior Chest');
    oTable.Items.Add(34, 'RACF', 'Right Antecubital Fossa');
    oTable.Items.Add(35, 'RD', 'Right Deltoid');
    oTable.Items.Add(36, 'RE', 'Right Ear');
    oTable.Items.Add(37, 'REJ', 'Right External Jugular');
    oTable.Items.Add(39, 'RF', 'Right Foot');
    oTable.Items.Add(40, 'RG', 'Right Gluteus Medius');
    oTable.Items.Add(41, 'RH', 'Right Hand');
    oTable.Items.Add(42, 'RIJ', 'Right Internal Jugular');
    oTable.Items.Add(43, 'RLAQ', 'Rt Lower Abd Quadrant');
    oTable.Items.Add(44, 'RLFA', 'Right Lower Forearm');
    oTable.Items.Add(45, 'RMFA', 'Right Mid Forearm');
    oTable.Items.Add(46, 'RN', 'Right Naris');
    oTable.Items.Add(47, 'RPC', 'Right Posterior Chest');
    oTable.Items.Add(48, 'RSC', 'Right Subclavian');
    oTable.Items.Add(49, 'RT', 'Right Thigh');
    oTable.Items.Add(50, 'RUA', 'Right Upper Arm');
    oTable.Items.Add(51, 'RUAQ', 'Right Upper Abd Quadrant');
    oTable.Items.Add(52, 'RUFA', 'Right Upper Forearm');
    oTable.Items.Add(54, 'RVG', 'Right Ventragluteal');
    oTable.Items.Add(53, 'RVL', 'Right Vastus Lateralis');
End;

procedure LoadTable164(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(164, 'Administration Device');
    oTable.Items.Add(1, 'AP', 'Applicator');
    oTable.Items.Add(2, 'BT', 'Buretrol');
    oTable.Items.Add(3, 'HL', 'Heparin Lock');
    oTable.Items.Add(4, 'IPPB', 'IPPB');
    oTable.Items.Add(5, 'IVP', 'IV Pump');
    oTable.Items.Add(6, 'IVS', 'IV Soluset');
    oTable.Items.Add(7, 'MI', 'Metered Inhaler');
    oTable.Items.Add(8, 'NEB', 'Nebulizer');
    oTable.Items.Add(9, 'PCA', 'PCA Pump');
End;

procedure LoadTable165(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(165, 'Administration Method');
    oTable.Items.Add(1, 'CH', 'Chew');
    oTable.Items.Add(2, 'DI', 'Dissolve');
    oTable.Items.Add(3, 'DU', 'Dust');
    oTable.Items.Add(4, 'IF', 'Infiltrate');
    oTable.Items.Add(6, 'IR', 'Irrigate');
    oTable.Items.Add(5, 'IS', 'Insert');
    oTable.Items.Add(8, 'IVP', 'IV Push');
    oTable.Items.Add(7, 'IVPB', 'IV Piggyback');
    oTable.Items.Add(9, 'NB', 'Nebulized');
    oTable.Items.Add(11, 'PF', 'Perfuse');
    oTable.Items.Add(10, 'PT', 'Paint');
    oTable.Items.Add(12, 'SH', 'Shampoo');
    oTable.Items.Add(13, 'SO', 'Soak');
    oTable.Items.Add(14, 'WA', 'Wash');
    oTable.Items.Add(15, 'WI', 'Wipe');
End;

procedure LoadTable166(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(166, 'RX Component Type');
    oTable.Items.Add(2, 'A', 'Additive');
    oTable.Items.Add(1, 'B', 'Base');
End;

procedure LoadTable167(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(167, 'Substitution Status');
    oTable.Items.Add(4, '0', 'No product selection indicated');
    oTable.Items.Add(5, '1', 'Substitution not allowed by prescriber');
    oTable.Items.Add(6, '2', 'Substitution allowed - patient requested product dispensed');
    oTable.Items.Add(7, '3', 'Substitution allowed - pharmacist selected product dispensed');
    oTable.Items.Add(8, '4', 'Substitution allowed - generic drug not in stock');
    oTable.Items.Add(9, '5', 'Substitution allowed - brand drug dispensed as a generic');
    oTable.Items.Add(10, '7', 'Substitution not allowed - brand drug mandated by law');
    oTable.Items.Add(11, '8', 'Substitution allowed - generic drug not available in marketplace');
    oTable.Items.Add(2, 'G', 'A generic substitution was dispensed.');
    oTable.Items.Add(1, 'N', 'No substitute was dispensed.  This is equivalent to the default (null) value.');
    oTable.Items.Add(3, 'T', 'A therapeutic substitution was dispensed.');
End;

procedure LoadTable168(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(168, 'Processing priority');
    oTable.Items.Add(2, 'A', 'As soon as possible (a priority lower than stat)');
    oTable.Items.Add(7, 'B', 'Do at bedside or portable (may be used with other codes)');
    oTable.Items.Add(6, 'C', 'Measure continuously (e.g., arterial line blood pressure)');
    oTable.Items.Add(4, 'P', 'Preoperative (to be done prior to surgery)');
    oTable.Items.Add(3, 'R', 'Routine');
    oTable.Items.Add(1, 'S', 'Stat (do immediately)');
    oTable.Items.Add(5, 'T', 'Timing critical (do as near as possible to requested time)');
End;

procedure LoadTable169(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(169, 'Reporting priority');
    oTable.Items.Add(1, 'C', 'Call back results');
    oTable.Items.Add(2, 'R', 'Rush reporting');
End;

procedure LoadTable170(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(170, 'Derived specimen');
    oTable.Items.Add(2, 'C', 'Child Observation');
    oTable.Items.Add(3, 'N', 'Not Applicable');
    oTable.Items.Add(1, 'P', 'Parent Observation');
End;

procedure LoadTable171(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(171, 'Citizenship');
    oTable.Items.Add(1, '...', 'no suggested values');
End;

procedure LoadTable172(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(172, 'Veterans Military Status');
    oTable.Items.Add(1, '...', 'no suggested values');
End;

procedure LoadTable173(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(173, 'Coordination of Benefits');
    oTable.Items.Add(1, 'CO', 'Coordination');
    oTable.Items.Add(2, 'IN', 'Independent');
End;

procedure LoadTable174(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(174, 'Nature of Service/Test/Observation');
    oTable.Items.Add(3, 'A', 'Atomic service/test/observation (test code or treatment code)');
    oTable.Items.Add(5, 'C', 'Single observation calculated via a rule or formula from other independent observations (e.g., Alveolar-arterial ratio, cardiac output)');
    oTable.Items.Add(2, 'F', 'Functional procedure that may consist of one or more interrelated measures (e.g., glucose tolerance test, creatinine clearance), usually done at different times and/or on different specimens');
    oTable.Items.Add(1, 'P', 'Profile or battery consisting of many independent atomic observations (e.g., SMA12, electrolytes), usually done at one instrument on one specimen');
    oTable.Items.Add(4, 'S', 'Superset-a set of batteries or procedures ordered under a single code unit but processed as separate batteries (e.g., routines = CBC, UA, electrolytes)<p>This set indicates that the code being described is used to order multiple service/test/observation b');
End;

procedure LoadTable175(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(175, 'Master file identifier code');
    oTable.Items.Add(1, 'CDM', 'Charge description master file');
    oTable.Items.Add(11, 'CLN', 'Clinic master file');
    oTable.Items.Add(2, 'CMA', 'Clinical study with phases and scheduled master file');
    oTable.Items.Add(3, 'CMB', 'Clinical study without phases but with scheduled master file');
    oTable.Items.Add(13, 'INV', 'Inventory master file');
    oTable.Items.Add(4, 'LOC', 'Location master file');
    oTable.Items.Add(5, 'OMA', 'Numerical observation master file');
    oTable.Items.Add(6, 'OMB', 'Categorical observation master file');
    oTable.Items.Add(7, 'OMC', 'Observation batteries master file');
    oTable.Items.Add(8, 'OMD', 'Calculated observations master file');
    oTable.Items.Add(12, 'OME', 'Other Observation/Service Item master file');
    oTable.Items.Add(9, 'PRA', 'Practitioner master file');
    oTable.Items.Add(10, 'STF', 'Staff master file');
End;

procedure LoadTable177(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(177, 'Confidentiality code');
    oTable.Items.Add(8, 'AID', 'AIDS patient');
    oTable.Items.Add(4, 'EMP', 'Employee');
    oTable.Items.Add(10, 'ETH', 'Alcohol/drug treatment patient');
    oTable.Items.Add(9, 'HIV', 'HIV(+) patient');
    oTable.Items.Add(7, 'PSY', 'Psychiatric patient');
    oTable.Items.Add(2, 'R', 'Restricted');
    oTable.Items.Add(3, 'U', 'Usual control');
    oTable.Items.Add(5, 'UWM', 'Unwed mother');
    oTable.Items.Add(1, 'V', 'Very restricted');
    oTable.Items.Add(6, 'VIP', 'Very important person or celebrity');
End;

procedure LoadTable178(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(178, 'File level event code');
    oTable.Items.Add(1, 'REP', 'Replace current version of this master file with the version contained in this message');
    oTable.Items.Add(2, 'UPD', 'Change file records as defined in the record-level event codes for each record that follows');
End;

procedure LoadTable179(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(179, 'Response level');
    oTable.Items.Add(3, 'AL', 'Always.  All MFA segments (whether denoting errors or not) must be returned via the application-level acknowledgment message');
    oTable.Items.Add(2, 'ER', 'Error/Reject conditions only.  Only MFA segments denoting errors must be returned via the application-level acknowledgment for this message');
    oTable.Items.Add(1, 'NE', 'Never.  No application-level response needed');
    oTable.Items.Add(4, 'SU', 'Success.  Only MFA segments denoting success must be returned via the application-level acknowledgment for this message');
End;

procedure LoadTable180(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(180, 'Record-level event code');
    oTable.Items.Add(5, 'MAC', 'Reactivate deactivated record');
    oTable.Items.Add(1, 'MAD', 'Add record to master file');
    oTable.Items.Add(4, 'MDC', 'Deactivate: discontinue using record in master file, but do not delete from database');
    oTable.Items.Add(2, 'MDL', 'Delete record from master file');
    oTable.Items.Add(3, 'MUP', 'Update record for master file');
End;

procedure LoadTable181(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(181, 'MFN record-level error return');
    oTable.Items.Add(1, 'S', 'Successful posting of the record defined by the MFE segment');
    oTable.Items.Add(2, 'U', 'Unsuccessful posting of the record defined by the MFE segment');
End;

procedure LoadTable182(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(182, 'Staff type');
    oTable.Items.Add(1, '...', 'No suggested values defined');
End;

procedure LoadTable183(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(183, 'Active/Inactive');
    oTable.Items.Add(1, 'A', 'Active Staff');
    oTable.Items.Add(2, 'I', 'Inactive Staff');
End;

procedure LoadTable184(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(184, 'Department');
    oTable.Items.Add(1, '...', 'No suggested values defined');
End;

procedure LoadTable185(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(185, 'Preferred method of contact');
    oTable.Items.Add(1, 'B', 'Beeper Number');
    oTable.Items.Add(2, 'C', 'Cellular Phone Number');
    oTable.Items.Add(3, 'E', 'E-Mail Address (for backward compatibility)');
    oTable.Items.Add(4, 'F', 'FAX Number');
    oTable.Items.Add(5, 'H', 'Home Phone Number');
    oTable.Items.Add(6, 'O', 'Office Phone Number');
End;

procedure LoadTable186(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(186, 'Practitioner category');
    oTable.Items.Add(1, '...', 'No suggested values defined');
End;

procedure LoadTable187(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(187, 'Provider billing');
    oTable.Items.Add(1, 'I', 'Institution bills for provider');
    oTable.Items.Add(2, 'P', 'Provider does own billing');
End;

procedure LoadTable188(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(188, 'Operator ID');
    oTable.Items.Add(1, '...', 'no suggested values');
End;

procedure LoadTable189(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(189, 'Ethnic Group');
    oTable.Items.Add(1, '...', 'see chapter 3');
    oTable.Items.Add(1, 'H', 'Hispanic or Latino');
    oTable.Items.Add(2, 'N', 'Not Hispanic or Latino');
    oTable.Items.Add(3, 'U', 'Unknown');
End;

procedure LoadTable190(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(190, 'Address type');
    oTable.Items.Add(7, 'B', 'Firm/Business');
    oTable.Items.Add(1, 'BA', 'Bad address');
    oTable.Items.Add(4, 'BDL', 'Birth delivery location  (address where birth occurred)');
    oTable.Items.Add(2, 'BI', 'Billing Address');
    oTable.Items.Add(14, 'BR', 'Residence at birth (home address at time of birth)');
    oTable.Items.Add(6, 'C', 'Current Or Temporary');
    oTable.Items.Add(5, 'F', 'Country Of Origin');
    oTable.Items.Add(8, 'H', 'Home');
    oTable.Items.Add(9, 'L', 'Legal Address');
    oTable.Items.Add(10, 'M', 'Mailing');
    oTable.Items.Add(3, 'N', 'Birth (nee)  (birth address, not otherwise specified)');
    oTable.Items.Add(11, 'O', 'Office/Business');
    oTable.Items.Add(12, 'P', 'Permanent');
    oTable.Items.Add(13, 'RH', 'Registry home. Refers to the information system, typically managed by a public health agency, that stores patient information such as immunization histories or cancer data, regardless of where the patient obtains services.');
    oTable.Items.Add(15, 'S', 'Service Location');
    oTable.Items.Add(16, 'SH', 'Shipping Address');
    oTable.Items.Add(17, 'V', 'Vacation');
End;

procedure LoadTable191(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(191, 'Type of referenced data');
    oTable.Items.Add(1, 'AP', 'Other application data, typically uninterpreted binary data (HL7 V2.3 and later)');
    oTable.Items.Add(2, 'AU', 'Audio data (HL7 V2.3 and later)');
    oTable.Items.Add(3, 'FT', 'Formatted text (HL7 V2.2 only)');
    oTable.Items.Add(4, 'IM', 'Image data (HL7 V2.3 and later)');
    oTable.Items.Add(5, 'multipart', 'MIME multipart package');
    oTable.Items.Add(6, 'NS', 'Non-scanned image (HL7 V2.2 only)');
    oTable.Items.Add(7, 'SD', 'Scanned document (HL7 V2.2 only)');
    oTable.Items.Add(8, 'SI', 'Scanned image (HL7 V2.2 only)');
    oTable.Items.Add(9, 'TEXT', 'Machine readable text document (HL7 V2.3.1 and later)');
    oTable.Items.Add(10, 'TX', 'Machine readable text document (HL7 V2.2 only)');
End;

procedure LoadTable193(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(193, 'Amount class');
    oTable.Items.Add(1, 'AT', 'Amount');
    oTable.Items.Add(2, 'LM', 'Limit');
    oTable.Items.Add(3, 'PC', 'Percentage');
    oTable.Items.Add(4, 'UL', 'Unlimited');
End;

procedure LoadTable200(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(200, 'Name type');
    oTable.Items.Add(1, 'A', 'Alias Name');
    oTable.Items.Add(2, 'B', 'Name at Birth');
    oTable.Items.Add(3, 'C', 'Adopted Name');
    oTable.Items.Add(4, 'D', 'Display Name');
    oTable.Items.Add(5, 'I', 'Licensing Name');
    oTable.Items.Add(6, 'K', 'Artist Name');
    oTable.Items.Add(7, 'L', 'Legal Name');
    oTable.Items.Add(8, 'M', 'Maiden Name');
    oTable.Items.Add(9, 'N', 'Nickname /"Call me" Name/Street Name');
    oTable.Items.Add(10, 'P', 'Name of Partner/Spouse (retained for backward compatibility only)');
    oTable.Items.Add(11, 'R', 'Registered Name (animals only)');
    oTable.Items.Add(12, 'S', 'Coded Pseudo-Name to ensure anonymity');
    oTable.Items.Add(13, 'T', 'Indigenous/Tribal/Community Name');
    oTable.Items.Add(14, 'U', 'Unspecified');
End;

procedure LoadTable201(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(201, 'Telecommunication use code');
    oTable.Items.Add(5, 'ASN', 'Answering Service Number');
    oTable.Items.Add(8, 'BPN', 'Beeper Number');
    oTable.Items.Add(6, 'EMR', 'Emergency Number');
    oTable.Items.Add(7, 'NET', 'Network (email) Address');
    oTable.Items.Add(2, 'ORN', 'Other Residence Number');
    oTable.Items.Add(1, 'PRN', 'Primary Residence Number');
    oTable.Items.Add(9, 'PRS', 'Personal');
    oTable.Items.Add(4, 'VHN', 'Vacation Home Number');
    oTable.Items.Add(3, 'WPN', 'Work Number');
End;

procedure LoadTable202(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(202, 'Telecommunication equipment type');
    oTable.Items.Add(6, 'BP', 'Beeper');
    oTable.Items.Add(4, 'CP', 'Cellular or Mobile Phone');
    oTable.Items.Add(2, 'FX', 'Fax');
    oTable.Items.Add(7, 'Internet', 'Internet Address');
    oTable.Items.Add(3, 'MD', 'Modem');
    oTable.Items.Add(1, 'PH', 'Telephone');
    oTable.Items.Add(5, 'SAT', 'Satellite Phone');
    oTable.Items.Add(9, 'TDD', 'Telecommunications Device for the Deaf');
    oTable.Items.Add(10, 'TTY', 'Teletypewriter');
    oTable.Items.Add(8, 'X.400', 'X.400 email address');
End;

procedure LoadTable203(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(203, 'Identifier type');
    oTable.Items.Add(1, 'AM', 'American Express');
    oTable.Items.Add(2, 'AMA', 'American Medical Association Number');
    oTable.Items.Add(3, 'AN', 'Account number');
    oTable.Items.Add(5, 'ANC', 'Account number Creditor');
    oTable.Items.Add(6, 'AND', 'Account number debitor');
    oTable.Items.Add(4, 'ANON', 'Anonymous identifier');
    oTable.Items.Add(7, 'ANT', 'Temporary Account Number');
    oTable.Items.Add(8, 'APRN', 'Advanced Practice Registered Nurse number');
    oTable.Items.Add(9, 'BA', 'Bank Account Number');
    oTable.Items.Add(10, 'BC', 'Bank Card Number');
    oTable.Items.Add(11, 'BCT', 'Birth Certificate');
    oTable.Items.Add(12, 'BR', 'Birth registry number');
    oTable.Items.Add(13, 'BRN', 'Breed Registry Number');
    oTable.Items.Add(14, 'CC', 'Cost Center number');
    oTable.Items.Add(15, 'CONM', 'Change of Name Document');
    oTable.Items.Add(17, 'CY', 'County number');
    oTable.Items.Add(16, 'CZ', 'Citizenship Card');
    oTable.Items.Add(18, 'DDS', 'Dentist license number');
    oTable.Items.Add(19, 'DEA', 'Drug Enforcement Administration registration number');
    oTable.Items.Add(21, 'DFN', 'Drug Furnishing or prescriptive authority Number');
    oTable.Items.Add(20, 'DI', 'Diner''s Club card');
    oTable.Items.Add(22, 'DL', 'Driver''s license number');
    oTable.Items.Add(23, 'DN', 'Doctor number');
    oTable.Items.Add(24, 'DO', 'Osteopathic License number');
    oTable.Items.Add(25, 'DP', 'Diplomatic Passport');
    oTable.Items.Add(26, 'DPM', 'Podiatrist license number');
    oTable.Items.Add(27, 'DR', 'Donor Registration Number');
    oTable.Items.Add(28, 'DS', 'Discover Card');
    oTable.Items.Add(29, 'EI', 'Employee number');
    oTable.Items.Add(30, 'EN', 'Employer number');
    oTable.Items.Add(31, 'ESN', 'Staff Enterprise Number');
    oTable.Items.Add(32, 'FI', 'Facility ID');
    oTable.Items.Add(33, 'GI', 'Guarantor internal identifier');
    oTable.Items.Add(34, 'GL', 'General ledger number');
    oTable.Items.Add(35, 'GN', 'Guarantor external  identifier');
    oTable.Items.Add(36, 'HC', 'Health Card Number');
    oTable.Items.Add(38, 'IND', 'Indigenous/Aboriginal');
    oTable.Items.Add(37, 'JHN', 'Jurisdictional health number (Canada)');
    oTable.Items.Add(39, 'LI', 'Labor and industries number');
    oTable.Items.Add(40, 'LN', 'License number');
    oTable.Items.Add(41, 'LR', 'Local Registry ID');
    oTable.Items.Add(42, 'MA', 'Patient Medicaid number');
    oTable.Items.Add(43, 'MB', 'Member Number');
    oTable.Items.Add(44, 'MC', 'Patient''s Medicare number');
    oTable.Items.Add(45, 'MCD', 'Practitioner Medicaid number');
    oTable.Items.Add(46, 'MCN', 'Microchip Number');
    oTable.Items.Add(47, 'MCR', 'Practitioner Medicare number');
    oTable.Items.Add(48, 'MCT', 'Marriage Certificate');
    oTable.Items.Add(49, 'MD', 'Medical License number');
    oTable.Items.Add(50, 'MI', 'Military ID number');
    oTable.Items.Add(51, 'MR', 'Medical record number');
    oTable.Items.Add(52, 'MRT', 'Temporary Medical Record Number');
    oTable.Items.Add(53, 'MS', 'MasterCard');
    oTable.Items.Add(54, 'NCT', 'Naturalization Certificate');
    oTable.Items.Add(55, 'NE', 'National employer identifier');
    oTable.Items.Add(56, 'NH', 'National Health Plan Identifier');
    oTable.Items.Add(57, 'NI', 'National unique individual identifier');
    oTable.Items.Add(58, 'NII', 'National Insurance Organization Identifier');
    oTable.Items.Add(59, 'NIIP', 'National Insurance Payor Identifier (Payor)');
    oTable.Items.Add(60, 'NNxxx', 'National Person Identifier where the xxx is the ISO table 3166 3-character (alphabetic) country code');
    oTable.Items.Add(61, 'NP', 'Nurse practitioner number');
    oTable.Items.Add(62, 'NPI', 'National provider identifier');
    oTable.Items.Add(63, 'OD', 'Optometrist license number');
    oTable.Items.Add(64, 'PA', 'Physician Assistant number');
    oTable.Items.Add(65, 'PC', 'Parole Card');
    oTable.Items.Add(66, 'PCN', 'Penitentiary/correctional institution Number');
    oTable.Items.Add(67, 'PE', 'Living Subject Enterprise Number');
    oTable.Items.Add(68, 'PEN', 'Pension Number');
    oTable.Items.Add(69, 'PI', 'Patient internal identifier');
    oTable.Items.Add(70, 'PN', 'Person number');
    oTable.Items.Add(71, 'PNT', 'Temporary Living Subject Number');
    oTable.Items.Add(72, 'PPIN', 'Medicare/CMS Performing Provider Identification Number');
    oTable.Items.Add(74, 'PPN', 'Passport number');
    oTable.Items.Add(75, 'PRC', 'Permanent Resident Card Number');
    oTable.Items.Add(76, 'PRN', 'Provider number');
    oTable.Items.Add(77, 'PT', 'Patient external identifier');
    oTable.Items.Add(78, 'QA', 'QA number');
    oTable.Items.Add(79, 'RI', 'Resource identifier');
    oTable.Items.Add(81, 'RN', 'Registered Nurse Number');
    oTable.Items.Add(80, 'RPH', 'Pharmacist license number');
    oTable.Items.Add(82, 'RR', 'Railroad Retirement number');
    oTable.Items.Add(83, 'RRI', 'Regional registry ID');
    oTable.Items.Add(84, 'RRP', 'Railroad Retirement Provider');
    oTable.Items.Add(86, 'SL', 'State license');
    oTable.Items.Add(87, 'SN', 'Subscriber Number');
    oTable.Items.Add(88, 'SP', 'Study Permit');
    oTable.Items.Add(89, 'SR', 'State registry ID');
    oTable.Items.Add(90, 'SS', 'Social Security number');
    oTable.Items.Add(91, 'TAX', 'Tax ID number');
    oTable.Items.Add(92, 'TN', 'Treaty Number/ (Canada)');
    oTable.Items.Add(93, 'TPR', 'Temporary Permanent Resident (Canada)');
    oTable.Items.Add(94, 'U', 'Unspecified identifier');
    oTable.Items.Add(95, 'UPIN', 'Medicare/CMS (formerly HCFA)''s Universal Physician Identification numbers');
    oTable.Items.Add(96, 'VN', 'Visit number');
    oTable.Items.Add(97, 'VP', 'Visitor Permit');
    oTable.Items.Add(98, 'VS', 'VISA');
    oTable.Items.Add(99, 'WC', 'WIC identifier');
    oTable.Items.Add(100, 'WCN', 'Workers'' Comp Number');
    oTable.Items.Add(101, 'WP', 'Work Permit');
    oTable.Items.Add(102, 'XX', 'Organization identifier');
End;

procedure LoadTable204(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(204, 'Organizational name type');
    oTable.Items.Add(1, 'A', 'Alias name');
    oTable.Items.Add(3, 'D', 'Display name');
    oTable.Items.Add(2, 'L', 'Legal name');
    oTable.Items.Add(4, 'SL', 'Stock exchange listing name');
End;

procedure LoadTable205(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(205, 'Price type');
    oTable.Items.Add(1, 'AP', 'administrative price or handling fee');
    oTable.Items.Add(2, 'DC', 'direct unit cost');
    oTable.Items.Add(3, 'IC', 'indirect unit cost');
    oTable.Items.Add(4, 'PF', 'professional fee for performing provider');
    oTable.Items.Add(5, 'TF', 'technology fee for use of equipment');
    oTable.Items.Add(6, 'TP', 'total price');
    oTable.Items.Add(7, 'UP', 'unit price, may be based on length of procedure or service');
End;

procedure LoadTable206(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(206, 'Segment action code');
    oTable.Items.Add(1, 'A', 'Add/Insert');
    oTable.Items.Add(2, 'D', 'Delete');
    oTable.Items.Add(3, 'U', 'Update');
    oTable.Items.Add(4, 'X', 'No Change');
End;

procedure LoadTable207(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(207, 'Processing mode');
    oTable.Items.Add(1, 'A', 'Archive');
    oTable.Items.Add(3, 'I', 'Initial load');
    oTable.Items.Add(5, 'Not present', 'Not present (the default, meaning current  processing)');
    oTable.Items.Add(2, 'R', 'Restore from archive');
    oTable.Items.Add(4, 'T', 'Current processing, transmitted at intervals (scheduled or on demand)');
End;

procedure LoadTable208(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(208, 'Query Response Status');
    oTable.Items.Add(3, 'AE', 'Application error');
    oTable.Items.Add(4, 'AR', 'Application reject');
    oTable.Items.Add(2, 'NF', 'No data found, no errors');
    oTable.Items.Add(1, 'OK', 'Data found, no errors (this is the default)');
End;

procedure LoadTable209(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(209, 'Relational operator');
    oTable.Items.Add(7, 'CT', 'Contains');
    oTable.Items.Add(1, 'EQ', 'Equal');
    oTable.Items.Add(6, 'GE', 'Greater than or equal');
    oTable.Items.Add(8, 'GN', 'Generic');
    oTable.Items.Add(4, 'GT', 'Greater than');
    oTable.Items.Add(5, 'LE', 'Less than or equal');
    oTable.Items.Add(3, 'LT', 'Less than');
    oTable.Items.Add(2, 'NE', 'Not Equal');
End;

procedure LoadTable210(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(210, 'Relational conjunction');
    oTable.Items.Add(1, 'AND', 'Default');
    oTable.Items.Add(2, 'OR', '');
End;

procedure LoadTable211(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(211, 'Alternate character sets');
    oTable.Items.Add(2, '8859/1', 'The printable characters from the ISO 8859/1 Character set');
    oTable.Items.Add(11, '8859/15', 'The printable characters from the ISO 8859/15 (Latin-15)');
    oTable.Items.Add(3, '8859/2', 'The printable characters from the ISO 8859/2 Character set');
    oTable.Items.Add(4, '8859/3', 'The printable characters from the ISO 8859/3 Character set');
    oTable.Items.Add(5, '8859/4', 'The printable characters from the ISO 8859/4 Character set');
    oTable.Items.Add(6, '8859/5', 'The printable characters from the ISO 8859/5 Character set');
    oTable.Items.Add(7, '8859/6', 'The printable characters from the ISO 8859/6 Character set');
    oTable.Items.Add(8, '8859/7', 'The printable characters from the ISO 8859/7 Character set');
    oTable.Items.Add(9, '8859/8', 'The printable characters from the ISO 8859/8 Character set');
    oTable.Items.Add(10, '8859/9', 'The printable characters from the ISO 8859/9 Character set');
    oTable.Items.Add(1, 'ASCII', 'The printable 7-bit ASCII character set.');
    oTable.Items.Add(18, 'BIG-5', 'Code for Taiwanese Character Set (BIG-5)');
    oTable.Items.Add(17, 'CNS 11643-1992', 'Code for Taiwanese Character Set (CNS 11643-1992)');
    oTable.Items.Add(15, 'GB 18030-2000', 'Code for Chinese Character Set (GB 18030-2000)');
    oTable.Items.Add(12, 'ISO IR14', 'Code for Information Exchange (one byte)(JIS X 0201-1976).');
    oTable.Items.Add(14, 'ISO IR159', 'Code of the supplementary Japanese Graphic Character set for information interchange (JIS X 0212-1990).');
    oTable.Items.Add(13, 'ISO IR87', 'Code for the Japanese Graphic Character set for information interchange (JIS X 0208-1990),');
    oTable.Items.Add(16, 'KS X 1001', 'Code for Korean Character Set (KS X 1001)');
    oTable.Items.Add(19, 'UNICODE', 'The world wide character standard from ISO/IEC 10646-1-1993');
    oTable.Items.Add(21, 'UNICODE UTF-16', 'UCS Transformation Format, 16-bit form');
    oTable.Items.Add(22, 'UNICODE UTF-32', 'UCS Transformation Format, 32-bit form');
    oTable.Items.Add(20, 'UNICODE UTF-8', 'UCS Transformation Format, 8-bit form');
End;

procedure LoadTable212(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(212, 'Nationality');
    oTable.Items.Add(1, '...', 'No suggested values defined');
End;

procedure LoadTable213(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(213, 'Purge Status Code');
    oTable.Items.Add(2, 'D', 'The visit is marked for deletion and the user cannot enter new data against it.');
    oTable.Items.Add(3, 'I', 'The visit is marked inactive and the user cannot enter new data against it.');
    oTable.Items.Add(1, 'P', 'Marked for purge.  User is no longer able to update the visit.');
End;

procedure LoadTable214(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(214, 'Special Program Code');
    oTable.Items.Add(1, 'CH', 'Child Health Assistance');
    oTable.Items.Add(2, 'ES', 'Elective Surgery Program');
    oTable.Items.Add(3, 'FP', 'Family Planning');
    oTable.Items.Add(4, 'O', 'Other');
    oTable.Items.Add(5, 'U', 'Unknown');
End;

procedure LoadTable215(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(215, 'Publicity Code');
    oTable.Items.Add(1, 'F', 'Family only');
    oTable.Items.Add(2, 'N', 'No Publicity');
    oTable.Items.Add(3, 'O', 'Other');
    oTable.Items.Add(4, 'U', 'Unknown');
End;

procedure LoadTable216(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(216, 'Patient Status Code');
    oTable.Items.Add(1, 'AI', 'Active Inpatient');
    oTable.Items.Add(2, 'DI', 'Discharged Inpatient');
End;

procedure LoadTable217(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(217, 'Visit Priority Code');
    oTable.Items.Add(1, '1', 'Emergency');
    oTable.Items.Add(2, '2', 'Urgent');
    oTable.Items.Add(3, '3', 'Elective');
End;

procedure LoadTable218(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(218, 'Patient Charge Adjustment');
    oTable.Items.Add(1, '...', 'No suggested values defined');
End;

procedure LoadTable219(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(219, 'Recurring Service Code');
    oTable.Items.Add(1, '...', 'no suggested values');
End;

procedure LoadTable220(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(220, 'Living Arrangement');
    oTable.Items.Add(1, 'A', 'Alone');
    oTable.Items.Add(2, 'F', 'Family');
    oTable.Items.Add(3, 'I', 'Institution');
    oTable.Items.Add(4, 'R', 'Relative');
    oTable.Items.Add(6, 'S', 'Spouse Only');
    oTable.Items.Add(5, 'U', 'Unknown');
End;

procedure LoadTable222(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(222, 'Contact Reason');
    oTable.Items.Add(1, '...', 'No suggested values defined');
End;

procedure LoadTable223(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(223, 'Living Dependency');
    oTable.Items.Add(3, 'C', 'Small Children Dependent');
    oTable.Items.Add(2, 'M', 'Medical Supervision Required');
    oTable.Items.Add(4, 'O', 'Other');
    oTable.Items.Add(1, 'S', 'Spouse Dependent');
    oTable.Items.Add(5, 'U', 'Unknown');
End;

procedure LoadTable224(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(224, 'Transport Arranged');
    oTable.Items.Add(1, 'A', 'Arranged');
    oTable.Items.Add(2, 'N', 'Not Arranged');
    oTable.Items.Add(3, 'U', 'Unknown');
End;

procedure LoadTable225(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(225, 'Escort Required');
    oTable.Items.Add(2, 'N', 'Not Required');
    oTable.Items.Add(1, 'R', 'Required');
    oTable.Items.Add(3, 'U', 'Unknown');
End;

procedure LoadTable227(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(227, 'Manufacturers of Vaccines (code=MVX)');
    oTable.Items.Add(1, 'AB', 'Abbott Laboratories');
    oTable.Items.Add(2, 'AD', 'Adams Laboratories, Inc.');
    oTable.Items.Add(3, 'ALP', 'Alpha Therapeutic Corporation');
    oTable.Items.Add(4, 'AR', 'Armour');
    oTable.Items.Add(5, 'AVB', 'Aventis Behring L.L.C.');
    oTable.Items.Add(6, 'AVI', 'Aviron');
    oTable.Items.Add(7, 'BA', 'Baxter Healthcare Corporation');
    oTable.Items.Add(8, 'BAH', 'Baxter Healthcare Corporation');
    oTable.Items.Add(9, 'BAY', 'Bayer Corporation');
    oTable.Items.Add(10, 'BP', 'Berna Products');
    oTable.Items.Add(11, 'BPC', 'Berna Products Corporation');
    oTable.Items.Add(15, 'CEN', 'Centeon L.L.C.');
    oTable.Items.Add(16, 'CHI', 'Chiron Corporation');
    oTable.Items.Add(14, 'CMP', 'Celltech Medeva Pharmaceuticals');
    oTable.Items.Add(13, 'CNJ', 'Cangene Corporation');
    oTable.Items.Add(17, 'CON', 'Connaught');
    oTable.Items.Add(18, 'DVC', 'DynPort Vaccine Company, LLC');
    oTable.Items.Add(19, 'EVN', 'Evans Medical Limited');
    oTable.Items.Add(20, 'GEO', 'GeoVax Labs, Inc.');
    oTable.Items.Add(22, 'GRE', 'Greer Laboratories, Inc.');
    oTable.Items.Add(23, 'IAG', 'Immuno International AG');
    oTable.Items.Add(31, 'IM', 'Merieux');
    oTable.Items.Add(24, 'IUS', 'Immuno-U.S., Inc.');
    oTable.Items.Add(44, 'JPN', 'The Research Foundation for Microbial Diseases of Osaka University');
    oTable.Items.Add(25, 'KGC', 'Korea Green Cross Corporation');
    oTable.Items.Add(26, 'LED', 'Lederle');
    oTable.Items.Add(28, 'MA', 'Massachusetts Public Health Biologic Laboratories');
    oTable.Items.Add(27, 'MBL', 'Massachusetts Biologic Laboratories');
    oTable.Items.Add(29, 'MED', 'MedImmune, Inc.');
    oTable.Items.Add(32, 'MIL', 'Miles');
    oTable.Items.Add(12, 'MIP', 'Bioport Corporation');
    oTable.Items.Add(30, 'MSD', 'Merck & Co., Inc.');
    oTable.Items.Add(33, 'NAB', 'NABI');
    oTable.Items.Add(35, 'NAV', 'North American Vaccine, Inc.');
    oTable.Items.Add(36, 'NOV', 'Novartis Pharmaceutical Corporation');
    oTable.Items.Add(37, 'NVX', 'Novavax, Inc.');
    oTable.Items.Add(34, 'NYB', 'New York Blood Center');
    oTable.Items.Add(39, 'ORT', 'Ortho-Clinical Diagnostics');
    oTable.Items.Add(38, 'OTC', 'Organon Teknika Corporation');
    oTable.Items.Add(54, 'OTH', 'Other manufacturer');
    oTable.Items.Add(40, 'PD', 'Parkedale Pharmaceuticals');
    oTable.Items.Add(43, 'PMC', 'sanofi pasteur');
    oTable.Items.Add(42, 'PRX', 'Praxis Biologics');
    oTable.Items.Add(41, 'PWJ', 'PowderJect Pharmaceuticals');
    oTable.Items.Add(45, 'SCL', 'Sclavo, Inc.');
    oTable.Items.Add(47, 'SI', 'Swiss Serum and Vaccine Inst.');
    oTable.Items.Add(21, 'SKB', 'GlaxoSmithKline');
    oTable.Items.Add(46, 'SOL', 'Solvay Pharmaceuticals');
    oTable.Items.Add(48, 'TAL', 'Talecris Biotherapeutics');
    oTable.Items.Add(55, 'UNK', 'Unknown manufacturer');
    oTable.Items.Add(49, 'USA', 'United States Army Medical Research and Material Command');
    oTable.Items.Add(50, 'VXG', 'VaxGen');
    oTable.Items.Add(51, 'WA', 'Wyeth-Ayerst');
    oTable.Items.Add(52, 'WAL', 'Wyeth-Ayerst');
    oTable.Items.Add(53, 'ZLB', 'ZLB Behring');
End;

procedure LoadTable228(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(228, 'Diagnosis Classification');
    oTable.Items.Add(1, 'C', 'Consultation');
    oTable.Items.Add(2, 'D', 'Diagnosis');
    oTable.Items.Add(8, 'I', 'Invasive procedure not classified elsewhere (I.V., catheter, etc.)');
    oTable.Items.Add(3, 'M', 'Medication (antibiotic)');
    oTable.Items.Add(4, 'O', 'Other');
    oTable.Items.Add(5, 'R', 'Radiological scheduling (not using ICDA codes)');
    oTable.Items.Add(6, 'S', 'Sign and symptom');
    oTable.Items.Add(7, 'T', 'Tissue diagnosis');
End;

procedure LoadTable229(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(229, 'DRG Payor');
    oTable.Items.Add(2, 'C', 'Champus');
    oTable.Items.Add(3, 'G', 'Managed Care Organization');
    oTable.Items.Add(1, 'M', 'Medicare');
End;

procedure LoadTable230(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(230, 'Procedure Functional Type');
    oTable.Items.Add(1, 'A', 'Anesthesia');
    oTable.Items.Add(4, 'D', 'Diagnostic procedure');
    oTable.Items.Add(3, 'I', 'Invasive procedure not classified elsewhere (e.g., IV, catheter, etc.)');
    oTable.Items.Add(2, 'P', 'Procedure for treatment (therapeutic, including operations)');
End;

procedure LoadTable231(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(231, 'Student Status');
    oTable.Items.Add(1, 'F', 'Full-time student');
    oTable.Items.Add(3, 'N', 'Not a student');
    oTable.Items.Add(2, 'P', 'Part-time student');
End;

procedure LoadTable232(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(232, 'Insurance Company Contact Reason');
    oTable.Items.Add(1, '01', 'Medicare claim status');
    oTable.Items.Add(2, '02', 'Medicaid claim status');
    oTable.Items.Add(3, '03', 'Name/address change');
End;

procedure LoadTable233(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(233, 'Non-Concur Code/Description');
    oTable.Items.Add(1, '...', 'No suggested values defined');
End;

procedure LoadTable234(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(234, 'Report timing');
    oTable.Items.Add(8, '10D', '10 day report');
    oTable.Items.Add(9, '15D', '15 day report');
    oTable.Items.Add(10, '30D', '30 day report');
    oTable.Items.Add(6, '3D', '3 day report');
    oTable.Items.Add(7, '7D', '7 day report');
    oTable.Items.Add(2, 'AD', 'Additional information');
    oTable.Items.Add(1, 'CO', 'Correction');
    oTable.Items.Add(4, 'DE', 'Device evaluation');
    oTable.Items.Add(5, 'PD', 'Periodic');
    oTable.Items.Add(3, 'RQ', 'Requested information');
End;

procedure LoadTable235(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(235, 'Report source');
    oTable.Items.Add(1, 'C', 'Clinical trial');
    oTable.Items.Add(5, 'D', 'Database/registry/poison control center');
    oTable.Items.Add(9, 'E', 'Distributor');
    oTable.Items.Add(3, 'H', 'Health professional');
    oTable.Items.Add(2, 'L', 'Literature');
    oTable.Items.Add(8, 'M', 'Manufacturer/marketing authority holder');
    oTable.Items.Add(6, 'N', 'Non-healthcare professional');
    oTable.Items.Add(10, 'O', 'Other');
    oTable.Items.Add(7, 'P', 'Patient');
    oTable.Items.Add(4, 'R', 'Regulatory agency');
End;

procedure LoadTable236(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(236, 'Event Reported To');
    oTable.Items.Add(4, 'D', 'Distributor');
    oTable.Items.Add(2, 'L', 'Local facility/user facility');
    oTable.Items.Add(1, 'M', 'Manufacturer');
    oTable.Items.Add(3, 'R', 'Regulatory agency');
End;

procedure LoadTable237(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(237, 'Event Qualification');
    oTable.Items.Add(3, 'A', 'Abuse');
    oTable.Items.Add(8, 'B', 'Unexpected beneficial effect');
    oTable.Items.Add(5, 'D', 'Dependency');
    oTable.Items.Add(1, 'I', 'Interaction');
    oTable.Items.Add(6, 'L', 'Lack of expect therapeutic effect');
    oTable.Items.Add(4, 'M', 'Misuse');
    oTable.Items.Add(2, 'O', 'Overdose');
    oTable.Items.Add(7, 'W', 'Drug withdrawal');
End;

procedure LoadTable238(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(238, 'Event Seriousness');
    oTable.Items.Add(3, 'N', 'No');
    oTable.Items.Add(2, 'S', 'Significant');
    oTable.Items.Add(1, 'Y', 'Yes');
End;

procedure LoadTable239(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(239, 'Event Expected');
    oTable.Items.Add(2, 'N', 'No');
    oTable.Items.Add(3, 'U', 'Unknown');
    oTable.Items.Add(1, 'Y', 'Yes');
End;

procedure LoadTable240(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(240, 'Event Consequence');
    oTable.Items.Add(5, 'C', 'Congenital anomaly/birth defect');
    oTable.Items.Add(1, 'D', 'Death');
    oTable.Items.Add(3, 'H', 'Caused hospitalized');
    oTable.Items.Add(6, 'I', 'Incapacity which is significant, persistent or permanent');
    oTable.Items.Add(7, 'J', 'Disability which is significant, persistent or permanent');
    oTable.Items.Add(2, 'L', 'Life threatening');
    oTable.Items.Add(9, 'O', 'Other');
    oTable.Items.Add(4, 'P', 'Prolonged hospitalization');
    oTable.Items.Add(8, 'R', 'Required intervention to prevent permanent impairment/damage');
End;

procedure LoadTable241(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(241, 'Patient Outcome');
    oTable.Items.Add(1, 'D', 'Died');
    oTable.Items.Add(6, 'F', 'Fully recovered');
    oTable.Items.Add(3, 'N', 'Not recovering/unchanged');
    oTable.Items.Add(2, 'R', 'Recovering');
    oTable.Items.Add(5, 'S', 'Sequelae');
    oTable.Items.Add(7, 'U', 'Unknown');
    oTable.Items.Add(4, 'W', 'Worsening');
End;

procedure LoadTable242(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(242, 'Primary Observer''s Qualification');
    oTable.Items.Add(5, 'C', 'Health care consumer/patient');
    oTable.Items.Add(4, 'H', 'Other health professional');
    oTable.Items.Add(6, 'L', 'Lawyer/attorney');
    oTable.Items.Add(3, 'M', 'Mid-level professional (nurse, nurse practitioner, physician''s assistant)');
    oTable.Items.Add(7, 'O', 'Other non-health professional');
    oTable.Items.Add(1, 'P', 'Physician (osteopath, homeopath)');
    oTable.Items.Add(2, 'R', 'Pharmacist');
End;

procedure LoadTable243(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(243, 'Identity May Be Divulged');
    oTable.Items.Add(2, 'N', 'No');
    oTable.Items.Add(3, 'NA', 'Not applicable');
    oTable.Items.Add(1, 'Y', 'Yes');
End;

procedure LoadTable244(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(244, 'Single Use Device');
    oTable.Items.Add(1, '...', 'No suggested values defined');
End;

procedure LoadTable245(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(245, 'Product Problem');
    oTable.Items.Add(1, '...', 'No suggested values defined');
End;

procedure LoadTable246(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(246, 'Product Available for Inspection');
    oTable.Items.Add(1, '...', 'No suggested values defined');
End;

procedure LoadTable247(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(247, 'Status of Evaluation');
    oTable.Items.Add(5, 'A', 'Evaluation anticipated, but not yet begun');
    oTable.Items.Add(7, 'C', 'Product received in condition which made analysis impossible');
    oTable.Items.Add(6, 'D', 'Product discarded -- unable to follow up');
    oTable.Items.Add(8, 'I', 'Product remains implanted -- unable to follow up');
    oTable.Items.Add(3, 'K', 'Problem already known, no evaluation necessary');
    oTable.Items.Add(12, 'O', 'Other');
    oTable.Items.Add(2, 'P', 'Evaluation in progress');
    oTable.Items.Add(10, 'Q', 'Product under quarantine -- unable to follow up');
    oTable.Items.Add(11, 'R', 'Product under recall/corrective action');
    oTable.Items.Add(9, 'U', 'Product unavailable for follow up investigation');
    oTable.Items.Add(4, 'X', 'Product not made by company');
    oTable.Items.Add(1, 'Y', 'Evaluation completed');
End;

procedure LoadTable248(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(248, 'Product source');
    oTable.Items.Add(1, 'A', 'Actual product involved in incident was evaluated');
    oTable.Items.Add(2, 'L', 'A product from the same lot as the actual product involved was evaluated');
    oTable.Items.Add(4, 'N', 'A product from a controlled/non-related inventory was evaluated');
    oTable.Items.Add(3, 'R', 'A product from a reserve sample was evaluated');
End;

procedure LoadTable249(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(249, 'Generic Product');
    oTable.Items.Add(1, '...', 'No suggested values defined');
End;

procedure LoadTable250(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(250, 'Relatedness Assessment');
    oTable.Items.Add(1, 'H', 'Highly probable');
    oTable.Items.Add(4, 'I', 'Improbable');
    oTable.Items.Add(2, 'M', 'Moderately probable');
    oTable.Items.Add(5, 'N', 'Not related');
    oTable.Items.Add(3, 'S', 'Somewhat probable');
End;

procedure LoadTable251(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(251, 'Action Taken in Response to the Event');
    oTable.Items.Add(4, 'DI', 'Product dose or frequency of use increased');
    oTable.Items.Add(3, 'DR', 'Product dose or frequency of use reduced');
    oTable.Items.Add(6, 'N', 'None');
    oTable.Items.Add(5, 'OT', 'Other');
    oTable.Items.Add(1, 'WP', 'Product withdrawn permanently');
    oTable.Items.Add(2, 'WT', 'Product withdrawn temporarily');
End;

procedure LoadTable252(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(252, 'Causality Observations');
    oTable.Items.Add(1, 'AW', 'Abatement of event after product withdrawn');
    oTable.Items.Add(2, 'BE', 'Event recurred after product reintroduced');
    oTable.Items.Add(8, 'DR', 'Dose response observed');
    oTable.Items.Add(5, 'EX', 'Alternative explanations for the event available');
    oTable.Items.Add(4, 'IN', 'Event occurred after product introduced');
    oTable.Items.Add(3, 'LI', 'Literature reports association of product with event');
    oTable.Items.Add(10, 'OE', 'Occurrence of event was confirmed by objective evidence');
    oTable.Items.Add(11, 'OT', 'Other');
    oTable.Items.Add(6, 'PL', 'Effect observed when patient receives placebo');
    oTable.Items.Add(9, 'SE', 'Similar events in past for this patient');
    oTable.Items.Add(7, 'TC', 'Toxic levels of product documented in blood or body fluids');
End;

procedure LoadTable253(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(253, 'Indirect exposure mechanism');
    oTable.Items.Add(1, 'B', 'Breast milk');
    oTable.Items.Add(3, 'F', 'Father');
    oTable.Items.Add(5, 'O', 'Other');
    oTable.Items.Add(2, 'P', 'Transplacental');
    oTable.Items.Add(4, 'X', 'Blood product');
End;

procedure LoadTable254(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(254, 'Kind of quantity');
    oTable.Items.Add(51, 'ABS', 'Absorbance');
    oTable.Items.Add(40, 'ACNC', 'Concentration, Arbitrary Substance');
    oTable.Items.Add(52, 'ACT', '*Activity');
    oTable.Items.Add(53, 'APER', 'Appearance');
    oTable.Items.Add(54, 'ARB', '*Arbitrary');
    oTable.Items.Add(55, 'AREA', 'Area');
    oTable.Items.Add(56, 'ASPECT', 'Aspect');
    oTable.Items.Add(1, 'CACT', '*Catalytic Activity');
    oTable.Items.Add(4, 'CCNT', '*Catalytic Content');
    oTable.Items.Add(3, 'CCRTO', 'Catalytic Concentration Ratio');
    oTable.Items.Add(5, 'CFR', '*Catalytic Fraction');
    oTable.Items.Add(57, 'CLAS', 'Class');
    oTable.Items.Add(2, 'CNC', '*Catalytic Concentration');
    oTable.Items.Add(58, 'CNST', '*Constant');
    oTable.Items.Add(59, 'COEF', '*Coefficient');
    oTable.Items.Add(60, 'COLOR', 'Color');
    oTable.Items.Add(61, 'CONS', 'Consistency');
    oTable.Items.Add(6, 'CRAT', '*Catalytic Rate');
    oTable.Items.Add(7, 'CRTO', 'Catalytic Ratio');
    oTable.Items.Add(62, 'DEN', 'Density');
    oTable.Items.Add(63, 'DEV', 'Device');
    oTable.Items.Add(64, 'DIFF', '*Difference');
    oTable.Items.Add(65, 'ELAS', 'Elasticity');
    oTable.Items.Add(66, 'ELPOT', 'Electrical Potential (Voltage)');
    oTable.Items.Add(67, 'ELRAT', 'Electrical current (amperage)');
    oTable.Items.Add(68, 'ELRES', 'Electrical Resistance');
    oTable.Items.Add(69, 'ENGR', 'Energy');
    oTable.Items.Add(8, 'ENT', '*Entitic');
    oTable.Items.Add(10, 'ENTCAT', '*Entitic Catalytic Activity');
    oTable.Items.Add(11, 'ENTNUM', '*Entitic Number');
    oTable.Items.Add(9, 'ENTSUB', '*Entitic Substance of Amount');
    oTable.Items.Add(12, 'ENTVOL', '*Entitic Volume');
    oTable.Items.Add(70, 'EQL', 'Equilibrium');
    oTable.Items.Add(71, 'FORCE', 'Mechanical force');
    oTable.Items.Add(72, 'FREQ', 'Frequency');
    oTable.Items.Add(73, 'IMP', 'Impression/ interpretation of study');
    oTable.Items.Add(74, 'KINV', '*Kinematic Viscosity');
    oTable.Items.Add(75, 'LEN', 'Length');
    oTable.Items.Add(76, 'LINC', '*Length Increment');
    oTable.Items.Add(77, 'LIQ', '*Liquefaction');
    oTable.Items.Add(13, 'MASS', '*Mass');
    oTable.Items.Add(14, 'MCNC', '*Mass Concentration');
    oTable.Items.Add(16, 'MCNT', 'Mass Content');
    oTable.Items.Add(15, 'MCRTO', '*Mass Concentration Ratio');
    oTable.Items.Add(17, 'MFR', '*Mass Fraction');
    oTable.Items.Add(78, 'MGFLUX', 'Magnetic flux');
    oTable.Items.Add(18, 'MINC', '*Mass Increment');
    oTable.Items.Add(79, 'MORPH', 'Morphology');
    oTable.Items.Add(80, 'MOTIL', 'Motility');
    oTable.Items.Add(19, 'MRAT', '*Mass Rate');
    oTable.Items.Add(20, 'MRTO', '*Mass Ratio');
    oTable.Items.Add(22, 'NCNC', '*Number Concentration');
    oTable.Items.Add(23, 'NCNT', '*Number Content');
    oTable.Items.Add(24, 'NFR', '*Number Fraction');
    oTable.Items.Add(25, 'NRTO', '*Number Ratio');
    oTable.Items.Add(21, 'NUM', '*Number');
    oTable.Items.Add(81, 'OD', 'Optical density');
    oTable.Items.Add(82, 'OSMOL', '*Osmolality');
    oTable.Items.Add(84, 'PRES', '*Pressure (Partial)');
    oTable.Items.Add(83, 'PRID', 'Presence/Identity/Existence');
    oTable.Items.Add(85, 'PWR', 'Power (wattage)');
    oTable.Items.Add(86, 'RANGE', '*Ranges');
    oTable.Items.Add(87, 'RATIO', '*Ratios');
    oTable.Items.Add(49, 'RCRLTM', '*Reciprocal Relative Time');
    oTable.Items.Add(88, 'RDEN', '*Relative Density');
    oTable.Items.Add(89, 'REL', '*Relative');
    oTable.Items.Add(41, 'RLMCNC', '*Relative Mass Concentration');
    oTable.Items.Add(42, 'RLSCNC', '*Relative Substance Concentration');
    oTable.Items.Add(50, 'RLTM', '*Relative Time');
    oTable.Items.Add(90, 'SATFR', '*Saturation Fraction');
    oTable.Items.Add(27, 'SCNC', '*Substance Concentration');
    oTable.Items.Add(32, 'SCNCIN', '*Substance Concentration Increment');
    oTable.Items.Add(29, 'SCNT', '*Substance Content');
    oTable.Items.Add(30, 'SCNTR', '*Substance Content Rate');
    oTable.Items.Add(28, 'SCRTO', '*Substance Concentration Ratio');
    oTable.Items.Add(31, 'SFR', '*Substance Fraction');
    oTable.Items.Add(91, 'SHAPE', 'Shape');
    oTable.Items.Add(92, 'SMELL', 'Smell');
    oTable.Items.Add(33, 'SRAT', '*Substance Rate');
    oTable.Items.Add(34, 'SRTO', '*Substance Ratio');
    oTable.Items.Add(26, 'SUB', '*Substance Amount');
    oTable.Items.Add(93, 'SUSC', '*Susceptibility');
    oTable.Items.Add(94, 'TASTE', 'Taste');
    oTable.Items.Add(95, 'TEMP', '*Temperature');
    oTable.Items.Add(96, 'TEMPDF', '*Temperature Difference');
    oTable.Items.Add(97, 'TEMPIN', '*Temperature Increment');
    oTable.Items.Add(43, 'THRMCNC', '*Threshold Mass Concentration');
    oTable.Items.Add(44, 'THRSCNC', '*Threshold Substance Concentration');
    oTable.Items.Add(45, 'TIME', '*Time (e.g. seconds)');
    oTable.Items.Add(98, 'TITR', '*Dilution Factor (Titer)');
    oTable.Items.Add(46, 'TMDF', '*Time Difference');
    oTable.Items.Add(47, 'TMSTP', '*Time Stamp-Date and Time');
    oTable.Items.Add(48, 'TRTO', '*Time Ratio');
    oTable.Items.Add(99, 'TYPE', '*Type');
    oTable.Items.Add(36, 'VCNT', '*Volume Content');
    oTable.Items.Add(100, 'VEL', '*Velocity');
    oTable.Items.Add(101, 'VELRT', '*Velocity Ratio');
    oTable.Items.Add(37, 'VFR', '*Volume Fraction');
    oTable.Items.Add(102, 'VISC', '*Viscosity');
    oTable.Items.Add(35, 'VOL', '*Volume');
    oTable.Items.Add(38, 'VRAT', '*Volume Rate');
    oTable.Items.Add(39, 'VRTO', '*Volume Ratio');
End;

procedure LoadTable255(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(255, 'Duration categories');
    oTable.Items.Add(2, '*', '(asterisk) Life of the "unit."  Used for blood products.');
    oTable.Items.Add(13, '12H', '12 hours');
    oTable.Items.Add(4, '1H', '1 hour');
    oTable.Items.Add(24, '1L', '1 months (30 days)');
    oTable.Items.Add(20, '1W', '1 week');
    oTable.Items.Add(6, '2.5H', '2'#194#189' hours');
    oTable.Items.Add(14, '24H', '24 hours');
    oTable.Items.Add(15, '2D', '2 days');
    oTable.Items.Add(5, '2H', '2 hours');
    oTable.Items.Add(25, '2L', '2 months');
    oTable.Items.Add(21, '2W', '2 weeks');
    oTable.Items.Add(3, '30M', '30 minutes');
    oTable.Items.Add(16, '3D', '3 days');
    oTable.Items.Add(7, '3H', '3 hours');
    oTable.Items.Add(26, '3L', '3 months');
    oTable.Items.Add(22, '3W', '3 weeks');
    oTable.Items.Add(17, '4D', '4 days');
    oTable.Items.Add(8, '4H', '4 hours');
    oTable.Items.Add(23, '4W', '4 weeks');
    oTable.Items.Add(18, '5D', '5 days');
    oTable.Items.Add(9, '5H', '5 hours');
    oTable.Items.Add(19, '6D', '6 days');
    oTable.Items.Add(10, '6H', '6 hours');
    oTable.Items.Add(11, '7H', '7 hours');
    oTable.Items.Add(12, '8H', '8 hours');
    oTable.Items.Add(1, 'PT', 'To identify measures at a point in time.  This is a synonym for "spot" or "random" as applied to urine measurements.');
End;

procedure LoadTable256(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(256, 'Time delay post challenge');
    oTable.Items.Add(38, '10D', '10 days');
    oTable.Items.Add(14, '10M', '10 minutes post challenge');
    oTable.Items.Add(29, '12H', '12 hours post challenge');
    oTable.Items.Add(15, '15M', '15 minutes post challenge');
    oTable.Items.Add(19, '1H', '1 hour post challenge');
    oTable.Items.Add(42, '1L', '1 month (30 days) post challenge');
    oTable.Items.Add(5, '1M', '1 minute post challenge');
    oTable.Items.Add(37, '1W', '1 week');
    oTable.Items.Add(21, '2.5H', '2 '#194#189' hours post challenge');
    oTable.Items.Add(16, '20M', '20 minutes post challenge');
    oTable.Items.Add(30, '24H', '24 hours post challenge');
    oTable.Items.Add(17, '25M', '25 minutes post challenge');
    oTable.Items.Add(31, '2D', '2 days');
    oTable.Items.Add(20, '2H', '2 hours post challenge');
    oTable.Items.Add(43, '2L', '2 months (60 days) post challenge');
    oTable.Items.Add(6, '2M', '2 minutes post challenge');
    oTable.Items.Add(39, '2W', '2 weeks');
    oTable.Items.Add(18, '30M', '30 minutes post challenge');
    oTable.Items.Add(32, '3D', '3 days');
    oTable.Items.Add(22, '3H', '3 hours post challenge');
    oTable.Items.Add(44, '3L', '3 months (90 days) post challenge');
    oTable.Items.Add(7, '3M', '3 minutes post challenge');
    oTable.Items.Add(40, '3W', '3 weeks');
    oTable.Items.Add(33, '4D', '4 days');
    oTable.Items.Add(23, '4H', '4 hours post challenge');
    oTable.Items.Add(8, '4M', '4 minutes post challenge');
    oTable.Items.Add(41, '4W', '4 weeks');
    oTable.Items.Add(34, '5D', '5 days');
    oTable.Items.Add(24, '5H', '5  hours post challenge');
    oTable.Items.Add(9, '5M', '5 minutes post challenge');
    oTable.Items.Add(35, '6D', '6 days');
    oTable.Items.Add(25, '6H', '6 hours post challenge');
    oTable.Items.Add(10, '6M', '6 minutes post challenge');
    oTable.Items.Add(36, '7D', '7 days');
    oTable.Items.Add(26, '7H', '7 hours post challenge');
    oTable.Items.Add(11, '7M', '7 minutes post challenge');
    oTable.Items.Add(27, '8H', '8 hours post challenge');
    oTable.Items.Add(28, '8H SHIFT', '8 hours aligned on nursing shifts');
    oTable.Items.Add(12, '8M', '8 minutes post challenge');
    oTable.Items.Add(13, '9M', '9 minutes post challenge');
    oTable.Items.Add(1, 'BS', 'Baseline (time just before the challenge)');
    oTable.Items.Add(2, 'PEAK', 'The time post drug dose at which the highest drug level is reached (differs by drug)');
    oTable.Items.Add(4, 'RANDOM', 'Time from the challenge, or dose not specified. (random)');
    oTable.Items.Add(3, 'TROUGH', 'The time post drug dose at which the lowest drug level is reached (varies with drug)');
End;

procedure LoadTable257(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(257, 'Nature of challenge');
    oTable.Items.Add(1, 'CFST', 'Fasting (no calorie intake) for the period specified in the time component of the term, e.g., 1H POST CFST');
    oTable.Items.Add(2, 'EXCZ', 'Exercise undertaken as challenge (can be quantified)');
    oTable.Items.Add(3, 'FFST', 'No fluid intake for the period specified in the time component of the term');
End;

procedure LoadTable258(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(258, 'Relationship modifier');
    oTable.Items.Add(4, 'BPU', 'Blood product unit');
    oTable.Items.Add(1, 'CONTROL', 'Control');
    oTable.Items.Add(3, 'DONOR', 'Donor');
    oTable.Items.Add(2, 'PATIENT', 'Patient');
End;

procedure LoadTable259(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(259, 'Modality');
    oTable.Items.Add(1, 'AS', 'Angioscopy');
    oTable.Items.Add(2, 'BS', 'Biomagnetic imaging');
    oTable.Items.Add(3, 'CD', 'Color flow Doppler');
    oTable.Items.Add(4, 'CP', 'Colposcopy');
    oTable.Items.Add(5, 'CR', 'Computed radiography');
    oTable.Items.Add(6, 'CS', 'Cystoscopy');
    oTable.Items.Add(7, 'CT', 'Computed tomography');
    oTable.Items.Add(8, 'DD', 'Duplex Doppler');
    oTable.Items.Add(9, 'DG', 'Diapanography');
    oTable.Items.Add(10, 'DM', 'Digital microscopy');
    oTable.Items.Add(11, 'EC', 'Echocardiography');
    oTable.Items.Add(12, 'ES', 'Endoscopy');
    oTable.Items.Add(13, 'FA', 'Fluorescein angiography');
    oTable.Items.Add(14, 'FS', 'Fundoscopy');
    oTable.Items.Add(15, 'LP', 'Laparoscopy');
    oTable.Items.Add(16, 'LS', 'Laser surface scan');
    oTable.Items.Add(17, 'MA', 'Magnetic resonance angiography');
    oTable.Items.Add(18, 'MS', 'Magnetic resonance spectroscopy');
    oTable.Items.Add(19, 'NM', 'Nuclear Medicine (radioisotope study)');
    oTable.Items.Add(20, 'OT', 'Other');
    oTable.Items.Add(21, 'PT', 'Positron emission tomography (PET)');
    oTable.Items.Add(22, 'RF', 'Radio fluoroscopy');
    oTable.Items.Add(23, 'ST', 'Single photon emission computed tomography (SPECT)');
    oTable.Items.Add(24, 'TG', 'Thermography');
    oTable.Items.Add(25, 'US', 'Ultrasound');
    oTable.Items.Add(26, 'XA', 'X-ray Angiography');
End;

procedure LoadTable260(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(260, 'Patient location type');
    oTable.Items.Add(3, 'B', 'Bed');
    oTable.Items.Add(6, 'C', 'Clinic');
    oTable.Items.Add(7, 'D', 'Department');
    oTable.Items.Add(4, 'E', 'Exam Room');
    oTable.Items.Add(8, 'L', 'Other Location');
    oTable.Items.Add(1, 'N', 'Nursing Unit');
    oTable.Items.Add(5, 'O', 'Operating Room');
    oTable.Items.Add(2, 'R', 'Room');
End;

procedure LoadTable261(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(261, 'Location Equipment');
    oTable.Items.Add(6, 'EEG', 'Electro-Encephalogram');
    oTable.Items.Add(7, 'EKG', 'Electro-Cardiogram');
    oTable.Items.Add(4, 'INF', 'Infusion pump');
    oTable.Items.Add(5, 'IVP', 'IV pump');
    oTable.Items.Add(1, 'OXY', 'Oxygen');
    oTable.Items.Add(2, 'SUC', 'Suction');
    oTable.Items.Add(8, 'VEN', 'Ventilator');
    oTable.Items.Add(3, 'VIT', 'Vital signs monitor');
End;

procedure LoadTable262(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(262, 'Privacy Level');
    oTable.Items.Add(1, 'F', 'Isolation');
    oTable.Items.Add(3, 'J', 'Private room - medically justified');
    oTable.Items.Add(2, 'P', 'Private room');
    oTable.Items.Add(4, 'Q', 'Private room - due to overflow');
    oTable.Items.Add(5, 'S', 'Semi-private room');
    oTable.Items.Add(6, 'W', 'Ward');
End;

procedure LoadTable263(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(263, 'Level of Care');
    oTable.Items.Add(1, 'A', 'Ambulatory');
    oTable.Items.Add(5, 'C', 'Critical care');
    oTable.Items.Add(2, 'E', 'Emergency');
    oTable.Items.Add(3, 'F', 'Isolation');
    oTable.Items.Add(4, 'N', 'Intensive care');
    oTable.Items.Add(6, 'R', 'Routine');
    oTable.Items.Add(7, 'S', 'Surgery');
End;

procedure LoadTable264(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(264, 'Location Department');
    oTable.Items.Add(1, '...', 'No suggested values defined');
End;

procedure LoadTable265(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(265, 'Specialty Type');
    oTable.Items.Add(21, 'ALC', 'Allergy');
    oTable.Items.Add(1, 'AMB', 'Ambulatory');
    oTable.Items.Add(24, 'CAN', 'Cancer');
    oTable.Items.Add(13, 'CAR', 'Coronary/cardiac care');
    oTable.Items.Add(15, 'CCR', 'Critical care');
    oTable.Items.Add(23, 'CHI', 'Chiropractic');
    oTable.Items.Add(12, 'EDI', 'Education');
    oTable.Items.Add(17, 'EMR', 'Emergency');
    oTable.Items.Add(22, 'FPC', 'Family planning');
    oTable.Items.Add(9, 'INT', 'Intensive care');
    oTable.Items.Add(6, 'ISO', 'Isolation');
    oTable.Items.Add(25, 'NAT', 'Naturopathic');
    oTable.Items.Add(14, 'NBI', 'Newborn, nursery, infants');
    oTable.Items.Add(7, 'OBG', 'Obstetrics, gynecology');
    oTable.Items.Add(18, 'OBS', 'Observation');
    oTable.Items.Add(26, 'OTH', 'Other specialty');
    oTable.Items.Add(16, 'PED', 'Pediatrics');
    oTable.Items.Add(20, 'PHY', 'General/family practice');
    oTable.Items.Add(8, 'PIN', 'Pediatric/neonatal intensive care');
    oTable.Items.Add(3, 'PPS', 'Pediatric psychiatric');
    oTable.Items.Add(5, 'PRE', 'Pediatric rehabilitation');
    oTable.Items.Add(11, 'PSI', 'Psychiatric intensive care');
    oTable.Items.Add(2, 'PSY', 'Psychiatric');
    oTable.Items.Add(4, 'REH', 'Rehabilitation');
    oTable.Items.Add(10, 'SUR', 'Surgery');
    oTable.Items.Add(19, 'WIC', 'Walk-in clinic');
End;

procedure LoadTable267(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(267, 'Days of the week');
    oTable.Items.Add(7, 'FRI', 'Friday');
    oTable.Items.Add(3, 'MON', 'Monday');
    oTable.Items.Add(1, 'SAT', 'Saturday');
    oTable.Items.Add(2, 'SUN', 'Sunday');
    oTable.Items.Add(6, 'THU', 'Thursday');
    oTable.Items.Add(4, 'TUE', 'Tuesday');
    oTable.Items.Add(5, 'WED', 'Wednesday');
End;

procedure LoadTable268(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(268, 'Override');
    oTable.Items.Add(2, 'A', 'Override allowed');
    oTable.Items.Add(3, 'R', 'Override required');
    oTable.Items.Add(1, 'X', 'Override not allowed');
End;

procedure LoadTable269(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(269, 'Charge On Indicator');
    oTable.Items.Add(1, 'O', 'Charge on Order');
    oTable.Items.Add(2, 'R', 'Charge on Result');
End;

procedure LoadTable270(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(270, 'Document Type');
    oTable.Items.Add(1, 'AR', 'Autopsy report');
    oTable.Items.Add(2, 'CD', 'Cardiodiagnostics');
    oTable.Items.Add(3, 'CN', 'Consultation');
    oTable.Items.Add(4, 'DI', 'Diagnostic imaging');
    oTable.Items.Add(5, 'DS', 'Discharge summary');
    oTable.Items.Add(6, 'ED', 'Emergency department report');
    oTable.Items.Add(7, 'HP', 'History and physical examination');
    oTable.Items.Add(8, 'OP', 'Operative report');
    oTable.Items.Add(9, 'PC', 'Psychiatric consultation');
    oTable.Items.Add(10, 'PH', 'Psychiatric history and physical examination');
    oTable.Items.Add(11, 'PN', 'Procedure note');
    oTable.Items.Add(12, 'PR', 'Progress note');
    oTable.Items.Add(13, 'SP', 'Surgical pathology');
    oTable.Items.Add(14, 'TS', 'Transfer summary');
End;

procedure LoadTable271(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(271, 'Document completion status');
    oTable.Items.Add(6, 'AU', 'Authenticated');
    oTable.Items.Add(1, 'DI', 'Dictated');
    oTable.Items.Add(2, 'DO', 'Documented');
    oTable.Items.Add(4, 'IN', 'Incomplete');
    oTable.Items.Add(3, 'IP', 'In Progress');
    oTable.Items.Add(7, 'LA', 'Legally authenticated');
    oTable.Items.Add(5, 'PA', 'Pre-authenticated');
End;

procedure LoadTable272(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(272, 'Document Confidentiality Status');
    oTable.Items.Add(2, 'R', 'Restricted');
    oTable.Items.Add(3, 'U', 'Usual control');
    oTable.Items.Add(1, 'V', 'Very restricted');
End;

procedure LoadTable273(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(273, 'Document Availability Status');
    oTable.Items.Add(1, 'AV', 'Available for patient care');
    oTable.Items.Add(2, 'CA', 'Deleted');
    oTable.Items.Add(3, 'OB', 'Obsolete');
    oTable.Items.Add(4, 'UN', 'Unavailable for patient care');
End;

procedure LoadTable275(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(275, 'Document Storage Status');
    oTable.Items.Add(2, 'AA', 'Active and archived');
    oTable.Items.Add(1, 'AC', 'Active');
    oTable.Items.Add(3, 'AR', 'Archived (not active)');
    oTable.Items.Add(4, 'PU', 'Purged');
End;

procedure LoadTable276(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(276, 'Appointment reason codes');
    oTable.Items.Add(3, 'CHECKUP', 'A routine check-up, such as an annual physical');
    oTable.Items.Add(5, 'EMERGENCY', 'Emergency appointment');
    oTable.Items.Add(4, 'FOLLOWUP', 'A follow up visit from a previous appointment');
    oTable.Items.Add(1, 'ROUTINE', 'Routine appointment - default if not valued');
    oTable.Items.Add(2, 'WALKIN', 'A previously unscheduled walk-in visit');
End;

procedure LoadTable277(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(277, 'Appointment Type Codes');
    oTable.Items.Add(3, 'Complete', 'A request to add a completed appointment, used to maintain records of completed appointments that did not appear in the schedule (e.g., STAT, walk-in, etc.)');
    oTable.Items.Add(1, 'Normal', 'Routine schedule request type - default if not valued');
    oTable.Items.Add(2, 'Tentative', 'A request for a tentative (e.g., "penciled in") appointment');
End;

procedure LoadTable278(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(278, 'Filler status codes');
    oTable.Items.Add(9, 'Blocked', 'The indicated time slot(s) is(are) blocked');
    oTable.Items.Add(3, 'Booked', 'The indicated appointment is booked');
    oTable.Items.Add(6, 'Cancelled', 'The indicated appointment was stopped from occurring (canceled prior to starting)');
    oTable.Items.Add(5, 'Complete', 'The indicated appointment has completed normally (was not discontinued, canceled, or deleted)');
    oTable.Items.Add(7, 'Dc', 'The indicated appointment was discontinued (DC''ed while in progress, discontinued parent appointment, or discontinued child appointment)');
    oTable.Items.Add(8, 'Deleted', 'The indicated appointment was deleted from the filler application');
    oTable.Items.Add(11, 'Noshow', 'The patient did not show up for the appointment');
    oTable.Items.Add(10, 'Overbook', 'The appointment has been confirmed; however it is confirmed in an overbooked state');
    oTable.Items.Add(1, 'Pending', 'Appointment has not yet been confirmed');
    oTable.Items.Add(4, 'Started', 'The indicated appointment has begun and is currently in progress');
    oTable.Items.Add(2, 'Waitlist', 'Appointment has been placed on a waiting list for a particular slot, or set of slots');
End;

procedure LoadTable279(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(279, 'Allow Substitution Codes');
    oTable.Items.Add(2, 'Confirm', 'Contact the Placer Contact Person prior to making any substitutions of this resource');
    oTable.Items.Add(1, 'No', 'Substitution of this resource is not allowed');
    oTable.Items.Add(3, 'Notify', 'Notify the Placer Contact Person, through normal institutional procedures, that a substitution of this resource has been made');
    oTable.Items.Add(4, 'Yes', 'Substitution of this resource is allowed');
End;

procedure LoadTable280(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(280, 'Referral priority');
    oTable.Items.Add(2, 'A', 'ASAP');
    oTable.Items.Add(3, 'R', 'Routine');
    oTable.Items.Add(1, 'S', 'STAT');
End;

procedure LoadTable281(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(281, 'Referral type');
    oTable.Items.Add(6, 'Hom', 'Home Care');
    oTable.Items.Add(1, 'Lab', 'Laboratory');
    oTable.Items.Add(3, 'Med', 'Medical');
    oTable.Items.Add(5, 'Psy', 'Psychiatric');
    oTable.Items.Add(2, 'Rad', 'Radiology');
    oTable.Items.Add(4, 'Skn', 'Skilled Nursing');
End;

procedure LoadTable282(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(282, 'Referral disposition');
    oTable.Items.Add(3, 'AM', 'Assume Management');
    oTable.Items.Add(2, 'RP', 'Return Patient After Evaluation');
    oTable.Items.Add(4, 'SO', 'Second Opinion');
    oTable.Items.Add(1, 'WR', 'Send Written Report');
End;

procedure LoadTable283(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(283, 'Referral status');
    oTable.Items.Add(1, 'A', 'Accepted');
    oTable.Items.Add(4, 'E', 'Expired');
    oTable.Items.Add(2, 'P', 'Pending');
    oTable.Items.Add(3, 'R', 'Rejected');
End;

procedure LoadTable284(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(284, 'Referral category');
    oTable.Items.Add(3, 'A', 'Ambulatory');
    oTable.Items.Add(4, 'E', 'Emergency');
    oTable.Items.Add(1, 'I', 'Inpatient');
    oTable.Items.Add(2, 'O', 'Outpatient');
End;

procedure LoadTable285(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(285, 'Insurance company ID codes');
    oTable.Items.Add(1, '...', 'No suggested values defined');
End;

procedure LoadTable286(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(286, 'Provider role');
    oTable.Items.Add(3, 'CP', 'Consulting Provider');
    oTable.Items.Add(2, 'PP', 'Primary Care Provider');
    oTable.Items.Add(1, 'RP', 'Referring Provider');
    oTable.Items.Add(4, 'RT', 'Referred to Provider');
End;

procedure LoadTable287(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(287, 'Problem/goal action code');
    oTable.Items.Add(1, 'AD', 'ADD');
    oTable.Items.Add(2, 'CO', 'CORRECT');
    oTable.Items.Add(3, 'DE', 'DELETE');
    oTable.Items.Add(4, 'LI', 'LINK');
    oTable.Items.Add(5, 'UC', 'UNCHANGED *');
    oTable.Items.Add(6, 'UN', 'UNLINK');
    oTable.Items.Add(7, 'UP', 'UPDATE');
End;

procedure LoadTable288(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(288, 'Census tract');
    oTable.Items.Add(1, '...', 'No suggested values defined');
End;

procedure LoadTable289(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(289, 'County/parish');
    oTable.Items.Add(1, '...', 'No suggested values defined');
End;

procedure LoadTable291(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(291, 'Subtype of referenced data');
    oTable.Items.Add(1, '...', 'Source RFC 2046');
    oTable.Items.Add(2, 'x-hl7-cda-level-one', 'HL7 Clinical Document Architecture Level One document');
End;

procedure LoadTable292(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(292, 'Vaccines administered (code = CVX) (parenteral, unless oral is noted)');
    oTable.Items.Add(18, '01', 'DTP');
    oTable.Items.Add(54, '02', 'OPV');
    oTable.Items.Add(61, '03', 'MMR');
    oTable.Items.Add(62, '04', 'M/R');
    oTable.Items.Add(65, '05', 'measles');
    oTable.Items.Add(91, '06', 'rubella');
    oTable.Items.Add(71, '07', 'mumps');
    oTable.Items.Add(29, '08', 'Hep B, adolescent or pediatric');
    oTable.Items.Add(95, '09', 'Td (adult)');
    oTable.Items.Add(53, '10', 'IPV');
    oTable.Items.Add(76, '100', 'pneumococcal conjugate');
    oTable.Items.Add(110, '101', 'typhoid, ViCPs');
    oTable.Items.Add(20, '102', 'DTP-Hib-Hep B');
    oTable.Items.Add(68, '103', 'meningococcal C conjugate');
    oTable.Items.Add(27, '104', 'Hep A-Hep B');
    oTable.Items.Add(112, '105', 'vaccinia (smallpox) diluted');
    oTable.Items.Add(13, '106', 'DTaP, 5 pertussis antigens6');
    oTable.Items.Add(14, '107', 'DTaP, NOS');
    oTable.Items.Add(70, '108', 'meningococcal, NOS');
    oTable.Items.Add(77, '109', 'pneumococcal, NOS');
    oTable.Items.Add(73, '11', 'pertussis');
    oTable.Items.Add(15, '110', 'DTaP-Hep B-IPV');
    oTable.Items.Add(49, '111', 'influenza, live, intranasal');
    oTable.Items.Add(98, '112', 'tetanus toxoid, NOS');
    oTable.Items.Add(94, '113', 'Td (adult)');
    oTable.Items.Add(69, '114', 'meningococcal A,C,Y,W-135 diphtheria conjugate');
    oTable.Items.Add(96, '115', 'Tdap');
    oTable.Items.Add(87, '116', 'rotavirus, pentavalent');
    oTable.Items.Add(119, '117', 'VZIG (IND)');
    oTable.Items.Add(44, '118', 'HPV, bivalent');
    oTable.Items.Add(85, '119', 'rotavirus, monovalent');
    oTable.Items.Add(10, '12', 'diphtheria antitoxin');
    oTable.Items.Add(17, '120', 'DTaP-Hib-IPV');
    oTable.Items.Add(121, '121', 'zoster');
    oTable.Items.Add(86, '122', 'rotavirus, NOS1');
    oTable.Items.Add(100, '13', 'TIG');
    oTable.Items.Add(48, '14', 'IG, NOS');
    oTable.Items.Add(50, '15', 'influenza, split (incl. purified surface antigen)');
    oTable.Items.Add(51, '16', 'influenza, whole');
    oTable.Items.Add(41, '17', 'Hib, NOS');
    oTable.Items.Add(79, '18', 'rabies, intramuscular injection');
    oTable.Items.Add(5, '19', 'BCG');
    oTable.Items.Add(12, '20', 'DTaP');
    oTable.Items.Add(114, '21', 'varicella');
    oTable.Items.Add(19, '22', 'DTP-Hib');
    oTable.Items.Add(74, '23', 'plague');
    oTable.Items.Add(4, '24', 'anthrax');
    oTable.Items.Add(107, '25', 'typhoid, oral');
    oTable.Items.Add(7, '26', 'cholera');
    oTable.Items.Add(6, '27', 'botulinum antitoxin');
    oTable.Items.Add(11, '28', 'DT (pediatric)');
    oTable.Items.Add(8, '29', 'CMVIG');
    oTable.Items.Add(28, '30', 'HBIG');
    oTable.Items.Add(25, '31', 'Hep A, pediatric, NOS');
    oTable.Items.Add(67, '32', 'meningococcal');
    oTable.Items.Add(75, '33', 'pneumococcal');
    oTable.Items.Add(84, '34', 'RIG');
    oTable.Items.Add(97, '35', 'tetanus toxoid');
    oTable.Items.Add(118, '36', 'VZIG');
    oTable.Items.Add(120, '37', 'yellow fever');
    oTable.Items.Add(92, '38', 'rubella/mumps');
    oTable.Items.Add(56, '39', 'Japanese encephalitis');
    oTable.Items.Add(80, '40', 'rabies, intradermal injection');
    oTable.Items.Add(108, '41', 'typhoid, parenteral');
    oTable.Items.Add(30, '42', 'Hep B, adolescent/high risk infant2');
    oTable.Items.Add(31, '43', 'Hep B, adult4');
    oTable.Items.Add(32, '44', 'Hep B, dialysis');
    oTable.Items.Add(33, '45', 'Hep B, NOS');
    oTable.Items.Add(37, '46', 'Hib (PRP-D)');
    oTable.Items.Add(38, '47', 'Hib (HbOC)');
    oTable.Items.Add(39, '48', 'Hib (PRP-T)');
    oTable.Items.Add(40, '49', 'Hib (PRP-OMP)');
    oTable.Items.Add(16, '50', 'DTaP-Hib');
    oTable.Items.Add(42, '51', 'Hib-Hep B');
    oTable.Items.Add(22, '52', 'Hep A, adult');
    oTable.Items.Add(109, '53', 'typhoid, parenteral, AKD (U.S. military)');
    oTable.Items.Add(1, '54', 'adenovirus, type 4');
    oTable.Items.Add(2, '55', 'adenovirus, type 7');
    oTable.Items.Add(9, '56', 'dengue fever');
    oTable.Items.Add(21, '57', 'hantavirus');
    oTable.Items.Add(34, '58', 'Hep C');
    oTable.Items.Add(35, '59', 'Hep E');
    oTable.Items.Add(36, '60', 'herpes simplex 2');
    oTable.Items.Add(43, '61', 'HIV');
    oTable.Items.Add(45, '62', 'HPV, quadrivalent');
    oTable.Items.Add(57, '63', 'Junin virus');
    oTable.Items.Add(58, '64', 'leishmaniasis');
    oTable.Items.Add(59, '65', 'leprosy');
    oTable.Items.Add(60, '66', 'Lyme disease');
    oTable.Items.Add(64, '67', 'malaria');
    oTable.Items.Add(66, '68', 'melanoma');
    oTable.Items.Add(72, '69', 'parainfluenza-3');
    oTable.Items.Add(78, '70', 'Q fever');
    oTable.Items.Add(89, '71', 'RSV-IGIV');
    oTable.Items.Add(82, '72', 'rheumatic fever');
    oTable.Items.Add(83, '73', 'Rift Valley fever');
    oTable.Items.Add(88, '74', 'rotavirus, tetravalent');
    oTable.Items.Add(111, '75', 'vaccinia (smallpox)');
    oTable.Items.Add(93, '76', 'Staphylococcus bacterio lysate');
    oTable.Items.Add(99, '77', 'tick-borne encephalitis');
    oTable.Items.Add(105, '78', 'tularemia vaccine');
    oTable.Items.Add(113, '79', 'vaccinia immune globulin');
    oTable.Items.Add(116, '80', 'VEE, live');
    oTable.Items.Add(115, '81', 'VEE, inactivated');
    oTable.Items.Add(3, '82', 'adenovirus, NOS1');
    oTable.Items.Add(23, '83', 'Hep A, ped/adol, 2 dose');
    oTable.Items.Add(24, '84', 'Hep A, ped/adol, 3 dose');
    oTable.Items.Add(26, '85', 'Hep A, NOS');
    oTable.Items.Add(46, '86', 'IG');
    oTable.Items.Add(47, '87', 'IGIV');
    oTable.Items.Add(52, '88', 'influenza, NOS');
    oTable.Items.Add(55, '89', 'polio, NOS');
    oTable.Items.Add(81, '90', 'rabies, NOS');
    oTable.Items.Add(106, '91', 'typhoid, NOS');
    oTable.Items.Add(117, '92', 'VEE, NOS');
    oTable.Items.Add(90, '93', 'RSV-MAb');
    oTable.Items.Add(63, '94', 'MMRV');
    oTable.Items.Add(101, '95', 'TST-OT tine test');
    oTable.Items.Add(102, '96', 'TST-PPD intradermal');
    oTable.Items.Add(103, '97', 'TST-PPD tine test');
    oTable.Items.Add(104, '98', 'TST, NOS');
    oTable.Items.Add(124, '99', 'RESERVED - do not use3');
    oTable.Items.Add(122, '998', 'no vaccine administered5');
    oTable.Items.Add(123, '999', 'unknown');
End;

procedure LoadTable293(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(293, 'Billing Category');
    oTable.Items.Add(1, '...', 'No suggested values defined');
End;

procedure LoadTable294(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(294, 'Time selection criteria parameter class codes');
    oTable.Items.Add(7, 'Fri', 'An indicator that Friday is or is not preferred for the day on which the appointment will occur.');
    oTable.Items.Add(3, 'Mon', 'An indicator that Monday is or is not preferred for the day on which the appointment will occur.');
    oTable.Items.Add(2, 'Prefend', 'An indicator that there is a preferred end time for the appointment request, service or resource.');
    oTable.Items.Add(1, 'Prefstart', 'An indicator that there is a preferred start time for the appointment request, service or resource.');
    oTable.Items.Add(8, 'Sat', 'An indicator that Saturday is or is not preferred for the day on which the appointment will occur.');
    oTable.Items.Add(9, 'Sun', 'An indicator that Sunday is or is not preferred for the day on which the appointment will occur.');
    oTable.Items.Add(6, 'Thu', 'An indicator that Thursday is or is not preferred for the day on which the appointment will occur.');
    oTable.Items.Add(4, 'Tue', 'An indicator that Tuesday is or is not preferred for the day on which the appointment will occur.');
    oTable.Items.Add(5, 'Wed', 'An indicator that Wednesday is or is not preferred for the day on which the appointment will occur.');
End;

procedure LoadTable295(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(295, 'Handicap');
    oTable.Items.Add(1, '...', 'No suggested values defined');
End;

procedure LoadTable296(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(296, 'Primary Language');
    oTable.Items.Add(1, '...', 'no suggested values');
End;

procedure LoadTable297(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(297, 'CN ID source');
    oTable.Items.Add(1, '...', 'No suggested values defined');
End;

procedure LoadTable298(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(298, 'CP range type');
    oTable.Items.Add(2, 'F', 'Flat-rate. Apply the entire price to this interval, do not pro-rate the price if the full interval has not occurred/been consumed');
    oTable.Items.Add(1, 'P', 'Pro-rate. Apply this price to this interval, pro-rated by whatever portion of the interval has occurred/been consumed');
End;

procedure LoadTable299(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(299, 'Encoding');
    oTable.Items.Add(1, 'A', 'No encoding - data are displayable ASCII characters.');
    oTable.Items.Add(3, 'Base64', 'Encoding as defined by MIME (Multipurpose Internet Mail Extensions) standard RFC 1521. Four consecutive ASCII characters represent three consecutive octets of binary data. Base64 utilizes a 65-character subset of US-ASCII, consisting of both the upper and');
    oTable.Items.Add(2, 'Hex', 'Hexadecimal encoding - consecutive pairs of hexadecimal digits represent consecutive single octets.');
End;

procedure LoadTable300(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(300, 'Namespace ID');
    oTable.Items.Add(1, '...', 'No suggested values defined');
End;

procedure LoadTable301(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(301, 'Universal ID type');
    oTable.Items.Add(1, 'DNS', 'An Internet dotted name. Either in ASCII or as integers');
    oTable.Items.Add(2, 'GUID', 'Same as UUID.');
    oTable.Items.Add(3, 'HCD', 'The CEN Healthcare Coding Scheme Designator. (Identifiers used in DICOM follow this assignment scheme.)');
    oTable.Items.Add(4, 'HL7', 'Reserved for future HL7 registration schemes');
    oTable.Items.Add(5, 'ISO', 'An International Standards Organization Object Identifier');
    oTable.Items.Add(6, 'L,M,N', 'These are reserved for locally defined coding schemes.');
    oTable.Items.Add(7, 'Random', 'Usually a base64 encoded string of random bits.<p>The uniqueness depends on the length of the bits. Mail systems often generate ASCII string "unique names," from a combination of random bits and system names. Obviously, such identifiers will not be constr');
    oTable.Items.Add(8, 'URI', 'Uniform Resource Identifier');
    oTable.Items.Add(9, 'UUID', 'The DCE Universal Unique Identifier');
    oTable.Items.Add(10, 'x400', 'An X.400 MHS format identifier');
    oTable.Items.Add(11, 'x500', 'An X.500 directory name');
End;

procedure LoadTable302(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(302, 'Point of care');
    oTable.Items.Add(1, '...', 'No suggested values defined');
End;

procedure LoadTable303(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(303, 'Room');
    oTable.Items.Add(1, '...', 'No suggested values defined');
End;

procedure LoadTable304(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(304, 'Bed');
    oTable.Items.Add(1, '...', 'No suggested values defined');
End;

procedure LoadTable305(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(305, 'Person location type');
    oTable.Items.Add(1, 'C', 'Clinic');
    oTable.Items.Add(2, 'D', 'Department');
    oTable.Items.Add(3, 'H', 'Home');
    oTable.Items.Add(4, 'N', 'Nursing Unit');
    oTable.Items.Add(5, 'O', 'Provider''s Office');
    oTable.Items.Add(6, 'P', 'Phone');
    oTable.Items.Add(7, 'S', 'SNF');
End;

procedure LoadTable306(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(306, 'Location status');
    oTable.Items.Add(1, '...', 'No suggested values defined');
End;

procedure LoadTable307(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(307, 'Building');
    oTable.Items.Add(1, '...', 'No suggested values defined');
End;

procedure LoadTable308(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(308, 'Floor');
    oTable.Items.Add(1, '...', 'No suggested values defined.');
End;

procedure LoadTable309(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(309, 'Coverage Type');
    oTable.Items.Add(3, 'B', 'Both hospital and physician');
    oTable.Items.Add(1, 'H', 'Hospital/institutional');
    oTable.Items.Add(2, 'P', 'Physician/professional');
    oTable.Items.Add(4, 'RX', 'Pharmacy');
End;

procedure LoadTable311(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(311, 'Job Status');
    oTable.Items.Add(3, 'O', 'Other');
    oTable.Items.Add(1, 'P', 'Permanent');
    oTable.Items.Add(2, 'T', 'Temporary');
    oTable.Items.Add(4, 'U', 'Unknown');
End;

procedure LoadTable312(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(312, 'Policy Scope');
    oTable.Items.Add(1, '...', 'No suggested values defined');
End;

procedure LoadTable313(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(313, 'Policy Source');
    oTable.Items.Add(1, '...', 'No suggested values defined');
End;

procedure LoadTable315(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(315, 'Living Will Code');
    oTable.Items.Add(2, 'F', 'Yes, patient has a living will but it is not on file');
    oTable.Items.Add(4, 'I', 'No, patient does not have a living will but information was provided');
    oTable.Items.Add(3, 'N', 'No, patient does not have a living will and no information was provided');
    oTable.Items.Add(5, 'U', 'Unknown');
    oTable.Items.Add(1, 'Y', 'Yes, patient has a living will');
End;

procedure LoadTable316(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(316, 'Organ Donor Code');
    oTable.Items.Add(2, 'F', 'Yes, patient is a documented donor, but documentation is not on file');
    oTable.Items.Add(4, 'I', 'No, patient is not a documented donor, but information was provided');
    oTable.Items.Add(3, 'N', 'No, patient has not agreed to be a donor');
    oTable.Items.Add(6, 'P', 'Patient leaves organ donation decision to a specific person');
    oTable.Items.Add(5, 'R', 'Patient leaves organ donation decision to relatives');
    oTable.Items.Add(7, 'U', 'Unknown');
    oTable.Items.Add(1, 'Y', 'Yes, patient is a documented donor and documentation is on file');
End;

procedure LoadTable317(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(317, 'Annotations');
    oTable.Items.Add(1, '9900', 'Pace spike');
    oTable.Items.Add(2, '9901', 'SAS marker');
    oTable.Items.Add(3, '9902', 'Sense marker');
    oTable.Items.Add(4, '9903', 'Beat marker');
    oTable.Items.Add(5, '9904', 'etc.');
End;

procedure LoadTable319(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(319, 'Department Cost Center');
    oTable.Items.Add(1, '...', 'No suggested values');
End;

procedure LoadTable320(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(320, 'Item Natural Account Code');
    oTable.Items.Add(1, '...', 'No suggested values');
End;

procedure LoadTable321(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(321, 'Dispense Method');
    oTable.Items.Add(4, 'AD', 'Automatic Dispensing');
    oTable.Items.Add(3, 'F', 'Floor Stock');
    oTable.Items.Add(1, 'TR', 'Traditional');
    oTable.Items.Add(2, 'UD', 'Unit Dose');
End;

procedure LoadTable322(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(322, 'Completion Status');
    oTable.Items.Add(1, 'CP', 'Complete');
    oTable.Items.Add(3, 'NA', 'Not Administered');
    oTable.Items.Add(4, 'PA', 'Partially Administered');
    oTable.Items.Add(2, 'RE', 'Refused');
End;

procedure LoadTable324(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(324, 'Location characteristic ID');
    oTable.Items.Add(11, 'GEN', 'Gender of patient(s)');
    oTable.Items.Add(3, 'IMP', 'Implant: can be used for radiation implant patients');
    oTable.Items.Add(5, 'INF', 'Infectious disease: this location can be used for isolation');
    oTable.Items.Add(7, 'LCR', 'Level of care');
    oTable.Items.Add(2, 'LIC', 'Licensed');
    oTable.Items.Add(8, 'OVR', 'Overflow');
    oTable.Items.Add(6, 'PRL', 'Privacy level: indicating the level of private versus non-private room');
    oTable.Items.Add(10, 'SET', 'Bed is set up');
    oTable.Items.Add(4, 'SHA', 'Shadow: a temporary holding location that does not physically exist');
    oTable.Items.Add(1, 'SMK', 'Smoking');
    oTable.Items.Add(9, 'STF', 'Bed is staffed');
    oTable.Items.Add(12, 'TEA', 'Teaching location');
End;

procedure LoadTable325(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(325, 'Location Relationship ID');
    oTable.Items.Add(6, 'ALI', 'Location Alias(es)');
    oTable.Items.Add(5, 'DTY', 'Nearest  dietary location');
    oTable.Items.Add(3, 'LAB', 'Nearest  lab');
    oTable.Items.Add(4, 'LB2', 'Second nearest lab');
    oTable.Items.Add(7, 'PAR', 'Parent location');
    oTable.Items.Add(1, 'RX', 'Nearest  pharmacy');
    oTable.Items.Add(2, 'RX2', 'Second nearest pharmacy');
End;

procedure LoadTable326(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(326, 'Visit Indicator');
    oTable.Items.Add(1, 'A', 'Account level (default)');
    oTable.Items.Add(2, 'V', 'Visit level');
End;

procedure LoadTable327(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(327, 'Job code');
    oTable.Items.Add(1, '...', 'No suggested values defined');
End;

procedure LoadTable328(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(328, 'Employee classification');
    oTable.Items.Add(1, '...', 'No suggested values defined');
End;

procedure LoadTable329(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(329, 'Quantity method');
    oTable.Items.Add(1, 'A', 'Actual count');
    oTable.Items.Add(2, 'E', 'Estimated (see comment)');
End;

procedure LoadTable330(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(330, 'Marketing basis');
    oTable.Items.Add(2, '510E', '510 (K) exempt');
    oTable.Items.Add(1, '510K', '510 (K)');
    oTable.Items.Add(6, '522S', 'Post marketing study (522)');
    oTable.Items.Add(3, 'PMA', 'Premarketing authorization');
    oTable.Items.Add(4, 'PRE', 'Preamendment');
    oTable.Items.Add(5, 'TXN', 'Transitional');
End;

procedure LoadTable331(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(331, 'Facility type');
    oTable.Items.Add(4, 'A', 'Agent for a foreign manufacturer');
    oTable.Items.Add(3, 'D', 'Distributor');
    oTable.Items.Add(2, 'M', 'Manufacturer');
    oTable.Items.Add(1, 'U', 'User');
End;

procedure LoadTable332(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(332, 'Source type');
    oTable.Items.Add(2, 'A', 'Accept');
    oTable.Items.Add(1, 'I', 'Initiate');
End;

procedure LoadTable333(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(333, 'Driver''s license issuing authority');
    oTable.Items.Add(1, '...', 'No suggested values defined');
End;

procedure LoadTable334(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(334, 'Disabled Person Code');
    oTable.Items.Add(4, 'AP', 'Associated party');
    oTable.Items.Add(2, 'GT', 'Guarantor');
    oTable.Items.Add(3, 'IN', 'Insured');
    oTable.Items.Add(1, 'PT', 'Patient');
End;

procedure LoadTable335(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(335, 'Repeat pattern');
    oTable.Items.Add(23, 'A', 'Ante (before)');
    oTable.Items.Add(8, 'BID', 'twice a day at institution-specified times');
    oTable.Items.Add(17, 'C', 'service is provided continuously between start time and stop time');
    oTable.Items.Add(27, 'D', 'Cibus Diurnus (lunch)');
    oTable.Items.Add(25, 'I', 'Inter');
    oTable.Items.Add(26, 'M', 'Cibus Matutinus (breakfast)');
    oTable.Items.Add(22, 'Meal Related Timings', '<timing>C ("cum")<meal>');
    oTable.Items.Add(21, 'Once', 'one time only.');
    oTable.Items.Add(24, 'P', 'Post (after)');
    oTable.Items.Add(19, 'PRN', 'given as needed');
    oTable.Items.Add(20, 'PRNxxx', 'where xxx is some frequency code');
    oTable.Items.Add(4, 'Q<integer>D', 'every <integer> days');
    oTable.Items.Add(3, 'Q<integer>H', 'every <integer> hours');
    oTable.Items.Add(7, 'Q<integer>J<day#>', 'repeats on a particular day of the week,');
    oTable.Items.Add(6, 'Q<integer>L', 'every <integer> months (Lunar cycle)');
    oTable.Items.Add(2, 'Q<integer>M', 'every <integer> minutes');
    oTable.Items.Add(1, 'Q<integer>S', 'every <integer> seconds');
    oTable.Items.Add(5, 'Q<integer>W', 'every <integer> weeks');
    oTable.Items.Add(12, 'QAM', 'in the morning at institution-specified time');
    oTable.Items.Add(15, 'QHS', 'every day before the hour of sleep');
    oTable.Items.Add(10, 'QID', 'four times a day at institution-specified times');
    oTable.Items.Add(14, 'QOD', 'every other day');
    oTable.Items.Add(16, 'QPM', 'in the evening at institution-specified time');
    oTable.Items.Add(13, 'QSHIFT', 'during each of three eight-hour shifts at institution-specified times');
    oTable.Items.Add(9, 'TID', 'three times a day at institution-specified times');
    oTable.Items.Add(18, 'U <spec>', 'for future use, where <spec> is an interval specification as defined by the UNIX cron specification.');
    oTable.Items.Add(28, 'V', 'Cibus Vespertinus (dinner)');
    oTable.Items.Add(11, 'xID', '"X" times per day at institution-specified times, where X is a numeral 5 or greater.');
End;

procedure LoadTable336(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(336, 'Referral reason');
    oTable.Items.Add(3, 'O', 'Provider Ordered');
    oTable.Items.Add(2, 'P', 'Patient Preference');
    oTable.Items.Add(1, 'S', 'Second Opinion');
    oTable.Items.Add(4, 'W', 'Work Load');
End;

procedure LoadTable337(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(337, 'Certification status');
    oTable.Items.Add(1, 'C', 'Certified');
    oTable.Items.Add(2, 'E', 'Eligible');
End;

procedure LoadTable338(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(338, 'Practitioner ID number type');
    oTable.Items.Add(1, 'CY', 'County number');
    oTable.Items.Add(2, 'DEA', 'Drug Enforcement Agency no.');
    oTable.Items.Add(3, 'GL', 'General ledger number');
    oTable.Items.Add(5, 'L&I', 'Labor and industries number');
    oTable.Items.Add(4, 'LI', 'Labor and industries number');
    oTable.Items.Add(6, 'MCD', 'Medicaid number');
    oTable.Items.Add(7, 'MCR', 'Medicare number');
    oTable.Items.Add(8, 'QA', 'QA number');
    oTable.Items.Add(9, 'SL', 'State license number');
    oTable.Items.Add(10, 'TAX', 'Tax ID number');
    oTable.Items.Add(11, 'TRL', 'Training license number');
    oTable.Items.Add(12, 'UPIN', 'Unique physician ID no.');
End;

procedure LoadTable339(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(339, 'Advanced Beneficiary Notice Code');
    oTable.Items.Add(1, '1', 'Service is subject to medical necessity procedures');
    oTable.Items.Add(2, '2', 'Patient has been informed of responsibility, and agrees to pay for service');
    oTable.Items.Add(3, '3', 'Patient has been informed of responsibility, and asks that the payer be billed');
    oTable.Items.Add(4, '4', 'Advanced Beneficiary Notice has not been signed');
End;

procedure LoadTable340(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(340, 'Procedure Code Modifier');
    oTable.Items.Add(1, '...', 'No suggested values defined');
End;

procedure LoadTable341(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(341, 'Guarantor Credit Rating Code');
    oTable.Items.Add(1, '...', 'No suggested values defined');
End;

procedure LoadTable342(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(342, 'Military Recipient');
    oTable.Items.Add(1, '...', 'No suggested values defined');
End;

procedure LoadTable343(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(343, 'Military Handicapped Program Code');
    oTable.Items.Add(1, '...', 'No suggested values defined');
End;

procedure LoadTable344(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(344, 'Patient''s Relationship to Insured');
    oTable.Items.Add(1, '01', 'Patient is insured');
    oTable.Items.Add(2, '02', 'Spouse');
    oTable.Items.Add(3, '03', 'Natural child/insured financial responsibility');
    oTable.Items.Add(4, '04', 'Natural child/Insured does not have financial responsibility');
    oTable.Items.Add(5, '05', 'Step child');
    oTable.Items.Add(6, '06', 'Foster child');
    oTable.Items.Add(7, '07', 'Ward of the court');
    oTable.Items.Add(8, '08', 'Employee');
    oTable.Items.Add(9, '09', 'Unknown');
    oTable.Items.Add(10, '10', 'Handicapped dependent');
    oTable.Items.Add(11, '11', 'Organ donor');
    oTable.Items.Add(12, '12', 'Cadaver donor');
    oTable.Items.Add(13, '13', 'Grandchild');
    oTable.Items.Add(14, '14', 'Niece/nephew');
    oTable.Items.Add(15, '15', 'Injured plaintiff');
    oTable.Items.Add(16, '16', 'Sponsored dependent');
    oTable.Items.Add(17, '17', 'Minor dependent of a minor dependent');
    oTable.Items.Add(18, '18', 'Parent');
    oTable.Items.Add(19, '19', 'Grandparent');
End;

procedure LoadTable345(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(345, 'Appeal Reason');
    oTable.Items.Add(1, '...', 'No suggested values defined');
End;

procedure LoadTable346(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(346, 'Certification Agency');
    oTable.Items.Add(1, '...', 'No suggested values defined');
End;

procedure LoadTable347(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(347, 'State/province');
    oTable.Items.Add(1, '...', 'No suggested values defined');
    oTable.Items.Add(1, 'AB', 'Alberta  (US and Canada)');
    oTable.Items.Add(2, 'MI', 'Michigan  (US)');
End;

procedure LoadTable348(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(348, 'Special Program Indicator');
    oTable.Items.Add(1, '...', 'No suggested values defined');
End;

procedure LoadTable349(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(349, 'PSRO/UR Approval Indicator');
    oTable.Items.Add(1, '...', 'No suggested values');
End;

procedure LoadTable350(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(350, 'Occurrence code');
    oTable.Items.Add(1, '...', 'Use NUBC codes');
End;

procedure LoadTable351(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(351, 'Occurrence span');
    oTable.Items.Add(1, '...', 'use NUBC codes');
End;

procedure LoadTable353(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(353, 'CWE statuses');
    oTable.Items.Add(4, 'NA', 'Not applicable');
    oTable.Items.Add(5, 'NASK', 'Not asked');
    oTable.Items.Add(3, 'NAV', 'Not available');
    oTable.Items.Add(1, 'U', 'Unknown');
    oTable.Items.Add(2, 'UASK', 'Asked but Unknown');
End;

procedure LoadTable354(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(354, 'Message structure');
    oTable.Items.Add(1, 'ACK', 'Varies');
    oTable.Items.Add(2, 'ADR_A19', 'A19');
    oTable.Items.Add(3, 'ADT_A01', 'A01, A04, A08, A13');
    oTable.Items.Add(4, 'ADT_A02', 'A02');
    oTable.Items.Add(5, 'ADT_A03', 'A03');
    oTable.Items.Add(6, 'ADT_A05', 'A05, A14, A28, A31');
    oTable.Items.Add(7, 'ADT_A06', 'A06, A07');
    oTable.Items.Add(8, 'ADT_A09', 'A09, A10, A11');
    oTable.Items.Add(9, 'ADT_A12', 'A12');
    oTable.Items.Add(10, 'ADT_A15', 'A15');
    oTable.Items.Add(11, 'ADT_A16', 'A16');
    oTable.Items.Add(12, 'ADT_A17', 'A17');
    oTable.Items.Add(13, 'ADT_A18', 'A18');
    oTable.Items.Add(14, 'ADT_A20', 'A20');
    oTable.Items.Add(15, 'ADT_A21', 'A21, A22, A23, A25, A26, A27, A29, A32, A33');
    oTable.Items.Add(16, 'ADT_A24', 'A24');
    oTable.Items.Add(17, 'ADT_A30', 'A30, A34, A35, A36, A46, A47, A48, A49');
    oTable.Items.Add(18, 'ADT_A37', 'A37');
    oTable.Items.Add(19, 'ADT_A38', 'A38');
    oTable.Items.Add(20, 'ADT_A39', 'A39, A40, A41, A42');
    oTable.Items.Add(21, 'ADT_A43', 'A43, A44');
    oTable.Items.Add(22, 'ADT_A45', 'A45');
    oTable.Items.Add(23, 'ADT_A50', 'A50, A51');
    oTable.Items.Add(24, 'ADT_A52', 'A52, A53');
    oTable.Items.Add(25, 'ADT_A54', 'A54, A55');
    oTable.Items.Add(26, 'ADT_A60', 'A60');
    oTable.Items.Add(27, 'ADT_A61', 'A61, A62');
    oTable.Items.Add(28, 'BAR_P01', 'P01');
    oTable.Items.Add(29, 'BAR_P02', 'P02');
    oTable.Items.Add(30, 'BAR_P05', 'P05');
    oTable.Items.Add(31, 'BAR_P06', 'P06');
    oTable.Items.Add(32, 'BAR_P10', 'P10');
    oTable.Items.Add(33, 'BAR_P12', 'P12');
    oTable.Items.Add(34, 'BPS_O29', 'O29');
    oTable.Items.Add(35, 'BRP_O30', 'O30');
    oTable.Items.Add(36, 'BRT_O32', 'O32');
    oTable.Items.Add(37, 'BTS_O31', 'O31');
    oTable.Items.Add(38, 'CRM_C01', 'C01, C02, C03, C04, C05, C06, C07, C08');
    oTable.Items.Add(39, 'CSU_C09', 'C09, C10, C11, C12');
    oTable.Items.Add(40, 'DFT_P03', 'P03');
    oTable.Items.Add(41, 'DFT_P11', 'P11');
    oTable.Items.Add(42, 'DOC_T12', 'T12');
    oTable.Items.Add(43, 'DSR_Q01', 'Q01');
    oTable.Items.Add(44, 'DSR_Q03', 'Q03');
    oTable.Items.Add(45, 'EAC_U07', 'U07');
    oTable.Items.Add(46, 'EAN_U09', 'U09');
    oTable.Items.Add(47, 'EAR_U08', 'U08');
    oTable.Items.Add(48, 'EHC_E01', 'E01');
    oTable.Items.Add(49, 'EHC_E02', 'E02');
    oTable.Items.Add(50, 'EHC_E04', 'E04');
    oTable.Items.Add(51, 'EHC_E10', 'E10');
    oTable.Items.Add(52, 'EHC_E12', 'E12');
    oTable.Items.Add(53, 'EHC_E13', 'E13');
    oTable.Items.Add(54, 'EHC_E15', 'E15');
    oTable.Items.Add(55, 'EHC_E20', 'E20');
    oTable.Items.Add(56, 'EHC_E21', 'E21');
    oTable.Items.Add(57, 'EHC_E24', 'E24');
    oTable.Items.Add(58, 'ESR_U02', 'U02');
    oTable.Items.Add(59, 'ESU_U01', 'U01');
    oTable.Items.Add(60, 'INR_U06', 'U06');
    oTable.Items.Add(61, 'INU_U05', 'U05');
    oTable.Items.Add(62, 'LSU_U12', 'U12, U13');
    oTable.Items.Add(63, 'MDM_T01', 'T01, T03, T05, T07, T09, T11');
    oTable.Items.Add(64, 'MDM_T02', 'T02, T04, T06, T08, T10');
    oTable.Items.Add(65, 'MFK_M01', 'M01, M02, M03, M04, M05, M06, M07, M08, M09, M10, M11');
    oTable.Items.Add(66, 'MFN_M01', 'M01');
    oTable.Items.Add(67, 'MFN_M02', 'M02');
    oTable.Items.Add(68, 'MFN_M03', 'M03');
    oTable.Items.Add(69, 'MFN_M04', 'M04');
    oTable.Items.Add(70, 'MFN_M05', 'M05');
    oTable.Items.Add(71, 'MFN_M06', 'M06');
    oTable.Items.Add(72, 'MFN_M07', 'M07');
    oTable.Items.Add(73, 'MFN_M08', 'M08');
    oTable.Items.Add(74, 'MFN_M09', 'M09');
    oTable.Items.Add(75, 'MFN_M10', 'M10');
    oTable.Items.Add(76, 'MFN_M11', 'M11');
    oTable.Items.Add(77, 'MFN_M12', 'M12');
    oTable.Items.Add(78, 'MFN_M13', 'M13');
    oTable.Items.Add(79, 'MFN_M15', 'M15');
    oTable.Items.Add(80, 'MFN_M16', 'M16');
    oTable.Items.Add(81, 'MFN_M17', 'M17');
    oTable.Items.Add(82, 'MFQ_M01', 'M01, M02, M03, M04, M05, M06');
    oTable.Items.Add(83, 'MFR_M01', 'M01, M02, M03,');
    oTable.Items.Add(84, 'MFR_M04', 'M04');
    oTable.Items.Add(85, 'MFR_M05', 'M05');
    oTable.Items.Add(86, 'MFR_M06', 'M06');
    oTable.Items.Add(87, 'MFR_M07', 'M07');
    oTable.Items.Add(88, 'NMD_N02', 'N02');
    oTable.Items.Add(89, 'NMQ_N01', 'N01');
    oTable.Items.Add(90, 'NMR_N01', 'N01');
    oTable.Items.Add(91, 'OMB_O27', 'O27');
    oTable.Items.Add(92, 'OMD_O03', 'O03');
    oTable.Items.Add(93, 'OMG_O19', 'O19');
    oTable.Items.Add(94, 'OMI_O23', 'O23');
    oTable.Items.Add(95, 'OML_O21', 'O21');
    oTable.Items.Add(96, 'OML_O33', 'O33');
    oTable.Items.Add(97, 'OML_O35', 'O35');
    oTable.Items.Add(98, 'OMN_O07', 'O07');
    oTable.Items.Add(99, 'OMP_O09', 'O09');
    oTable.Items.Add(100, 'OMS_O05', 'O05');
    oTable.Items.Add(101, 'OPL_O37', 'O37');
    oTable.Items.Add(102, 'OPR_O38', 'O38');
    oTable.Items.Add(103, 'OPU_R25', 'R25');
    oTable.Items.Add(104, 'ORB_O28', 'O28');
    oTable.Items.Add(105, 'ORD_O04', 'O04');
    oTable.Items.Add(106, 'ORF_R04', 'R04');
    oTable.Items.Add(107, 'ORG_O20', 'O20');
    oTable.Items.Add(108, 'ORI_O24', 'O24');
    oTable.Items.Add(109, 'ORL_O22', 'O22');
    oTable.Items.Add(110, 'ORL_O34', 'O34');
    oTable.Items.Add(111, 'ORL_O36', 'O36');
    oTable.Items.Add(112, 'ORM_O01', 'O01');
    oTable.Items.Add(113, 'ORN_O08', 'O08');
    oTable.Items.Add(114, 'ORP_O10', 'O10');
    oTable.Items.Add(115, 'ORR_O02', 'O02');
    oTable.Items.Add(116, 'ORS_O06', 'O06');
    oTable.Items.Add(117, 'ORU_R01', 'R01');
    oTable.Items.Add(118, 'ORU_R30', 'R30');
    oTable.Items.Add(209, 'ORU_W01', 'W01');
    oTable.Items.Add(119, 'OSQ_Q06', 'Q06');
    oTable.Items.Add(120, 'OSR_Q06', 'Q06');
    oTable.Items.Add(121, 'OUL_R21', 'R21');
    oTable.Items.Add(122, 'OUL_R22', 'R22');
    oTable.Items.Add(123, 'OUL_R23', 'R23');
    oTable.Items.Add(124, 'OUL_R24', 'R24');
    oTable.Items.Add(125, 'PEX_P07', 'P07, P08');
    oTable.Items.Add(126, 'PGL_PC6', 'PC6, PC7, PC8');
    oTable.Items.Add(127, 'PMU_B01', 'B01, B02');
    oTable.Items.Add(128, 'PMU_B03', 'B03');
    oTable.Items.Add(129, 'PMU_B04', 'B04, B05, B06');
    oTable.Items.Add(130, 'PMU_B07', 'B07');
    oTable.Items.Add(131, 'PMU_B08', 'B08');
    oTable.Items.Add(132, 'PPG_PCG', 'PCC, PCG, PCH, PCJ');
    oTable.Items.Add(133, 'PPP_PCB', 'PCB, PCD');
    oTable.Items.Add(134, 'PPR_PC1', 'PC1, PC2, PC3');
    oTable.Items.Add(135, 'PPT_PCL', 'PCL');
    oTable.Items.Add(136, 'PPV_PCA', 'PCA');
    oTable.Items.Add(137, 'PRR_PC5', 'PC5');
    oTable.Items.Add(138, 'PTR_PCF', 'PCF');
    oTable.Items.Add(139, 'QBP_E03', 'E03');
    oTable.Items.Add(140, 'QBP_E22', 'E22');
    oTable.Items.Add(141, 'QBP_Q11', 'Q11');
    oTable.Items.Add(142, 'QBP_Q13', 'Q13');
    oTable.Items.Add(143, 'QBP_Q15', 'Q15');
    oTable.Items.Add(144, 'QBP_Q21', 'Q21, Q22, Q23,Q24, Q25');
    oTable.Items.Add(145, 'QCK_Q02', 'Q02');
    oTable.Items.Add(146, 'QCN_J01', 'J01, J02');
    oTable.Items.Add(210, 'QRF_W02', 'W02');
    oTable.Items.Add(147, 'QRY_A19', 'A19');
    oTable.Items.Add(148, 'QRY_PC4', 'PC4, PC9, PCE, PCK');
    oTable.Items.Add(149, 'QRY_Q01', 'Q01, Q26, Q27, Q28, Q29, Q30');
    oTable.Items.Add(150, 'QRY_Q02', 'Q02');
    oTable.Items.Add(151, 'QRY_R02', 'R02');
    oTable.Items.Add(152, 'QRY_T12', 'T12');
    oTable.Items.Add(153, 'QSB_Q16', 'Q16');
    oTable.Items.Add(154, 'QVR_Q17', 'Q17');
    oTable.Items.Add(155, 'RAR_RAR', 'RAR');
    oTable.Items.Add(156, 'RAS_O17', 'O17');
    oTable.Items.Add(157, 'RCI_I05', 'I05');
    oTable.Items.Add(158, 'RCL_I06', 'I06');
    oTable.Items.Add(159, 'RDE_O11', 'O11, O25');
    oTable.Items.Add(160, 'RDR_RDR', 'RDR');
    oTable.Items.Add(161, 'RDS_O13', 'O13');
    oTable.Items.Add(162, 'RDY_K15', 'K15');
    oTable.Items.Add(163, 'REF_I12', 'I12, I13, I14, I15');
    oTable.Items.Add(164, 'RER_RER', 'RER');
    oTable.Items.Add(165, 'RGR_RGR', 'RGR');
    oTable.Items.Add(166, 'RGV_O15', 'O15');
    oTable.Items.Add(167, 'ROR_ROR', 'ROR');
    oTable.Items.Add(168, 'RPA_I08', 'I08, I09. I10, I11');
    oTable.Items.Add(169, 'RPI_I01', 'I01, I04');
    oTable.Items.Add(170, 'RPI_I04', 'I04');
    oTable.Items.Add(171, 'RPL_I02', 'I02');
    oTable.Items.Add(172, 'RPR_I03', 'I03');
    oTable.Items.Add(173, 'RQA_I08', 'I08, I09, I10, I11');
    oTable.Items.Add(174, 'RQC_I05', 'I05, I06');
    oTable.Items.Add(175, 'RQI_I01', 'I01, I02, I03, I07');
    oTable.Items.Add(176, 'RQP_I04', 'I04');
    oTable.Items.Add(177, 'RRA_O18', 'O18');
    oTable.Items.Add(178, 'RRD_O14', 'O14');
    oTable.Items.Add(179, 'RRE_O12', 'O12, O26');
    oTable.Items.Add(180, 'RRG_O16', 'O16');
    oTable.Items.Add(181, 'RRI_I12', 'I12, I13, I14, I15');
    oTable.Items.Add(182, 'RSP_E03', 'E03');
    oTable.Items.Add(183, 'RSP_E22', 'E22');
    oTable.Items.Add(184, 'RSP_K11', 'K11');
    oTable.Items.Add(185, 'RSP_K21', 'K21');
    oTable.Items.Add(186, 'RSP_K23', 'K23, K24');
    oTable.Items.Add(187, 'RSP_K25', 'K25');
    oTable.Items.Add(188, 'RSP_K31', 'K31');
    oTable.Items.Add(189, 'RSP_Q11', 'Q11');
    oTable.Items.Add(190, 'RTB_K13', 'K13');
    oTable.Items.Add(191, 'SDR_S31', 'S31, S36');
    oTable.Items.Add(192, 'SDR_S32', 'S32, S37');
    oTable.Items.Add(193, 'SIU_S12', 'S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S26');
    oTable.Items.Add(194, 'SLR_S28', 'S28, S29, S30, S34, S35');
    oTable.Items.Add(195, 'SQM_S25', 'S25');
    oTable.Items.Add(196, 'SQR_S25', 'S25');
    oTable.Items.Add(197, 'SRM_S01', 'S01, S02, S03, S04, S05, S06, S07, S08, S09, S10, S11');
    oTable.Items.Add(198, 'SRR_S01', 'S01, S02, S03, S04, S05, S06, S07, S08, S09, S10, S11');
    oTable.Items.Add(199, 'SSR_U04', 'U04');
    oTable.Items.Add(200, 'SSU_U03', 'U03');
    oTable.Items.Add(201, 'STC_S33', 'S33');
    oTable.Items.Add(202, 'SUR_P09', 'P09');
    oTable.Items.Add(203, 'TCU_U10', 'U10, U11');
    oTable.Items.Add(204, 'UDM_Q05', 'Q05');
    oTable.Items.Add(205, 'VXQ_V01', 'V01');
    oTable.Items.Add(206, 'VXR_V03', 'V03');
    oTable.Items.Add(207, 'VXU_V04', 'V04');
    oTable.Items.Add(208, 'VXX_V02', 'V02');
End;

procedure LoadTable355(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(355, 'Primary key value type');
    oTable.Items.Add(2, 'CE', 'Coded element');
    oTable.Items.Add(3, 'CWE', 'Coded with Exceptions');
    oTable.Items.Add(1, 'PL', 'Person location');
End;

procedure LoadTable356(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(356, 'Alternate character set handling scheme');
    oTable.Items.Add(3, '<null>', 'This is the default, indicating that there is no character set switching occurring in this message.');
    oTable.Items.Add(2, '2.3', 'The character set switching mode specified in HL7 2.5, section 2.7.2, "Escape sequences supporting multiple character sets" and section 2.A.46, "XPN - extended person name".');
    oTable.Items.Add(1, 'ISO 2022-1994', 'This standard is titled "Information Technology - Character Code Structure and Extension Technique". .');
End;

procedure LoadTable357(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(357, 'Message error condition codes');
    oTable.Items.Add(1, '0', 'Message accepted');
    oTable.Items.Add(2, '100', 'Segment sequence error');
    oTable.Items.Add(3, '101', 'Required field missing');
    oTable.Items.Add(4, '102', 'Data type error');
    oTable.Items.Add(5, '103', 'Table value not found');
    oTable.Items.Add(6, '200', 'Unsupported message type');
    oTable.Items.Add(7, '201', 'Unsupported event code');
    oTable.Items.Add(8, '202', 'Unsupported processing id');
    oTable.Items.Add(9, '203', 'Unsupported version id');
    oTable.Items.Add(10, '204', 'Unknown key identifier');
    oTable.Items.Add(11, '205', 'Duplicate key identifier');
    oTable.Items.Add(12, '206', 'Application record locked');
    oTable.Items.Add(13, '207', 'Application internal error');
End;

procedure LoadTable358(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(358, 'Practitioner group');
    oTable.Items.Add(1, '...', 'No suggested values defined');
End;

procedure LoadTable359(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(359, 'Diagnosis Priority');
    oTable.Items.Add(4, '...', '');
    oTable.Items.Add(1, '0', 'Not included in diagnosis ranking');
    oTable.Items.Add(2, '1', 'The primary diagnosis');
    oTable.Items.Add(3, '2', 'For ranked secondary diagnoses');
End;

procedure LoadTable360(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(360, 'Degree/license/certificate');
    oTable.Items.Add(3, 'AA', 'Associate of Arts');
    oTable.Items.Add(2, 'AAS', 'Associate of Applied Science');
    oTable.Items.Add(4, 'ABA', 'Associate of Business Administration');
    oTable.Items.Add(5, 'AE', 'Associate of Engineering');
    oTable.Items.Add(6, 'AS', 'Associate of Science');
    oTable.Items.Add(7, 'BA', 'Bachelor of Arts');
    oTable.Items.Add(8, 'BBA', 'Bachelor of Business Administration');
    oTable.Items.Add(9, 'BE', 'Bachelor or Engineering');
    oTable.Items.Add(10, 'BFA', 'Bachelor of Fine Arts');
    oTable.Items.Add(11, 'BN', 'Bachelor of Nursing');
    oTable.Items.Add(12, 'BS', 'Bachelor of Science');
    oTable.Items.Add(13, 'BSL', 'Bachelor of Science - Law');
    oTable.Items.Add(14, 'BSN', 'Bachelor on Science - Nursing');
    oTable.Items.Add(15, 'BT', 'Bachelor of Theology');
    oTable.Items.Add(17, 'CANP', 'Certified Adult Nurse Practitioner');
    oTable.Items.Add(16, 'CER', 'Certificate');
    oTable.Items.Add(18, 'CMA', 'Certified Medical Assistant');
    oTable.Items.Add(20, 'CNM', 'Certified Nurse Midwife');
    oTable.Items.Add(19, 'CNP', 'Certified Nurse Practitioner');
    oTable.Items.Add(22, 'CNS', 'Certified Nurse Specialist');
    oTable.Items.Add(23, 'CPNP', 'Certified Pediatric Nurse Practitioner');
    oTable.Items.Add(21, 'CRN', 'Certified Registered Nurse');
    oTable.Items.Add(25, 'DBA', 'Doctor of Business Administration');
    oTable.Items.Add(26, 'DED', 'Doctor of Education');
    oTable.Items.Add(24, 'DIP', 'Diploma');
    oTable.Items.Add(32, 'DO', 'Doctor of Osteopathy');
    oTable.Items.Add(33, 'EMT', 'Emergency Medical Technician');
    oTable.Items.Add(34, 'EMTP', 'Emergency Medical Technician - Paramedic');
    oTable.Items.Add(35, 'FPNP', 'Family Practice Nurse Practitioner');
    oTable.Items.Add(36, 'HS', 'High School Graduate');
    oTable.Items.Add(37, 'JD', 'Juris Doctor');
    oTable.Items.Add(38, 'MA', 'Master of Arts');
    oTable.Items.Add(39, 'MBA', 'Master of Business Administration');
    oTable.Items.Add(40, 'MCE', 'Master of Civil Engineering');
    oTable.Items.Add(31, 'MD', 'Doctor of Medicine');
    oTable.Items.Add(51, 'MDA', 'Medical Assistant');
    oTable.Items.Add(41, 'MDI', 'Master of Divinity');
    oTable.Items.Add(44, 'ME', 'Master of Engineering');
    oTable.Items.Add(42, 'MED', 'Master of Education');
    oTable.Items.Add(43, 'MEE', 'Master of Electrical Engineering');
    oTable.Items.Add(45, 'MFA', 'Master of Fine Arts');
    oTable.Items.Add(46, 'MME', 'Master of Mechanical Engineering');
    oTable.Items.Add(47, 'MS', 'Master of Science');
    oTable.Items.Add(48, 'MSL', 'Master of Science - Law');
    oTable.Items.Add(49, 'MSN', 'Master of Science - Nursing');
    oTable.Items.Add(50, 'MT', 'Master of Theology');
    oTable.Items.Add(53, 'NG', 'Non-Graduate');
    oTable.Items.Add(54, 'NP', 'Nurse Practitioner');
    oTable.Items.Add(55, 'PA', 'Physician Assistant');
    oTable.Items.Add(27, 'PharmD', 'Doctor of Pharmacy');
    oTable.Items.Add(29, 'PHD', 'Doctor of Philosophy');
    oTable.Items.Add(28, 'PHE', 'Doctor of Engineering');
    oTable.Items.Add(30, 'PHS', 'Doctor of Science');
    oTable.Items.Add(1, 'PN', 'Advanced Practice Nurse');
    oTable.Items.Add(56, 'RMA', 'Registered Medical Assistant');
    oTable.Items.Add(57, 'RPH', 'Registered Pharmacist');
    oTable.Items.Add(58, 'SEC', 'Secretarial Certificate');
    oTable.Items.Add(59, 'TS', 'Trade School Graduate');
End;

procedure LoadTable361(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(361, 'Application');
    oTable.Items.Add(1, '...', 'No suggested values defined');
End;

procedure LoadTable362(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(362, 'Facility');
    oTable.Items.Add(1, '...', 'No suggested values defined');
End;

procedure LoadTable363(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(363, 'Assigning authority');
    oTable.Items.Add(1, '...', 'No suggested values');
End;

procedure LoadTable364(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(364, 'Comment type');
    oTable.Items.Add(4, '1R', 'Primary Reason');
    oTable.Items.Add(5, '2R', 'Secondary Reason');
    oTable.Items.Add(2, 'AI', 'Ancillary Instructions');
    oTable.Items.Add(8, 'DR', 'Duplicate/Interaction Reason');
    oTable.Items.Add(3, 'GI', 'General Instructions');
    oTable.Items.Add(6, 'GR', 'General Reason');
    oTable.Items.Add(1, 'PI', 'Patient Instructions');
    oTable.Items.Add(7, 'RE', 'Remark');
End;

procedure LoadTable365(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(365, 'Equipment state');
    oTable.Items.Add(10, '...', '(null) No state change');
    oTable.Items.Add(6, 'CL', 'Clearing');
    oTable.Items.Add(4, 'CO', 'Configuring');
    oTable.Items.Add(9, 'ES', 'E-stopped');
    oTable.Items.Add(3, 'ID', 'Idle');
    oTable.Items.Add(2, 'IN', 'Initializing');
    oTable.Items.Add(5, 'OP', 'Normal Operation');
    oTable.Items.Add(7, 'PA', 'Pausing');
    oTable.Items.Add(8, 'PD', 'Paused');
    oTable.Items.Add(1, 'PU', 'Powered Up');
End;

procedure LoadTable366(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(366, 'Local/remote control state');
    oTable.Items.Add(3, '...', '(null) No state change');
    oTable.Items.Add(1, 'L', 'Local');
    oTable.Items.Add(2, 'R', 'Remote');
End;

procedure LoadTable367(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(367, 'Alert level');
    oTable.Items.Add(5, '...', '(null) No level change');
    oTable.Items.Add(4, 'C', 'Critical');
    oTable.Items.Add(1, 'N', 'Normal');
    oTable.Items.Add(3, 'S', 'Serious');
    oTable.Items.Add(2, 'W', 'Warning');
End;

procedure LoadTable368(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(368, 'Remote control command');
    oTable.Items.Add(16, 'AB', 'Abort');
    oTable.Items.Add(10, 'CL', 'Clear');
    oTable.Items.Add(7, 'CN', 'Clear Notification');
    oTable.Items.Add(18, 'DI', 'Disable Sending Events');
    oTable.Items.Add(17, 'EN', 'Enable Sending Events');
    oTable.Items.Add(13, 'ES', 'Emergency -stop');
    oTable.Items.Add(19, 'EX', 'Execute (command specified in field Parameters (ST) 01394)');
    oTable.Items.Add(8, 'IN', 'Initialize/Initiate');
    oTable.Items.Add(14, 'LC', 'Local Control Request');
    oTable.Items.Add(4, 'LK', 'Lock');
    oTable.Items.Add(2, 'LO', 'Load');
    oTable.Items.Add(11, 'PA', 'Pause');
    oTable.Items.Add(15, 'RC', 'Remote Control Request');
    oTable.Items.Add(12, 'RE', 'Resume');
    oTable.Items.Add(1, 'SA', 'Sampling');
    oTable.Items.Add(9, 'SU', 'Setup');
    oTable.Items.Add(6, 'TT', 'Transport To');
    oTable.Items.Add(5, 'UC', 'Unlock');
    oTable.Items.Add(3, 'UN', 'Unload');
End;

procedure LoadTable369(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(369, 'Specimen Role');
    oTable.Items.Add(1, 'B', 'Blind Sample');
    oTable.Items.Add(2, 'C', 'Calibrator, used for initial setting of calibration');
    oTable.Items.Add(3, 'E', 'Electronic QC, used with manufactured reference providing signals that simulate QC results');
    oTable.Items.Add(4, 'F', 'Specimen used for testing proficiency of the organization performing the testing (Filler)');
    oTable.Items.Add(5, 'G', 'Group (where a specimen consists of multiple individual elements that are not individually identified)');
    oTable.Items.Add(6, 'L', 'Pool (aliquots of individual specimens combined to form a single specimen representing all of the components.)');
    oTable.Items.Add(7, 'O', 'Specimen used for testing Operator Proficiency');
    oTable.Items.Add(8, 'P', 'Patient (default if blank component value)');
    oTable.Items.Add(9, 'Q', 'Control specimen');
    oTable.Items.Add(10, 'R', 'Replicate (of patient sample as a control)');
    oTable.Items.Add(11, 'V', 'Verifying Calibrator, used for periodic calibration checks');
End;

procedure LoadTable370(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(370, 'Container status');
    oTable.Items.Add(1, 'I', 'Identified');
    oTable.Items.Add(5, 'L', 'Left Equipment');
    oTable.Items.Add(6, 'M', 'Missing');
    oTable.Items.Add(3, 'O', 'In Process');
    oTable.Items.Add(2, 'P', 'In Position');
    oTable.Items.Add(4, 'R', 'Process Completed');
    oTable.Items.Add(8, 'U', 'Unknown');
    oTable.Items.Add(7, 'X', 'Container Unavailable');
End;

procedure LoadTable371(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(371, 'Additive/Preservative');
    oTable.Items.Add(5, 'ACDA', 'ACD Solution A');
    oTable.Items.Add(6, 'ACDB', 'ACD Solution B');
    oTable.Items.Add(7, 'ACET', 'Acetic Acid');
    oTable.Items.Add(8, 'AMIES', 'Amies transport medium');
    oTable.Items.Add(10, 'BACTM', 'Bacterial Transport medium');
    oTable.Items.Add(13, 'BF10', 'Buffered 10% formalin');
    oTable.Items.Add(11, 'BOR', 'Borate Boric Acid');
    oTable.Items.Add(12, 'BOUIN', 'Bouin''s solution');
    oTable.Items.Add(15, 'BSKM', 'Buffered skim milk');
    oTable.Items.Add(2, 'C32', '3.2%  Citrate');
    oTable.Items.Add(3, 'C38', '3.8% Citrate');
    oTable.Items.Add(16, 'CARS', 'Carson''s Modified 10% formalin');
    oTable.Items.Add(17, 'CARY', 'Cary Blair Medium');
    oTable.Items.Add(18, 'CHLTM', 'Chlamydia transport medium');
    oTable.Items.Add(19, 'CTAD', 'CTAD (this should be spelled out if not universally understood)');
    oTable.Items.Add(36, 'EDTK', 'Potassium/K EDTA');
    oTable.Items.Add(37, 'EDTK15', 'Potassium/K EDTA 15%');
    oTable.Items.Add(38, 'EDTK75', 'Potassium/K EDTA 7.5%');
    oTable.Items.Add(48, 'EDTN', 'Sodium/Na EDTA');
    oTable.Items.Add(20, 'ENT', 'Enteric bacteria transport medium');
    oTable.Items.Add(21, 'ENT+', 'Enteric plus');
    oTable.Items.Add(1, 'F10', '10% Formalin');
    oTable.Items.Add(52, 'FDP', 'Thrombin NIH; soybean trypsin inhibitor (Fibrin Degradation Products)');
    oTable.Items.Add(45, 'FL10', 'Sodium Fluoride, 10mg');
    oTable.Items.Add(44, 'FL100', 'Sodium Fluoride, 100mg');
    oTable.Items.Add(4, 'HCL6', '6N HCL');
    oTable.Items.Add(9, 'HEPA', 'Ammonium heparin');
    oTable.Items.Add(25, 'HEPL', 'Lithium/Li  Heparin');
    oTable.Items.Add(47, 'HEPN', 'Sodium/Na  Heparin');
    oTable.Items.Add(31, 'HNO3', 'Nitric Acid');
    oTable.Items.Add(22, 'JKM', 'Jones Kendrick Medium');
    oTable.Items.Add(23, 'KARN', 'Karnovsky''s fixative');
    oTable.Items.Add(35, 'KOX', 'Potassium Oxalate');
    oTable.Items.Add(24, 'LIA', 'Lithium iodoacetate');
    oTable.Items.Add(26, 'M4', 'M4');
    oTable.Items.Add(27, 'M4RT', 'M4-RT');
    oTable.Items.Add(28, 'M5', 'M5');
    oTable.Items.Add(29, 'MICHTM', 'Michel''s transport medium');
    oTable.Items.Add(30, 'MMDTM', 'MMD transport medium');
    oTable.Items.Add(43, 'NAF', 'Sodium Fluoride');
    oTable.Items.Add(46, 'NAPS', 'Sodium polyanethol sulfonate 0.35% in 0.85% sodium chloride');
    oTable.Items.Add(32, 'NONE', 'None');
    oTable.Items.Add(33, 'PAGE', 'Pages''s Saline');
    oTable.Items.Add(34, 'PHENOL', 'Phenol');
    oTable.Items.Add(39, 'PVA', 'PVA (polyvinylalcohol)');
    oTable.Items.Add(40, 'RLM', 'Reagan Lowe Medium');
    oTable.Items.Add(42, 'SILICA', 'Siliceous earth, 12 mg');
    oTable.Items.Add(49, 'SPS', 'SPS(this should be spelled out if not universally understood)');
    oTable.Items.Add(41, 'SST', 'Serum Separator Tube (Polymer Gel)');
    oTable.Items.Add(50, 'STUTM', 'Stuart transport medium');
    oTable.Items.Add(51, 'THROM', 'Thrombin');
    oTable.Items.Add(53, 'THYMOL', 'Thymol');
    oTable.Items.Add(54, 'THYO', 'Thyoglycollate broth');
    oTable.Items.Add(55, 'TOLU', 'Toluene');
    oTable.Items.Add(56, 'URETM', 'Ureaplasma transport medium');
    oTable.Items.Add(57, 'VIRTM', 'Viral Transport medium');
    oTable.Items.Add(14, 'WEST', 'Buffered Citrate (Westergren Sedimentation Rate)');
End;

procedure LoadTable372(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(372, 'Specimen component');
    oTable.Items.Add(3, 'BLD', 'Whole blood, homogeneous');
    oTable.Items.Add(4, 'BSEP', 'Whole blood, separated');
    oTable.Items.Add(8, 'PLAS', 'Plasma, NOS (not otherwise specified)');
    oTable.Items.Add(6, 'PPP', 'Platelet poor plasma');
    oTable.Items.Add(5, 'PRP', 'Platelet rich plasma');
    oTable.Items.Add(2, 'SED', 'Sediment');
    oTable.Items.Add(7, 'SER', 'Serum, NOS (not otherwise specified)');
    oTable.Items.Add(1, 'SUP', 'Supernatant');
End;

procedure LoadTable373(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(373, 'Treatment');
    oTable.Items.Add(4, 'ACID', 'Acidification');
    oTable.Items.Add(6, 'ALK', 'Alkalization');
    oTable.Items.Add(3, 'DEFB', 'Defibrination');
    oTable.Items.Add(7, 'FILT', 'Filtration');
    oTable.Items.Add(1, 'LDLP', 'LDL Precipitation');
    oTable.Items.Add(5, 'NEUT', 'Neutralization');
    oTable.Items.Add(2, 'RECA', 'Recalification');
    oTable.Items.Add(8, 'UFIL', 'Ultrafiltration');
End;

procedure LoadTable374(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(374, 'System induced contaminants');
    oTable.Items.Add(1, 'CNTM', 'Present, type of contamination unspecified');
End;

procedure LoadTable375(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(375, 'Artificial blood');
    oTable.Items.Add(2, 'FLUR', 'Fluorocarbons');
    oTable.Items.Add(1, 'SFHB', 'Stromal free hemoglobin preparations');
End;

procedure LoadTable376(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(376, 'Special Handling Code');
    oTable.Items.Add(2, 'AMB', 'Ambient temperature');
    oTable.Items.Add(1, 'C37', 'Body temperature');
    oTable.Items.Add(3, 'CAMB', 'Critical ambient temperature');
    oTable.Items.Add(12, 'CATM', 'Protect from air');
    oTable.Items.Add(7, 'CFRZ', 'Critical frozen temperature');
    oTable.Items.Add(5, 'CREF', 'Critical refrigerated temperature');
    oTable.Items.Add(8, 'DFRZ', 'Deep frozen');
    oTable.Items.Add(13, 'DRY', 'Dry');
    oTable.Items.Add(6, 'FRZ', 'Frozen temperature');
    oTable.Items.Add(17, 'MTLF', 'Metal Free');
    oTable.Items.Add(10, 'NTR', 'Liquid nitrogen');
    oTable.Items.Add(11, 'PRTL', 'Protect from light');
    oTable.Items.Add(15, 'PSA', 'Do not shake');
    oTable.Items.Add(14, 'PSO', 'No shock');
    oTable.Items.Add(4, 'REF', 'Refrigerated temperature');
    oTable.Items.Add(9, 'UFRZ', 'Ultra frozen');
    oTable.Items.Add(16, 'UPR', 'Upright');
End;

procedure LoadTable377(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(377, 'Other environmental factors');
    oTable.Items.Add(2, 'A60', 'Opened container, indoor atmosphere, 60 minutes duration');
    oTable.Items.Add(1, 'ATM', 'Opened container, atmosphere and duration unspecified');
End;

procedure LoadTable378(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(378, 'Carrier type');
    oTable.Items.Add(1, '...', 'No suggested values defined');
End;

procedure LoadTable379(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(379, 'Tray type');
    oTable.Items.Add(1, '...', 'No suggested values defined');
End;

procedure LoadTable380(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(380, 'Separator type');
    oTable.Items.Add(1, '...', 'No suggested values defined');
End;

procedure LoadTable381(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(381, 'Cap type');
    oTable.Items.Add(1, '...', 'No suggested values defined');
End;

procedure LoadTable382(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(382, 'Drug interference');
    oTable.Items.Add(1, '...', 'No suggested values defined');
End;

procedure LoadTable383(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(383, 'Substance status');
    oTable.Items.Add(4, 'CE', 'Calibration Error');
    oTable.Items.Add(3, 'CW', 'Calibration Warning');
    oTable.Items.Add(2, 'EE', 'Expired Error');
    oTable.Items.Add(1, 'EW', 'Expired Warning');
    oTable.Items.Add(8, 'NE', 'Not Available Error');
    oTable.Items.Add(7, 'NW', 'Not Available Warning');
    oTable.Items.Add(10, 'OE', 'Other Error');
    oTable.Items.Add(11, 'OK', 'OK Status');
    oTable.Items.Add(9, 'OW', 'Other Warning');
    oTable.Items.Add(6, 'QE', 'QC Error');
    oTable.Items.Add(5, 'QW', 'QC Warning');
End;

procedure LoadTable384(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(384, 'Substance type');
    oTable.Items.Add(6, 'CO', 'Control');
    oTable.Items.Add(3, 'DI', 'Diluent');
    oTable.Items.Add(11, 'LI', 'Measurable Liquid Item');
    oTable.Items.Add(8, 'LW', 'Liquid Waste');
    oTable.Items.Add(2, 'MR', 'Multiple Test Reagent');
    oTable.Items.Add(12, 'OT', 'Other');
    oTable.Items.Add(4, 'PT', 'Pretreatment');
    oTable.Items.Add(7, 'PW', 'Purified Water');
    oTable.Items.Add(5, 'RC', 'Reagent Calibrator');
    oTable.Items.Add(10, 'SC', 'Countable Solid Item');
    oTable.Items.Add(1, 'SR', 'Single Test Reagent');
    oTable.Items.Add(9, 'SW', 'Solid Waste');
End;

procedure LoadTable385(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(385, 'Manufacturer identifier');
    oTable.Items.Add(1, '...', 'No suggested value defined');
End;

procedure LoadTable386(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(386, 'Supplier identifier');
    oTable.Items.Add(1, '...', 'No suggested value defined');
End;

procedure LoadTable387(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(387, 'Command response');
    oTable.Items.Add(3, 'ER', 'Command cannot be completed because of error condition');
    oTable.Items.Add(1, 'OK', 'Command completed successfully');
    oTable.Items.Add(4, 'ST', 'Command cannot be completed because of the status of the requested equipment');
    oTable.Items.Add(2, 'TI', 'Command cannot be completed within requested completion time');
    oTable.Items.Add(5, 'UN', 'Command cannot be completed for unknown reasons');
End;

procedure LoadTable388(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(388, 'Processing type');
    oTable.Items.Add(2, 'E', 'Evaluation');
    oTable.Items.Add(1, 'P', 'Regular Production');
End;

procedure LoadTable389(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(389, 'Analyte repeat status');
    oTable.Items.Add(3, 'D', 'Repeated with dilution');
    oTable.Items.Add(4, 'F', 'Reflex test');
    oTable.Items.Add(1, 'O', 'Original, first run');
    oTable.Items.Add(2, 'R', 'Repeated without dilution');
End;

procedure LoadTable391(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(391, 'Segment group');
    oTable.Items.Add(1, 'ADMINISTRATION', '');
    oTable.Items.Add(2, 'ALLERGY', '');
    oTable.Items.Add(3, 'APP_STATS', '');
    oTable.Items.Add(4, 'APP_STATUS', '');
    oTable.Items.Add(5, 'ASSOCIATED_PERSON', '');
    oTable.Items.Add(6, 'ASSOCIATED_RX_ADMIN', '');
    oTable.Items.Add(7, 'ASSOCIATED_RX_ORDER', '');
    oTable.Items.Add(8, 'AUTHORIZATION', '');
    oTable.Items.Add(9, 'AUTHORIZATION_CONTACT', '');
    oTable.Items.Add(10, 'CERTIFICATE', '');
    oTable.Items.Add(11, 'CLOCK', '');
    oTable.Items.Add(12, 'CLOCK_AND_STATISTICS', '');
    oTable.Items.Add(13, 'CLOCK_AND_STATS_WITH_NOTE', '');
    oTable.Items.Add(15, 'COMMAND', '');
    oTable.Items.Add(16, 'COMMAND_RESPONSE', '');
    oTable.Items.Add(17, 'COMMON_ORDER', '');
    oTable.Items.Add(18, 'COMPONENT', '');
    oTable.Items.Add(19, 'COMPONENTS', '');
    oTable.Items.Add(20, 'CONTAINER', '');
    oTable.Items.Add(21, 'DEFINITION', '');
    oTable.Items.Add(22, 'DIET', '');
    oTable.Items.Add(23, 'DISPENSE', '');
    oTable.Items.Add(24, 'ENCODED ORDER', '');
    oTable.Items.Add(25, 'ENCODED_ORDER', '');
    oTable.Items.Add(26, 'ENCODING', '');
    oTable.Items.Add(27, 'EXPERIENCE', '');
    oTable.Items.Add(28, 'FINANCIAL', '');
    oTable.Items.Add(29, 'FINANCIAL_COMMON ORDER', '');
    oTable.Items.Add(30, 'FINANCIAL_INSURANCE', '');
    oTable.Items.Add(31, 'FINANCIAL_OBSERVATION', '');
    oTable.Items.Add(32, 'FINANCIAL_ORDER', '');
    oTable.Items.Add(33, 'FINANCIAL_PROCEDURE', '');
    oTable.Items.Add(34, 'FINANCIAL_TIMING QUANTITY', '');
    oTable.Items.Add(35, 'FINANCIAL_TIMING_QUANTITY', '');
    oTable.Items.Add(36, 'GENERAL RESOURCE', '');
    oTable.Items.Add(37, 'GENERAL_RESOURCE', '');
    oTable.Items.Add(38, 'GIVE', '');
    oTable.Items.Add(39, 'GOAL', '');
    oTable.Items.Add(40, 'GOAL_OBSERVATION', '');
    oTable.Items.Add(41, 'GOAL_PATHWAY', '');
    oTable.Items.Add(42, 'GOAL_ROLE', '');
    oTable.Items.Add(43, 'GUARANTOR_INSURANCE', '');
    oTable.Items.Add(44, 'INSURANCE', '');
    oTable.Items.Add(45, 'LOCATION RESOURCE', '');
    oTable.Items.Add(46, 'LOCATION_RESOURCE', '');
    oTable.Items.Add(47, 'MERGE_INFO', '');
    oTable.Items.Add(48, 'MF', '');
    oTable.Items.Add(49, 'MF_CDM', '');
    oTable.Items.Add(50, 'MF_CLIN_STUDY', '');
    oTable.Items.Add(51, 'MF_CLIN_STUDY_SCHED', '');
    oTable.Items.Add(52, 'MF_INV_ITEM', '');
    oTable.Items.Add(53, 'MF_LOC_DEPT', '');
    oTable.Items.Add(54, 'MF_LOCATION', '');
    oTable.Items.Add(55, 'MF_OBS_ATTRIBUTES', '');
    oTable.Items.Add(56, 'MF_PHASE_SCHED_DETAIL', '');
    oTable.Items.Add(57, 'MF_QUERY', '');
    oTable.Items.Add(58, 'MF_SITE_DEFINED', '');
    oTable.Items.Add(59, 'MF_STAFF', '');
    oTable.Items.Add(60, 'MF_TEST', '');
    oTable.Items.Add(61, 'MF_TEST_BATT_DETAIL', '');
    oTable.Items.Add(62, 'MF_TEST_BATTERIES', '');
    oTable.Items.Add(63, 'MF_TEST_CALC_DETAIL', '');
    oTable.Items.Add(64, 'MF_TEST_CALCULATED', '');
    oTable.Items.Add(65, 'MF_TEST_CAT_DETAIL', '');
    oTable.Items.Add(66, 'MF_TEST_CATEGORICAL', '');
    oTable.Items.Add(67, 'MF_TEST_NUMERIC', '');
    oTable.Items.Add(68, 'NK1_TIMING_QTY', '');
    oTable.Items.Add(69, 'NOTIFICATION', '');
    oTable.Items.Add(70, 'OBSERVATION', '');
    oTable.Items.Add(71, 'OBSERVATION_PRIOR', '');
    oTable.Items.Add(72, 'OBSERVATION_REQUEST', '');
    oTable.Items.Add(73, 'OMSERVATION', '');
    oTable.Items.Add(74, 'ORDER', '');
    oTable.Items.Add(75, 'ORDER_CHOICE', '');
    oTable.Items.Add(76, 'ORDER_DETAIL', '');
    oTable.Items.Add(77, 'ORDER_DETAIL_SUPPLEMENT', '');
    oTable.Items.Add(78, 'ORDER_DIET', '');
    oTable.Items.Add(79, 'ORDER_ENCODED', '');
    oTable.Items.Add(80, 'ORDER_OBSERVATION', '');
    oTable.Items.Add(81, 'ORDER_PRIOR', '');
    oTable.Items.Add(82, 'ORDER_TRAY', '');
    oTable.Items.Add(83, 'PATHWAY', '');
    oTable.Items.Add(84, 'PATHWAY_ROLE', '');
    oTable.Items.Add(85, 'PATIENT', '');
    oTable.Items.Add(86, 'PATIENT VISIT', '');
    oTable.Items.Add(87, 'PATIENT_PRIOR', '');
    oTable.Items.Add(88, 'PATIENT_RESULT', '');
    oTable.Items.Add(89, 'PATIENT_VISIT', '');
    oTable.Items.Add(90, 'PATIENT_VISIT_PRIOR', '');
    oTable.Items.Add(91, 'PERSONNEL RESOURCE', '');
    oTable.Items.Add(92, 'PERSONNEL_RESOURCE', '');
    oTable.Items.Add(93, 'PEX_CAUSE', '');
    oTable.Items.Add(94, 'PEX_OBSERVATION', '');
    oTable.Items.Add(95, 'PRIOR_RESULT', '');
    oTable.Items.Add(96, 'PROBLEM', '');
    oTable.Items.Add(97, 'PROBLEM_OBSERVATION', '');
    oTable.Items.Add(98, 'PROBLEM_PATHWAY', '');
    oTable.Items.Add(99, 'PROBLEM_ROLE', '');
    oTable.Items.Add(100, 'PROCEDURE', '');
    oTable.Items.Add(101, 'PRODUCT', '');
    oTable.Items.Add(102, 'PRODUCT_STATUS', '');
    oTable.Items.Add(103, 'PROVIDER', '');
    oTable.Items.Add(104, 'PROVIDER_CONTACT', '');
    oTable.Items.Add(105, 'QBP', '');
    oTable.Items.Add(106, 'QRY_WITH_DETAIL', '');
    oTable.Items.Add(107, 'QUERY_RESPONSE', '');
    oTable.Items.Add(108, 'QUERY_RESULT_CLUSTER', '');
    oTable.Items.Add(109, 'REQUEST', '');
    oTable.Items.Add(110, 'RESOURCE', '');
    oTable.Items.Add(111, 'RESOURCES', '');
    oTable.Items.Add(112, 'RESPONSE', '');
    oTable.Items.Add(113, 'RESULT', '');
    oTable.Items.Add(114, 'RESULTS', '');
    oTable.Items.Add(115, 'RESULTS_NOTES', '');
    oTable.Items.Add(116, 'ROW_DEFINITION', '');
    oTable.Items.Add(117, 'RX_ADMINISTRATION', '');
    oTable.Items.Add(118, 'RX_ORDER', '');
    oTable.Items.Add(119, 'SCHEDULE', '');
    oTable.Items.Add(120, 'SERVICE', '');
    oTable.Items.Add(121, 'SPECIMEN', '');
    oTable.Items.Add(122, 'SPECIMEN_CONTAINER', '');
    oTable.Items.Add(123, 'STAFF', '');
    oTable.Items.Add(124, 'STUDY', '');
    oTable.Items.Add(125, 'STUDY_OBSERVATION', '');
    oTable.Items.Add(126, 'STUDY_PHASE', '');
    oTable.Items.Add(127, 'STUDY_SCHEDULE', '');
    oTable.Items.Add(128, 'TEST_CONFIGURATION', '');
    oTable.Items.Add(129, 'TIMING', '');
    oTable.Items.Add(130, 'TIMING_DIET', '');
    oTable.Items.Add(131, 'TIMING_ENCODED', '');
    oTable.Items.Add(132, 'TIMING_GIVE', '');
    oTable.Items.Add(133, 'TIMING_PRIOR', '');
    oTable.Items.Add(134, 'TIMING_QTY', '');
    oTable.Items.Add(135, 'TIMING_QUANTITY', '');
    oTable.Items.Add(136, 'TIMING_TRAY', '');
    oTable.Items.Add(137, 'TREATMENT', '');
    oTable.Items.Add(138, 'VISIT', '');
End;

procedure LoadTable392(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(392, 'Match reason');
    oTable.Items.Add(1, 'DB', 'Match on Date of Birth');
    oTable.Items.Add(2, 'NA', 'Match on Name (Alpha Match)');
    oTable.Items.Add(3, 'NP', 'Match on Name (Phonetic Match)');
    oTable.Items.Add(4, 'SS', 'Match on Social Security Number');
End;

procedure LoadTable393(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(393, 'Match algorithms');
    oTable.Items.Add(1, 'LINKSOFT_2.01', 'Proprietary algorithm for LinkSoft v2.01');
    oTable.Items.Add(2, 'MATCHWARE_1.2', 'Proprietary algorithm for MatchWare v1.2');
End;

procedure LoadTable394(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(394, 'Response modality');
    oTable.Items.Add(3, 'B', 'Batch');
    oTable.Items.Add(1, 'R', 'Real Time');
    oTable.Items.Add(2, 'T', 'Bolus (a series of responses sent at the same time without use of batch formatting)');
End;

procedure LoadTable395(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(395, 'Modify indicator');
    oTable.Items.Add(2, 'M', 'Modified Subscription');
    oTable.Items.Add(1, 'N', 'New Subscription');
End;

procedure LoadTable396(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(396, 'Coding system');
    oTable.Items.Add(1, '99zzz or L', 'Local general code (where z is an alphanumeric character)');
    oTable.Items.Add(2, 'ACR', 'American College of Radiology finding codes');
    oTable.Items.Add(3, 'ALPHAID2006', 'German Alpha-ID v2006');
    oTable.Items.Add(4, 'ALPHAID2007', 'German Alpha-ID v2007');
    oTable.Items.Add(5, 'ALPHAID2008', 'German Alpha-ID v2008');
    oTable.Items.Add(7, 'ANS+', 'HL7 set of units of measure');
    oTable.Items.Add(6, 'ART', 'WHO Adverse Reaction Terms');
    oTable.Items.Add(8, 'AS4', 'ASTM E1238/ E1467 Universal');
    oTable.Items.Add(9, 'AS4E', 'AS4 Neurophysiology Codes');
    oTable.Items.Add(10, 'ATC', 'American Type Culture Collection');
    oTable.Items.Add(11, 'C4', 'CPT-4');
    oTable.Items.Add(12, 'C5', 'CPT-5');
    oTable.Items.Add(13, 'CAS', 'Chemical abstract codes');
    oTable.Items.Add(14, 'CCC', 'Clinical Care Classification system');
    oTable.Items.Add(15, 'CD2', 'CDT-2 Codes');
    oTable.Items.Add(16, 'CDCA', 'CDC Analyte Codes');
    oTable.Items.Add(17, 'CDCM', 'CDC Methods/Instruments Codes');
    oTable.Items.Add(18, 'CDS', 'CDC Surveillance');
    oTable.Items.Add(19, 'CE (obsolete)', 'CEN ECG diagnostic codes');
    oTable.Items.Add(20, 'CLP', 'CLIP');
    oTable.Items.Add(21, 'CPTM', 'CPT Modifier Code');
    oTable.Items.Add(22, 'CST', 'COSTART');
    oTable.Items.Add(23, 'CVX', 'CDC Vaccine Codes');
    oTable.Items.Add(24, 'DCM', 'DICOM Controlled Terminology');
    oTable.Items.Add(25, 'E', 'EUCLIDES');
    oTable.Items.Add(26, 'E5', 'Euclides  quantity codes');
    oTable.Items.Add(27, 'E6', 'Euclides Lab method codes');
    oTable.Items.Add(28, 'E7', 'Euclides Lab equipment codes');
    oTable.Items.Add(29, 'ENZC', 'Enzyme Codes');
    oTable.Items.Add(30, 'FDDC', 'First DataBank Drug Codes');
    oTable.Items.Add(31, 'FDDX', 'First DataBank Diagnostic Codes');
    oTable.Items.Add(32, 'FDK', 'FDA K10');
    oTable.Items.Add(33, 'GDRG2004', 'G-DRG German DRG Codes v2004');
    oTable.Items.Add(34, 'GDRG2005', 'G-DRG German DRG Codes v2005');
    oTable.Items.Add(35, 'GDRG2006', 'G-DRG German DRG Codes v2006');
    oTable.Items.Add(36, 'GDRG2007', 'G-DRG German DRG Codes v2007');
    oTable.Items.Add(37, 'GDRG2008', 'G-DRG German DRG Codes v2008');
    oTable.Items.Add(38, 'GMDC2004', 'German Major Diagnostic Codes v2004');
    oTable.Items.Add(39, 'GMDC2005', 'German Major Diagnostic Codes v2005');
    oTable.Items.Add(40, 'GMDC2006', 'German Major Diagnostic Codes v2006');
    oTable.Items.Add(41, 'GMDC2007', 'German Major Diagnostic Codes v2007');
    oTable.Items.Add(42, 'GMDC2008', 'German Major Diagnostic Codes v2008');
    oTable.Items.Add(43, 'HB', 'HIBCC');
    oTable.Items.Add(44, 'HCPCS', 'CMS (formerly HCFA)  Common Procedure Coding System');
    oTable.Items.Add(45, 'HCPT', 'Health Care Provider Taxonomy');
    oTable.Items.Add(46, 'HHC', 'Home Health Care');
    oTable.Items.Add(47, 'HI', 'Health Outcomes');
    oTable.Items.Add(48, 'HL7nnnn', 'HL7 Defined Codes where nnnn is the HL7 table number');
    oTable.Items.Add(49, 'HOT', 'Japanese Nationwide Medicine Code');
    oTable.Items.Add(50, 'HPC', 'CMS (formerly HCFA )Procedure Codes (HCPCS)');
    oTable.Items.Add(51, 'I10', 'ICD-10');
    oTable.Items.Add(59, 'I10G2004', 'ICD 10 Germany v2004');
    oTable.Items.Add(60, 'I10G2005', 'ICD 10 Germany v2005');
    oTable.Items.Add(61, 'I10G2006', 'ICD 10 Germany v2006');
    oTable.Items.Add(52, 'I10P', 'ICD-10  Procedure Codes');
    oTable.Items.Add(53, 'I9', 'ICD9');
    oTable.Items.Add(54, 'I9C', 'ICD-9CM');
    oTable.Items.Add(55, 'I9CDX', 'ICD-9CM Diagnosis codes');
    oTable.Items.Add(56, 'I9CP', 'ICD-9CM Procedure codes');
    oTable.Items.Add(57, 'IBT', 'ISBT');
    oTable.Items.Add(58, 'IBTnnnn', 'ISBT 128 codes where nnnn  specifies a specific table within ISBT 128.');
    oTable.Items.Add(64, 'ICD10AM', 'ICD-10 Australian modification');
    oTable.Items.Add(65, 'ICD10CA', 'ICD-10 Canada');
    oTable.Items.Add(62, 'ICD10GM2007', 'ICD 10 Germany v2007');
    oTable.Items.Add(63, 'ICD10GM2008', 'ICD 10 Germany v2008');
    oTable.Items.Add(66, 'ICDO', 'International Classification of Diseases for Oncology');
    oTable.Items.Add(67, 'ICS', 'ICCS');
    oTable.Items.Add(68, 'ICSD', 'International Classification of Sleep Disorders');
    oTable.Items.Add(70, 'ISO+', 'ISO 2955.83 (units of measure) with HL7 extensions');
    oTable.Items.Add(69, 'ISOnnnn', 'ISO Defined Codes where nnnn is the ISO table number');
    oTable.Items.Add(71, 'ITIS', 'Integrated Taxonomic Information System');
    oTable.Items.Add(73, 'IUPC', 'IUPAC/IFCC Component Codes');
    oTable.Items.Add(72, 'IUPP', 'IUPAC/IFCC Property Codes');
    oTable.Items.Add(75, 'JC10', 'JLAC/JSLM, nationwide laboratory code');
    oTable.Items.Add(74, 'JC8', 'Japanese Chemistry');
    oTable.Items.Add(76, 'JJ1017', 'Japanese Image Examination Cache');
    oTable.Items.Add(77, 'LB', 'Local billing code');
    oTable.Items.Add(78, 'LN', 'Logical Observation Identifier Names and Codes (LOINC'#194#174')');
    oTable.Items.Add(79, 'MCD', 'Medicaid');
    oTable.Items.Add(80, 'MCR', 'Medicare');
    oTable.Items.Add(81, 'MDC', 'Medical Device Communication');
    oTable.Items.Add(82, 'MDDX', 'Medispan Diagnostic Codes');
    oTable.Items.Add(83, 'MEDC', 'Medical Economics Drug Codes');
    oTable.Items.Add(84, 'MEDR', 'Medical Dictionary for Drug Regulatory Affairs (MEDDRA)');
    oTable.Items.Add(85, 'MEDX', 'Medical Economics Diagnostic Codes');
    oTable.Items.Add(86, 'MGPI', 'Medispan GPI');
    oTable.Items.Add(87, 'MVX', 'CDC Vaccine Manufacturer Codes');
    oTable.Items.Add(88, 'NCPDPnnnnsss', 'NCPDP code list for data element nnnn [as used in segment sss]');
    oTable.Items.Add(89, 'NDA', 'NANDA');
    oTable.Items.Add(90, 'NDC', 'National drug codes');
    oTable.Items.Add(91, 'NIC', 'Nursing Interventions Classification');
    oTable.Items.Add(92, 'NPI', 'National Provider Identifier');
    oTable.Items.Add(93, 'NUBC', 'National Uniform Billing Committee Code');
    oTable.Items.Add(96, 'O301', 'German Procedure Codes');
    oTable.Items.Add(97, 'O3012004', 'OPS Germany v2004');
    oTable.Items.Add(98, 'O3012005', 'OPS Germany v2005');
    oTable.Items.Add(99, 'O3012006', 'OPS Germany v2006');
    oTable.Items.Add(94, 'OHA', 'Omaha System');
    oTable.Items.Add(100, 'OPS2007', 'OPS Germany v2007');
    oTable.Items.Add(101, 'OPS2008', 'OPS Germany v2008');
    oTable.Items.Add(102, 'POS', 'POS Codes');
    oTable.Items.Add(103, 'RC', 'Read Classification');
    oTable.Items.Add(104, 'SCT', 'SNOMED Clinical Terms');
    oTable.Items.Add(105, 'SCT2', 'SNOMED Clinical Terms alphanumeric codes');
    oTable.Items.Add(106, 'SDM', 'SNOMED- DICOM Microglossary');
    oTable.Items.Add(107, 'SNM', 'Systemized Nomenclature of Medicine (SNOMED)');
    oTable.Items.Add(108, 'SNM3', 'SNOMED International');
    oTable.Items.Add(109, 'SNT', 'SNOMED topology codes (anatomic sites)');
    oTable.Items.Add(110, 'UB04FL14', 'Priority (Type) of Visit');
    oTable.Items.Add(111, 'UB04FL15', 'Point of Origin');
    oTable.Items.Add(112, 'UB04FL17', 'Patient Discharge Status');
    oTable.Items.Add(113, 'UC', 'UCDS');
    oTable.Items.Add(114, 'UCUM', 'UCUM code set for units of measure(from Regenstrief)');
    oTable.Items.Add(115, 'UMD', 'MDNS');
    oTable.Items.Add(116, 'UML', 'Unified Medical Language');
    oTable.Items.Add(117, 'UPC', 'Universal Product Code');
    oTable.Items.Add(118, 'UPIN', 'UPIN');
    oTable.Items.Add(119, 'USPS', 'United States Postal Service');
    oTable.Items.Add(120, 'W1', 'WHO record # drug codes (6 digit)');
    oTable.Items.Add(121, 'W2', 'WHO record # drug codes (8 digit)');
    oTable.Items.Add(122, 'W4', 'WHO record # code with ASTM extension');
    oTable.Items.Add(123, 'WC', 'WHO ATC');
    oTable.Items.Add(124, 'X12DEnnnn', 'ASC X12 Code List nnnn');
End;

procedure LoadTable397(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(397, 'Sequencing');
    oTable.Items.Add(1, 'A', 'Ascending');
    oTable.Items.Add(2, 'AN', 'Ascending, case insensitive');
    oTable.Items.Add(3, 'D', 'Descending');
    oTable.Items.Add(4, 'DN', 'Descending, case insensitive');
    oTable.Items.Add(5, 'N', 'None');
End;

procedure LoadTable398(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(398, 'Continuation style code');
    oTable.Items.Add(1, 'F', 'Fragmentation');
    oTable.Items.Add(2, 'I', 'Interactive Continuation');
End;

procedure LoadTable399(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(399, 'Country code');
    oTable.Items.Add(1, '...', 'use 3-character (alphabetic) form of ISO 3166');
End;

procedure LoadTable401(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(401, 'Government reimbursement program');
    oTable.Items.Add(2, 'C', 'Medi-Cal');
    oTable.Items.Add(1, 'MM', 'Medicare');
End;

procedure LoadTable402(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(402, 'School type');
    oTable.Items.Add(1, 'D', 'Dental');
    oTable.Items.Add(2, 'G', 'Graduate');
    oTable.Items.Add(3, 'M', 'Medical');
    oTable.Items.Add(4, 'U', 'Undergraduate');
End;

procedure LoadTable403(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(403, 'Language Ability');
    oTable.Items.Add(1, '1', 'Read');
    oTable.Items.Add(2, '2', 'Write');
    oTable.Items.Add(3, '3', 'Speak');
    oTable.Items.Add(4, '4', 'Understand');
    oTable.Items.Add(5, '5', 'Sign');
End;

procedure LoadTable404(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(404, 'Language Proficiency');
    oTable.Items.Add(1, '1', 'Excellent');
    oTable.Items.Add(2, '2', 'Good');
    oTable.Items.Add(3, '3', 'Fair');
    oTable.Items.Add(4, '4', 'Poor');
    oTable.Items.Add(5, '5', 'Some (level unknown)');
    oTable.Items.Add(6, '6', 'None');
End;

procedure LoadTable405(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(405, 'Organization Unit');
    oTable.Items.Add(1, '...', 'No suggested values defined');
End;

procedure LoadTable406(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(406, 'Organization unit type');
    oTable.Items.Add(3, '1', 'Hospital');
    oTable.Items.Add(4, '2', 'Physician Clinic');
    oTable.Items.Add(5, '3', 'Long Term Care');
    oTable.Items.Add(6, '4', 'Acute Care');
    oTable.Items.Add(7, '5', 'Other');
    oTable.Items.Add(1, 'H', 'Home');
    oTable.Items.Add(2, 'O', 'Office');
End;

procedure LoadTable409(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(409, 'Application change type');
    oTable.Items.Add(3, 'M', 'Migrates to different CPU');
    oTable.Items.Add(2, 'SD', 'Shut down');
    oTable.Items.Add(1, 'SU', 'Start up');
End;

procedure LoadTable411(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(411, 'Supplemental Service Information Values');
    oTable.Items.Add(1, '...', 'No suggested values<p>Individual implementations may use vocabularies such as the SNOMED DICOM Micro-glossary (SDM) or private (local) entries.');
End;

procedure LoadTable412(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(412, 'Category Identifier');
    oTable.Items.Add(1, '...', 'No suggested values defined');
End;

procedure LoadTable413(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(413, 'Consent Identifier');
    oTable.Items.Add(1, '...', 'No suggested values defined');
End;

procedure LoadTable414(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(414, 'Units of Time');
    oTable.Items.Add(1, '...', 'No suggested values defined');
End;

procedure LoadTable415(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(415, 'DRG Transfer Type');
    oTable.Items.Add(2, 'E', 'DRG Exempt');
    oTable.Items.Add(1, 'N', 'DRG Non Exempt');
End;

procedure LoadTable416(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(416, 'Procedure DRG Type');
    oTable.Items.Add(1, '1', '1st non-Operative');
    oTable.Items.Add(2, '2', '2nd non-Operative');
    oTable.Items.Add(3, '3', 'Major Operative');
    oTable.Items.Add(4, '4', '2nd Operative');
    oTable.Items.Add(5, '5', '3rd Operative');
End;

procedure LoadTable417(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(417, 'Tissue Type Code');
    oTable.Items.Add(10, '0', 'No tissue expected');
    oTable.Items.Add(1, '1', 'Insufficient Tissue');
    oTable.Items.Add(2, '2', 'Not abnormal');
    oTable.Items.Add(3, '3', 'Abnormal-not categorized');
    oTable.Items.Add(4, '4', 'Mechanical abnormal');
    oTable.Items.Add(5, '5', 'Growth alteration');
    oTable.Items.Add(6, '6', 'Degeneration & necrosis');
    oTable.Items.Add(7, '7', 'Non-acute inflammation');
    oTable.Items.Add(8, '8', 'Non-malignant neoplasm');
    oTable.Items.Add(9, '9', 'Malignant neoplasm');
    oTable.Items.Add(11, 'B', 'Basal cell carcinoma');
    oTable.Items.Add(12, 'C', 'Carcinoma-unspecified type');
    oTable.Items.Add(13, 'G', 'Additional tissue required');
End;

procedure LoadTable418(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(418, 'Procedure Priority');
    oTable.Items.Add(4, '...', '');
    oTable.Items.Add(1, '0', 'the admitting procedure');
    oTable.Items.Add(2, '1', 'the primary procedure');
    oTable.Items.Add(3, '2', 'for ranked secondary procedures');
End;

procedure LoadTable421(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(421, 'Severity of Illness Code');
    oTable.Items.Add(1, 'MI', 'Mild');
    oTable.Items.Add(2, 'MO', 'Moderate');
    oTable.Items.Add(3, 'SE', 'Severe');
End;

procedure LoadTable422(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(422, 'Triage Code');
    oTable.Items.Add(1, '1', 'Non-acute');
    oTable.Items.Add(2, '2', 'Acute');
    oTable.Items.Add(3, '3', 'Urgent');
    oTable.Items.Add(4, '4', 'Severe');
    oTable.Items.Add(5, '5', 'Dead on Arrival (DOA)');
    oTable.Items.Add(6, '99', 'Other');
End;

procedure LoadTable423(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(423, 'Case Category Code');
    oTable.Items.Add(1, 'D', 'Doctor''s Office Closed');
End;

procedure LoadTable424(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(424, 'Gestation Category Code');
    oTable.Items.Add(1, '1', 'Premature / Pre-term');
    oTable.Items.Add(2, '2', 'Full Term');
    oTable.Items.Add(3, '3', 'Overdue / Post-term');
End;

procedure LoadTable425(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(425, 'Newborn Code');
    oTable.Items.Add(3, '1', 'Born in facility');
    oTable.Items.Add(5, '2', 'Transfer in');
    oTable.Items.Add(2, '3', 'Born en route');
    oTable.Items.Add(4, '4', 'Other');
    oTable.Items.Add(1, '5', 'Born at home');
End;

procedure LoadTable426(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(426, 'Blood Product Code');
    oTable.Items.Add(1, 'CRYO', 'Cryoprecipitated AHF');
    oTable.Items.Add(2, 'CRYOP', 'Pooled Cryoprecipitate');
    oTable.Items.Add(3, 'FFP', 'Fresh Frozen Plasma');
    oTable.Items.Add(4, 'FFPTH', 'Fresh Frozen Plasma - Thawed');
    oTable.Items.Add(5, 'PC', 'Packed Cells');
    oTable.Items.Add(6, 'PCA', 'Autologous Packed Cells');
    oTable.Items.Add(7, 'PCNEO', 'Packed Cells - Neonatal');
    oTable.Items.Add(8, 'PCW', 'Washed Packed Cells');
    oTable.Items.Add(9, 'PLT', 'Platelet Concentrate');
    oTable.Items.Add(10, 'PLTNEO', 'Reduced Volume Platelets');
    oTable.Items.Add(11, 'PLTP', 'Pooled Platelets');
    oTable.Items.Add(12, 'PLTPH', 'Platelet Pheresis');
    oTable.Items.Add(13, 'PLTPHLR', 'Leukoreduced Platelet Pheresis');
    oTable.Items.Add(14, 'RWB', 'Reconstituted Whole Blood');
    oTable.Items.Add(15, 'WBA', 'Autologous Whole Blood');
End;

procedure LoadTable427(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(427, 'Risk Management Incident Code');
    oTable.Items.Add(1, 'B', 'Body fluid exposure');
    oTable.Items.Add(2, 'C', 'Contaminated Substance');
    oTable.Items.Add(3, 'D', 'Diet Errors');
    oTable.Items.Add(4, 'E', 'Equipment problem');
    oTable.Items.Add(5, 'F', 'Patient fell (not from bed)');
    oTable.Items.Add(6, 'H', 'Patient fell from bed');
    oTable.Items.Add(7, 'I', 'Infusion error');
    oTable.Items.Add(8, 'J', 'Foreign object left during surgery');
    oTable.Items.Add(9, 'K', 'Sterile precaution violated');
    oTable.Items.Add(14, 'O', 'Other');
    oTable.Items.Add(10, 'P', 'Procedure error');
    oTable.Items.Add(11, 'R', 'Pharmaceutical error');
    oTable.Items.Add(12, 'S', 'Suicide Attempt');
    oTable.Items.Add(13, 'T', 'Transfusion error');
End;

procedure LoadTable428(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(428, 'Incident Type Code');
    oTable.Items.Add(3, 'O', 'Other');
    oTable.Items.Add(1, 'P', 'Preventable');
    oTable.Items.Add(2, 'U', 'User Error');
End;

procedure LoadTable429(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(429, 'Production Class Code');
    oTable.Items.Add(1, 'BR', 'Breeding/genetic stock');
    oTable.Items.Add(2, 'DA', 'Dairy');
    oTable.Items.Add(3, 'DR', 'Draft');
    oTable.Items.Add(4, 'DU', 'Dual Purpose');
    oTable.Items.Add(5, 'LY', 'Layer, Includes Multiplier flocks');
    oTable.Items.Add(6, 'MT', 'Meat');
    oTable.Items.Add(11, 'NA', 'Not Applicable');
    oTable.Items.Add(7, 'OT', 'Other');
    oTable.Items.Add(8, 'PL', 'Pleasure');
    oTable.Items.Add(9, 'RA', 'Racing');
    oTable.Items.Add(10, 'SH', 'Show');
    oTable.Items.Add(12, 'U', 'Unknown');
End;

procedure LoadTable430(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(430, 'Mode of Arrival Code');
    oTable.Items.Add(1, 'A', 'Ambulance');
    oTable.Items.Add(2, 'C', 'Car');
    oTable.Items.Add(3, 'F', 'On foot');
    oTable.Items.Add(4, 'H', 'Helicopter');
    oTable.Items.Add(6, 'O', 'Other');
    oTable.Items.Add(5, 'P', 'Public Transport');
    oTable.Items.Add(7, 'U', 'Unknown');
End;

procedure LoadTable431(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(431, 'Recreational Drug Use Code');
    oTable.Items.Add(1, 'A', 'Alcohol');
    oTable.Items.Add(5, 'C', 'Tobacco - chewed');
    oTable.Items.Add(2, 'K', 'Kava');
    oTable.Items.Add(3, 'M', 'Marijuana');
    oTable.Items.Add(6, 'O', 'Other');
    oTable.Items.Add(4, 'T', 'Tobacco - smoked');
    oTable.Items.Add(7, 'U', 'Unknown');
End;

procedure LoadTable432(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(432, 'Admission Level of Care Code');
    oTable.Items.Add(1, 'AC', 'Acute');
    oTable.Items.Add(2, 'CH', 'Chronic');
    oTable.Items.Add(3, 'CO', 'Comatose');
    oTable.Items.Add(4, 'CR', 'Critical');
    oTable.Items.Add(5, 'IM', 'Improved');
    oTable.Items.Add(6, 'MO', 'Moribund');
End;

procedure LoadTable433(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(433, 'Precaution Code');
    oTable.Items.Add(1, 'A', 'Aggressive');
    oTable.Items.Add(2, 'B', 'Blind');
    oTable.Items.Add(3, 'C', 'Confused');
    oTable.Items.Add(4, 'D', 'Deaf');
    oTable.Items.Add(5, 'I', 'On IV');
    oTable.Items.Add(6, 'N', '"No-code" (i.e. Do not resuscitate)');
    oTable.Items.Add(8, 'O', 'Other');
    oTable.Items.Add(7, 'P', 'Paraplegic');
    oTable.Items.Add(9, 'U', 'Unknown');
End;

procedure LoadTable434(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(434, 'Patient Condition Code');
    oTable.Items.Add(1, 'A', 'Satisfactory');
    oTable.Items.Add(2, 'C', 'Critical');
    oTable.Items.Add(5, 'O', 'Other');
    oTable.Items.Add(3, 'P', 'Poor');
    oTable.Items.Add(4, 'S', 'Stable');
    oTable.Items.Add(6, 'U', 'Unknown');
End;

procedure LoadTable435(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(435, 'Advance Directive Code');
    oTable.Items.Add(1, 'DNR', 'Do not resuscitate');
    oTable.Items.Add(2, 'N', 'No directive');
End;

procedure LoadTable436(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(436, 'Sensitivity to Causative Agent Code');
    oTable.Items.Add(1, 'AD', 'Adverse Reaction (Not otherwise classified)');
    oTable.Items.Add(2, 'AL', 'Allergy');
    oTable.Items.Add(3, 'CT', 'Contraindication');
    oTable.Items.Add(4, 'IN', 'Intolerance');
End;

procedure LoadTable437(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(437, 'Alert Device Code');
    oTable.Items.Add(1, 'B', 'Bracelet');
    oTable.Items.Add(2, 'N', 'Necklace');
    oTable.Items.Add(3, 'W', 'Wallet Card');
End;

procedure LoadTable438(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(438, 'Allergy Clinical Status');
    oTable.Items.Add(4, 'C', 'Confirmed or verified');
    oTable.Items.Add(7, 'D', 'Doubt raised');
    oTable.Items.Add(6, 'E', 'Erroneous');
    oTable.Items.Add(5, 'I', 'Confirmed but inactive');
    oTable.Items.Add(2, 'P', 'Pending');
    oTable.Items.Add(3, 'S', 'Suspect');
    oTable.Items.Add(1, 'U', 'Unconfirmed');
End;

procedure LoadTable440(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(440, 'Data types');
    oTable.Items.Add(1, 'AD', 'Address');
    oTable.Items.Add(2, 'AUI', 'Authorization information');
    oTable.Items.Add(3, 'CCD', 'Charge code and date');
    oTable.Items.Add(4, 'CCP', 'Channel calibration parameters');
    oTable.Items.Add(5, 'CD', 'Channel definition');
    oTable.Items.Add(6, 'CE', 'Coded element');
    oTable.Items.Add(7, 'CF', 'Coded element with formatted values');
    oTable.Items.Add(8, 'CK', 'Composite ID with check digit');
    oTable.Items.Add(9, 'CM', 'Composite');
    oTable.Items.Add(10, 'CN', 'Composite ID number and name');
    oTable.Items.Add(11, 'CNE', 'Coded with no exceptions');
    oTable.Items.Add(12, 'CNS', 'Composite ID number and name simplified');
    oTable.Items.Add(13, 'CP', 'Composite price');
    oTable.Items.Add(14, 'CQ', 'Composite quantity with units');
    oTable.Items.Add(15, 'CSU', 'Channel sensitivity');
    oTable.Items.Add(16, 'CWE', 'Coded with exceptions');
    oTable.Items.Add(17, 'CX', 'Extended composite ID with check digit');
    oTable.Items.Add(18, 'DDI', 'Daily deductible information');
    oTable.Items.Add(19, 'DIN', 'Date and institution name');
    oTable.Items.Add(20, 'DLD', 'Discharge to location and date');
    oTable.Items.Add(21, 'DLN', 'Driver''s license number');
    oTable.Items.Add(22, 'DLT', 'Delta');
    oTable.Items.Add(23, 'DR', 'Date/time range');
    oTable.Items.Add(24, 'DT', 'Date');
    oTable.Items.Add(25, 'DTM', 'Date/time');
    oTable.Items.Add(26, 'DTN', 'Day type and number');
    oTable.Items.Add(27, 'ED', 'Encapsulated data');
    oTable.Items.Add(28, 'EI', 'Entity identifier');
    oTable.Items.Add(29, 'EIP', 'Entity identifier pair');
    oTable.Items.Add(31, 'ERL', 'Error location');
    oTable.Items.Add(32, 'FC', 'Financial class');
    oTable.Items.Add(33, 'FN', 'Family name');
    oTable.Items.Add(34, 'FT', 'Formatted text');
    oTable.Items.Add(35, 'GTS', 'General timing specification');
    oTable.Items.Add(36, 'HD', 'Hierarchic designator');
    oTable.Items.Add(37, 'ICD', 'Insurance certification definition');
    oTable.Items.Add(38, 'ID', 'Coded values for HL7 tables');
    oTable.Items.Add(39, 'IS', 'Coded value for user-defined tables');
    oTable.Items.Add(40, 'JCC', 'Job code/class');
    oTable.Items.Add(41, 'LA1', 'Location with address variation 1');
    oTable.Items.Add(42, 'LA2', 'Location with address variation 2');
    oTable.Items.Add(30, 'LD', 'Error location and description');
    oTable.Items.Add(43, 'MA', 'Multiplexed array');
    oTable.Items.Add(44, 'MO', 'Money');
    oTable.Items.Add(45, 'MOC', 'Money and charge code');
    oTable.Items.Add(46, 'MOP', 'Money or percentage');
    oTable.Items.Add(47, 'MSG', 'Message type');
    oTable.Items.Add(48, 'NA', 'Numeric array');
    oTable.Items.Add(49, 'NDL', 'Name with location and date');
    oTable.Items.Add(50, 'NM', 'Numeric');
    oTable.Items.Add(51, 'NR', 'Numeric range');
    oTable.Items.Add(52, 'OCD', 'Occurrence code and date');
    oTable.Items.Add(53, 'OSD', 'Order sequence definition');
    oTable.Items.Add(54, 'OSP', 'Occurrence span code and date');
    oTable.Items.Add(55, 'PIP', 'Practitioner institutional privileges');
    oTable.Items.Add(56, 'PL', 'Person location');
    oTable.Items.Add(57, 'PLN', 'Practitioner license or other ID number');
    oTable.Items.Add(58, 'PN', 'Person name');
    oTable.Items.Add(59, 'PPN', 'Performing person time stamp');
    oTable.Items.Add(60, 'PRL', 'Parent result link');
    oTable.Items.Add(61, 'PT', 'Processing type');
    oTable.Items.Add(62, 'PTA', 'Policy type and amount');
    oTable.Items.Add(63, 'QIP', 'Query input parameter list');
    oTable.Items.Add(64, 'QSC', 'Query selection criteria');
    oTable.Items.Add(65, 'RCD', 'Row column definition');
    oTable.Items.Add(66, 'RFR', 'Reference range');
    oTable.Items.Add(67, 'RI', 'Repeat interval');
    oTable.Items.Add(68, 'RMC', 'Room coverage');
    oTable.Items.Add(69, 'RP', 'Reference pointer');
    oTable.Items.Add(70, 'RPT', 'Repeat pattern');
    oTable.Items.Add(71, 'SAD', 'Street Address');
    oTable.Items.Add(72, 'SCV', 'Scheduling class value pair');
    oTable.Items.Add(73, 'SI', 'Sequence ID');
    oTable.Items.Add(74, 'SN', 'Structured numeric');
    oTable.Items.Add(75, 'SPD', 'Specialty description');
    oTable.Items.Add(76, 'SPS', 'Specimen source');
    oTable.Items.Add(77, 'SRT', 'Sort order');
    oTable.Items.Add(78, 'ST', 'String');
    oTable.Items.Add(79, 'TM', 'Time');
    oTable.Items.Add(80, 'TN', 'Telephone number');
    oTable.Items.Add(81, 'TQ', 'Timing/quantity');
    oTable.Items.Add(82, 'TS', 'Time stamp');
    oTable.Items.Add(83, 'TX', 'Text data');
    oTable.Items.Add(84, 'UVC', 'UB value code and amount');
    oTable.Items.Add(85, 'VH', 'Visiting hours');
    oTable.Items.Add(86, 'VID', 'Version identifier');
    oTable.Items.Add(87, 'VR', 'Value range');
    oTable.Items.Add(88, 'WVI', 'Channel Identifier');
    oTable.Items.Add(89, 'WVS', 'Waveform source');
    oTable.Items.Add(90, 'XAD', 'Extended address');
    oTable.Items.Add(91, 'XCN', 'Extended composite ID number and name');
    oTable.Items.Add(92, 'XON', 'Extended composite name and ID number for organizations');
    oTable.Items.Add(93, 'XPN', 'Extended person name');
    oTable.Items.Add(94, 'XTN', 'Extended telecommunications number');
End;

procedure LoadTable441(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(441, 'Immunization Registry Status');
    oTable.Items.Add(1, 'A', 'Active');
    oTable.Items.Add(2, 'I', 'Inactive');
    oTable.Items.Add(3, 'L', 'Inactive - Lost to follow-up (cancel contract)');
    oTable.Items.Add(4, 'M', 'Inactive - Moved or gone elsewhere (cancel contract)');
    oTable.Items.Add(6, 'O', 'Other');
    oTable.Items.Add(5, 'P', 'Inactive - Permanently inactive (Do not reactivate or add new entries to the record)');
    oTable.Items.Add(7, 'U', 'Unknown');
End;

procedure LoadTable442(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(442, 'Location Service Code');
    oTable.Items.Add(1, 'D', 'Diagnostic');
    oTable.Items.Add(4, 'E', 'Emergency Room Casualty');
    oTable.Items.Add(3, 'P', 'Primary Care');
    oTable.Items.Add(2, 'T', 'Therapeutic');
End;

procedure LoadTable443(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(443, 'Provider role');
    oTable.Items.Add(1, 'AD', 'Admitting');
    oTable.Items.Add(10, 'AI', 'Assistant/Alternate Interpreter');
    oTable.Items.Add(2, 'AT', 'Attending');
    oTable.Items.Add(3, 'CP', 'Consulting Provider');
    oTable.Items.Add(4, 'FHCP', 'Family Health Care Professional');
    oTable.Items.Add(9, 'PI', 'Primary Interpreter');
    oTable.Items.Add(5, 'PP', 'Primary Care Provider');
    oTable.Items.Add(6, 'RP', 'Referring Provider');
    oTable.Items.Add(7, 'RT', 'Referred to Provider');
    oTable.Items.Add(11, 'TN', 'Technician');
    oTable.Items.Add(8, 'TR', 'Transcriptionist');
End;

procedure LoadTable444(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(444, 'Name assembly order');
    oTable.Items.Add(2, 'F', 'Prefix Family Middle Given Suffix');
    oTable.Items.Add(1, 'G', 'Prefix Given Middle Family Suffix');
End;

procedure LoadTable445(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(445, 'Identity Reliability Code');
    oTable.Items.Add(4, 'AL', 'Patient/Person Name is an Alias');
    oTable.Items.Add(3, 'UA', 'Unknown/Default Address');
    oTable.Items.Add(2, 'UD', 'Unknown/Default Date of Birth');
    oTable.Items.Add(1, 'US', 'Unknown/Default Social Security Number');
End;

procedure LoadTable446(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(446, 'Species Code');
    oTable.Items.Add(1, '...', 'no suggested values');
End;

procedure LoadTable447(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(447, 'Breed Code');
    oTable.Items.Add(1, '...', 'no suggested values');
End;

procedure LoadTable448(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(448, 'Name context');
    oTable.Items.Add(1, '...', 'No suggested values defined');
End;

procedure LoadTable450(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(450, 'Event type');
    oTable.Items.Add(1, 'LOG', 'Log Event');
    oTable.Items.Add(2, 'SER', 'Service Event');
End;

procedure LoadTable451(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(451, 'Substance identifier');
    oTable.Items.Add(1, 'ALL', 'Used for query of all inventory items');
End;

procedure LoadTable452(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(452, 'Health care provider type code');
    oTable.Items.Add(1, 'SUGGESTION', 'ANSI ASC X12 Health Care Provider Taxonomy, Level 1 - Type');
End;

procedure LoadTable453(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(453, 'Health care provider classification');
    oTable.Items.Add(1, 'SUGGESTION', 'ANSI ASC X12 Health Care Provider Taxonomy, Level 2 -  Classification');
End;

procedure LoadTable454(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(454, 'Health care provider area of specialization');
    oTable.Items.Add(1, 'SUGGESTION', 'ANSI ASC X12 Health Care Provider Taxonomy, Level 3 - specialization');
End;

procedure LoadTable455(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(455, 'Type of Bill Code');
    oTable.Items.Add(1, '...', 'No suggested values');
End;

procedure LoadTable456(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(456, 'Revenue code');
    oTable.Items.Add(1, '...', 'No suggested values');
End;

procedure LoadTable457(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(457, 'Overall Claim Disposition Code');
    oTable.Items.Add(1, '0', 'No edits present on claim');
    oTable.Items.Add(2, '1', 'Only edits present are for line item denial or rejection');
    oTable.Items.Add(3, '2', 'Multiple-day claim with one or more days denied or rejected');
    oTable.Items.Add(4, '3', 'Claim denied, rejected, suspended or returned to provider with only post payment edits');
    oTable.Items.Add(5, '4', 'Claim denied, rejected, suspended or returned to provider with only pre payment edits');
End;

procedure LoadTable458(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(458, 'OCE Edit Code');
    oTable.Items.Add(43, '...', '');
    oTable.Items.Add(1, '1', 'Invalid diagnosis code');
    oTable.Items.Add(10, '10', 'Non-covered  service submitted for verification of denial (condition code 21 from header information on claim)');
    oTable.Items.Add(11, '11', 'Non-covered service submitted for FI review (condition code 20 from header information on claim)');
    oTable.Items.Add(12, '12', 'Questionable covered service');
    oTable.Items.Add(13, '13', 'Additional payment for service not provided by Medicare');
    oTable.Items.Add(14, '14', 'Code indicates a site of service not included in OPPS');
    oTable.Items.Add(15, '15', 'Service unit out of range for procedure');
    oTable.Items.Add(16, '16', 'Multiple bilateral procedures without modifier 50 (see Appendix A)');
    oTable.Items.Add(17, '17', 'Multiple bilateral procedures with modifier 50 (see Appendix A)');
    oTable.Items.Add(18, '18', 'Inpatient procedure');
    oTable.Items.Add(19, '19', 'Mutually exclusive procedure that is not allowed even if appropriate modifier present');
    oTable.Items.Add(2, '2', 'Diagnosis and age conflict');
    oTable.Items.Add(20, '20', 'Component of a comprehensive procedure that is not allowed even if appropriate modifier present');
    oTable.Items.Add(21, '21', 'Medical visit on same day as a type "T" or "S" procedure without modifier 25 (see Appendix B)');
    oTable.Items.Add(22, '22', 'Invalid modifier');
    oTable.Items.Add(23, '23', 'Invalid date');
    oTable.Items.Add(24, '24', 'Date out of OCE range');
    oTable.Items.Add(25, '25', 'Invalid age');
    oTable.Items.Add(26, '26', 'Invalid sex');
    oTable.Items.Add(27, '27', 'Only incidental services reported');
    oTable.Items.Add(28, '28', 'Code not recognized by Medicare; alternate code for same service available');
    oTable.Items.Add(29, '29', 'Partial hospitalization service for non-mental health diagnosis');
    oTable.Items.Add(3, '3', 'Diagnosis and sex conflict');
    oTable.Items.Add(30, '30', 'Insufficient services on day of partial hospitalization');
    oTable.Items.Add(31, '31', 'Partial hospitalization on same day as ECT or type "T" procedure');
    oTable.Items.Add(32, '32', 'Partial hospitalization claim spans 3 or less days with in-sufficient services, or ECT or significant procedure on at least one of the days');
    oTable.Items.Add(33, '33', 'Partial hospitalization claim spans more than 3 days with insufficient number of days having mental health services');
    oTable.Items.Add(34, '34', 'Partial hospitalization claim spans more than 3 days with insufficient number of days meeting partial hospitalization criteria');
    oTable.Items.Add(35, '35', 'Only activity therapy and/or occupational therapy services provided');
    oTable.Items.Add(36, '36', 'Extensive mental health services provided on day of ECT or significant procedure');
    oTable.Items.Add(37, '37', 'Terminated bilateral procedure or terminated procedure with units greater than one');
    oTable.Items.Add(38, '38', 'Inconsistency between implanted device and implantation procedure');
    oTable.Items.Add(39, '39', 'Mutually exclusive procedure that would be allowed if appropriate modifier were present');
    oTable.Items.Add(4, '4', 'Medicare secondary payer alert');
    oTable.Items.Add(40, '40.', 'Component of a comprehensive procedure that would be allowed if appropriate modifier were present');
    oTable.Items.Add(41, '41.', 'Invalid revenue code');
    oTable.Items.Add(42, '42.', 'Multiple medical visits on same day with same revenue code without condition code G0 (see Appendix B)');
    oTable.Items.Add(5, '5', 'E-code as reason for visit');
    oTable.Items.Add(6, '6', 'Invalid procedure code');
    oTable.Items.Add(7, '7', 'Procedure and age conflict');
    oTable.Items.Add(8, '8', 'Procedure and sex conflict');
    oTable.Items.Add(9, '9', 'Nov-covered service');
End;

procedure LoadTable459(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(459, 'Reimbursement Action Code');
    oTable.Items.Add(1, '0', 'OCE line item denial or rejection is not ignored');
    oTable.Items.Add(2, '1', 'OCE line item denial or rejection is ignored');
    oTable.Items.Add(3, '2', 'External line item denial. Line item is denied even if no OCE edits');
    oTable.Items.Add(4, '3', 'External line item rejection. Line item is rejected even if no OCE edits');
End;

procedure LoadTable460(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(460, 'Denial or Rejection Code');
    oTable.Items.Add(1, '0', 'Line item not denied or rejected');
    oTable.Items.Add(2, '1', 'Line item denied or rejected');
    oTable.Items.Add(3, '2', 'Line item is on a multiple-day claim. The line item is not denied or rejected, but occurs on a day that has been denied or rejected.');
End;

procedure LoadTable461(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(461, 'License Number');
    oTable.Items.Add(1, '...', 'No suggested values');
End;

procedure LoadTable462(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(462, 'Location cost center');
    oTable.Items.Add(1, '...', 'No suggested values defined');
End;

procedure LoadTable463(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(463, 'Inventory Number');
    oTable.Items.Add(1, '...', 'No suggested values');
End;

procedure LoadTable464(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(464, 'Facility ID');
    oTable.Items.Add(1, '...', 'No suggested values defined');
End;

procedure LoadTable465(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(465, 'Name/address representation');
    oTable.Items.Add(2, 'A', 'Alphabetic (i.e., Default or some single-byte)');
    oTable.Items.Add(1, 'I', 'Ideographic (i.e., Kanji)');
    oTable.Items.Add(3, 'P', 'Phonetic (i.e., ASCII, Katakana, Hiragana, etc.)');
End;

procedure LoadTable466(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(466, 'Ambulatory Payment Classification Code');
    oTable.Items.Add(4, '...', '');
    oTable.Items.Add(1, '031', 'Dental procedures');
    oTable.Items.Add(2, '163', 'Excision/biopsy');
    oTable.Items.Add(3, '181', 'Level 1 skin repair.');
End;

procedure LoadTable467(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(467, 'Modifier Edit Code');
    oTable.Items.Add(1, '0', 'Modifier does NOT exist');
    oTable.Items.Add(2, '1', 'Modifier present, no errors');
    oTable.Items.Add(3, '2', 'Modifier invalid');
    oTable.Items.Add(4, '3', 'Modifier NOT approved for ASC/HOPD use');
    oTable.Items.Add(5, '4', 'Modifier approved for ASC/HOPD use, inappropriate for code');
    oTable.Items.Add(6, 'U', 'Modifier edit code unknown');
End;

procedure LoadTable468(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(468, 'Payment Adjustment Code');
    oTable.Items.Add(1, '1', 'No payment adjustment');
    oTable.Items.Add(2, '2', 'Designated current drug or biological payment adjustment applies to APC (status indicator G)');
    oTable.Items.Add(3, '3', 'Designated new device payment adjustment applies to APC (status indicator H)');
    oTable.Items.Add(4, '4', 'Designated new drug or new biological payment adjustment applies to APC (status indicator J)');
    oTable.Items.Add(5, '5', 'Deductible not applicable (specific list of HCPCS codes)');
End;

procedure LoadTable469(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(469, 'Packaging Status Code');
    oTable.Items.Add(1, '0', 'Not packaged');
    oTable.Items.Add(2, '1', 'Packaged service (status indicator N, or no HCPCS code and certain revenue codes)');
    oTable.Items.Add(3, '2', 'Packaged as part of partial hospitalization per diem or daily mental health service per diem');
End;

procedure LoadTable470(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(470, 'Reimbursement Type Code');
    oTable.Items.Add(9, 'Crnl', 'Corneal Tissue APC');
    oTable.Items.Add(5, 'DME', 'Durable Medical Equipment');
    oTable.Items.Add(6, 'EPO', 'Epotein');
    oTable.Items.Add(3, 'Lab', 'Clinical Laboratory APC');
    oTable.Items.Add(7, 'Mamm', 'Screening Mammography APC');
    oTable.Items.Add(10, 'NoPay', 'This APC is not paid');
    oTable.Items.Add(1, 'OPPS', 'Outpatient Prospective Payment System');
    oTable.Items.Add(8, 'PartH', 'Partial Hospitalization APC');
    oTable.Items.Add(2, 'Pckg', 'Packaged APC');
    oTable.Items.Add(4, 'Thrpy', 'Therapy APC');
End;

procedure LoadTable471(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(471, 'Query name');
    oTable.Items.Add(1, '...', 'No suggested values defined');
End;

procedure LoadTable472(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(472, 'TQ conjunction ID');
    oTable.Items.Add(2, 'A', 'Asynchronous');
    oTable.Items.Add(3, 'C', 'Actuation Time');
    oTable.Items.Add(1, 'S', 'Synchronous');
End;

procedure LoadTable473(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(473, 'Formulary Status');
    oTable.Items.Add(1, 'G', 'This observation/service is on the formulary, and has guidelines');
    oTable.Items.Add(2, 'N', 'This observation/service is not on the formulary');
    oTable.Items.Add(3, 'R', 'This observation/service is on the formulary, but is restricted');
    oTable.Items.Add(4, 'Y', 'This observation/service is on the formulary');
End;

procedure LoadTable474(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(474, 'Organization Unit Type');
    oTable.Items.Add(1, 'D', 'Department');
    oTable.Items.Add(2, 'F', 'Facility');
    oTable.Items.Add(4, 'S', 'Subdivision');
    oTable.Items.Add(3, 'U', 'Subdepartment');
    oTable.Items.Add(5, 'V', 'Division');
End;

procedure LoadTable475(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(475, 'Charge Type Reason');
    oTable.Items.Add(1, '01', 'Allergy');
    oTable.Items.Add(2, '02', 'Intolerance');
    oTable.Items.Add(3, '03', 'Treatment Failure');
    oTable.Items.Add(4, '04', 'Patient Request');
    oTable.Items.Add(5, '05', 'No Exception');
End;

procedure LoadTable476(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(476, 'Medically Necessary Duplicate Procedure Reason');
    oTable.Items.Add(1, '...', 'No suggested values');
End;

procedure LoadTable477(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(477, 'Controlled Substance Schedule*');
    oTable.Items.Add(1, 'I', 'Schedule I');
    oTable.Items.Add(2, 'II', 'Schedule II');
    oTable.Items.Add(3, 'III', 'Schedule III');
    oTable.Items.Add(4, 'IV', 'Schedule IV');
    oTable.Items.Add(5, 'V', 'Schedule V');
    oTable.Items.Add(6, 'VI', 'Schedule VI');
End;

procedure LoadTable478(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(478, 'Formulary Status');
    oTable.Items.Add(4, 'G', 'Pharmaceutical substance is in the formulary, but guidelines apply');
    oTable.Items.Add(2, 'N', 'Pharmaceutical substance is NOT in the formulary');
    oTable.Items.Add(3, 'R', 'Pharmaceutical substance is in the formulary, but restrictions apply');
    oTable.Items.Add(1, 'Y', 'Pharmaceutical substance is in the formulary');
End;

procedure LoadTable479(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(479, 'Pharmaceutical Substances');
    oTable.Items.Add(1, '...', 'No suggested values');
End;

procedure LoadTable480(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(480, 'Pharmacy Order Types');
    oTable.Items.Add(1, 'M', 'Medication');
    oTable.Items.Add(3, 'O', 'Other solution as medication orders');
    oTable.Items.Add(2, 'S', 'IV Large Volume Solutions');
End;

procedure LoadTable482(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(482, 'Order Type');
    oTable.Items.Add(1, 'I', 'Inpatient Order');
    oTable.Items.Add(2, 'O', 'Outpatient Order');
End;

procedure LoadTable483(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(483, 'Authorization Mode');
    oTable.Items.Add(1, 'EL', 'Electronic');
    oTable.Items.Add(2, 'EM', 'E-mail');
    oTable.Items.Add(3, 'FX', 'Fax');
    oTable.Items.Add(4, 'IP', 'In Person');
    oTable.Items.Add(5, 'MA', 'Mail');
    oTable.Items.Add(6, 'PA', 'Paper');
    oTable.Items.Add(7, 'PH', 'Phone');
    oTable.Items.Add(8, 'RE', 'Reflexive (Automated system)');
    oTable.Items.Add(9, 'VC', 'Video-conference');
    oTable.Items.Add(10, 'VO', 'Voice');
End;

procedure LoadTable484(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(484, 'Dispense Type');
    oTable.Items.Add(1, 'B', 'Trial Quantity Balance');
    oTable.Items.Add(2, 'C', 'Compassionate Fill');
    oTable.Items.Add(3, 'N', 'New/Renew - Full Fill');
    oTable.Items.Add(4, 'P', 'New/Renew - Part Fill');
    oTable.Items.Add(5, 'Q', 'Refill - Part Fill');
    oTable.Items.Add(6, 'R', 'Refill - Full Fill');
    oTable.Items.Add(7, 'S', 'Manufacturer Sample');
    oTable.Items.Add(8, 'T', 'Trial Quantity');
    oTable.Items.Add(9, 'Z', 'Non-Prescription Fill');
End;

procedure LoadTable485(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(485, 'Extended Priority Codes');
    oTable.Items.Add(2, 'A', 'ASAP');
    oTable.Items.Add(5, 'C', 'Callback');
    oTable.Items.Add(4, 'P', 'Preop');
    oTable.Items.Add(13, 'PRN', 'As needed');
    oTable.Items.Add(3, 'R', 'Routine');
    oTable.Items.Add(1, 'S', 'Stat');
    oTable.Items.Add(6, 'T', 'Timing critical');
    oTable.Items.Add(10, 'TD<integer>', '');
    oTable.Items.Add(9, 'TH<integer>', '');
    oTable.Items.Add(12, 'TL<integer>', '');
    oTable.Items.Add(8, 'TM<integer>', '');
    oTable.Items.Add(7, 'TS<integer>', '');
    oTable.Items.Add(11, 'TW<integer>', '');
End;

procedure LoadTable487(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(487, 'Specimen Type');
    oTable.Items.Add(1, '...', 'No suggested values');
    oTable.Items.Add(1, 'ABS', 'Abscess');
    oTable.Items.Add(239, 'ACNE', 'Tissue, Acne');
    oTable.Items.Add(132, 'ACNFLD', 'Fluid, Acne');
    oTable.Items.Add(9, 'AIRS', 'Air Sample');
    oTable.Items.Add(10, 'ALL', 'Allograft');
    oTable.Items.Add(11, 'AMP', 'Amputation');
    oTable.Items.Add(55, 'ANGI', 'Catheter Tip, Angio');
    oTable.Items.Add(56, 'ARTC', 'Catheter Tip, Arterial');
    oTable.Items.Add(200, 'ASERU', 'Serum, Acute');
    oTable.Items.Add(13, 'ASP', 'Aspirate');
    oTable.Items.Add(108, 'ATTE', 'Environmental, Autoclave Ampule');
    oTable.Items.Add(107, 'AUTOC', 'Environment, Attest');
    oTable.Items.Add(19, 'AUTP', 'Autopsy');
    oTable.Items.Add(32, 'BBL', 'Blood bag');
    oTable.Items.Add(82, 'BCYST', 'Cyst, Baker''s');
    oTable.Items.Add(24, 'BITE', 'Bite');
    oTable.Items.Add(30, 'BLEB', 'Bleb');
    oTable.Items.Add(31, 'BLIST', 'Blister');
    oTable.Items.Add(39, 'BOIL', 'Boil');
    oTable.Items.Add(40, 'BON', 'Bone');
    oTable.Items.Add(41, 'BOWL', 'Bowel contents');
    oTable.Items.Add(33, 'BPU', 'Blood product unit');
    oTable.Items.Add(49, 'BRN', 'Burn');
    oTable.Items.Add(43, 'BRSH', 'Brush');
    oTable.Items.Add(42, 'BRTH', 'Breath (use EXHLD)');
    oTable.Items.Add(45, 'BRUS', 'Brushing');
    oTable.Items.Add(47, 'BUB', 'Bubo');
    oTable.Items.Add(48, 'BULLA', 'Bulla/Bullae');
    oTable.Items.Add(20, 'BX', 'Biopsy');
    oTable.Items.Add(50, 'CALC', 'Calculus (=Stone)');
    oTable.Items.Add(51, 'CARBU', 'Carbuncle');
    oTable.Items.Add(52, 'CAT', 'Catheter');
    oTable.Items.Add(25, 'CBITE', 'Bite, Cat');
    oTable.Items.Add(76, 'CLIPP', 'Clippings');
    oTable.Items.Add(78, 'CNJT', 'Conjunctiva');
    oTable.Items.Add(77, 'COL', 'Colostrum');
    oTable.Items.Add(23, 'CONE', 'Biospy, Cone');
    oTable.Items.Add(196, 'CSCR', 'Scratch, Cat');
    oTable.Items.Add(201, 'CSERU', 'Serum, Convalescent');
    oTable.Items.Add(53, 'CSITE', 'Catheter Insertion Site');
    oTable.Items.Add(131, 'CSMY', 'Fluid,  Cystostomy Tube');
    oTable.Items.Add(134, 'CST', 'Fluid, Cyst');
    oTable.Items.Add(35, 'CSVR', 'Blood, Cell Saver');
    oTable.Items.Add(54, 'CTP', 'Catheter tip');
    oTable.Items.Add(207, 'CVPS', 'Site, CVP');
    oTable.Items.Add(57, 'CVPT', 'Catheter Tip, CVP');
    oTable.Items.Add(178, 'CYN', 'Nodule, Cystic');
    oTable.Items.Add(81, 'CYST', 'Cyst');
    oTable.Items.Add(26, 'DBITE', 'Bite, Dog');
    oTable.Items.Add(229, 'DCS', 'Sputum, Deep Cough');
    oTable.Items.Add(248, 'DEC', 'Ulcer, Decubitus');
    oTable.Items.Add(121, 'DEION', 'Environmental, Water  (Deionized)');
    oTable.Items.Add(86, 'DIA', 'Dialysate');
    oTable.Items.Add(87, 'DISCHG', 'Discharge');
    oTable.Items.Add(88, 'DIV', 'Diverticulum');
    oTable.Items.Add(89, 'DRN', 'Drain');
    oTable.Items.Add(103, 'DRNG', 'Drainage, Tube');
    oTable.Items.Add(100, 'DRNGP', 'Drainage, Penrose');
    oTable.Items.Add(104, 'EARW', 'Ear wax (cerumen)');
    oTable.Items.Add(44, 'EBRUSH', 'Brush, Esophageal');
    oTable.Items.Add(111, 'EEYE', 'Environmental, Eye Wash');
    oTable.Items.Add(110, 'EFF', 'Environmental, Effluent');
    oTable.Items.Add(105, 'EFFUS', 'Effusion');
    oTable.Items.Add(112, 'EFOD', 'Environmental, Food');
    oTable.Items.Add(113, 'EISO', 'Environmental, Isolette');
    oTable.Items.Add(106, 'ELT', 'Electrode');
    oTable.Items.Add(119, 'ENVIR', 'Environmental, Unidentified Substance');
    oTable.Items.Add(114, 'EOTH', 'Environmental, Other Substance');
    oTable.Items.Add(115, 'ESOI', 'Environmental, Soil');
    oTable.Items.Add(116, 'ESOS', 'Environmental, Solution (Sterile)');
    oTable.Items.Add(14, 'ETA', 'Aspirate,  Endotrach');
    oTable.Items.Add(58, 'ETTP', 'Catheter Tip, Endotracheal');
    oTable.Items.Add(243, 'ETTUB', 'Tube, Endotracheal');
    oTable.Items.Add(125, 'EWHI', 'Environmental, Whirlpool');
    oTable.Items.Add(149, 'EXG', 'Gas, exhaled (=breath)');
    oTable.Items.Add(205, 'EXS', 'Shunt, External');
    oTable.Items.Add(126, 'EXUDTE', 'Exudate');
    oTable.Items.Add(123, 'FAW', 'Environmental, Water  (Well)');
    oTable.Items.Add(36, 'FBLOOD', 'Blood, Fetal');
    oTable.Items.Add(130, 'FGA', 'Fluid,  Abdomen');
    oTable.Items.Add(128, 'FIST', 'Fistula');
    oTable.Items.Add(140, 'FLD', 'Fluid, Other');
    oTable.Items.Add(127, 'FLT', 'Filter');
    oTable.Items.Add(133, 'FLU', 'Fluid, Body unsp');
    oTable.Items.Add(129, 'FLUID', 'Fluid');
    oTable.Items.Add(59, 'FOLEY', 'Catheter Tip, Foley');
    oTable.Items.Add(143, 'FRS', 'Fluid, Respiratory');
    oTable.Items.Add(195, 'FSCLP', 'Scalp, Fetal');
    oTable.Items.Add(147, 'FUR', 'Furuncle');
    oTable.Items.Add(148, 'GAS', 'Gas');
    oTable.Items.Add(15, 'GASA', 'Aspirate, Gastric');
    oTable.Items.Add(12, 'GASAN', 'Antrum, Gastric');
    oTable.Items.Add(46, 'GASBR', 'Brushing, Gastric');
    oTable.Items.Add(93, 'GASD', 'Drainage, Gastric');
    oTable.Items.Add(146, 'GAST', 'Fluid/contents, Gastric');
    oTable.Items.Add(151, 'GENV', 'Genital vaginal');
    oTable.Items.Add(152, 'GRAFT', 'Graft');
    oTable.Items.Add(156, 'GRANU', 'Granuloma');
    oTable.Items.Add(71, 'GROSH', 'Catheter, Groshong');
    oTable.Items.Add(220, 'GSOL', 'Solution, Gastrostomy');
    oTable.Items.Add(21, 'GSPEC', 'Biopsy, Gastric');
    oTable.Items.Add(244, 'GT', 'Tube, Gastric');
    oTable.Items.Add(92, 'GTUBE', 'Drainage Tube, Drainage (Gastrostomy)');
    oTable.Items.Add(27, 'HBITE', 'Bite, Human');
    oTable.Items.Add(34, 'HBLUD', 'Blood, Autopsy');
    oTable.Items.Add(60, 'HEMAQ', 'Catheter Tip, Hemaquit');
    oTable.Items.Add(61, 'HEMO', 'Catheter Tip, Hemovac');
    oTable.Items.Add(240, 'HERNI', 'Tissue, Herniated');
    oTable.Items.Add(91, 'HEV', 'Drain, Hemovac');
    oTable.Items.Add(72, 'HIC', 'Catheter, Hickman');
    oTable.Items.Add(135, 'HYDC', 'Fluid, Hydrocele');
    oTable.Items.Add(28, 'IBITE', 'Bite, Insect');
    oTable.Items.Add(83, 'ICYST', 'Cyst, Inclusion');
    oTable.Items.Add(62, 'IDC', 'Catheter Tip, Indwelling');
    oTable.Items.Add(150, 'IHG', 'Gas, Inhaled');
    oTable.Items.Add(94, 'ILEO', 'Drainage, Ileostomy');
    oTable.Items.Add(221, 'ILLEG', 'Source of Specimen Is Illegible');
    oTable.Items.Add(157, 'IMP', 'Implant');
    oTable.Items.Add(208, 'INCI', 'Site, Incision/Surgical');
    oTable.Items.Add(158, 'INFIL', 'Infiltrate');
    oTable.Items.Add(159, 'INS', 'Insect');
    oTable.Items.Add(63, 'INTRD', 'Catheter Tip, Introducer');
    oTable.Items.Add(161, 'IT', 'Intubation tube');
    oTable.Items.Add(160, 'IUD', 'Intrauterine Device');
    oTable.Items.Add(64, 'IVCAT', 'Catheter Tip, IV');
    oTable.Items.Add(136, 'IVFLD', 'Fluid, IV');
    oTable.Items.Add(246, 'IVTIP', 'Tubing Tip, IV');
    oTable.Items.Add(96, 'JEJU', 'Drainage, Jejunal');
    oTable.Items.Add(137, 'JNTFLD', 'Fluid, Joint');
    oTable.Items.Add(95, 'JP', 'Drainage, Jackson Pratt');
    oTable.Items.Add(162, 'KELOI', 'Lavage');
    oTable.Items.Add(138, 'KIDFLD', 'Fluid, Kidney');
    oTable.Items.Add(163, 'LAVG', 'Lavage, Bronhial');
    oTable.Items.Add(164, 'LAVGG', 'Lavage, Gastric');
    oTable.Items.Add(165, 'LAVGP', 'Lavage, Peritoneal');
    oTable.Items.Add(166, 'LAVPG', 'Lavage, Pre-Bronch');
    oTable.Items.Add(79, 'LENS1', 'Contact Lens');
    oTable.Items.Add(80, 'LENS2', 'Contact Lens Case');
    oTable.Items.Add(167, 'LESN', 'Lesion');
    oTable.Items.Add(171, 'LIQ', 'Liquid, Unspecified');
    oTable.Items.Add(170, 'LIQO', 'Liquid, Other');
    oTable.Items.Add(139, 'LSAC', 'Fluid, Lumbar Sac');
    oTable.Items.Add(65, 'MAHUR', 'Catheter Tip, Makurkour');
    oTable.Items.Add(172, 'MASS', 'Mass');
    oTable.Items.Add(37, 'MBLD', 'Blood, Menstrual');
    oTable.Items.Add(174, 'MUCOS', 'Mucosa');
    oTable.Items.Add(175, 'MUCUS', 'Mucus');
    oTable.Items.Add(97, 'NASDR', 'Drainage, Nasal');
    oTable.Items.Add(176, 'NEDL', 'Needle');
    oTable.Items.Add(210, 'NEPH', 'Site, Nephrostomy');
    oTable.Items.Add(16, 'NGASP', 'Aspirate, Nasogastric');
    oTable.Items.Add(98, 'NGAST', 'Drainage, Nasogastric');
    oTable.Items.Add(209, 'NGS', 'Site, Naso/Gastric');
    oTable.Items.Add(177, 'NODUL', 'Nodule(s)');
    oTable.Items.Add(198, 'NSECR', 'Secretion, Nasal');
    oTable.Items.Add(179, 'ORH', 'Other');
    oTable.Items.Add(168, 'ORL', 'Lesion, Oral');
    oTable.Items.Add(222, 'OTH', 'Source, Other');
    oTable.Items.Add(180, 'PACEM', 'Pacemaker');
    oTable.Items.Add(141, 'PCFL', 'Fluid, Pericardial');
    oTable.Items.Add(212, 'PDSIT', 'Site, Peritoneal Dialysis');
    oTable.Items.Add(213, 'PDTS', 'Site, Peritoneal Dialysis Tunnel');
    oTable.Items.Add(2, 'PELVA', 'Abscess, Pelvic');
    oTable.Items.Add(169, 'PENIL', 'Lesion, Penile');
    oTable.Items.Add(3, 'PERIA', 'Abscess, Perianal');
    oTable.Items.Add(84, 'PILOC', 'Cyst, Pilonidal');
    oTable.Items.Add(214, 'PINS', 'Site, Pin');
    oTable.Items.Add(211, 'PIS', 'Site, Pacemaker Insetion');
    oTable.Items.Add(181, 'PLAN', 'Plant Material');
    oTable.Items.Add(182, 'PLAS', 'Plasma');
    oTable.Items.Add(183, 'PLB', 'Plasma bag');
    oTable.Items.Add(202, 'PLEVS', 'Serum, Peak Level');
    oTable.Items.Add(99, 'PND', 'Drainage, Penile');
    oTable.Items.Add(186, 'POL', 'Polyps');
    oTable.Items.Add(154, 'POPGS', 'Graft Site, Popliteal');
    oTable.Items.Add(155, 'POPLG', 'Graft, Popliteal');
    oTable.Items.Add(215, 'POPLV', 'Site, Popliteal Vein');
    oTable.Items.Add(73, 'PORTA', 'Catheter, Porta');
    oTable.Items.Add(184, 'PPP', 'Plasma, Platelet poor');
    oTable.Items.Add(187, 'PROST', 'Prosthetic Device');
    oTable.Items.Add(185, 'PRP', 'Plasma, Platelet rich');
    oTable.Items.Add(188, 'PSC', 'Pseudocyst');
    oTable.Items.Add(272, 'PUNCT', 'Wound, Puncture');
    oTable.Items.Add(189, 'PUS', 'Pus');
    oTable.Items.Add(191, 'PUSFR', 'Pustule');
    oTable.Items.Add(190, 'PUST', 'Pus');
    oTable.Items.Add(192, 'QC3', 'Quality Control');
    oTable.Items.Add(258, 'RANDU', 'Urine, Random');
    oTable.Items.Add(29, 'RBITE', 'Bite, Reptile');
    oTable.Items.Add(101, 'RECT', 'Drainage, Rectal');
    oTable.Items.Add(4, 'RECTA', 'Abscess, Rectal');
    oTable.Items.Add(85, 'RENALC', 'Cyst, Renal');
    oTable.Items.Add(142, 'RENC', 'Fluid, Renal Cyst');
    oTable.Items.Add(193, 'RES', 'Respiratory');
    oTable.Items.Add(194, 'SAL', 'Saliva');
    oTable.Items.Add(241, 'SCAR', 'Tissue, Keloid (Scar)');
    oTable.Items.Add(66, 'SCLV', 'Catheter Tip, Subclavian');
    oTable.Items.Add(5, 'SCROA', 'Abscess, Scrotal');
    oTable.Items.Add(197, 'SECRE', 'Secretion(s)');
    oTable.Items.Add(199, 'SER', 'Serum');
    oTable.Items.Add(216, 'SHU', 'Site, Shunt');
    oTable.Items.Add(144, 'SHUNF', 'Fluid, Shunt');
    oTable.Items.Add(204, 'SHUNT', 'Shunt');
    oTable.Items.Add(206, 'SITE', 'Site');
    oTable.Items.Add(22, 'SKBP', 'Biopsy, Skin');
    oTable.Items.Add(218, 'SKN', 'Skin');
    oTable.Items.Add(173, 'SMM', 'Mass, Sub-Mandibular');
    oTable.Items.Add(145, 'SNV', 'Fluid, synovial (Joint fluid)');
    oTable.Items.Add(225, 'SPRM', 'Spermatozoa');
    oTable.Items.Add(67, 'SPRP', 'Catheter Tip, Suprapubic');
    oTable.Items.Add(74, 'SPRPB', 'Cathether Tip, Suprapubic');
    oTable.Items.Add(117, 'SPS', 'Environmental, Spore Strip');
    oTable.Items.Add(226, 'SPT', 'Sputum');
    oTable.Items.Add(227, 'SPTC', 'Sputum - coughed');
    oTable.Items.Add(228, 'SPTT', 'Sputum - tracheal aspirate');
    oTable.Items.Add(231, 'SPUT1', 'Sputum, Simulated');
    oTable.Items.Add(230, 'SPUTIN', 'Sputum, Inducted');
    oTable.Items.Add(232, 'SPUTSP', 'Sputum, Spontaneous');
    oTable.Items.Add(118, 'STER', 'Environmental, Sterrad');
    oTable.Items.Add(234, 'STL', 'Stool = Fecal');
    oTable.Items.Add(233, 'STONE', 'Stone, Kidney');
    oTable.Items.Add(6, 'SUBMA', 'Abscess, Submandibular');
    oTable.Items.Add(7, 'SUBMX', 'Abscess, Submaxillary');
    oTable.Items.Add(102, 'SUMP', 'Drainage, Sump');
    oTable.Items.Add(235, 'SUP', 'Suprapubic Tap');
    oTable.Items.Add(236, 'SUTUR', 'Suture');
    oTable.Items.Add(68, 'SWGZ', 'Catheter Tip, Swan Gantz');
    oTable.Items.Add(17, 'TASP', 'Aspirate, Tracheal');
    oTable.Items.Add(237, 'TISS', 'Tissue');
    oTable.Items.Add(238, 'TISU', 'Tissue ulcer');
    oTable.Items.Add(75, 'TLC', 'Cathether Tip, Triple Lumen');
    oTable.Items.Add(217, 'TRAC', 'Site, Tracheostomy');
    oTable.Items.Add(242, 'TRANS', 'Transudate');
    oTable.Items.Add(203, 'TSERU', 'Serum, Trough');
    oTable.Items.Add(8, 'TSTES', 'Abscess, Testicular');
    oTable.Items.Add(18, 'TTRA', 'Aspirate, Transtracheal');
    oTable.Items.Add(245, 'TUBES', 'Tubes');
    oTable.Items.Add(247, 'TUMOR', 'Tumor');
    oTable.Items.Add(219, 'TZANC', 'Smear, Tzanck');
    oTable.Items.Add(223, 'UDENT', 'Source, Unidentified');
    oTable.Items.Add(249, 'UR', 'Urine');
    oTable.Items.Add(251, 'URC', 'Urine clean catch');
    oTable.Items.Add(252, 'URINB', 'Urine, Bladder Washings');
    oTable.Items.Add(253, 'URINC', 'Urine, Catheterized');
    oTable.Items.Add(255, 'URINM', 'Urine, Midstream');
    oTable.Items.Add(256, 'URINN', 'Urine, Nephrostomy');
    oTable.Items.Add(257, 'URINP', 'Urine, Pedibag');
    oTable.Items.Add(250, 'URT', 'Urine catheter');
    oTable.Items.Add(254, 'USCOP', 'Urine, Cystoscopy');
    oTable.Items.Add(224, 'USPEC', 'Source, Unspecified');
    oTable.Items.Add(69, 'VASTIP', 'Catheter Tip, Vas');
    oTable.Items.Add(70, 'VENT', 'Catheter Tip, Ventricular');
    oTable.Items.Add(259, 'VITF', 'Vitreous Fluid');
    oTable.Items.Add(260, 'VOM', 'Vomitus');
    oTable.Items.Add(262, 'WASH', 'Wash');
    oTable.Items.Add(263, 'WASI', 'Washing, e.g. bronchial washing');
    oTable.Items.Add(264, 'WAT', 'Water');
    oTable.Items.Add(38, 'WB', 'Blood, Whole');
    oTable.Items.Add(265, 'WEN', 'Wen');
    oTable.Items.Add(266, 'WICK', 'Wick');
    oTable.Items.Add(268, 'WND', 'Wound');
    oTable.Items.Add(269, 'WNDA', 'Wound abscess');
    oTable.Items.Add(270, 'WNDD', 'Wound drainage');
    oTable.Items.Add(271, 'WNDE', 'Wound exudate');
    oTable.Items.Add(267, 'WORM', 'Worm');
    oTable.Items.Add(261, 'WRT', 'Wart');
    oTable.Items.Add(120, 'WWA', 'Environmental, Water');
    oTable.Items.Add(124, 'WWO', 'Environmental, Water (Ocean)');
    oTable.Items.Add(122, 'WWT', 'Environmental, Water  (Tap)');
End;

procedure LoadTable488(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(488, 'Specimen Collection Method');
    oTable.Items.Add(22, 'ANP', 'Plates, Anaerobic');
    oTable.Items.Add(23, 'BAP', 'Plates, Blood Agar');
    oTable.Items.Add(4, 'BCAE', 'Blood Culture, Aerobic Bottle');
    oTable.Items.Add(5, 'BCAN', 'Blood Culture, Anaerobic Bottle');
    oTable.Items.Add(6, 'BCPD', 'Blood Culture, Pediatric Bottle');
    oTable.Items.Add(3, 'BIO', 'Biopsy');
    oTable.Items.Add(7, 'CAP', 'Capillary Specimen');
    oTable.Items.Add(8, 'CATH', 'Catheterized');
    oTable.Items.Add(12, 'CVP', 'Line, CVP');
    oTable.Items.Add(9, 'EPLA', 'Environmental, Plate');
    oTable.Items.Add(10, 'ESWA', 'Environmental, Swab');
    oTable.Items.Add(1, 'FNA', 'Aspiration, Fine Needle');
    oTable.Items.Add(18, 'KOFFP', 'Plate, Cough');
    oTable.Items.Add(11, 'LNA', 'Line, Arterial');
    oTable.Items.Add(13, 'LNV', 'Line, Venous');
    oTable.Items.Add(14, 'MARTL', 'Martin-Lewis Agar');
    oTable.Items.Add(15, 'ML11', 'Mod. Martin-Lewis Agar');
    oTable.Items.Add(19, 'MLP', 'Plate, Martin-Lewis');
    oTable.Items.Add(20, 'NYP', 'Plate, New York City');
    oTable.Items.Add(16, 'PACE', 'Pace, Gen-Probe');
    oTable.Items.Add(17, 'PIN', 'Pinworm Prep');
    oTable.Items.Add(2, 'PNA', 'Aterial puncture');
    oTable.Items.Add(24, 'PRIME', 'Pump Prime');
    oTable.Items.Add(25, 'PUMP', 'Pump Specimen');
    oTable.Items.Add(26, 'QC5', 'Quality Control For Micro');
    oTable.Items.Add(27, 'SCLP', 'Scalp, Fetal Vein');
    oTable.Items.Add(28, 'SCRAPS', 'Scrapings');
    oTable.Items.Add(29, 'SHA', 'Shaving');
    oTable.Items.Add(30, 'SWA', 'Swab');
    oTable.Items.Add(31, 'SWD', 'Swab, Dacron tipped');
    oTable.Items.Add(34, 'TMAN', 'Transport Media, Anaerobic');
    oTable.Items.Add(35, 'TMCH', 'Transport Media, Chalamydia');
    oTable.Items.Add(36, 'TMM4', 'Transport Media, M4');
    oTable.Items.Add(37, 'TMMY', 'Transport Media, Mycoplasma');
    oTable.Items.Add(33, 'TMOT', 'Transport Media,');
    oTable.Items.Add(21, 'TMP', 'Plate, Thayer-Martin');
    oTable.Items.Add(38, 'TMPV', 'Transport Media, PVA');
    oTable.Items.Add(39, 'TMSC', 'Transport Media, Stool Culture');
    oTable.Items.Add(40, 'TMUP', 'Transport Media, Ureaplasma');
    oTable.Items.Add(41, 'TMVI', 'Transport Media, Viral');
    oTable.Items.Add(42, 'VENIP', 'Venipuncture');
    oTable.Items.Add(32, 'WOOD', 'Swab, Wooden Shaft');
End;

procedure LoadTable489(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(489, 'Risk Codes');
    oTable.Items.Add(4, 'AGG', 'Aggressive');
    oTable.Items.Add(8, 'BHZ', 'Biohazard');
    oTable.Items.Add(1, 'BIO', 'Biological');
    oTable.Items.Add(2, 'COR', 'Corrosive');
    oTable.Items.Add(3, 'ESC', 'Escape Risk');
    oTable.Items.Add(6, 'EXP', 'Explosive');
    oTable.Items.Add(5, 'IFL', 'MaterialDangerInflammable');
    oTable.Items.Add(7, 'INF', 'MaterialDangerInfectious');
    oTable.Items.Add(9, 'INJ', 'Injury Hazard');
    oTable.Items.Add(10, 'POI', 'Poison');
    oTable.Items.Add(11, 'RAD', 'Radioactive');
End;

procedure LoadTable490(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(490, 'Specimen Reject Reason');
    oTable.Items.Add(1, 'EX', 'Expired');
    oTable.Items.Add(2, 'QS', 'Quantity not sufficient');
    oTable.Items.Add(6, 'RA', 'Missing patient ID number');
    oTable.Items.Add(3, 'RB', 'Broken container');
    oTable.Items.Add(4, 'RC', 'Clotting');
    oTable.Items.Add(5, 'RD', 'Missing collection date');
    oTable.Items.Add(7, 'RE', 'Missing patient name');
    oTable.Items.Add(8, 'RH', 'Hemolysis');
    oTable.Items.Add(9, 'RI', 'Identification problem');
    oTable.Items.Add(10, 'RM', 'Labeling');
    oTable.Items.Add(11, 'RN', 'Contamination');
    oTable.Items.Add(12, 'RP', 'Missing phlebotomist ID');
    oTable.Items.Add(13, 'RR', 'Improper storage');
    oTable.Items.Add(14, 'RS', 'Name misspelling');
End;

procedure LoadTable491(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(491, 'Specimen Quality');
    oTable.Items.Add(1, 'E', 'Excellent');
    oTable.Items.Add(3, 'F', 'Fair');
    oTable.Items.Add(2, 'G', 'Good');
    oTable.Items.Add(4, 'P', 'Poor');
End;

procedure LoadTable492(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(492, 'Specimen Appropriateness');
    oTable.Items.Add(4, '??', 'Inappropriate due to ...');
    oTable.Items.Add(2, 'A', 'Appropriate');
    oTable.Items.Add(3, 'I', 'Inappropriate');
    oTable.Items.Add(1, 'P', 'Preferred');
End;

procedure LoadTable493(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(493, 'Specimen Condition');
    oTable.Items.Add(1, 'AUT', 'Autolyzed');
    oTable.Items.Add(2, 'CLOT', 'Clotted');
    oTable.Items.Add(3, 'CON', 'Contaminated');
    oTable.Items.Add(4, 'COOL', 'Cool');
    oTable.Items.Add(5, 'FROZ', 'Frozen');
    oTable.Items.Add(6, 'HEM', 'Hemolyzed');
    oTable.Items.Add(7, 'LIVE', 'Live');
    oTable.Items.Add(8, 'ROOM', 'Room temperature');
    oTable.Items.Add(9, 'SNR', 'Sample not received');
End;

procedure LoadTable494(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(494, 'Specimen Child Role');
    oTable.Items.Add(1, 'A', 'Aliquot');
    oTable.Items.Add(2, 'C', 'Component');
    oTable.Items.Add(3, 'M', 'Modified from original specimen');
End;

procedure LoadTable495(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(495, 'Body Site Modifier');
    oTable.Items.Add(1, 'ANT', 'Anterior');
    oTable.Items.Add(2, 'BIL', 'Bilateral');
    oTable.Items.Add(3, 'DIS', 'Distal');
    oTable.Items.Add(4, 'EXT', 'External');
    oTable.Items.Add(6, 'L', 'Left');
    oTable.Items.Add(5, 'LAT', 'Lateral');
    oTable.Items.Add(11, 'LLQ', 'Quadrant, Left Lower');
    oTable.Items.Add(7, 'LOW', 'Lower');
    oTable.Items.Add(12, 'LUQ', 'Quadrant, Left Upper');
    oTable.Items.Add(8, 'MED', 'Medial');
    oTable.Items.Add(9, 'POS', 'Posterior');
    oTable.Items.Add(10, 'PRO', 'Proximal');
    oTable.Items.Add(15, 'R', 'Right');
    oTable.Items.Add(13, 'RLQ', 'Quadrant, Right Lower');
    oTable.Items.Add(14, 'RUQ', 'Quadrant, Right Upper');
    oTable.Items.Add(16, 'UPP', 'Upper');
End;

procedure LoadTable496(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(496, 'Consent Type');
    oTable.Items.Add(1, '001', 'Release of Information/MR / Authorization to Disclosure Protected Health Information');
    oTable.Items.Add(2, '002', 'Medical Procedure (invasive)');
    oTable.Items.Add(3, '003', 'Acknowledge Receipt of Privacy Notice');
    oTable.Items.Add(4, '004', 'Abortion');
    oTable.Items.Add(5, '005', 'Abortion/Laminaria');
    oTable.Items.Add(6, '006', 'Accutane - Information');
    oTable.Items.Add(7, '007', 'Accutane - Woman');
    oTable.Items.Add(8, '008', 'Advanced Beneficiary Notice');
    oTable.Items.Add(9, '009', 'AFP (Alpha Fetoprotein) Screening');
    oTable.Items.Add(10, '010', 'Amniocentesis (consent & refusal)');
    oTable.Items.Add(11, '011', 'Anatomical Gift (organ donation)');
    oTable.Items.Add(12, '012', 'Anesthesia - Complications');
    oTable.Items.Add(13, '013', 'Anesthesia - Questionnaire');
    oTable.Items.Add(14, '014', 'Angiogram');
    oTable.Items.Add(15, '015', 'Angioplasty');
    oTable.Items.Add(16, '016', 'Anticancer Drugs');
    oTable.Items.Add(17, '017', 'Antipsychotic Medications');
    oTable.Items.Add(18, '018', 'Arthrogram');
    oTable.Items.Add(19, '019', 'Autopsy');
    oTable.Items.Add(20, '020', 'AZT Therapy');
    oTable.Items.Add(21, '021', 'Biliary Drainage');
    oTable.Items.Add(22, '022', 'Biliary Stone Extraction');
    oTable.Items.Add(23, '023', 'Biopsy');
    oTable.Items.Add(24, '024', 'Bleeding Time Test');
    oTable.Items.Add(25, '025', 'Bronchogram');
    oTable.Items.Add(26, '026', 'Cardiac Catheterization');
    oTable.Items.Add(27, '027', 'Coronary Angiography');
    oTable.Items.Add(28, '028', '""      "" w/o Surgery Capability');
    oTable.Items.Add(29, '029', 'Cataract Op/Implant of FDA Aprvd Lens');
    oTable.Items.Add(30, '030', 'Cataract Op/Implant of Investigational Lens');
    oTable.Items.Add(31, '031', 'Cataract Surgery');
    oTable.Items.Add(32, '032', 'Cholera Immunization');
    oTable.Items.Add(33, '033', 'Cholesterol Screening');
    oTable.Items.Add(34, '034', 'Circumcision - Newborn');
    oTable.Items.Add(35, '035', 'Colonoscopy');
    oTable.Items.Add(36, '036', 'Contact Lenses');
    oTable.Items.Add(37, '037', 'CT Scan - Cervical & Lumbar');
    oTable.Items.Add(38, '038', 'CT Scan w/ IV Contrast Media into Vein');
    oTable.Items.Add(39, '039', 'CVS (Chorionic Villus) Sampling');
    oTable.Items.Add(40, '040', 'Cystospy');
    oTable.Items.Add(41, '041', 'Disclosure of Protected Health Information to Family/Friends');
    oTable.Items.Add(42, '042', 'D & C and Conization');
    oTable.Items.Add(43, '043', 'Dacryocystogram');
    oTable.Items.Add(44, '044', 'Diagnostic Isotope');
    oTable.Items.Add(45, '045', 'Drainage of an Abscess');
    oTable.Items.Add(46, '046', 'Drug Screening');
    oTable.Items.Add(47, '047', 'Electronic Monitoring of Labor - Refusal');
    oTable.Items.Add(48, '048', 'Endometrial Biopsy');
    oTable.Items.Add(49, '049', 'Endoscopy/Sclerosis of Esophageal Varices');
    oTable.Items.Add(50, '050', 'ERCP');
    oTable.Items.Add(51, '051', 'Exposure to reportable Communicable Disease');
    oTable.Items.Add(52, '052', 'External Version');
    oTable.Items.Add(53, '053', 'Fluorescein Angioscopy');
    oTable.Items.Add(54, '054', 'Hepatitis B - Consent/Declination');
    oTable.Items.Add(55, '055', 'Herniogram');
    oTable.Items.Add(56, '056', 'HIV Test - Consent Refusal');
    oTable.Items.Add(57, '057', 'HIV Test - Disclosure');
    oTable.Items.Add(58, '058', 'HIV Test - Prenatal');
    oTable.Items.Add(59, '059', 'Home IV Treatment Program');
    oTable.Items.Add(60, '060', 'Home Parenteral Treatment Program');
    oTable.Items.Add(61, '061', 'Hysterectomy');
    oTable.Items.Add(62, '062', 'Hysterosalpingogram');
    oTable.Items.Add(63, '063', 'Injection Slip/ Consent');
    oTable.Items.Add(64, '064', 'Intrauterine Device');
    oTable.Items.Add(65, '065', 'Intrauterine Device/Sterilization');
    oTable.Items.Add(66, '066', 'Intravascular Infusion of Streptokinase/Urokinase');
    oTable.Items.Add(67, '067', 'Intravenous Cholangiogram');
    oTable.Items.Add(68, '068', 'Intravenous Digital Angiography');
    oTable.Items.Add(69, '069', 'Iodine Administration');
    oTable.Items.Add(70, '070', 'ISG');
    oTable.Items.Add(71, '071', 'IVP');
    oTable.Items.Add(72, '072', 'Laser Photocoagulation');
    oTable.Items.Add(73, '073', 'Laser treatment');
    oTable.Items.Add(74, '074', 'Lithium Carbonate');
    oTable.Items.Add(75, '075', 'Liver Biopsy');
    oTable.Items.Add(76, '076', 'Lumbar Puncture');
    oTable.Items.Add(77, '077', 'Lymphangiogram');
    oTable.Items.Add(78, '078', 'MAO Inhibitors');
    oTable.Items.Add(79, '079', 'Med, Psych, and/or Drug/Alcohol');
    oTable.Items.Add(80, '080', 'Medical Treatment - Refusal');
    oTable.Items.Add(81, '081', 'Morning-after Pill');
    oTable.Items.Add(82, '082', 'MRI - Adult');
    oTable.Items.Add(83, '083', 'MRI - Pediatric');
    oTable.Items.Add(84, '084', 'Myelogram');
    oTable.Items.Add(85, '085', 'Needle Biopsy');
    oTable.Items.Add(86, '086', 'Needle Biopsy of Lung');
    oTable.Items.Add(87, '087', 'Newborn Treatment and Release');
    oTable.Items.Add(88, '088', 'Norplant Subdermal Birth Control Implant');
    oTable.Items.Add(89, '089', 'Operations, Anesthesia, Transfusions');
    oTable.Items.Add(90, '090', 'Oral Contraceptives');
    oTable.Items.Add(91, '091', 'Organ Donation');
    oTable.Items.Add(92, '092', 'Patient Permits, Consents');
    oTable.Items.Add(93, '093', 'Patient Treatment Permit, Release & Admission');
    oTable.Items.Add(94, '094', 'Penile Injections');
    oTable.Items.Add(95, '095', 'Percutaneous Nephrostomy');
    oTable.Items.Add(96, '096', 'Percutaneous Transhepatic Cholangiogram');
    oTable.Items.Add(97, '097', 'Photographs');
    oTable.Items.Add(98, '098', 'Photographs - Employee');
    oTable.Items.Add(99, '099', 'Photographs - Medical Research');
    oTable.Items.Add(100, '100', 'Photographs - news Media');
    oTable.Items.Add(101, '101', 'Psychiatric Admission - Next of Kin');
    oTable.Items.Add(102, '102', 'Psychiatric Information During Hospital Stay');
    oTable.Items.Add(103, '103', 'Public Release of Information');
    oTable.Items.Add(104, '104', 'Radiologic Procedure');
    oTable.Items.Add(105, '105', 'Refusal of Treatment');
    oTable.Items.Add(106, '106', 'Release of Body');
    oTable.Items.Add(107, '107', 'Release of Limb');
    oTable.Items.Add(108, '108', 'Rh Immune Globulin');
    oTable.Items.Add(109, '109', 'Rights of Medical Research Participants');
    oTable.Items.Add(110, '110', 'Request to Restrict Access/Disclosure to Medical Record/Protected Health Information');
    oTable.Items.Add(111, '111', 'Request for Remain Anonymous');
    oTable.Items.Add(112, '112', 'Seat Belt Exemption');
    oTable.Items.Add(113, '113', 'Sialogram');
    oTable.Items.Add(137, '1137', 'Voiding Cystogram');
    oTable.Items.Add(114, '114', 'Sigmoidoscopy');
    oTable.Items.Add(115, '115', 'Sterilization - Anesthesia & Medical Services');
    oTable.Items.Add(116, '116', 'Sterilization -Federally Funded');
    oTable.Items.Add(117, '117', 'Sterilization - Female');
    oTable.Items.Add(118, '118', 'Sterilization - Laparoscopy/Pomeroy');
    oTable.Items.Add(119, '119', 'Sterilization - Non-Federally Funded');
    oTable.Items.Add(120, '120', 'Sterilization - Secondary');
    oTable.Items.Add(121, '121', 'Tranquilizers');
    oTable.Items.Add(122, '122', 'Transfer - Acknowledgement');
    oTable.Items.Add(123, '123', 'Transfer - Authorization');
    oTable.Items.Add(124, '124', 'Transfer Certification - Physician');
    oTable.Items.Add(125, '125', 'Transfer/Discharge Request');
    oTable.Items.Add(126, '126', 'Transfer for Non-Medical Reasons');
    oTable.Items.Add(127, '127', 'Transfer - Interfaculty Neonatal');
    oTable.Items.Add(128, '128', 'Transfer Refusal');
    oTable.Items.Add(129, '129', 'Transfer Refusal of Further Treatment');
    oTable.Items.Add(130, '130', 'Treadmill & EKG');
    oTable.Items.Add(131, '131', 'Treadmill, Thallium-201');
    oTable.Items.Add(132, '132', 'Typhoid');
    oTable.Items.Add(133, '133', 'Use of Investigational Device');
    oTable.Items.Add(134, '134', 'Use of Investigational Drug');
    oTable.Items.Add(135, '135', 'Venogram');
    oTable.Items.Add(136, '136', 'Videotape');
End;

procedure LoadTable497(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(497, 'Consent Mode');
    oTable.Items.Add(3, 'T', 'Telephone');
    oTable.Items.Add(1, 'V', 'Verbal');
    oTable.Items.Add(2, 'W', 'Written');
End;

procedure LoadTable498(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(498, 'Consent Status');
    oTable.Items.Add(1, 'A', 'Active - Consent has been granted');
    oTable.Items.Add(6, 'B', 'Bypassed (Consent not sought)');
    oTable.Items.Add(2, 'L', 'Limited - Consent has been granted with limitations');
    oTable.Items.Add(4, 'P', 'Pending - Consent has not yet been sought');
    oTable.Items.Add(3, 'R', 'Refused - Consent has been refused');
    oTable.Items.Add(5, 'X', 'Rescinded - Consent was initially granted, but was subsequently revoked or ended.');
End;

procedure LoadTable499(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(499, 'Consent Bypass Reason');
    oTable.Items.Add(1, 'E', 'Emergency');
    oTable.Items.Add(2, 'PJ', 'Professional Judgment');
End;

procedure LoadTable500(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(500, 'Consent Disclosure Level');
    oTable.Items.Add(1, 'F', 'Full Disclosure');
    oTable.Items.Add(3, 'N', 'No Disclosure');
    oTable.Items.Add(2, 'P', 'Partial Disclosure');
End;

procedure LoadTable501(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(501, 'Consent Non-Disclosure Reason');
    oTable.Items.Add(1, 'E', 'Emergency');
    oTable.Items.Add(3, 'PR', 'Patient Request');
    oTable.Items.Add(2, 'RX', 'Rx Private');
End;

procedure LoadTable502(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(502, 'Non-Subject Consenter Reason');
    oTable.Items.Add(3, 'LM', 'Legally mandated');
    oTable.Items.Add(1, 'MIN', 'Subject is a minor');
    oTable.Items.Add(2, 'NC', 'Subject is not competent to consent');
End;

procedure LoadTable503(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(503, 'Sequence/Results Flag');
    oTable.Items.Add(2, 'C', 'Cyclical');
    oTable.Items.Add(3, 'R', 'Reserved for future use');
    oTable.Items.Add(1, 'S', 'Sequential');
End;

procedure LoadTable504(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(504, 'Sequence Condition Code');
    oTable.Items.Add(1, 'EE', 'End related service request(s), end current service request.');
    oTable.Items.Add(2, 'ES', 'End related service request(s), start current service request.');
    oTable.Items.Add(4, 'SE', 'Start related service request(s), end current service request.');
    oTable.Items.Add(3, 'SS', 'Start related service request(s), start current service request.');
End;

procedure LoadTable505(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(505, 'Cyclic Entry/Exit Indicator');
    oTable.Items.Add(2, '#', 'The last service request in a cyclic group.');
    oTable.Items.Add(1, '*', 'The first service request in a cyclic group');
End;

procedure LoadTable506(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(506, 'Service Request Relationship');
    oTable.Items.Add(2, 'C', 'Compound');
    oTable.Items.Add(4, 'E', 'Exclusive');
    oTable.Items.Add(1, 'N', 'Nurse prerogative');
    oTable.Items.Add(5, 'S', 'Simultaneous');
    oTable.Items.Add(3, 'T', 'Tapering');
End;

procedure LoadTable507(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(507, 'Observation Result Handling');
    oTable.Items.Add(1, 'F', 'Film-with-patient');
    oTable.Items.Add(2, 'N', 'Notify provider when ready');
End;

procedure LoadTable508(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(508, 'Blood Product Processing Requirements');
    oTable.Items.Add(5, 'AU', 'Autologous Unit');
    oTable.Items.Add(8, 'CM', 'CMV Negative');
    oTable.Items.Add(3, 'CS', 'CMV Safe');
    oTable.Items.Add(6, 'DI', 'Directed Unit');
    oTable.Items.Add(4, 'FR', 'Fresh unit');
    oTable.Items.Add(9, 'HB', 'Hemoglobin S Negative');
    oTable.Items.Add(7, 'HL', 'HLA Matched');
    oTable.Items.Add(11, 'IG', 'IgA Deficient');
    oTable.Items.Add(2, 'IR', 'Irradiated');
    oTable.Items.Add(1, 'LR', 'Leukoreduced');
    oTable.Items.Add(10, 'WA', 'Washed');
End;

procedure LoadTable509(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(509, 'Indication For Use');
    oTable.Items.Add(1, '...', 'No suggested values');
End;

procedure LoadTable510(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(510, 'Blood Product Dispense Status');
    oTable.Items.Add(10, 'CR', 'Released into inventory for general availability');
    oTable.Items.Add(5, 'DS', 'Dispensed to patient location');
    oTable.Items.Add(9, 'PT', 'Presumed transfused (dispensed and not returned)');
    oTable.Items.Add(6, 'RA', 'Returned unused/no longer needed');
    oTable.Items.Add(2, 'RD', 'Reserved and ready to dispense');
    oTable.Items.Add(4, 'RE', 'Released (no longer allocated for the patient)');
    oTable.Items.Add(1, 'RI', 'Received into inventory (for specified patient)');
    oTable.Items.Add(7, 'RL', 'Returned unused/keep linked to patient for possible use later');
    oTable.Items.Add(11, 'RQ', 'Request to dispense blood product');
    oTable.Items.Add(3, 'RS', 'Reserved (ordered and product allocated for the patient)');
    oTable.Items.Add(8, 'WA', 'Wasted (product no longer viable)');
End;

procedure LoadTable511(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(511, 'BP Observation Status Codes Interpretation');
    oTable.Items.Add(1, 'C', 'Record coming over is a correction and thus replaces a final status');
    oTable.Items.Add(2, 'D', 'Deletes the BPX record');
    oTable.Items.Add(3, 'F', 'Final status; Can only be changed with a corrected status');
    oTable.Items.Add(4, 'O', 'Order detail description only (no status)');
    oTable.Items.Add(5, 'P', 'Preliminary status');
    oTable.Items.Add(6, 'W', 'Post original as wrong, e.g., transmitted for wrong patient');
End;

procedure LoadTable512(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(512, 'Commercial Product');
    oTable.Items.Add(1, '...', 'No suggested values');
End;

procedure LoadTable513(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(513, 'Blood Product Transfusion/Disposition Status');
    oTable.Items.Add(1, 'RA', 'Returned unused/no longer needed');
    oTable.Items.Add(2, 'RL', 'Returned unused/keep linked to patient for possible use later');
    oTable.Items.Add(5, 'TR', 'Transfused with adverse reaction');
    oTable.Items.Add(4, 'TX', 'Transfused');
    oTable.Items.Add(3, 'WA', 'Wasted (product no longer viable)');
End;

procedure LoadTable514(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(514, 'Transfusion Adverse Reaction');
    oTable.Items.Add(1, 'ABOINC', 'ABO Incompatible Transfusion Reaction');
    oTable.Items.Add(2, 'ACUTHEHTR', 'Acute Hemolytic Transfusion Reaction');
    oTable.Items.Add(3, 'ALLERGIC1', 'Allergic Reaction - First');
    oTable.Items.Add(4, 'ALLERGIC2', 'Allergic Reaction - Recurrent');
    oTable.Items.Add(5, 'ALLERGICR', 'Allergic Reaction - Repeating');
    oTable.Items.Add(6, 'ANAPHYLAC', 'Anaphylactic Reaction');
    oTable.Items.Add(7, 'BACTCONTAM', 'Reaction to Bacterial Contamination');
    oTable.Items.Add(8, 'DELAYEDHTR', 'Delayed Hemolytic Transfusion Reaction');
    oTable.Items.Add(9, 'DELAYEDSTR', 'Delayed Serological Transfusion Reaction');
    oTable.Items.Add(10, 'GVHD', 'Graft vs Host Disease - Transfusion - Associated');
    oTable.Items.Add(11, 'HYPOTENS', 'Non-hemolytic Hypotensive Reaction');
    oTable.Items.Add(12, 'NONHTR1', 'Non-Hemolytic Fever Chill Transfusion Reaction - First');
    oTable.Items.Add(13, 'NONHTR2', 'Non-Hemolytic Fever Chill Transfusion Reaction - Recurrent');
    oTable.Items.Add(14, 'NONHTRREC', 'Non-Hemolytic Fever Chill Transfusion Reaction - Repeating');
    oTable.Items.Add(15, 'NONIMMUNE', 'Non-Immune Hemolysis');
    oTable.Items.Add(16, 'NONSPEC', 'Non-Specific, Non-Hemolytic Transfusion Reaction');
    oTable.Items.Add(17, 'NORXN', 'No Evidence of Transfusion Reaction');
    oTable.Items.Add(18, 'PTP', 'Posttransfusion Purpura');
    oTable.Items.Add(19, 'VOLOVER', 'Symptoms most likely due to volume overload');
End;

procedure LoadTable515(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(515, 'Transfusion Interrupted Reason');
    oTable.Items.Add(1, '...', 'No suggested values');
End;

procedure LoadTable516(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(516, 'Error severity');
    oTable.Items.Add(3, 'E', 'Error');
    oTable.Items.Add(4, 'F', 'Fatal Error');
    oTable.Items.Add(2, 'I', 'Information');
    oTable.Items.Add(1, 'W', 'Warning');
End;

procedure LoadTable517(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(517, 'Inform person code');
    oTable.Items.Add(4, 'HD', 'Inform help desk');
    oTable.Items.Add(2, 'NPAT', 'Do NOT inform patient');
    oTable.Items.Add(1, 'PAT', 'Inform patient');
    oTable.Items.Add(3, 'USR', 'Inform User');
End;

procedure LoadTable518(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(518, 'Override type');
    oTable.Items.Add(3, 'EQV', 'Equivalence Override');
    oTable.Items.Add(1, 'EXTN', 'Extension Override');
    oTable.Items.Add(2, 'INLV', 'Interval Override');
End;

procedure LoadTable519(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(519, 'Override reason');
    oTable.Items.Add(1, '...', 'No suggested values');
End;

procedure LoadTable520(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(520, 'Message waiting priority');
    oTable.Items.Add(1, 'H', 'High');
    oTable.Items.Add(3, 'L', 'Low');
    oTable.Items.Add(2, 'M', 'Medium');
End;

procedure LoadTable521(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(521, 'Override code');
    oTable.Items.Add(1, '...', 'No suggested values');
End;

procedure LoadTable523(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(523, 'Computation type');
    oTable.Items.Add(1, '%', 'Indicates a percent change');
    oTable.Items.Add(2, 'a', 'Absolute Change');
End;

procedure LoadTable524(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(524, 'Sequence condition');
    oTable.Items.Add(2, 'C', 'Repeating cycle of orders');
    oTable.Items.Add(3, 'R', 'Reserved for possible future use');
    oTable.Items.Add(1, 'S', 'Sequence conditions');
End;

procedure LoadTable525(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(525, 'Privilege');
    oTable.Items.Add(1, '...', 'No suggested values');
End;

procedure LoadTable526(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(526, 'Privilege class');
    oTable.Items.Add(1, '...', 'No suggested values');
End;

procedure LoadTable527(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(527, 'Calendar alignment');
    oTable.Items.Add(3, 'DM', 'day of the month');
    oTable.Items.Add(5, 'DW', 'day of the week (begins with Monday)');
    oTable.Items.Add(4, 'DY', 'day of the year');
    oTable.Items.Add(6, 'HD', 'hour of the day');
    oTable.Items.Add(1, 'MY', 'month of the year');
    oTable.Items.Add(7, 'NH', 'minute of the hour');
    oTable.Items.Add(8, 'SN', 'second of the minute');
    oTable.Items.Add(2, 'WY', 'week of the year');
End;

procedure LoadTable528(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(528, 'Event related period');
    oTable.Items.Add(2, 'AC', 'before meal (from lat. ante cibus)');
    oTable.Items.Add(6, 'ACD', 'before lunch (from lat. ante cibus diurnus)');
    oTable.Items.Add(5, 'ACM', 'before breakfast (from lat. ante cibus matutinus)');
    oTable.Items.Add(7, 'ACV', 'before dinner (from lat. ante cibus vespertinus)');
    oTable.Items.Add(1, 'HS', 'the hour of sleep (e.g., H18-22)');
    oTable.Items.Add(4, 'IC', 'between meals (from lat. inter cibus)');
    oTable.Items.Add(12, 'ICD', 'between lunch and dinner');
    oTable.Items.Add(11, 'ICM', 'between breakfast and lunch');
    oTable.Items.Add(13, 'ICV', 'between dinner and the hour of sleep');
    oTable.Items.Add(3, 'PC', 'after meal (from lat. post cibus)');
    oTable.Items.Add(9, 'PCD', 'after lunch (from lat. post cibus diurnus)');
    oTable.Items.Add(8, 'PCM', 'after breakfast (from lat. post cibus matutinus)');
    oTable.Items.Add(10, 'PCV', 'after dinner (from lat. post cibus vespertinus)');
End;

procedure LoadTable530(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(530, 'Organization, agency, department');
    oTable.Items.Add(1, 'AE', 'American Express');
    oTable.Items.Add(2, 'DEA', 'Drug Enforcement Agency');
    oTable.Items.Add(3, 'DOD', 'Department of Defense');
    oTable.Items.Add(4, 'MC', 'Master Card');
    oTable.Items.Add(5, 'VA', 'Veterans Affairs');
    oTable.Items.Add(6, 'VI', 'Visa');
End;

procedure LoadTable531(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(531, 'Institution');
    oTable.Items.Add(1, '...', 'No suggested values');
End;

procedure LoadTable532(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(532, 'Expanded yes/no indicator');
    oTable.Items.Add(7, 'ASKU', 'asked but unknown');
    oTable.Items.Add(2, 'N', 'No');
    oTable.Items.Add(4, 'NA', 'not applicable');
    oTable.Items.Add(6, 'NASK', 'not asked');
    oTable.Items.Add(8, 'NAV', 'temporarily unavailable');
    oTable.Items.Add(3, 'NI', 'No Information');
    oTable.Items.Add(9, 'NP', 'not present');
    oTable.Items.Add(5, 'UNK', 'unknown');
    oTable.Items.Add(1, 'Y', 'Yes');
End;

procedure LoadTable533(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(533, 'Application error code');
    oTable.Items.Add(1, '...', 'No suggested values.');
End;

procedure LoadTable534(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(534, 'Notify Clergy Code');
    oTable.Items.Add(3, 'L', 'Last Rites only');
    oTable.Items.Add(2, 'N', 'No');
    oTable.Items.Add(4, 'O', 'Other');
    oTable.Items.Add(5, 'U', 'Unknown');
    oTable.Items.Add(1, 'Y', 'Yes');
End;

procedure LoadTable535(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(535, 'Signature Code');
    oTable.Items.Add(1, 'C', 'Signed CMS-1500 claim form on file, e.g., authorization for release of any medical or other information necessary to process this claim and assignment of benefits.');
    oTable.Items.Add(3, 'M', 'Signed authorization for assignment of benefits on file.');
    oTable.Items.Add(4, 'P', 'Signature generated by provider because the patient was not physically present for services.');
    oTable.Items.Add(2, 'S', 'Signed authorization for release of any medical or other information necessary to process this claim on file.');
End;

procedure LoadTable536(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(536, 'Certificate Status');
    oTable.Items.Add(4, 'E', 'Expired');
    oTable.Items.Add(5, 'I', 'Inactive');
    oTable.Items.Add(1, 'P', 'Provisional');
    oTable.Items.Add(2, 'R', 'Revoked');
    oTable.Items.Add(3, 'V', 'Active/Valid');
End;

procedure LoadTable537(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(537, 'Institution');
    oTable.Items.Add(1, '...', 'No suggested values defined');
End;

procedure LoadTable538(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(538, 'Institution Relationship Type');
    oTable.Items.Add(3, 'CON', 'Contractor');
    oTable.Items.Add(4, 'CST', 'Consultant');
    oTable.Items.Add(1, 'EMP', 'Employee');
    oTable.Items.Add(2, 'VOL', 'Volunteer');
End;

procedure LoadTable539(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(539, 'Cost Center Code');
    oTable.Items.Add(1, '...', 'no suggested values');
End;

procedure LoadTable540(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(540, 'Inactive Reason Code');
    oTable.Items.Add(1, 'L', 'Leave of Absence');
    oTable.Items.Add(3, 'R', 'Retired');
    oTable.Items.Add(2, 'T', 'Termination');
End;

procedure LoadTable541(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(541, 'Specimen Type Modifier');
    oTable.Items.Add(1, '...', 'No suggested values');
End;

procedure LoadTable542(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(542, 'Specimen Source Type Modifier');
    oTable.Items.Add(1, '...', 'No suggested values');
End;

procedure LoadTable543(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(543, 'Specimen Collection Site');
    oTable.Items.Add(1, '...', 'No suggested values');
End;

procedure LoadTable544(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(544, 'Container Condition');
    oTable.Items.Add(1, '...', 'No suggested values');
End;

procedure LoadTable547(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(547, 'Jurisdictional Breadth');
    oTable.Items.Add(1, 'C', 'County/Parish');
    oTable.Items.Add(3, 'N', 'Country');
    oTable.Items.Add(2, 'S', 'State/Province');
End;

procedure LoadTable548(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(548, 'Signatory''s Relationship to Subject');
    oTable.Items.Add(1, '1', 'Self');
    oTable.Items.Add(2, '2', 'Parent');
    oTable.Items.Add(3, '3', 'Next of Kin');
    oTable.Items.Add(4, '4', 'Durable Power of Attorney in Healthcare Affairs');
    oTable.Items.Add(5, '5', 'Conservator');
    oTable.Items.Add(6, '6', 'Emergent Practitioner (practitioner judging case as emergency requiring care without a consent)');
    oTable.Items.Add(7, '7', 'Non-Emergent Practitioner (i.e. medical ethics committee)');
End;

procedure LoadTable549(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(549, 'NDC Codes');
    oTable.Items.Add(1, '...', 'No suggested values defined');
End;

procedure LoadTable550(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(550, 'Body Parts');
    oTable.Items.Add(135, #194#160, 'External Jugular');
    oTable.Items.Add(2, 'ACET', 'Acetabulum');
    oTable.Items.Add(3, 'ACHIL', 'Achilles');
    oTable.Items.Add(1, 'ADB', 'Abdomen');
    oTable.Items.Add(4, 'ADE', 'Adenoids');
    oTable.Items.Add(5, 'ADR', 'Adrenal');
    oTable.Items.Add(6, 'AMN', 'Amniotic fluid');
    oTable.Items.Add(7, 'AMS', 'Amniotic Sac');
    oTable.Items.Add(8, 'ANAL', 'Anal');
    oTable.Items.Add(9, 'ANKL', 'Ankle');
    oTable.Items.Add(10, 'ANTEC', 'Antecubital');
    oTable.Items.Add(11, 'ANTECF', 'Antecubital Fossa');
    oTable.Items.Add(12, 'ANTR', 'Antrum');
    oTable.Items.Add(13, 'ANUS', 'Anus');
    oTable.Items.Add(14, 'AORTA', 'Aorta');
    oTable.Items.Add(17, 'APDX', 'Appendix');
    oTable.Items.Add(15, 'AR', 'Aortic Rim');
    oTable.Items.Add(18, 'AREO', 'Areola');
    oTable.Items.Add(19, 'ARM', 'Arm');
    oTable.Items.Add(20, 'ARTE', 'Artery');
    oTable.Items.Add(21, 'ASCIT', 'Ascites');
    oTable.Items.Add(22, 'ASCT', 'Ascitic Fluid');
    oTable.Items.Add(23, 'ATR', 'Atrium');
    oTable.Items.Add(24, 'AURI', 'Auricular');
    oTable.Items.Add(16, 'AV', 'Aortic Valve');
    oTable.Items.Add(25, 'AXI', 'Axilla');
    oTable.Items.Add(26, 'BACK', 'Back');
    oTable.Items.Add(27, 'BARTD', 'Bartholin Duct');
    oTable.Items.Add(28, 'BARTG', 'Bartholin Gland');
    oTable.Items.Add(48, 'BCYS', 'Brain Cyst Fluid');
    oTable.Items.Add(40, 'BDY', 'Body, Whole');
    oTable.Items.Add(31, 'BID', 'Bile Duct');
    oTable.Items.Add(32, 'BIFL', 'Bile fluid');
    oTable.Items.Add(33, 'BLAD', 'Bladder');
    oTable.Items.Add(39, 'BLD', 'Blood, Whole');
    oTable.Items.Add(35, 'BLDA', 'Blood,  Arterial');
    oTable.Items.Add(36, 'BLDC', 'Blood,  Capillary');
    oTable.Items.Add(37, 'BLDV', 'Blood,  Venous');
    oTable.Items.Add(34, 'BLOOD', 'Blood');
    oTable.Items.Add(42, 'BMAR', 'Bone marrow');
    oTable.Items.Add(41, 'BON', 'Bone');
    oTable.Items.Add(43, 'BOWEL', 'Bowel');
    oTable.Items.Add(44, 'BOWLA', 'Bowel, Large');
    oTable.Items.Add(45, 'BOWSM', 'Bowel, Small');
    oTable.Items.Add(30, 'BPH', 'Basophils');
    oTable.Items.Add(46, 'BRA', 'Brachial');
    oTable.Items.Add(47, 'BRAIN', 'Brain');
    oTable.Items.Add(51, 'BRO', 'Bronchial');
    oTable.Items.Add(52, 'BROCH', 'Bronchiole/Bronchiolar');
    oTable.Items.Add(53, 'BRONC', 'Bronchus/Bronchial');
    oTable.Items.Add(137, 'BROW', 'Eyebrow');
    oTable.Items.Add(49, 'BRST', 'Breast');
    oTable.Items.Add(50, 'BRSTFL', 'Breast fluid');
    oTable.Items.Add(29, 'BRTGF', 'Bartholin Gland Fluid');
    oTable.Items.Add(54, 'BRV', 'Broviac');
    oTable.Items.Add(55, 'BUCCA', 'Buccal');
    oTable.Items.Add(56, 'BURSA', 'Bursa');
    oTable.Items.Add(57, 'BURSF', 'Bursa Fluid');
    oTable.Items.Add(58, 'BUTT', 'Buttocks');
    oTable.Items.Add(59, 'CALF', 'Calf');
    oTable.Items.Add(60, 'CANAL', 'Canal');
    oTable.Items.Add(61, 'CANLI', 'Canaliculis');
    oTable.Items.Add(63, 'CANTH', 'Canthus');
    oTable.Items.Add(65, 'CARO', 'Carotid');
    oTable.Items.Add(66, 'CARP', 'Carpal');
    oTable.Items.Add(67, 'CAVIT', 'Cavity');
    oTable.Items.Add(38, 'CBLD', 'Blood, Cord');
    oTable.Items.Add(64, 'CDM', 'Cardiac Muscle');
    oTable.Items.Add(86, 'CDUCT', 'Common Duct');
    oTable.Items.Add(69, 'CECUM', 'Cecum/Cecal');
    oTable.Items.Add(72, 'CERVUT', 'Cervix/Uterus');
    oTable.Items.Add(68, 'CHE', 'Cavity, Chest');
    oTable.Items.Add(73, 'CHEEK', 'Cheek');
    oTable.Items.Add(74, 'CHES', 'Chest');
    oTable.Items.Add(75, 'CHEST'#194#160, 'Chest Tube');
    oTable.Items.Add(76, 'CHIN', 'Chin');
    oTable.Items.Add(77, 'CIRCU', 'Circumcision Site');
    oTable.Items.Add(78, 'CLAVI', 'Clavicle/Clavicular');
    oTable.Items.Add(80, 'CLIT', 'Clitoris');
    oTable.Items.Add(79, 'CLITO', 'Clitoral');
    oTable.Items.Add(62, 'CNL', 'Cannula');
    oTable.Items.Add(81, 'COCCG', 'Coccygeal');
    oTable.Items.Add(82, 'COCCY', 'Coccyx');
    oTable.Items.Add(83, 'COLON', 'Colon');
    oTable.Items.Add(84, 'COLOS', 'Colostomy');
    oTable.Items.Add(87, 'CONJ', 'Conjunctiva');
    oTable.Items.Add(89, 'COR', 'Cord');
    oTable.Items.Add(88, 'CORAL', 'Coral');
    oTable.Items.Add(90, 'CORD', 'Cord Blood');
    oTable.Items.Add(91, 'CORN', 'Cornea');
    oTable.Items.Add(85, 'COS', 'Colostomy Stoma');
    oTable.Items.Add(92, 'CRANE', 'Cranium, ethmoid');
    oTable.Items.Add(93, 'CRANF', 'Cranium, frontal');
    oTable.Items.Add(94, 'CRANO', 'Cranium, occipital');
    oTable.Items.Add(95, 'CRANP', 'Cranium, parietal');
    oTable.Items.Add(96, 'CRANS', 'Cranium, sphenoid');
    oTable.Items.Add(97, 'CRANT', 'Cranium, temporal');
    oTable.Items.Add(70, 'CSF', 'Cerebral Spinal Fluid');
    oTable.Items.Add(98, 'CUBIT', 'Cubitus');
    oTable.Items.Add(99, 'CUFF', 'Cuff');
    oTable.Items.Add(100, 'CULD', 'Cul De Sac');
    oTable.Items.Add(101, 'CULDO', 'Culdocentesis');
    oTable.Items.Add(71, 'CVX', 'Cervix');
    oTable.Items.Add(102, 'DELT', 'Deltoid');
    oTable.Items.Add(104, 'DEN', 'Dental Gingiva');
    oTable.Items.Add(103, 'DENTA', 'Dental');
    oTable.Items.Add(105, 'DIAF', 'Dialysis Fluid');
    oTable.Items.Add(107, 'DIGIT', 'Digit');
    oTable.Items.Add(108, 'DISC', 'Disc');
    oTable.Items.Add(109, 'DORS', 'Dorsum/Dorsal');
    oTable.Items.Add(106, 'DPH', 'Diaphragm');
    oTable.Items.Add(110, 'DUFL', 'Duodenal Fluid');
    oTable.Items.Add(111, 'DUODE', 'Duodenum/Duodenal');
    oTable.Items.Add(112, 'DUR', 'Dura');
    oTable.Items.Add(113, 'EAR', 'Ear');
    oTable.Items.Add(114, 'EARBI', 'Ear bone, incus');
    oTable.Items.Add(115, 'EARBM', 'Ear bone, malleus');
    oTable.Items.Add(116, 'EARBS', 'Ear bone,stapes');
    oTable.Items.Add(117, 'EARLO', 'Ear Lobe');
    oTable.Items.Add(121, 'EC', 'Endocervical');
    oTable.Items.Add(118, 'ELBOW', 'Elbow');
    oTable.Items.Add(119, 'ELBOWJ', 'Elbow Joint');
    oTable.Items.Add(120, 'ENDC', 'Endocardium');
    oTable.Items.Add(123, 'ENDM', 'Endometrium');
    oTable.Items.Add(122, 'EOLPH', 'endolpthamitis');
    oTable.Items.Add(126, 'EOS', 'Eosinophils');
    oTable.Items.Add(129, 'EPD', 'Epididymis');
    oTable.Items.Add(127, 'EPICA', 'Epicardial');
    oTable.Items.Add(128, 'EPICM', 'Epicardium');
    oTable.Items.Add(130, 'EPIDU', 'Epidural');
    oTable.Items.Add(131, 'EPIGL', 'Epiglottis');
    oTable.Items.Add(133, 'ESO', 'Esophagus');
    oTable.Items.Add(132, 'ESOPG', 'Esophageal');
    oTable.Items.Add(124, 'ET', 'Endotracheal');
    oTable.Items.Add(134, 'ETHMO', 'Ethmoid');
    oTable.Items.Add(125, 'EUR', 'Endourethral');
    oTable.Items.Add(136, 'EYE', 'Eye');
    oTable.Items.Add(138, 'EYELI', 'Eyelid');
    oTable.Items.Add(139, 'FACE', 'Face');
    oTable.Items.Add(147, 'FALLT', 'Fallopian Tube');
    oTable.Items.Add(140, 'FBINC', 'Facial bone, inferior nasal concha');
    oTable.Items.Add(141, 'FBLAC', 'Facial bone, lacrimal');
    oTable.Items.Add(142, 'FBMAX', 'Facial bone, maxilla');
    oTable.Items.Add(143, 'FBNAS', 'Facial bone, nasal');
    oTable.Items.Add(144, 'FBPAL', 'Facial bone, palatine');
    oTable.Items.Add(145, 'FBVOM', 'Facial bone, vomer');
    oTable.Items.Add(146, 'FBZYG', 'Facial bone, zygomatic');
    oTable.Items.Add(148, 'FEMOR', 'Femoral');
    oTable.Items.Add(150, 'FEMUR', 'Femur');
    oTable.Items.Add(151, 'FET', 'Fetus');
    oTable.Items.Add(152, 'FIBU', 'Fibula');
    oTable.Items.Add(153, 'FING', 'Finger');
    oTable.Items.Add(154, 'FINGN', 'Finger Nail');
    oTable.Items.Add(149, 'FMH', 'Femoral Head');
    oTable.Items.Add(155, 'FOL', 'Follicle');
    oTable.Items.Add(156, 'FOOT', 'Foot');
    oTable.Items.Add(157, 'FOREA', 'Forearm');
    oTable.Items.Add(158, 'FOREH', 'Forehead');
    oTable.Items.Add(159, 'FORES', 'Foreskin');
    oTable.Items.Add(160, 'FOURC', 'Fourchette');
    oTable.Items.Add(161, 'GB', 'Gall Bladder');
    oTable.Items.Add(162, 'GEN', 'Genital');
    oTable.Items.Add(164, 'GENC', 'Genital Cervix');
    oTable.Items.Add(166, 'GENL', 'Genital Lochia');
    oTable.Items.Add(165, 'GL', 'Genital Lesion');
    oTable.Items.Add(167, 'GLAND', 'Gland');
    oTable.Items.Add(168, 'GLANS', 'Glans');
    oTable.Items.Add(170, 'GLUT', 'Gluteus');
    oTable.Items.Add(169, 'GLUTE', 'Gluteal');
    oTable.Items.Add(171, 'GLUTM', 'Gluteus Medius');
    oTable.Items.Add(172, 'GROIN', 'Groin');
    oTable.Items.Add(173, 'GUM', 'Gum');
    oTable.Items.Add(163, 'GVU', 'Genital - Vulva');
    oTable.Items.Add(175, 'HAL', 'Hallux');
    oTable.Items.Add(176, 'HAND', 'Hand');
    oTable.Items.Add(174, 'HAR', 'Hair');
    oTable.Items.Add(178, 'HART', 'Heart');
    oTable.Items.Add(177, 'HEAD', 'Head');
    oTable.Items.Add(182, 'HEEL', 'Heel');
    oTable.Items.Add(183, 'HEM', 'Hemorrhoid');
    oTable.Items.Add(184, 'HIP', 'Hip');
    oTable.Items.Add(185, 'HIPJ', 'Hip Joint');
    oTable.Items.Add(186, 'HUMER', 'Humerus');
    oTable.Items.Add(179, 'HV', 'Heart Valve');
    oTable.Items.Add(180, 'HVB', 'Heart Valve, Bicuspid');
    oTable.Items.Add(181, 'HVT', 'Heart Valve, Tricuspid');
    oTable.Items.Add(187, 'HYMEN', 'Hymen');
    oTable.Items.Add(198, 'ICX', 'Intracervical');
    oTable.Items.Add(188, 'ILC', 'Ileal Conduit');
    oTable.Items.Add(194, 'ILCON', 'Ilical Conduit');
    oTable.Items.Add(193, 'ILCR', 'Iliac Crest');
    oTable.Items.Add(189, 'ILE', 'Ileal Loop');
    oTable.Items.Add(190, 'ILEOS', 'Ileostomy');
    oTable.Items.Add(191, 'ILEUM', 'Ileum');
    oTable.Items.Add(192, 'ILIAC', 'Iliac');
    oTable.Items.Add(199, 'INASA', 'Intranasal');
    oTable.Items.Add(195, 'INGUI', 'Inguinal');
    oTable.Items.Add(213, 'INSTL', 'Intestine, Large');
    oTable.Items.Add(363, 'INSTS', 'Intestine, Small');
    oTable.Items.Add(197, 'INT', 'Intestine');
    oTable.Items.Add(201, 'INTRO', 'Introitus');
    oTable.Items.Add(200, 'INTRU', 'Intrauterine');
    oTable.Items.Add(202, 'ISCHI', 'Ischium');
    oTable.Items.Add(225, 'ISH', 'Loop, Ishial');
    oTable.Items.Add(203, 'JAW', 'Jaw');
    oTable.Items.Add(196, 'JUGI', 'Jugular, Internal');
    oTable.Items.Add(204, 'KIDN'#194#160, 'Kidney');
    oTable.Items.Add(205, 'KNEE', 'Knee');
    oTable.Items.Add(206, 'KNEEF', 'Knee Fluid');
    oTable.Items.Add(207, 'KNEEJ', 'Knee Joint');
    oTable.Items.Add(208, 'LABIA', 'Labia');
    oTable.Items.Add(209, 'LABMA', 'Labia Majora');
    oTable.Items.Add(210, 'LABMI', 'Labia Minora');
    oTable.Items.Add(211, 'LACRI', 'Lacrimal');
    oTable.Items.Add(212, 'LAM', 'Lamella');
    oTable.Items.Add(214, 'LARYN', 'Larynx');
    oTable.Items.Add(215, 'LEG', 'Leg');
    oTable.Items.Add(216, 'LENS', 'Lens');
    oTable.Items.Add(218, 'LING', 'Lingual');
    oTable.Items.Add(219, 'LINGU', 'Lingula');
    oTable.Items.Add(220, 'LIP', 'Lip');
    oTable.Items.Add(222, 'LIVER', 'Liver');
    oTable.Items.Add(227, 'LMN', 'Lumen');
    oTable.Items.Add(229, 'LN', 'Lymph Node');
    oTable.Items.Add(230, 'LNG', 'Lymph Node, Groin');
    oTable.Items.Add(223, 'LOBE', 'Lobe');
    oTable.Items.Add(224, 'LOCH', 'Lochia');
    oTable.Items.Add(226, 'LUMBA', 'Lumbar');
    oTable.Items.Add(228, 'LUNG', 'Lung');
    oTable.Items.Add(231, 'LYM', 'Lymphocytes');
    oTable.Items.Add(232, 'MAC', 'Macrophages');
    oTable.Items.Add(233, 'MALLE', 'Malleolus');
    oTable.Items.Add(234, 'MANDI', 'Mandible/Mandibular');
    oTable.Items.Add(235, 'MAR', 'Marrow');
    oTable.Items.Add(236, 'MAST', 'Mastoid');
    oTable.Items.Add(237, 'MAXIL', 'Maxilla/Maxillary');
    oTable.Items.Add(238, 'MAXS', 'Maxillary Sinus');
    oTable.Items.Add(239, 'MEATU', 'Meatus');
    oTable.Items.Add(240, 'MEC', 'Meconium');
    oTable.Items.Add(241, 'MEDST', 'Mediastinum');
    oTable.Items.Add(242, 'MEDU', 'Medullary');
    oTable.Items.Add(245, 'METAC', 'Metacarpal');
    oTable.Items.Add(246, 'METAT', 'Metatarsal');
    oTable.Items.Add(247, 'MILK', 'Milk, Breast');
    oTable.Items.Add(248, 'MITRL', 'Mitral Valve');
    oTable.Items.Add(249, 'MOLAR', 'Molar');
    oTable.Items.Add(251, 'MONSU', 'Mons Ureteris');
    oTable.Items.Add(252, 'MONSV', 'Mons Veneris(Mons Pubis)');
    oTable.Items.Add(243, 'MOU', 'Membrane');
    oTable.Items.Add(253, 'MOUTH', 'Mouth');
    oTable.Items.Add(250, 'MP', 'Mons Pubis');
    oTable.Items.Add(244, 'MPB', 'Meninges');
    oTable.Items.Add(254, 'MRSA2', 'Mrsa:');
    oTable.Items.Add(255, 'MYO', 'Myocardium');
    oTable.Items.Add(256, 'NAIL', 'Nail');
    oTable.Items.Add(257, 'NAILB', 'Nail Bed');
    oTable.Items.Add(258, 'NAILF', 'Nail, Finger');
    oTable.Items.Add(259, 'NAILT', 'Nail, Toe');
    oTable.Items.Add(260, 'NARES', 'Nares');
    oTable.Items.Add(261, 'NASL', 'Nasal');
    oTable.Items.Add(267, 'NAVEL', 'Navel');
    oTable.Items.Add(268, 'NECK', 'Neck');
    oTable.Items.Add(269, 'NERVE', 'Nerve');
    oTable.Items.Add(270, 'NIPPL', 'Nipple');
    oTable.Items.Add(263, 'NLACR', 'Nasolacrimal');
    oTable.Items.Add(272, 'NOS', 'Nose (Nasal Passage)');
    oTable.Items.Add(271, 'NOSE', 'Nose');
    oTable.Items.Add(274, 'NOSTR', 'Nostril');
    oTable.Items.Add(264, 'NP', 'Nasopharyngeal');
    oTable.Items.Add(262, 'NSS', 'Nasal Septum');
    oTable.Items.Add(266, 'NTRAC', 'Nasotracheal');
    oTable.Items.Add(275, 'OCCIP', 'Occipital');
    oTable.Items.Add(276, 'OLECR', 'Olecranon');
    oTable.Items.Add(277, 'OMEN', 'Omentum');
    oTable.Items.Add(278, 'ORBIT', 'Orbit/Orbital');
    oTable.Items.Add(279, 'ORO', 'Oropharynx');
    oTable.Items.Add(280, 'OSCOX', 'Os coxa (pelvic girdle)');
    oTable.Items.Add(281, 'OVARY', 'Ovary');
    oTable.Items.Add(287, 'PAFL', 'Pancreatic Fluid');
    oTable.Items.Add(282, 'PALAT', 'Palate');
    oTable.Items.Add(285, 'PALM', 'Palm');
    oTable.Items.Add(298, 'PANAL', 'Perianal/Perirectal');
    oTable.Items.Add(286, 'PANCR', 'Pancreas');
    oTable.Items.Add(289, 'PARAT', 'Paratracheal');
    oTable.Items.Add(290, 'PARIE', 'Parietal');
    oTable.Items.Add(291, 'PARON', 'Paronychia');
    oTable.Items.Add(292, 'PAROT', 'Parotid');
    oTable.Items.Add(288, 'PAS', 'Parasternal');
    oTable.Items.Add(294, 'PATEL', 'Patella');
    oTable.Items.Add(300, 'PCARD', 'Pericardium');
    oTable.Items.Add(301, 'PCLIT', 'Periclitoral');
    oTable.Items.Add(295, 'PELV', 'Pelvis');
    oTable.Items.Add(297, 'PENIS', 'Penis');
    oTable.Items.Add(296, 'PENSH', 'Penile Shaft');
    oTable.Items.Add(310, 'PER', 'Peritoneal');
    oTable.Items.Add(299, 'PERI', 'Pericardial Fluid');
    oTable.Items.Add(302, 'PERIH', 'Perihepatic');
    oTable.Items.Add(304, 'PERIN', 'Perineal Abscess');
    oTable.Items.Add(309, 'PERIS', 'Perisplenic');
    oTable.Items.Add(312, 'PERIT', 'Peritoneum');
    oTable.Items.Add(314, 'PERIU', 'Periurethal');
    oTable.Items.Add(315, 'PERIV', 'Perivesicular');
    oTable.Items.Add(308, 'PERRA', 'Perirectal');
    oTable.Items.Add(311, 'PERT', 'Peritoneal Fluid');
    oTable.Items.Add(316, 'PHALA', 'Phalanyx');
    oTable.Items.Add(317, 'PILO', 'Pilonidal');
    oTable.Items.Add(318, 'PINNA', 'Pinna');
    oTable.Items.Add(320, 'PLACF', 'Placenta (Fetal Side)');
    oTable.Items.Add(321, 'PLACM', 'Placenta (Maternal Side)');
    oTable.Items.Add(322, 'PLANT', 'Plantar');
    oTable.Items.Add(283, 'PLATH', 'Palate, Hard');
    oTable.Items.Add(284, 'PLATS', 'Palate, Soft');
    oTable.Items.Add(319, 'PLC', 'Placenta');
    oTable.Items.Add(324, 'PLEU', 'Pleural Fluid');
    oTable.Items.Add(323, 'PLEUR', 'Pleura');
    oTable.Items.Add(325, 'PLR', 'Pleural Fluid (Thoracentesis Fld)');
    oTable.Items.Add(303, 'PNEAL', 'Perineal');
    oTable.Items.Add(305, 'PNEPH', 'Perinephric');
    oTable.Items.Add(306, 'PNM', 'Perineum');
    oTable.Items.Add(326, 'POPLI', 'Popliteal');
    oTable.Items.Add(307, 'PORBI', 'Periorbital');
    oTable.Items.Add(327, 'PREAU', 'Preauricular');
    oTable.Items.Add(328, 'PRERE', 'Prerenal');
    oTable.Items.Add(330, 'PROS', 'Prostatic Fluid');
    oTable.Items.Add(329, 'PRST', 'Prostate Gland');
    oTable.Items.Add(313, 'PTONS', 'Peritonsillar');
    oTable.Items.Add(331, 'PUBIC', 'Pubic');
    oTable.Items.Add(332, 'PUL', 'Pulmonary Artery');
    oTable.Items.Add(333, 'RADI', 'Radial');
    oTable.Items.Add(334, 'RADIUS', 'Radius');
    oTable.Items.Add(337, 'RBC', 'Red Blood Cells');
    oTable.Items.Add(335, 'RECTL', 'Rectal');
    oTable.Items.Add(336, 'RECTU', 'Rectum');
    oTable.Items.Add(338, 'RENL', 'Renal');
    oTable.Items.Add(341, 'RIB', 'Rib');
    oTable.Items.Add(339, 'RNP', 'Renal Pelvis');
    oTable.Items.Add(340, 'RPERI', 'Retroperitoneal');
    oTable.Items.Add(424, 'SAC', 'Uterine Cul/De/Sac');
    oTable.Items.Add(344, 'SACIL', 'Sacroiliac');
    oTable.Items.Add(342, 'SACRA', 'Sacral');
    oTable.Items.Add(343, 'SACRO', 'Sacrococcygeal');
    oTable.Items.Add(345, 'SACRU', 'Sacrum');
    oTable.Items.Add(346, 'SALGL', 'Salivary Gland');
    oTable.Items.Add(347, 'SCALP', 'Scalp');
    oTable.Items.Add(348, 'SCAPU', 'Scapula/Scapular');
    oTable.Items.Add(384, 'SCLAV', 'Supraclavicle/Supraclavicular');
    oTable.Items.Add(349, 'SCLER', 'Sclera');
    oTable.Items.Add(374, 'SCLV', 'Sub Clavian');
    oTable.Items.Add(350, 'SCROT', 'Scrotum/Scrotal');
    oTable.Items.Add(375, 'SDP', 'Subdiaphramatic');
    oTable.Items.Add(352, 'SEM', 'Seminal Fluid');
    oTable.Items.Add(351, 'SEMN', 'Semen');
    oTable.Items.Add(353, 'SEPTU', 'Septum/Septal');
    oTable.Items.Add(354, 'SEROM', 'Seroma');
    oTable.Items.Add(378, 'SGF', 'Subgaleal Fluid');
    oTable.Items.Add(355, 'SHIN', 'Shin');
    oTable.Items.Add(357, 'SHOL', 'Shoulder');
    oTable.Items.Add(356, 'SHOLJ', 'Sholder Joint');
    oTable.Items.Add(358, 'SIGMO', 'Sigmoid');
    oTable.Items.Add(359, 'SINUS', 'Sinus');
    oTable.Items.Add(361, 'SKENE', 'Skene''s Gland');
    oTable.Items.Add(360, 'SKM', 'Skeletal Muscle');
    oTable.Items.Add(362, 'SKULL', 'Skull');
    oTable.Items.Add(364, 'SOLE', 'Sole');
    oTable.Items.Add(367, 'SPCOR', 'Spinal Cord');
    oTable.Items.Add(366, 'SPHEN', 'Sphenoid');
    oTable.Items.Add(368, 'SPLN', 'Spleen');
    oTable.Items.Add(365, 'SPRM', 'Spermatozoa');
    oTable.Items.Add(383, 'SPX', 'Supra Cervical');
    oTable.Items.Add(369, 'STER', 'Sternum/Sternal');
    oTable.Items.Add(370, 'STOM', 'Stoma');
    oTable.Items.Add(372, 'STOMA', 'Stomach');
    oTable.Items.Add(221, 'STOOLL', 'Liquid Stool');
    oTable.Items.Add(373, 'STUMP', 'Stump');
    oTable.Items.Add(376, 'SUB', 'Subdural');
    oTable.Items.Add(377, 'SUBD', 'Subdural Fluid');
    oTable.Items.Add(379, 'SUBM', 'Submandibular');
    oTable.Items.Add(381, 'SUBME', 'Submental');
    oTable.Items.Add(382, 'SUBPH', 'Subphrenic');
    oTable.Items.Add(380, 'SUBX', 'Submaxillary');
    oTable.Items.Add(386, 'SUPB', 'Suprapubic Specimen');
    oTable.Items.Add(385, 'SUPRA', 'Suprapubic');
    oTable.Items.Add(387, 'SWT', 'Sweat');
    oTable.Items.Add(388, 'SWTG', 'Sweat Gland');
    oTable.Items.Add(390, 'SYN', 'Synovial Fluid');
    oTable.Items.Add(389, 'SYNOL', 'Synovial');
    oTable.Items.Add(391, 'SYNOV', 'Synovium');
    oTable.Items.Add(392, 'TARS', 'Tarsal');
    oTable.Items.Add(415, 'TBRON', 'Transbronchial');
    oTable.Items.Add(416, 'TCN', 'Transcarina Asp');
    oTable.Items.Add(393, 'TDUCT', 'Tear Duct');
    oTable.Items.Add(394, 'TEAR', 'Tears');
    oTable.Items.Add(395, 'TEMPL', 'Temple');
    oTable.Items.Add(396, 'TEMPO', 'Temporal');
    oTable.Items.Add(398, 'TESTI', 'Testicle(Testis)');
    oTable.Items.Add(399, 'THIGH', 'Thigh');
    oTable.Items.Add(405, 'THM', 'Thymus');
    oTable.Items.Add(400, 'THORA', 'Thoracentesis');
    oTable.Items.Add(402, 'THRB', 'Throat');
    oTable.Items.Add(403, 'THUMB', 'Thumb');
    oTable.Items.Add(406, 'THYRD', 'Thyroid');
    oTable.Items.Add(407, 'TIBIA', 'Tibia');
    oTable.Items.Add(397, 'TML', 'Temporal Lobe');
    oTable.Items.Add(404, 'TNL', 'Thumbnail');
    oTable.Items.Add(408, 'TOE', 'Toe');
    oTable.Items.Add(409, 'TOEN', 'Toe Nail');
    oTable.Items.Add(410, 'TONG', 'Tongue');
    oTable.Items.Add(411, 'TONS', 'Tonsil');
    oTable.Items.Add(412, 'TOOTH', 'Tooth');
    oTable.Items.Add(414, 'TRCHE', 'Trachea/Tracheal');
    oTable.Items.Add(413, 'TSK', 'Tooth Socket');
    oTable.Items.Add(417, 'ULNA', 'Ulna/Ulnar');
    oTable.Items.Add(418, 'UMB', 'Umbilical Blood');
    oTable.Items.Add(419, 'UMBL', 'Umbilicus');
    oTable.Items.Add(421, 'URET', 'Ureter');
    oTable.Items.Add(422, 'URTH', 'Urethra');
    oTable.Items.Add(371, 'USTOM', 'Stoma, Urinary');
    oTable.Items.Add(425, 'UTER', 'Uterus');
    oTable.Items.Add(423, 'UTERI', 'Uterine');
    oTable.Items.Add(426, 'VAGIN', 'Vagina/Vaginal');
    oTable.Items.Add(429, 'VAL', 'Valve');
    oTable.Items.Add(430, 'VAS', 'Vas Deferens');
    oTable.Items.Add(431, 'VASTL', 'Vastus Lateralis');
    oTable.Items.Add(432, 'VAULT', 'Vault');
    oTable.Items.Add(435, 'VCSF', 'Ventricular CSF');
    oTable.Items.Add(427, 'VCUFF', 'Vaginal Cuff');
    oTable.Items.Add(433, 'VEIN', 'Vein');
    oTable.Items.Add(434, 'VENTG', 'Ventragluteal');
    oTable.Items.Add(436, 'VERMI', 'Vermis Cerebelli');
    oTable.Items.Add(437, 'VERTC', 'Vertebra, cervical');
    oTable.Items.Add(438, 'VERTL', 'Vertebra, lumbar');
    oTable.Items.Add(439, 'VERTT', 'Vertebra, thoracic');
    oTable.Items.Add(441, 'VESCL', 'Vesicular');
    oTable.Items.Add(442, 'VESFLD', 'Vesicular Fluid');
    oTable.Items.Add(440, 'VESI', 'Vesicle');
    oTable.Items.Add(443, 'VESTI', 'Vestibule(Genital)');
    oTable.Items.Add(428, 'VGV', 'Vaginal Vault');
    oTable.Items.Add(444, 'VITR', 'Vitreous Fluid');
    oTable.Items.Add(445, 'VOC', 'Vocal Cord');
    oTable.Items.Add(446, 'VULVA', 'Vulva');
    oTable.Items.Add(217, 'WBC', 'Leukocytes');
    oTable.Items.Add(447, 'WRIST', 'Wrist');
End;

procedure LoadTable552(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(552, 'Advanced beneficiary notice override reason');
    oTable.Items.Add(1, '...', 'No suggested values.');
End;

procedure LoadTable553(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(553, 'Invoice Control Code');
    oTable.Items.Add(11, 'AA', 'Authorization request for inpatient admission');
    oTable.Items.Add(9, 'AI', 'Combined Authorization and Adjudication request');
    oTable.Items.Add(14, 'CA', 'Cancel Authorization request');
    oTable.Items.Add(3, 'CG', 'Cancel Invoice Product/Service Group');
    oTable.Items.Add(4, 'CL', 'Cancel Invoice Product/Service Line Item');
    oTable.Items.Add(2, 'CN', 'Cancel Invoice');
    oTable.Items.Add(15, 'CP', 'Copy of Invoice');
    oTable.Items.Add(16, 'CQ', 'Coverage Register Query');
    oTable.Items.Add(12, 'EA', 'Authorization request for inpatient stay extension');
    oTable.Items.Add(7, 'OA', 'Original Authorization');
    oTable.Items.Add(1, 'OR', 'Original Invoice');
    oTable.Items.Add(10, 'PA', 'Pre-Authorization');
    oTable.Items.Add(5, 'PD', 'Pre-Determination Invoice');
    oTable.Items.Add(6, 'RA', 'Re-Assessment');
    oTable.Items.Add(13, 'RC', 'Referral Pre-Authorization');
    oTable.Items.Add(17, 'RU', 'Referral authorization');
    oTable.Items.Add(8, 'SA', 'Special Authorization');
End;

procedure LoadTable554(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(554, 'Invoice Reason Codes');
    oTable.Items.Add(1, 'LATE', 'Late Invoice');
    oTable.Items.Add(2, 'NORM', 'Normal submission');
    oTable.Items.Add(3, 'SUB', 'Subscriber coverage problem');
End;

procedure LoadTable555(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(555, 'Invoice Type');
    oTable.Items.Add(4, 'BK', 'Block');
    oTable.Items.Add(8, 'FN', 'Final');
    oTable.Items.Add(1, 'FS', 'Fee for Service');
    oTable.Items.Add(3, 'GP', 'Group');
    oTable.Items.Add(6, 'IN', 'Information Only');
    oTable.Items.Add(7, 'NP', 'Non Patient');
    oTable.Items.Add(9, 'PA', 'Partial');
    oTable.Items.Add(5, 'SL', 'Salary');
    oTable.Items.Add(2, 'SS', 'By Session');
    oTable.Items.Add(10, 'SU', 'Supplemental');
End;

procedure LoadTable556(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(556, 'Benefit Group');
    oTable.Items.Add(1, 'AMB', 'AMBULATORY CARE');
    oTable.Items.Add(2, 'DENT', 'DENTAL');
End;

procedure LoadTable557(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(557, 'Payee Type');
    oTable.Items.Add(4, 'EMPL', 'Employer');
    oTable.Items.Add(1, 'ORG', 'Payee Organization');
    oTable.Items.Add(2, 'PERS', 'Person');
    oTable.Items.Add(3, 'PPER', 'Pay Person');
End;

procedure LoadTable558(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(558, 'Payee Relationship to Invoice');
    oTable.Items.Add(2, 'FM', 'Family Member');
    oTable.Items.Add(4, 'GT', 'Guarantor');
    oTable.Items.Add(1, 'PT', 'Patient');
    oTable.Items.Add(3, 'SB', 'Subscriber');
End;

procedure LoadTable559(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(559, 'Product/Service Status');
    oTable.Items.Add(2, 'D', 'Denied');
    oTable.Items.Add(1, 'P', 'Processed');
    oTable.Items.Add(3, 'R', 'Rejected');
End;

procedure LoadTable560(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(560, 'Quantity Units');
    oTable.Items.Add(3, 'DY', 'Days');
    oTable.Items.Add(1, 'FL', 'Units');
    oTable.Items.Add(2, 'HS', 'Hours');
    oTable.Items.Add(4, 'MN', 'Month');
    oTable.Items.Add(5, 'YY', 'Years');
End;

procedure LoadTable561(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(561, 'Product/Services Clarification Codes');
    oTable.Items.Add(4, 'CLCTR', 'Claim Center');
    oTable.Items.Add(3, 'DGAPP', 'Diagnostic Approval Number');
    oTable.Items.Add(1, 'DTCTR', 'Data Center Number');
    oTable.Items.Add(5, 'ENC', 'Encounter Number');
    oTable.Items.Add(7, 'GFTH', 'Good Faith Indicator');
    oTable.Items.Add(6, 'OOP', 'Out of Province Indicator');
    oTable.Items.Add(2, 'SEQ', 'Sequence Number');
End;

procedure LoadTable562(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(562, 'Processing Consideration Codes');
    oTable.Items.Add(5, 'DFADJ', 'Deferred Adjudication Processing');
    oTable.Items.Add(2, 'EFORM', 'Electronic form to follow');
    oTable.Items.Add(3, 'FAX', 'Fax to follow');
    oTable.Items.Add(1, 'PAPER', 'Paper documentation to follow');
    oTable.Items.Add(6, 'PYRDELAY', 'Delayed by a Previous Payer');
    oTable.Items.Add(4, 'RTADJ', 'Real Time Adjudication Processing');
End;

procedure LoadTable564(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(564, 'Adjustment Category Code');
    oTable.Items.Add(1, 'EA', 'Edit/Adjudication Response');
    oTable.Items.Add(2, 'IN', 'Information');
    oTable.Items.Add(3, 'PA', 'Provider Adjustment');
    oTable.Items.Add(4, 'PR', 'Processing Result');
End;

procedure LoadTable565(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(565, 'Provider Adjustment Reason Code');
    oTable.Items.Add(4, 'DISP', 'Dispensing Fee');
    oTable.Items.Add(2, 'GST', 'Goods and Services Tax');
    oTable.Items.Add(3, 'HST', 'Harmonized Sales Tax');
    oTable.Items.Add(5, 'MKUP', 'Mark up Fee');
    oTable.Items.Add(1, 'PST', 'Provincial Sales Tax');
End;

procedure LoadTable569(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(569, 'Adjustment Action');
    oTable.Items.Add(1, 'EOB', 'Print on EOB');
    oTable.Items.Add(2, 'PAT', 'Inform Patient');
    oTable.Items.Add(3, 'PRO', 'Inform Provider');
End;

procedure LoadTable570(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(570, 'Payment Method Code');
    oTable.Items.Add(1, 'CASH', 'Cash');
    oTable.Items.Add(2, 'CCCA', 'Credit Card');
    oTable.Items.Add(3, 'CCHK', 'Cashier''s Check');
    oTable.Items.Add(4, 'CDAC', 'Credit/Debit Account');
    oTable.Items.Add(5, 'CHCK', 'Check');
    oTable.Items.Add(6, 'DDPO', 'Direct Deposit');
    oTable.Items.Add(7, 'DEBC', 'Debit Card');
    oTable.Items.Add(8, 'SWFT', 'Society for Worldwide Interbank Financial Telecommunications (S.W.I.F.T.)');
    oTable.Items.Add(9, 'TRAC', 'Traveler''s Check');
    oTable.Items.Add(10, 'VISN', 'VISA Special Electronic Funds Transfer Network');
End;

procedure LoadTable571(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(571, 'Invoice Processing Results Status');
    oTable.Items.Add(1, 'ACK', 'Acknowledge');
    oTable.Items.Add(6, 'ADJ', 'Adjudicated with Adjustments');
    oTable.Items.Add(5, 'ADJSUB', 'Adjudicated as Submitted');
    oTable.Items.Add(4, 'ADJZER', 'Adjudicated to Zero');
    oTable.Items.Add(7, 'PAID', 'Paid');
    oTable.Items.Add(3, 'PEND', 'Pending');
    oTable.Items.Add(8, 'PRED', 'Pre-Determination');
    oTable.Items.Add(2, 'REJECT', 'Reject');
End;

procedure LoadTable572(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(572, 'Tax status');
    oTable.Items.Add(1, 'RVAT', 'Registered in VAT register');
    oTable.Items.Add(2, 'UVAT', 'Unregistered in VAT register');
End;

procedure LoadTable615(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(615, 'User Authentication Credential Type Code');
    oTable.Items.Add(1, 'KERB', 'Kerberos Service Ticket');
    oTable.Items.Add(2, 'SAML', 'Authenticated User Identity Assertion');
End;

procedure LoadTable616(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(616, 'Address Expiration Reason');
    oTable.Items.Add(4, 'C', 'Corrected');
    oTable.Items.Add(2, 'E', 'Added in error');
    oTable.Items.Add(1, 'M', 'Moved');
    oTable.Items.Add(3, 'R', 'On request');
End;

procedure LoadTable617(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(617, 'Address Usage');
    oTable.Items.Add(3, 'C', 'Classification');
    oTable.Items.Add(1, 'M', 'Mailing');
    oTable.Items.Add(2, 'V', 'Visit');
End;

procedure LoadTable618(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(618, 'Protection Code');
    oTable.Items.Add(1, 'LI', 'Listed');
    oTable.Items.Add(2, 'UL', 'Unlisted (Should not appear in directories)');
    oTable.Items.Add(3, 'UP', 'Unpublished');
End;

procedure LoadTable625(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(625, 'Item Status Codes');
    oTable.Items.Add(1, '1', 'Active');
    oTable.Items.Add(2, '2', 'Pending Inactive');
    oTable.Items.Add(3, '3', 'Inactive');
End;

procedure LoadTable634(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(634, 'Item Importance Codes');
    oTable.Items.Add(1, 'CRT', 'Critical');
End;

procedure LoadTable642(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(642, 'Reorder Theory Codes');
    oTable.Items.Add(1, 'D', 'DOP/DOQ');
    oTable.Items.Add(2, 'M', 'MIN/MAX');
    oTable.Items.Add(3, 'O', 'Override');
End;

procedure LoadTable651(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(651, 'Labor Calculation Type');
    oTable.Items.Add(2, 'CST', 'Cost');
    oTable.Items.Add(1, 'TME', 'Time');
End;

procedure LoadTable653(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(653, 'Date Format');
    oTable.Items.Add(1, '1', 'mm/dd/yy');
    oTable.Items.Add(2, '2', 'yy.mm.dd');
    oTable.Items.Add(3, '3', 'dd/mm/yy');
    oTable.Items.Add(4, '4', 'dd.mm.yy');
    oTable.Items.Add(5, '5', 'yy/mm/dd');
    oTable.Items.Add(6, '6', 'Yymmdd');
End;

procedure LoadTable657(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(657, 'Device Type');
    oTable.Items.Add(1, '1', 'EO Gas Sterilizer');
    oTable.Items.Add(2, '2', 'Steam Sterilizer');
    oTable.Items.Add(3, '3', 'Peracetic Acid');
End;

procedure LoadTable659(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(659, 'Lot Control');
    oTable.Items.Add(1, '1', 'OR Mode Without Operator');
    oTable.Items.Add(2, '2', 'OR Mode with Operator');
    oTable.Items.Add(3, '3', 'CPD Mode Without Operator');
    oTable.Items.Add(4, '4', 'CPD Mode With Operator');
    oTable.Items.Add(5, '5', 'Offline Mode');
End;

procedure LoadTable667(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(667, 'Device Data State');
    oTable.Items.Add(1, '0', 'Real Time Values');
    oTable.Items.Add(2, '1', 'Historic Values');
End;

procedure LoadTable669(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(669, 'Load Status');
    oTable.Items.Add(3, 'LCC', 'Load is Complete');
    oTable.Items.Add(4, 'LCN', 'Load Canceled');
    oTable.Items.Add(2, 'LCP', 'Load In Process');
    oTable.Items.Add(1, 'LLD', 'Building a Load');
End;

procedure LoadTable682(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(682, 'Device Status');
    oTable.Items.Add(1, '0', 'Ready');
    oTable.Items.Add(2, '1', 'Not Ready');
End;

procedure LoadTable702(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(702, 'Cycle Type');
    oTable.Items.Add(31, '2RS', 'Second Rinse');
    oTable.Items.Add(23, 'ANR', 'Anesthesia/Respiratory');
    oTable.Items.Add(26, 'BDP', 'Bedpans');
    oTable.Items.Add(10, 'BWD', 'Bowie-Dick Test');
    oTable.Items.Add(14, 'CMW', 'Chemical Wash');
    oTable.Items.Add(29, 'COD', 'Code');
    oTable.Items.Add(18, 'CRT', 'Cart Wash');
    oTable.Items.Add(32, 'DEC', 'Decontamination');
    oTable.Items.Add(6, 'DRT', 'Dart');
    oTable.Items.Add(7, 'DRW', 'Dart Warm-up Cycle');
    oTable.Items.Add(16, 'EOH', 'EO High Temperature');
    oTable.Items.Add(17, 'EOL', 'EO Low Temperature');
    oTable.Items.Add(5, 'EXP', 'Express');
    oTable.Items.Add(1, 'FLS', 'Flash');
    oTable.Items.Add(21, 'GLS', 'Glassware');
    oTable.Items.Add(28, 'GNP', 'Gen. Purpose');
    oTable.Items.Add(3, 'GRV', 'Gravity');
    oTable.Items.Add(24, 'GTL', 'Gentle');
    oTable.Items.Add(9, 'ISO', 'Isothermal');
    oTable.Items.Add(20, 'IST', 'Instrument Wash');
    oTable.Items.Add(11, 'LKT', 'Leak Test');
    oTable.Items.Add(4, 'LQD', 'Liquid');
    oTable.Items.Add(25, 'OPW', 'Optional Wash');
    oTable.Items.Add(15, 'PEA', 'Peracetic Acid');
    oTable.Items.Add(22, 'PLA', 'Plastic Goods Wash');
    oTable.Items.Add(2, 'PRV', 'Prevac');
    oTable.Items.Add(30, 'RNS', 'Rinse');
    oTable.Items.Add(13, 'SFP', 'Steam Flush Pressure Pulse');
    oTable.Items.Add(8, 'THR', 'Thermal');
    oTable.Items.Add(27, 'TRB', 'Tray/Basin');
    oTable.Items.Add(19, 'UTL', 'Utensil Wash');
    oTable.Items.Add(12, 'WFP', 'Wrap/Steam Flush Pressure Pulse (Wrap/SFPP)');
End;

procedure LoadTable717(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(717, 'Access Restriction Value');
    oTable.Items.Add(1, 'ALL', 'All');
    oTable.Items.Add(2, 'DEM', 'All demographic data');
    oTable.Items.Add(9, 'DRG', 'Drug');
    oTable.Items.Add(6, 'HIV', 'HIV status and results');
    oTable.Items.Add(3, 'LOC', 'Patient Location');
    oTable.Items.Add(11, 'NO', 'None');
    oTable.Items.Add(13, 'OI', 'Opt in all registries (HIPAA)');
    oTable.Items.Add(12, 'OO', 'Opt out all registries (HIPAA)');
    oTable.Items.Add(5, 'PID-17', 'Religion');
    oTable.Items.Add(4, 'PID-7', 'Date of Birth');
    oTable.Items.Add(8, 'PSY', 'Psychiatric Mental health');
    oTable.Items.Add(10, 'SMD', 'Sensitive medical data');
    oTable.Items.Add(7, 'STD', 'Sexually transmitted diseases');
End;

procedure LoadTable719(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(719, 'Access Restriction Reason Code');
    oTable.Items.Add(6, 'DIA', 'Diagnosis-related');
    oTable.Items.Add(5, 'EMP', 'Employee of this organization');
    oTable.Items.Add(4, 'ORG', 'Organizational policy or requirement');
    oTable.Items.Add(1, 'PAT', 'Patient Request');
    oTable.Items.Add(2, 'PHY', 'Physician Request');
    oTable.Items.Add(3, 'REG', 'Regulatory requirement');
    oTable.Items.Add(7, 'VIP', 'Very important person or celebrity');
End;

procedure LoadTable725(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(725, 'Mood Codes');
    oTable.Items.Add(2, 'APT', 'Appointment');
    oTable.Items.Add(3, 'ARQ', 'Appointment Request');
    oTable.Items.Add(9, 'Criterion applying to Eve', '');
    oTable.Items.Add(10, 'Eg Use in Care Plans,', '');
    oTable.Items.Add(7, 'EVN', 'Event');
    oTable.Items.Add(8, 'EVN.CRT', 'Event Criterion');
    oTable.Items.Add(11, 'EXP', 'Expectation');
    oTable.Items.Add(1, 'INT', 'Intent');
    oTable.Items.Add(4, 'PRMS', 'Promise');
    oTable.Items.Add(5, 'PRP', 'Proposal');
    oTable.Items.Add(6, 'RQO', 'Request-Order');
End;

procedure LoadTable728(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(728, 'CCL Value');
    oTable.Items.Add(1, '0', 'Nothing obvious');
    oTable.Items.Add(2, '1', 'Low');
    oTable.Items.Add(3, '2', 'Moderate');
    oTable.Items.Add(4, '3', 'High');
    oTable.Items.Add(5, '4', 'Very high');
End;

procedure LoadTable731(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(731, 'DRG Diagnosis Determination Status');
    oTable.Items.Add(1, '0', 'Valid code');
    oTable.Items.Add(2, '1', 'Invalid code');
    oTable.Items.Add(3, '2', 'Two primary diagnosis codes');
    oTable.Items.Add(4, '3', 'Invalid for this gender');
    oTable.Items.Add(5, '4', 'Invalid for this age');
End;

procedure LoadTable734(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(734, 'Grouper Status');
    oTable.Items.Add(1, '0', 'Normal grouping');
    oTable.Items.Add(2, '1', 'Invalid or missing primary diagnosis');
    oTable.Items.Add(3, '2', 'Diagnosis is not allowed to be primary');
    oTable.Items.Add(4, '3', 'Data does not fulfill DRG criteria');
    oTable.Items.Add(5, '4', 'Invalid age, admission date, date of birth or discharge date');
    oTable.Items.Add(6, '5', 'Invalid gender');
    oTable.Items.Add(7, '6', 'Invalid discharge status');
    oTable.Items.Add(8, '7', 'Invalid weight ad admission');
    oTable.Items.Add(9, '8', 'Invalid length of stay');
    oTable.Items.Add(10, '9', 'Invalid field "same day"');
End;

procedure LoadTable739(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(739, 'Status Patient');
    oTable.Items.Add(1, '1', 'Normal length of stay');
    oTable.Items.Add(2, '2', 'Short length of stay');
    oTable.Items.Add(3, '3', 'Long length of stay');
End;

procedure LoadTable742(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(742, 'DRG Status Financial Calculation');
    oTable.Items.Add(1, '00', 'Effective weight calculated');
    oTable.Items.Add(2, '01', 'Hospital specific contract');
    oTable.Items.Add(3, '03', 'Eeffective weight for transfer/referral calculated');
    oTable.Items.Add(4, '04', 'Referral from other hospital based on a cooperation (no DRG reimbursement)');
    oTable.Items.Add(5, '05', 'Invalid length of stay');
    oTable.Items.Add(6, '10', 'No information/entry in cost data for this DRG');
    oTable.Items.Add(7, '11', 'No relative weight found for department (type)');
End;

procedure LoadTable749(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(749, 'DRG Grouping Status');
    oTable.Items.Add(1, '0', 'Valid code; not used for grouping');
    oTable.Items.Add(2, '1', 'Valid code; used for grouping');
    oTable.Items.Add(3, '2', 'Invalid code; not used for grouping');
    oTable.Items.Add(4, '3', 'Invalid code; code is relevant for grouping');
End;

procedure LoadTable755(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(755, 'Status Weight At Birth');
    oTable.Items.Add(1, '0', 'No weight reported at admission used for grouping');
    oTable.Items.Add(2, '1', 'Weight reported at admission used for grouping');
    oTable.Items.Add(3, '2', 'Default weight (>2499g) used for grouping');
End;

procedure LoadTable757(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(757, 'Status Respiration Minutes');
    oTable.Items.Add(1, '0', 'Respiration minutes not used for grouping');
    oTable.Items.Add(2, '1', 'Listed respiration minutes used for grouping');
    oTable.Items.Add(3, '2', 'OPS code value used for grouping');
End;

procedure LoadTable759(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(759, 'Status Admission');
    oTable.Items.Add(1, '0', 'Admission status is valid; used for grouping');
    oTable.Items.Add(2, '1', 'Admission status is valid; not used for grouping');
    oTable.Items.Add(3, '2', 'Admission status is invalid; not used for grouping');
    oTable.Items.Add(4, '3', 'Admission status is invalid; default value used for grouping');
End;

procedure LoadTable761(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(761, 'DRG Procedure Determination Status');
    oTable.Items.Add(1, '0', 'Valid code');
    oTable.Items.Add(2, '1', 'Invalid code');
    oTable.Items.Add(3, '2', 'Not used');
    oTable.Items.Add(4, '3', 'Invalid for this gender');
    oTable.Items.Add(5, '4', 'Invalid for this age');
End;

procedure LoadTable763(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(763, 'DRG Procedure Relevance');
    oTable.Items.Add(1, '0', 'Neither operation relevant nor non-operation relevant procedure');
    oTable.Items.Add(2, '1', 'Operation relevant procedure');
    oTable.Items.Add(3, '2', 'Non-operation relevant procedure');
End;

procedure LoadTable771(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(771, 'Resource Type or Category');
    oTable.Items.Add(1, '...', 'No suggested values defined');
End;

procedure LoadTable776(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(776, 'Item Status');
    oTable.Items.Add(1, 'A', 'Active');
    oTable.Items.Add(3, 'I', 'Inactive');
    oTable.Items.Add(2, 'P', 'Pending Inactive');
End;

procedure LoadTable778(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(778, 'Item Type');
    oTable.Items.Add(1, 'EQP', 'Equipment');
    oTable.Items.Add(3, 'IMP', 'Implant');
    oTable.Items.Add(4, 'MED', 'Medication');
    oTable.Items.Add(2, 'SUP', 'Supply');
    oTable.Items.Add(5, 'TDC', 'Tubes, Drains, and Catheters');
End;

procedure LoadTable790(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(790, 'Approving Regulatory Agency');
    oTable.Items.Add(2, 'AMA', 'American Medical Association');
    oTable.Items.Add(1, 'FDA', 'Food and Drug Administration');
End;

procedure LoadTable793(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(793, 'Ruling Act');
    oTable.Items.Add(1, 'SMDA', 'Safe Medical Devices Act');
End;

procedure LoadTable806(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(806, 'Sterilization Type');
    oTable.Items.Add(1, 'EOG', 'Ethylene Oxide Gas');
    oTable.Items.Add(2, 'PCA', 'Peracetic acid');
    oTable.Items.Add(3, 'STM', 'Steam');
End;

procedure LoadTable809(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(809, 'Maintenance Cycle');
    oTable.Items.Add(1, '...', 'No suggested values');
End;

procedure LoadTable811(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(811, 'Maintenance Type');
    oTable.Items.Add(1, '...', 'No suggested values');
End;

procedure LoadTable818(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(818, 'Package');
    oTable.Items.Add(2, 'BX', 'Box');
    oTable.Items.Add(1, 'CS', 'Case');
    oTable.Items.Add(3, 'EA', 'Each');
    oTable.Items.Add(4, 'SET', 'Set');
End;

procedure LoadTable834(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(834, 'MIME Types');
    oTable.Items.Add(1, 'application', 'Application data');
    oTable.Items.Add(2, 'audio', 'Audio data');
    oTable.Items.Add(3, 'image', 'Image data');
    oTable.Items.Add(4, 'model', 'Model data');
    oTable.Items.Add(7, 'multipart', 'MIME multipart package');
    oTable.Items.Add(5, 'text', 'Text data');
    oTable.Items.Add(6, 'video', 'Video data');
End;

procedure LoadTable836(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(836, 'Problem Severity');
    oTable.Items.Add(1, 'No Values Defined', '');
End;

procedure LoadTable838(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(838, 'Problem Perspective');
    oTable.Items.Add(1, 'No Values Defined', '');
End;

procedure LoadTable865(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(865, 'Referral Documentation Completion Status');
    oTable.Items.Add(1, '...', 'No suggested values defined');
End;

procedure LoadTable868(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(868, 'Telecommunication expiration reason');
    oTable.Items.Add(4, 'C', 'Corrected');
    oTable.Items.Add(2, 'E', 'Added in error');
    oTable.Items.Add(1, 'M', 'Moved');
    oTable.Items.Add(5, 'N', 'No longer in service');
    oTable.Items.Add(3, 'R', 'On request');
End;

procedure LoadTable871(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(871, 'Supply Risk Codes');
    oTable.Items.Add(1, 'COR', 'Corrosive');
    oTable.Items.Add(3, 'EXP', 'Explosive');
    oTable.Items.Add(2, 'FLA', 'Flammable');
    oTable.Items.Add(4, 'INJ', 'Injury Hazard');
    oTable.Items.Add(6, 'RAD', 'Radioactive');
    oTable.Items.Add(5, 'TOX', 'Toxic');
    oTable.Items.Add(7, 'UNK', 'Unknown');
End;

procedure LoadTable879(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(879, 'Product/Service Code');
    oTable.Items.Add(1, '...', 'No suggested values defined');
End;

procedure LoadTable880(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(880, 'Product/Service Code Modifier');
    oTable.Items.Add(1, '...', 'No suggested values defined');
End;

procedure LoadTable881(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(881, 'Role Executing Physician');
    oTable.Items.Add(3, 'B', 'Both');
    oTable.Items.Add(2, 'P', 'Professional Part');
    oTable.Items.Add(1, 'T', 'Technical Part');
End;

procedure LoadTable882(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(882, 'Medical Role Executing Physician');
    oTable.Items.Add(1, 'E', 'Employed');
    oTable.Items.Add(2, 'SE', 'Self-employed');
End;

procedure LoadTable894(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(894, 'Side of body');
    oTable.Items.Add(1, 'L', 'Left');
    oTable.Items.Add(2, 'R', 'Right');
End;

procedure LoadTable895(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(895, 'Present On Admission (POA) Indicator');
    oTable.Items.Add(5, 'E', 'Exempt');
    oTable.Items.Add(2, 'N', 'No');
    oTable.Items.Add(3, 'U', 'Unknown');
    oTable.Items.Add(4, 'W', 'Not applicable');
    oTable.Items.Add(1, 'Y', 'Yes');
End;

procedure LoadTable9999(oTables : THL7V2ModelTables);
Begin
  oTables.Add(9999, 'no table for CE');
End;

procedure Definitions26LoadTables(oTables : THL7V2ModelTables);
Begin
  LoadTable0(oTables);
  LoadTable1(oTables);
  LoadTable2(oTables);
  LoadTable3(oTables);
  LoadTable4(oTables);
  LoadTable5(oTables);
  LoadTable6(oTables);
  LoadTable7(oTables);
  LoadTable8(oTables);
  LoadTable9(oTables);
  LoadTable10(oTables);
  LoadTable17(oTables);
  LoadTable18(oTables);
  LoadTable19(oTables);
  LoadTable21(oTables);
  LoadTable22(oTables);
  LoadTable23(oTables);
  LoadTable24(oTables);
  LoadTable27(oTables);
  LoadTable32(oTables);
  LoadTable38(oTables);
  LoadTable42(oTables);
  LoadTable43(oTables);
  LoadTable44(oTables);
  LoadTable45(oTables);
  LoadTable46(oTables);
  LoadTable48(oTables);
  LoadTable49(oTables);
  LoadTable50(oTables);
  LoadTable51(oTables);
  LoadTable52(oTables);
  LoadTable55(oTables);
  LoadTable56(oTables);
  LoadTable59(oTables);
  LoadTable61(oTables);
  LoadTable62(oTables);
  LoadTable63(oTables);
  LoadTable64(oTables);
  LoadTable65(oTables);
  LoadTable66(oTables);
  LoadTable68(oTables);
  LoadTable69(oTables);
  LoadTable70(oTables);
  LoadTable72(oTables);
  LoadTable73(oTables);
  LoadTable74(oTables);
  LoadTable76(oTables);
  LoadTable78(oTables);
  LoadTable80(oTables);
  LoadTable83(oTables);
  LoadTable84(oTables);
  LoadTable85(oTables);
  LoadTable86(oTables);
  LoadTable87(oTables);
  LoadTable88(oTables);
  LoadTable91(oTables);
  LoadTable92(oTables);
  LoadTable93(oTables);
  LoadTable98(oTables);
  LoadTable99(oTables);
  LoadTable100(oTables);
  LoadTable103(oTables);
  LoadTable104(oTables);
  LoadTable105(oTables);
  LoadTable106(oTables);
  LoadTable107(oTables);
  LoadTable108(oTables);
  LoadTable109(oTables);
  LoadTable110(oTables);
  LoadTable111(oTables);
  LoadTable112(oTables);
  LoadTable113(oTables);
  LoadTable114(oTables);
  LoadTable115(oTables);
  LoadTable116(oTables);
  LoadTable117(oTables);
  LoadTable118(oTables);
  LoadTable119(oTables);
  LoadTable121(oTables);
  LoadTable122(oTables);
  LoadTable123(oTables);
  LoadTable124(oTables);
  LoadTable125(oTables);
  LoadTable126(oTables);
  LoadTable127(oTables);
  LoadTable128(oTables);
  LoadTable129(oTables);
  LoadTable130(oTables);
  LoadTable131(oTables);
  LoadTable132(oTables);
  LoadTable135(oTables);
  LoadTable136(oTables);
  LoadTable137(oTables);
  LoadTable139(oTables);
  LoadTable140(oTables);
  LoadTable141(oTables);
  LoadTable142(oTables);
  LoadTable143(oTables);
  LoadTable144(oTables);
  LoadTable145(oTables);
  LoadTable146(oTables);
  LoadTable147(oTables);
  LoadTable148(oTables);
  LoadTable149(oTables);
  LoadTable150(oTables);
  LoadTable151(oTables);
  LoadTable152(oTables);
  LoadTable153(oTables);
  LoadTable155(oTables);
  LoadTable156(oTables);
  LoadTable157(oTables);
  LoadTable158(oTables);
  LoadTable159(oTables);
  LoadTable160(oTables);
  LoadTable161(oTables);
  LoadTable162(oTables);
  LoadTable163(oTables);
  LoadTable164(oTables);
  LoadTable165(oTables);
  LoadTable166(oTables);
  LoadTable167(oTables);
  LoadTable168(oTables);
  LoadTable169(oTables);
  LoadTable170(oTables);
  LoadTable171(oTables);
  LoadTable172(oTables);
  LoadTable173(oTables);
  LoadTable174(oTables);
  LoadTable175(oTables);
  LoadTable177(oTables);
  LoadTable178(oTables);
  LoadTable179(oTables);
  LoadTable180(oTables);
  LoadTable181(oTables);
  LoadTable182(oTables);
  LoadTable183(oTables);
  LoadTable184(oTables);
  LoadTable185(oTables);
  LoadTable186(oTables);
  LoadTable187(oTables);
  LoadTable188(oTables);
  LoadTable189(oTables);
  LoadTable190(oTables);
  LoadTable191(oTables);
  LoadTable193(oTables);
  LoadTable200(oTables);
  LoadTable201(oTables);
  LoadTable202(oTables);
  LoadTable203(oTables);
  LoadTable204(oTables);
  LoadTable205(oTables);
  LoadTable206(oTables);
  LoadTable207(oTables);
  LoadTable208(oTables);
  LoadTable209(oTables);
  LoadTable210(oTables);
  LoadTable211(oTables);
  LoadTable212(oTables);
  LoadTable213(oTables);
  LoadTable214(oTables);
  LoadTable215(oTables);
  LoadTable216(oTables);
  LoadTable217(oTables);
  LoadTable218(oTables);
  LoadTable219(oTables);
  LoadTable220(oTables);
  LoadTable222(oTables);
  LoadTable223(oTables);
  LoadTable224(oTables);
  LoadTable225(oTables);
  LoadTable227(oTables);
  LoadTable228(oTables);
  LoadTable229(oTables);
  LoadTable230(oTables);
  LoadTable231(oTables);
  LoadTable232(oTables);
  LoadTable233(oTables);
  LoadTable234(oTables);
  LoadTable235(oTables);
  LoadTable236(oTables);
  LoadTable237(oTables);
  LoadTable238(oTables);
  LoadTable239(oTables);
  LoadTable240(oTables);
  LoadTable241(oTables);
  LoadTable242(oTables);
  LoadTable243(oTables);
  LoadTable244(oTables);
  LoadTable245(oTables);
  LoadTable246(oTables);
  LoadTable247(oTables);
  LoadTable248(oTables);
  LoadTable249(oTables);
  LoadTable250(oTables);
  LoadTable251(oTables);
  LoadTable252(oTables);
  LoadTable253(oTables);
  LoadTable254(oTables);
  LoadTable255(oTables);
  LoadTable256(oTables);
  LoadTable257(oTables);
  LoadTable258(oTables);
  LoadTable259(oTables);
  LoadTable260(oTables);
  LoadTable261(oTables);
  LoadTable262(oTables);
  LoadTable263(oTables);
  LoadTable264(oTables);
  LoadTable265(oTables);
  LoadTable267(oTables);
  LoadTable268(oTables);
  LoadTable269(oTables);
  LoadTable270(oTables);
  LoadTable271(oTables);
  LoadTable272(oTables);
  LoadTable273(oTables);
  LoadTable275(oTables);
  LoadTable276(oTables);
  LoadTable277(oTables);
  LoadTable278(oTables);
  LoadTable279(oTables);
  LoadTable280(oTables);
  LoadTable281(oTables);
  LoadTable282(oTables);
  LoadTable283(oTables);
  LoadTable284(oTables);
  LoadTable285(oTables);
  LoadTable286(oTables);
  LoadTable287(oTables);
  LoadTable288(oTables);
  LoadTable289(oTables);
  LoadTable291(oTables);
  LoadTable292(oTables);
  LoadTable293(oTables);
  LoadTable294(oTables);
  LoadTable295(oTables);
  LoadTable296(oTables);
  LoadTable297(oTables);
  LoadTable298(oTables);
  LoadTable299(oTables);
  LoadTable300(oTables);
  LoadTable301(oTables);
  LoadTable302(oTables);
  LoadTable303(oTables);
  LoadTable304(oTables);
  LoadTable305(oTables);
  LoadTable306(oTables);
  LoadTable307(oTables);
  LoadTable308(oTables);
  LoadTable309(oTables);
  LoadTable311(oTables);
  LoadTable312(oTables);
  LoadTable313(oTables);
  LoadTable315(oTables);
  LoadTable316(oTables);
  LoadTable317(oTables);
  LoadTable319(oTables);
  LoadTable320(oTables);
  LoadTable321(oTables);
  LoadTable322(oTables);
  LoadTable324(oTables);
  LoadTable325(oTables);
  LoadTable326(oTables);
  LoadTable327(oTables);
  LoadTable328(oTables);
  LoadTable329(oTables);
  LoadTable330(oTables);
  LoadTable331(oTables);
  LoadTable332(oTables);
  LoadTable333(oTables);
  LoadTable334(oTables);
  LoadTable335(oTables);
  LoadTable336(oTables);
  LoadTable337(oTables);
  LoadTable338(oTables);
  LoadTable339(oTables);
  LoadTable340(oTables);
  LoadTable341(oTables);
  LoadTable342(oTables);
  LoadTable343(oTables);
  LoadTable344(oTables);
  LoadTable345(oTables);
  LoadTable346(oTables);
  LoadTable347(oTables);
  LoadTable348(oTables);
  LoadTable349(oTables);
  LoadTable350(oTables);
  LoadTable351(oTables);
  LoadTable353(oTables);
  LoadTable354(oTables);
  LoadTable355(oTables);
  LoadTable356(oTables);
  LoadTable357(oTables);
  LoadTable358(oTables);
  LoadTable359(oTables);
  LoadTable360(oTables);
  LoadTable361(oTables);
  LoadTable362(oTables);
  LoadTable363(oTables);
  LoadTable364(oTables);
  LoadTable365(oTables);
  LoadTable366(oTables);
  LoadTable367(oTables);
  LoadTable368(oTables);
  LoadTable369(oTables);
  LoadTable370(oTables);
  LoadTable371(oTables);
  LoadTable372(oTables);
  LoadTable373(oTables);
  LoadTable374(oTables);
  LoadTable375(oTables);
  LoadTable376(oTables);
  LoadTable377(oTables);
  LoadTable378(oTables);
  LoadTable379(oTables);
  LoadTable380(oTables);
  LoadTable381(oTables);
  LoadTable382(oTables);
  LoadTable383(oTables);
  LoadTable384(oTables);
  LoadTable385(oTables);
  LoadTable386(oTables);
  LoadTable387(oTables);
  LoadTable388(oTables);
  LoadTable389(oTables);
  LoadTable391(oTables);
  LoadTable392(oTables);
  LoadTable393(oTables);
  LoadTable394(oTables);
  LoadTable395(oTables);
  LoadTable396(oTables);
  LoadTable397(oTables);
  LoadTable398(oTables);
  LoadTable399(oTables);
  LoadTable401(oTables);
  LoadTable402(oTables);
  LoadTable403(oTables);
  LoadTable404(oTables);
  LoadTable405(oTables);
  LoadTable406(oTables);
  LoadTable409(oTables);
  LoadTable411(oTables);
  LoadTable412(oTables);
  LoadTable413(oTables);
  LoadTable414(oTables);
  LoadTable415(oTables);
  LoadTable416(oTables);
  LoadTable417(oTables);
  LoadTable418(oTables);
  LoadTable421(oTables);
  LoadTable422(oTables);
  LoadTable423(oTables);
  LoadTable424(oTables);
  LoadTable425(oTables);
  LoadTable426(oTables);
  LoadTable427(oTables);
  LoadTable428(oTables);
  LoadTable429(oTables);
  LoadTable430(oTables);
  LoadTable431(oTables);
  LoadTable432(oTables);
  LoadTable433(oTables);
  LoadTable434(oTables);
  LoadTable435(oTables);
  LoadTable436(oTables);
  LoadTable437(oTables);
  LoadTable438(oTables);
  LoadTable440(oTables);
  LoadTable441(oTables);
  LoadTable442(oTables);
  LoadTable443(oTables);
  LoadTable444(oTables);
  LoadTable445(oTables);
  LoadTable446(oTables);
  LoadTable447(oTables);
  LoadTable448(oTables);
  LoadTable450(oTables);
  LoadTable451(oTables);
  LoadTable452(oTables);
  LoadTable453(oTables);
  LoadTable454(oTables);
  LoadTable455(oTables);
  LoadTable456(oTables);
  LoadTable457(oTables);
  LoadTable458(oTables);
  LoadTable459(oTables);
  LoadTable460(oTables);
  LoadTable461(oTables);
  LoadTable462(oTables);
  LoadTable463(oTables);
  LoadTable464(oTables);
  LoadTable465(oTables);
  LoadTable466(oTables);
  LoadTable467(oTables);
  LoadTable468(oTables);
  LoadTable469(oTables);
  LoadTable470(oTables);
  LoadTable471(oTables);
  LoadTable472(oTables);
  LoadTable473(oTables);
  LoadTable474(oTables);
  LoadTable475(oTables);
  LoadTable476(oTables);
  LoadTable477(oTables);
  LoadTable478(oTables);
  LoadTable479(oTables);
  LoadTable480(oTables);
  LoadTable482(oTables);
  LoadTable483(oTables);
  LoadTable484(oTables);
  LoadTable485(oTables);
  LoadTable487(oTables);
  LoadTable488(oTables);
  LoadTable489(oTables);
  LoadTable490(oTables);
  LoadTable491(oTables);
  LoadTable492(oTables);
  LoadTable493(oTables);
  LoadTable494(oTables);
  LoadTable495(oTables);
  LoadTable496(oTables);
  LoadTable497(oTables);
  LoadTable498(oTables);
  LoadTable499(oTables);
  LoadTable500(oTables);
  LoadTable501(oTables);
  LoadTable502(oTables);
  LoadTable503(oTables);
  LoadTable504(oTables);
  LoadTable505(oTables);
  LoadTable506(oTables);
  LoadTable507(oTables);
  LoadTable508(oTables);
  LoadTable509(oTables);
  LoadTable510(oTables);
  LoadTable511(oTables);
  LoadTable512(oTables);
  LoadTable513(oTables);
  LoadTable514(oTables);
  LoadTable515(oTables);
  LoadTable516(oTables);
  LoadTable517(oTables);
  LoadTable518(oTables);
  LoadTable519(oTables);
  LoadTable520(oTables);
  LoadTable521(oTables);
  LoadTable523(oTables);
  LoadTable524(oTables);
  LoadTable525(oTables);
  LoadTable526(oTables);
  LoadTable527(oTables);
  LoadTable528(oTables);
  LoadTable530(oTables);
  LoadTable531(oTables);
  LoadTable532(oTables);
  LoadTable533(oTables);
  LoadTable534(oTables);
  LoadTable535(oTables);
  LoadTable536(oTables);
  LoadTable537(oTables);
  LoadTable538(oTables);
  LoadTable539(oTables);
  LoadTable540(oTables);
  LoadTable541(oTables);
  LoadTable542(oTables);
  LoadTable543(oTables);
  LoadTable544(oTables);
  LoadTable547(oTables);
  LoadTable548(oTables);
  LoadTable549(oTables);
  LoadTable550(oTables);
  LoadTable552(oTables);
  LoadTable553(oTables);
  LoadTable554(oTables);
  LoadTable555(oTables);
  LoadTable556(oTables);
  LoadTable557(oTables);
  LoadTable558(oTables);
  LoadTable559(oTables);
  LoadTable560(oTables);
  LoadTable561(oTables);
  LoadTable562(oTables);
  LoadTable564(oTables);
  LoadTable565(oTables);
  LoadTable569(oTables);
  LoadTable570(oTables);
  LoadTable571(oTables);
  LoadTable572(oTables);
  LoadTable615(oTables);
  LoadTable616(oTables);
  LoadTable617(oTables);
  LoadTable618(oTables);
  LoadTable625(oTables);
  LoadTable634(oTables);
  LoadTable642(oTables);
  LoadTable651(oTables);
  LoadTable653(oTables);
  LoadTable657(oTables);
  LoadTable659(oTables);
  LoadTable667(oTables);
  LoadTable669(oTables);
  LoadTable682(oTables);
  LoadTable702(oTables);
  LoadTable717(oTables);
  LoadTable719(oTables);
  LoadTable725(oTables);
  LoadTable728(oTables);
  LoadTable731(oTables);
  LoadTable734(oTables);
  LoadTable739(oTables);
  LoadTable742(oTables);
  LoadTable749(oTables);
  LoadTable755(oTables);
  LoadTable757(oTables);
  LoadTable759(oTables);
  LoadTable761(oTables);
  LoadTable763(oTables);
  LoadTable771(oTables);
  LoadTable776(oTables);
  LoadTable778(oTables);
  LoadTable790(oTables);
  LoadTable793(oTables);
  LoadTable806(oTables);
  LoadTable809(oTables);
  LoadTable811(oTables);
  LoadTable818(oTables);
  LoadTable834(oTables);
  LoadTable836(oTables);
  LoadTable838(oTables);
  LoadTable865(oTables);
  LoadTable868(oTables);
  LoadTable871(oTables);
  LoadTable879(oTables);
  LoadTable880(oTables);
  LoadTable881(oTables);
  LoadTable882(oTables);
  LoadTable894(oTables);
  LoadTable895(oTables);
  LoadTable9999(oTables);
End;

procedure Definitions26LoadDataTypes(oDataTypes : THL7V2ModelDataTypes);
Begin
  oDataTypes.Add('-', 'withdrawn', 0);
  oDataTypes.Add('AD', 'Address', 0);
  oDataTypes.Add('AUI', 'Authorization Information', 0);
  oDataTypes.Add('CCD', 'Charge Code and Date', 0);
  oDataTypes.Add('CCP', 'Channel Calibration Parameters', 0);
  oDataTypes.Add('CD', 'Channel Definition', 0);
  oDataTypes.Add('CE', 'Coded Element', 0);
  oDataTypes.Add('CF', 'Coded Element with Formatted Values', 0);
  oDataTypes.Add('CNE', 'Coded with No Exceptions', 0);
  oDataTypes.Add('CNN', 'Composite ID Number and Name Simplified', 0);
  oDataTypes.Add('CP', 'Composite Price', 0);
  oDataTypes.Add('CQ', 'Composite Quantity with Units', 0);
  oDataTypes.Add('CSU', 'Channel Sensitivity and Units', 0);
  oDataTypes.Add('CWE', 'Coded with Exceptions', 0);
  oDataTypes.Add('CX', 'Extended Composite ID with Check Digit', 0);
  oDataTypes.Add('DDI', 'Daily Deductible Information', 0);
  oDataTypes.Add('DIN', 'Date and Institution Name', 0);
  oDataTypes.Add('DLD', 'Discharge to Location and Date', 0);
  oDataTypes.Add('DLN', 'Driver''s License Number', 0);
  oDataTypes.Add('DLT', 'Delta', 0);
  oDataTypes.Add('DR', 'Date/Time Range', 0);
  oDataTypes.Add('DT', 'Date', 0);
  oDataTypes.Add('DTM', 'Date/Time', 0);
  oDataTypes.Add('DTN', 'Day Type and Number', 0);
  oDataTypes.Add('ED', 'Encapsulated Data', 0);
  oDataTypes.Add('EI', 'Entity Identifier', 0);
  oDataTypes.Add('EIP', 'Entity Identifier Pair', 0);
  oDataTypes.Add('ELD', 'Error Location and Description', 0);
  oDataTypes.Add('ERL', 'Error Location', 0);
  oDataTypes.Add('FC', 'Financial Class', 0);
  oDataTypes.Add('FN', 'Family Name', 0);
  oDataTypes.Add('FT', 'Formatted Text Data', 0);
  oDataTypes.Add('GTS', 'General Timing Specification', 0);
  oDataTypes.Add('HD', 'Hierarchic Designator', 0);
  oDataTypes.Add('ICD', 'Insurance Certification Definition', 0);
  oDataTypes.Add('ID', 'Coded Value for HL7 Defined Tables', 0);
  oDataTypes.Add('IS', 'Coded Value for User-Defined Tables', 0);
  oDataTypes.Add('JCC', 'Job Code/Class', 0);
  oDataTypes.Add('LA1', 'Location with Address Variation 1', 0);
  oDataTypes.Add('LA2', 'Location with Address Variation 2', 0);
  oDataTypes.Add('MA', 'Multiplexed Array', 0);
  oDataTypes.Add('MO', 'Money', 0);
  oDataTypes.Add('MOC', 'Money and Code', 0);
  oDataTypes.Add('MOP', 'Money or Percentage', 0);
  oDataTypes.Add('MSG', 'Message Type', 0);
  oDataTypes.Add('NA', 'Numeric Array', 0);
  oDataTypes.Add('NDL', 'Name with Date and Location', 0);
  oDataTypes.Add('NM', 'Numeric', 0);
  oDataTypes.Add('NR', 'Numeric Range', 0);
  oDataTypes.Add('OCD', 'Occurrence Code and Date', 0);
  oDataTypes.Add('OSD', 'Order Sequence Definition', 0);
  oDataTypes.Add('OSP', 'Occurrence Span Code and Date', 0);
  oDataTypes.Add('PIP', 'Practitioner Institutional Privileges', 0);
  oDataTypes.Add('PL', 'Person Location', 0);
  oDataTypes.Add('PLN', 'Practitioner License or Other ID Number', 0);
  oDataTypes.Add('PPN', 'Performing Person Time Stamp', 0);
  oDataTypes.Add('PRL', 'Parent Result Link', 0);
  oDataTypes.Add('PT', 'Processing Type', 0);
  oDataTypes.Add('PTA', 'Policy Type and Amount', 0);
  oDataTypes.Add('QIP', 'Query Input Parameter List', 0);
  oDataTypes.Add('QSC', 'Query Selection Criteria', 0);
  oDataTypes.Add('RCD', 'Row Column Definition', 0);
  oDataTypes.Add('RFR', 'Reference Range', 0);
  oDataTypes.Add('RI', 'Repeat Interval', 0);
  oDataTypes.Add('RMC', 'Room Coverage', 0);
  oDataTypes.Add('RP', 'Reference Pointer', 0);
  oDataTypes.Add('RPT', 'Repeat Pattern', 0);
  oDataTypes.Add('SAD', 'Street Address', 0);
  oDataTypes.Add('SCV', 'Scheduling Class Value Pair', 0);
  oDataTypes.Add('SI', 'Sequence ID', 0);
  oDataTypes.Add('SN', 'Structured Numeric', 0);
  oDataTypes.Add('SPD', 'Specialty Description', 0);
  oDataTypes.Add('SPS', 'Specimen Source', 0);
  oDataTypes.Add('SRT', 'Sort Order', 0);
  oDataTypes.Add('ST', 'String Data', 0);
  oDataTypes.Add('TM', 'Time', 0);
  oDataTypes.Add('TQ', 'Timing Quantity', 0);
  oDataTypes.Add('TS', 'Time Stamp', 0);
  oDataTypes.Add('TX', 'Text Data', 0);
  oDataTypes.Add('UVC', 'UB Value Code and Amount', 0);
  oDataTypes.Add('var', 'varies', 0);
  oDataTypes.Add('VH', 'Visiting Hours', 0);
  oDataTypes.Add('VID', 'Version Identifier', 0);
  oDataTypes.Add('VR', 'Value Range', 0);
  oDataTypes.Add('WVI', 'Channel Identifier', 0);
  oDataTypes.Add('WVS', 'Waveform Source', 0);
  oDataTypes.Add('XAD', 'Extended Address', 0);
  oDataTypes.Add('XCN', 'Extended Composite ID Number and Name for Persons', 0);
  oDataTypes.Add('XON', 'Extended Composite Name and Identification Number for Organizations', 0);
  oDataTypes.Add('XPN', 'Extended Person Name', 0);
  oDataTypes.Add('XTN', 'Extended Telecommunication Number', 0);
End;

procedure Definitions26LoadComponents(oComponents : THL7V2ModelComponents);
Begin
  oComponents.Add('Street Address', 'ST', 0, 1);
  oComponents.Add('Other Designation', 'ST', 0, 2);
  oComponents.Add('City', 'ST', 0, 3);
  oComponents.Add('State or Province', 'ST', 0, 4);
  oComponents.Add('Zip or Postal Code', 'ST', 0, 5);
  oComponents.Add('Country', 'ID', 399, 6);
  oComponents.Add('Address Type', 'ID', 190, 7);
  oComponents.Add('Other Geographic Designation', 'ST', 0, 8);
  oComponents.Add('Authorization Number', 'ST', 0, 9);
  oComponents.Add('Date', 'DT', 0, 10);
  oComponents.Add('Source', 'ST', 0, 11);
  oComponents.Add('Invocation Event', 'ID', 100, 12);
  oComponents.Add('Date/time', 'DTM', 0, 13);
  oComponents.Add('Channel Calibration Sensitivity Correction Factor', 'NM', 0, 14);
  oComponents.Add('Channel Calibration Baseline', 'NM', 0, 15);
  oComponents.Add('Channel Calibration Time Skew', 'NM', 0, 16);
  oComponents.Add('Channel Identifier', 'WVI', 0, 17);
  oComponents.Add('Waveform Source', 'WVS', 0, 18);
  oComponents.Add('Channel Sensitivity and Units', 'CSU', 0, 19);
  oComponents.Add('Channel Calibration Parameters', 'CCP', 0, 20);
  oComponents.Add('Channel Sampling Frequency', 'NM', 0, 21);
  oComponents.Add('Minimum and Maximum Data Values', 'NR', 0, 22);
  oComponents.Add('Identifier', '-', 0, 23);
  oComponents.Add('Text', '-', 0, 24);
  oComponents.Add('Name of Coding System', '-', 0, 25);
  oComponents.Add('Alternate Identifier', '-', 0, 26);
  oComponents.Add('Alternate Text', '-', 0, 27);
  oComponents.Add('Name of Alternate Coding System', '-', 0, 28);
  oComponents.Add('Identifier', 'ST', 0, 29);
  oComponents.Add('Formatted Text', 'FT', 0, 30);
  oComponents.Add('Name of Coding System', 'ID', 396, 31);
  oComponents.Add('Alternate Identifier', 'ST', 0, 32);
  oComponents.Add('Alternate Formatted Text', 'FT', 0, 33);
  oComponents.Add('Name of Alternate Coding System', 'ID', 396, 34);
  oComponents.Add('Identifier', 'ST', 0, 35);
  oComponents.Add('Text', 'ST', 0, 36);
  oComponents.Add('Name of Coding System', 'ID', 396, 37);
  oComponents.Add('Alternate Identifier', 'ST', 0, 38);
  oComponents.Add('Alternate Text', 'ST', 0, 39);
  oComponents.Add('Name of Alternate Coding System', 'ID', 396, 40);
  oComponents.Add('Coding System Version ID', 'ST', 0, 41);
  oComponents.Add('Alternate Coding System Version ID', 'ST', 0, 42);
  oComponents.Add('Original Text', 'ST', 0, 43);
  oComponents.Add('ID Number', 'ST', 0, 44);
  oComponents.Add('Family Name', 'ST', 0, 45);
  oComponents.Add('Given Name', 'ST', 0, 46);
  oComponents.Add('Second and Further Given Names or Initials Thereof', 'ST', 0, 47);
  oComponents.Add('Suffix (e.g., JR or III)', 'ST', 0, 48);
  oComponents.Add('Prefix (e.g., DR)', 'ST', 0, 49);
  oComponents.Add('Degree (e.g., MD', 'IS', 360, 50);
  oComponents.Add('Source Table', 'IS', 297, 51);
  oComponents.Add('Assigning Authority   - Namespace ID', 'IS', 363, 52);
  oComponents.Add('Assigning Authority  - Universal ID', 'ST', 0, 53);
  oComponents.Add('Assigning Authority  - Universal ID Type', 'ID', 301, 54);
  oComponents.Add('Price', 'MO', 0, 55);
  oComponents.Add('Price Type', 'ID', 205, 56);
  oComponents.Add('From Value', 'NM', 0, 57);
  oComponents.Add('To Value', 'NM', 0, 58);
  oComponents.Add('Range Units', 'CWE', 0, 59);
  oComponents.Add('Range Type', 'ID', 298, 60);
  oComponents.Add('Quantity', 'NM', 0, 61);
  oComponents.Add('Units', 'CWE', 0, 62);
  oComponents.Add('Channel Sensitivity', 'NM', 0, 63);
  oComponents.Add('Unit of Measure Identifier', 'ST', 0, 64);
  oComponents.Add('Unit of Measure Description', 'ST', 0, 65);
  oComponents.Add('Unit of Measure Coding System', 'ID', 396, 66);
  oComponents.Add('Alternate Unit of Measure Identifier', 'ST', 0, 67);
  oComponents.Add('Alternate Unit of Measure Description', 'ST', 0, 68);
  oComponents.Add('Alternate Unit of Measure Coding System', 'ID', 396, 69);
  oComponents.Add('Identifier', 'ST', 0, 70);
  oComponents.Add('Text', 'ST', 0, 71);
  oComponents.Add('Name of Coding System', 'ID', 396, 72);
  oComponents.Add('Alternate Identifier', 'ST', 0, 73);
  oComponents.Add('Alternate Text', 'ST', 0, 74);
  oComponents.Add('Name of Alternate Coding System', 'ID', 396, 75);
  oComponents.Add('Coding System Version ID', 'ST', 0, 76);
  oComponents.Add('Alternate Coding System Version ID', 'ST', 0, 77);
  oComponents.Add('Original Text', 'ST', 0, 78);
  oComponents.Add('ID Number', 'ST', 0, 79);
  oComponents.Add('Identifier Check Digit', 'ST', 0, 80);
  oComponents.Add('Check Digit Scheme', 'ID', 61, 81);
  oComponents.Add('Assigning Authority', 'HD', 363, 82);
  oComponents.Add('Identifier Type Code', 'ID', 203, 83);
  oComponents.Add('Assigning Facility', 'HD', 0, 84);
  oComponents.Add('Effective Date', 'DT', 0, 85);
  oComponents.Add('Expiration Date', 'DT', 0, 86);
  oComponents.Add('Assigning Jurisdiction', 'CWE', 0, 87);
  oComponents.Add('Assigning Agency or Department', 'CWE', 0, 88);
  oComponents.Add('Delay Days', 'NM', 0, 89);
  oComponents.Add('Monetary Amount', 'MO', 0, 90);
  oComponents.Add('Number of Days', 'NM', 0, 91);
  oComponents.Add('Date', 'DTM', 0, 92);
  oComponents.Add('Institution Name', 'CWE', 531, 93);
  oComponents.Add('Discharge to Location', 'CWE', 113, 94);
  oComponents.Add('Effective Date', 'DTM', 0, 95);
  oComponents.Add('License Number', 'ST', 0, 96);
  oComponents.Add('Issuing State, Province, Country', 'IS', 333, 97);
  oComponents.Add('Expiration Date', 'DT', 0, 98);
  oComponents.Add('Normal Range', 'NR', 0, 99);
  oComponents.Add('Numeric Threshold', 'NM', 0, 100);
  oComponents.Add('Change Computation', 'ID', 523, 101);
  oComponents.Add('Days Retained', 'NM', 0, 102);
  oComponents.Add('Range Start Date/Time', 'DTM', 0, 103);
  oComponents.Add('Range End Date/Time', 'DTM', 0, 104);
  oComponents.Add('Date', 'DT', 0, 105);
  oComponents.Add('Date/Time', 'DTM', 0, 106);
  oComponents.Add('Day Type', 'IS', 149, 107);
  oComponents.Add('Number of Days', 'NM', 0, 108);
  oComponents.Add('Source Application', 'HD', 0, 109);
  oComponents.Add('Type of Data', 'ID', 834, 110);
  oComponents.Add('Data Subtype', 'ID', 291, 111);
  oComponents.Add('Encoding', 'ID', 299, 112);
  oComponents.Add('Data', 'TX', 0, 113);
  oComponents.Add('Entity Identifier', 'ST', 0, 114);
  oComponents.Add('Namespace ID', 'IS', 363, 115);
  oComponents.Add('Universal ID', 'ST', 0, 116);
  oComponents.Add('Universal ID Type', 'ID', 301, 117);
  oComponents.Add('Placer Assigned Identifier', 'EI', 0, 118);
  oComponents.Add('Filler Assigned Identifier', 'EI', 0, 119);
  oComponents.Add('Segment ID', 'ST', 0, 120);
  oComponents.Add('Segment Sequence', 'NM', 0, 121);
  oComponents.Add('Field Position', 'NM', 0, 122);
  oComponents.Add('Code Identifying Error', 'CWE', 357, 123);
  oComponents.Add('Segment ID', 'ST', 0, 124);
  oComponents.Add('Segment Sequence', 'NM', 0, 125);
  oComponents.Add('Field Position', 'NM', 0, 126);
  oComponents.Add('Field Repetition', 'NM', 0, 127);
  oComponents.Add('Component Number', 'NM', 0, 128);
  oComponents.Add('Sub-Component Number', 'NM', 0, 129);
  oComponents.Add('Financial Class Code', 'IS', 64, 130);
  oComponents.Add('Effective Date', 'DTM', 0, 131);
  oComponents.Add('Surname', 'ST', 0, 132);
  oComponents.Add('Own Surname Prefix', 'ST', 0, 133);
  oComponents.Add('Own Surname', 'ST', 0, 134);
  oComponents.Add('Surname Prefix from Partner/Spouse', 'ST', 0, 135);
  oComponents.Add('Surname from Partner/Spouse', 'ST', 0, 136);
  oComponents.Add('Formatted Text Data', 'FT', 0, 137);
  oComponents.Add('General Timing Specification', 'GTS', 0, 138);
  oComponents.Add('Namespace ID', 'IS', 300, 139);
  oComponents.Add('Universal ID', 'ST', 0, 140);
  oComponents.Add('Universal ID Type', 'ID', 301, 141);
  oComponents.Add('Certification Patient Type', 'IS', 150, 142);
  oComponents.Add('Certification Required', 'ID', 136, 143);
  oComponents.Add('Date/Time Certification Required', 'DTM', 0, 144);
  oComponents.Add('Coded Value for HL7-Defined Tables', 'ID', 0, 145);
  oComponents.Add('Coded Value for User-Defined Tables', 'IS', 0, 146);
  oComponents.Add('Job Code', 'IS', 327, 147);
  oComponents.Add('Job Class', 'IS', 328, 148);
  oComponents.Add('Job Description Text', 'TX', 0, 149);
  oComponents.Add('Point of Care', 'IS', 302, 150);
  oComponents.Add('Room', 'IS', 303, 151);
  oComponents.Add('Bed', 'IS', 304, 152);
  oComponents.Add('Facility', 'HD', 0, 153);
  oComponents.Add('Location Status', 'IS', 306, 154);
  oComponents.Add('Patient Location Type', 'IS', 305, 155);
  oComponents.Add('Building', 'IS', 307, 156);
  oComponents.Add('Floor', 'IS', 308, 157);
  oComponents.Add('Address', 'AD', 0, 158);
  oComponents.Add('Point of Care', 'IS', 302, 159);
  oComponents.Add('Room', 'IS', 303, 160);
  oComponents.Add('Bed', 'IS', 304, 161);
  oComponents.Add('Facility', 'HD', 0, 162);
  oComponents.Add('Location Status', 'IS', 306, 163);
  oComponents.Add('Patient Location Type', 'IS', 305, 164);
  oComponents.Add('Building', 'IS', 307, 165);
  oComponents.Add('Floor', 'IS', 308, 166);
  oComponents.Add('Street Address', 'ST', 0, 167);
  oComponents.Add('Other Designation', 'ST', 0, 168);
  oComponents.Add('City', 'ST', 0, 169);
  oComponents.Add('State or Province', 'ST', 0, 170);
  oComponents.Add('Zip or Postal Code', 'ST', 0, 171);
  oComponents.Add('Country', 'ID', 399, 172);
  oComponents.Add('Address Type', 'ID', 190, 173);
  oComponents.Add('Other Geographic Designation', 'ST', 0, 174);
  oComponents.Add('Sample Y From Channel 1', 'NM', 0, 175);
  oComponents.Add('Sample Y From Channel 2', 'NM', 0, 176);
  oComponents.Add('Sample Y From Channel 3', 'NM', 0, 177);
  oComponents.Add('Sample Y From Channel 4', 'NM', 0, 178);
  oComponents.Add('Quantity', 'NM', 0, 179);
  oComponents.Add('Denomination', 'ID', 0, 180);
  oComponents.Add('Monetary Amount', 'MO', 0, 181);
  oComponents.Add('Charge Code', 'CWE', 0, 182);
  oComponents.Add('Money or Percentage Indicator', 'ID', 148, 183);
  oComponents.Add('Money or Percentage Quantity', 'NM', 0, 184);
  oComponents.Add('Currency Denomination', 'ID', 0, 185);
  oComponents.Add('Message Code', 'ID', 76, 186);
  oComponents.Add('Trigger Event', 'ID', 3, 187);
  oComponents.Add('Message Structure', 'ID', 354, 188);
  oComponents.Add('Value1', 'NM', 0, 189);
  oComponents.Add('Value2', 'NM', 0, 190);
  oComponents.Add('Value3', 'NM', 0, 191);
  oComponents.Add('Value4', 'NM', 0, 192);
  oComponents.Add('Name', 'CNN', 0, 194);
  oComponents.Add('Start Date/time', 'DTM', 0, 195);
  oComponents.Add('End Date/time', 'DTM', 0, 196);
  oComponents.Add('Point of Care', 'IS', 302, 197);
  oComponents.Add('Room', 'IS', 303, 198);
  oComponents.Add('Bed', 'IS', 304, 199);
  oComponents.Add('Facility', 'HD', 0, 200);
  oComponents.Add('Location Status', 'IS', 306, 201);
  oComponents.Add('Patient Location Type', 'IS', 305, 202);
  oComponents.Add('Building', 'IS', 307, 203);
  oComponents.Add('Floor', 'IS', 308, 204);
  oComponents.Add('Numeric', 'NM', 0, 205);
  oComponents.Add('Low Value', 'NM', 0, 206);
  oComponents.Add('High Value', 'NM', 0, 207);
  oComponents.Add('Occurrence Code', 'CNE', 350, 208);
  oComponents.Add('Occurrence Date', 'DT', 0, 209);
  oComponents.Add('Sequence/Results Flag', 'ID', 524, 210);
  oComponents.Add('Placer Order Number: Entity Identifier', 'ST', 0, 211);
  oComponents.Add('Placer Order Number: Namespace ID', 'IS', 363, 212);
  oComponents.Add('Filler Order Number: Entity Identifier', 'ST', 0, 213);
  oComponents.Add('Filler Order Number: Namespace ID', 'IS', 363, 214);
  oComponents.Add('Sequence Condition Value', 'ST', 0, 215);
  oComponents.Add('Maximum Number of Repeats', 'NM', 0, 216);
  oComponents.Add('Placer Order Number: Universal ID', 'ST', 0, 217);
  oComponents.Add('Placer Order Number: Universal ID Type', 'ID', 301, 218);
  oComponents.Add('Filler Order Number: Universal ID', 'ST', 0, 219);
  oComponents.Add('Filler Order Number: Universal ID Type', 'ID', 301, 220);
  oComponents.Add('Occurrence Span Code', 'CNE', 351, 221);
  oComponents.Add('Occurrence Span Start Date', 'DT', 0, 222);
  oComponents.Add('Occurrence Span Stop Date', 'DT', 0, 223);
  oComponents.Add('Privilege', 'CWE', 525, 224);
  oComponents.Add('Privilege Class', 'CWE', 526, 225);
  oComponents.Add('Expiration Date', 'DT', 0, 226);
  oComponents.Add('Activation Date', 'DT', 0, 227);
  oComponents.Add('Facility', 'EI', 0, 228);
  oComponents.Add('Point of Care', 'IS', 302, 229);
  oComponents.Add('Room', 'IS', 303, 230);
  oComponents.Add('Bed', 'IS', 304, 231);
  oComponents.Add('Facility', 'HD', 0, 232);
  oComponents.Add('Location Status', 'IS', 306, 233);
  oComponents.Add('Person Location Type', 'IS', 305, 234);
  oComponents.Add('Building', 'IS', 307, 235);
  oComponents.Add('Floor', 'IS', 308, 236);
  oComponents.Add('Location Description', 'ST', 0, 237);
  oComponents.Add('Comprehensive Location Identifier', 'EI', 0, 238);
  oComponents.Add('Assigning Authority for Location', 'HD', 0, 239);
  oComponents.Add('ID Number', 'ST', 0, 240);
  oComponents.Add('Type of ID Number', 'IS', 338, 241);
  oComponents.Add('State/other Qualifying Information', 'ST', 0, 242);
  oComponents.Add('Expiration Date', 'DT', 0, 243);
  oComponents.Add('ID Number', 'ST', 0, 244);
  oComponents.Add('Family Name', 'FN', 0, 245);
  oComponents.Add('Given Name', 'ST', 0, 246);
  oComponents.Add('Second and Further Given Names or Initials Thereof', 'ST', 0, 247);
  oComponents.Add('Suffix (e.g., JR or III)', 'ST', 0, 248);
  oComponents.Add('Prefix (e.g., DR)', 'ST', 0, 249);
  oComponents.Add('Degree (e.g., MD)', 'IS', 360, 250);
  oComponents.Add('Source Table', 'IS', 297, 251);
  oComponents.Add('Assigning Authority', 'HD', 363, 252);
  oComponents.Add('Name Type Code', 'ID', 200, 253);
  oComponents.Add('Identifier Check Digit', 'ST', 0, 254);
  oComponents.Add('Check Digit Scheme', 'ID', 61, 255);
  oComponents.Add('Identifier Type Code', 'ID', 203, 256);
  oComponents.Add('Assigning Facility', 'HD', 0, 257);
  oComponents.Add('Date/Time Action Performed', 'DTM', 0, 258);
  oComponents.Add('Name Representation Code', 'ID', 465, 259);
  oComponents.Add('Name Context', 'CWE', 448, 260);
  oComponents.Add('Name Validity Range', 'DR', 0, 261);
  oComponents.Add('Name Assembly Order', 'ID', 444, 262);
  oComponents.Add('Effective Date', 'DTM', 0, 263);
  oComponents.Add('Expiration Date', 'DTM', 0, 264);
  oComponents.Add('Professional Suffix', 'ST', 0, 265);
  oComponents.Add('Assigning Jurisdiction', 'CWE', 0, 266);
  oComponents.Add('Assigning Agency or Department', 'CWE', 0, 267);
  oComponents.Add('Parent Observation Identifier', 'CWE', 0, 268);
  oComponents.Add('Parent Observation Sub-identifier', 'ST', 0, 269);
  oComponents.Add('Parent Observation Value Descriptor', 'TX', 0, 270);
  oComponents.Add('Processing ID', 'ID', 103, 271);
  oComponents.Add('Processing Mode', 'ID', 207, 272);
  oComponents.Add('Policy Type', 'IS', 147, 273);
  oComponents.Add('Amount Class', 'IS', 193, 274);
  oComponents.Add('Money or Percentage Quantity', 'NM', 0, 275);
  oComponents.Add('Money or Percentage', 'MOP', 0, 276);
  oComponents.Add('Segment Field Name', 'ST', 0, 277);
  oComponents.Add('Values', 'ST', 0, 278);
  oComponents.Add('Segment Field Name', 'ST', 0, 279);
  oComponents.Add('Relational Operator', 'ID', 209, 280);
  oComponents.Add('Value', 'ST', 0, 281);
  oComponents.Add('Relational Conjunction', 'ID', 210, 282);
  oComponents.Add('Segment Field Name', 'ST', 0, 283);
  oComponents.Add('HL7 Data Type', 'ID', 440, 284);
  oComponents.Add('Maximum Column Width', 'NM', 0, 285);
  oComponents.Add('Numeric Range', 'NR', 0, 286);
  oComponents.Add('Administrative Sex', 'IS', 1, 287);
  oComponents.Add('Age Range', 'NR', 0, 288);
  oComponents.Add('Gestational Age Range', 'NR', 0, 289);
  oComponents.Add('Species', 'ST', 0, 290);
  oComponents.Add('Race/subspecies', 'ST', 0, 291);
  oComponents.Add('Conditions', 'TX', 0, 292);
  oComponents.Add('Repeat Pattern', 'IS', 335, 293);
  oComponents.Add('Explicit Time Interval', 'ST', 0, 294);
  oComponents.Add('Room Type', 'IS', 145, 295);
  oComponents.Add('Amount Type', 'IS', 146, 296);
  oComponents.Add('Coverage Amount', 'NM', 0, 297);
  oComponents.Add('Money or Percentage', 'MOP', 0, 298);
  oComponents.Add('Pointer', 'ST', 0, 299);
  oComponents.Add('Application ID', 'HD', 0, 300);
  oComponents.Add('Type of Data', 'ID', 834, 301);
  oComponents.Add('Subtype', 'ID', 291, 302);
  oComponents.Add('Repeat Pattern Code', 'CWE', 335, 303);
  oComponents.Add('Calendar Alignment', 'ID', 527, 304);
  oComponents.Add('Phase Range Begin Value', 'NM', 0, 305);
  oComponents.Add('Phase Range End Value', 'NM', 0, 306);
  oComponents.Add('Period Quantity', 'NM', 0, 307);
  oComponents.Add('Period Units', 'IS', 0, 308);
  oComponents.Add('Institution Specified Time', 'ID', 136, 309);
  oComponents.Add('Event', 'ID', 528, 310);
  oComponents.Add('Event Offset Quantity', 'NM', 0, 311);
  oComponents.Add('Event Offset Units', 'IS', 0, 312);
  oComponents.Add('General Timing Specification', 'GTS', 0, 313);
  oComponents.Add('Street or Mailing Address', 'ST', 0, 314);
  oComponents.Add('Street Name', 'ST', 0, 315);
  oComponents.Add('Dwelling Number', 'ST', 0, 316);
  oComponents.Add('Parameter Class', 'CWE', 294, 317);
  oComponents.Add('Parameter Value', 'ST', 0, 318);
  oComponents.Add('Sequence ID', 'SI', 0, 319);
  oComponents.Add('Comparator', 'ST', 0, 320);
  oComponents.Add('Num1', 'NM', 0, 321);
  oComponents.Add('Separator/Suffix', 'ST', 0, 322);
  oComponents.Add('Num2', 'NM', 0, 323);
  oComponents.Add('Specialty Name', 'ST', 0, 324);
  oComponents.Add('Governing Board', 'ST', 0, 325);
  oComponents.Add('Eligible or Certified', 'ID', 337, 326);
  oComponents.Add('Date of Certification', 'DT', 0, 327);
  oComponents.Add('Specimen Source Name or Code', 'CWE', 0, 328);
  oComponents.Add('Additives', 'CWE', 371, 329);
  oComponents.Add('Specimen Collection Method', 'TX', 0, 330);
  oComponents.Add('Body Site', 'CWE', 163, 331);
  oComponents.Add('Site Modifier', 'CWE', 495, 332);
  oComponents.Add('Collection Method Modifier Code', 'CWE', 0, 333);
  oComponents.Add('Specimen Role', 'CWE', 369, 334);
  oComponents.Add('Sort-by Field', 'ST', 0, 335);
  oComponents.Add('Sequencing', 'ID', 397, 336);
  oComponents.Add('String Data', 'ST', 0, 337);
  oComponents.Add('Time', 'TM', 0, 338);
  oComponents.Add('Quantity', 'CQ', 0, 339);
  oComponents.Add('Interval', 'RI', 0, 340);
  oComponents.Add('Duration', 'ST', 0, 341);
  oComponents.Add('Start Date/Time', 'DTM', 0, 342);
  oComponents.Add('End Date/Time', 'DTM', 0, 343);
  oComponents.Add('Priority', 'ST', 0, 344);
  oComponents.Add('Condition', 'ST', 0, 345);
  oComponents.Add('Text', 'TX', 0, 346);
  oComponents.Add('Conjunction', 'ID', 472, 347);
  oComponents.Add('Order Sequencing', 'OSD', 0, 348);
  oComponents.Add('Occurrence Duration', 'CWE', 0, 349);
  oComponents.Add('Total Occurrences', 'NM', 0, 350);
  oComponents.Add('Time', '-', 0, 351);
  oComponents.Add('Degree of Precision', '-', 0, 352);
  oComponents.Add('Text Data', 'TX', 0, 353);
  oComponents.Add('Value Code', 'CNE', 153, 354);
  oComponents.Add('Value Amount', 'MO', 0, 355);
  oComponents.Add('Start Day Range', 'ID', 267, 356);
  oComponents.Add('End Day Range', 'ID', 267, 357);
  oComponents.Add('Start Hour Range', 'TM', 0, 358);
  oComponents.Add('End Hour Range', 'TM', 0, 359);
  oComponents.Add('Version ID', 'ID', 104, 360);
  oComponents.Add('Internationalization Code', 'CWE', 399, 361);
  oComponents.Add('International Version ID', 'CWE', 0, 362);
  oComponents.Add('First Data Code Value', 'ST', 0, 363);
  oComponents.Add('Last Data Code Value', 'ST', 0, 364);
  oComponents.Add('Channel Number', 'NM', 0, 365);
  oComponents.Add('Channel Name', 'ST', 0, 366);
  oComponents.Add('Source One Name', 'ST', 0, 367);
  oComponents.Add('Source Two Name', 'ST', 0, 368);
  oComponents.Add('Street Address', 'SAD', 0, 369);
  oComponents.Add('Other Designation', 'ST', 0, 370);
  oComponents.Add('City', 'ST', 0, 371);
  oComponents.Add('State or Province', 'ST', 0, 372);
  oComponents.Add('Zip or Postal Code', 'ST', 0, 373);
  oComponents.Add('Country', 'ID', 399, 374);
  oComponents.Add('Address Type', 'ID', 190, 375);
  oComponents.Add('Other Geographic Designation', 'ST', 0, 376);
  oComponents.Add('County/Parish Code', 'IS', 289, 377);
  oComponents.Add('Census Tract', 'IS', 288, 378);
  oComponents.Add('Address Representation Code', 'ID', 465, 379);
  oComponents.Add('Address Validity Range', 'DR', 0, 380);
  oComponents.Add('Effective Date', 'DTM', 0, 381);
  oComponents.Add('Expiration Date', 'DTM', 0, 382);
  oComponents.Add('Expiration Reason', 'CWE', 616, 383);
  oComponents.Add('Temporary Indicator', 'ID', 136, 384);
  oComponents.Add('Bad Address Indicator', 'ID', 136, 385);
  oComponents.Add('Address Usage', 'ID', 617, 386);
  oComponents.Add('Addressee', 'ST', 0, 387);
  oComponents.Add('Comment', 'ST', 0, 388);
  oComponents.Add('Preference Order', 'NM', 0, 389);
  oComponents.Add('Protection Code', 'CWE', 618, 390);
  oComponents.Add('Address Identifier', 'EI', 0, 391);
  oComponents.Add('ID Number', 'ST', 0, 392);
  oComponents.Add('Family Name', 'FN', 0, 393);
  oComponents.Add('Given Name', 'ST', 0, 394);
  oComponents.Add('Second and Further Given Names or Initials Thereof', 'ST', 0, 395);
  oComponents.Add('Suffix (e.g., JR or III)', 'ST', 0, 396);
  oComponents.Add('Prefix (e.g., DR)', 'ST', 0, 397);
  oComponents.Add('Degree (e.g., MD)', 'IS', 360, 398);
  oComponents.Add('Source Table', 'IS', 297, 399);
  oComponents.Add('Assigning Authority', 'HD', 363, 400);
  oComponents.Add('Name Type Code', 'ID', 200, 401);
  oComponents.Add('Identifier Check Digit', 'ST', 0, 402);
  oComponents.Add('Check Digit Scheme', 'ID', 61, 403);
  oComponents.Add('Identifier Type Code', 'ID', 203, 404);
  oComponents.Add('Assigning Facility', 'HD', 0, 405);
  oComponents.Add('Name Representation Code', 'ID', 465, 406);
  oComponents.Add('Name Context', 'CWE', 448, 407);
  oComponents.Add('Name Validity Range', 'DR', 0, 408);
  oComponents.Add('Name Assembly Order', 'ID', 444, 409);
  oComponents.Add('Effective Date', 'DTM', 0, 410);
  oComponents.Add('Expiration Date', 'DTM', 0, 411);
  oComponents.Add('Professional Suffix', 'ST', 0, 412);
  oComponents.Add('Assigning Jurisdiction', 'CWE', 0, 413);
  oComponents.Add('Assigning Agency or Department', 'CWE', 0, 414);
  oComponents.Add('Organization Name', 'ST', 0, 415);
  oComponents.Add('Organization Name Type Code', 'IS', 204, 416);
  oComponents.Add('ID Number', 'NM', 0, 417);
  oComponents.Add('Identifier Check Digit', 'NM', 0, 418);
  oComponents.Add('Check Digit Scheme', 'ID', 61, 419);
  oComponents.Add('Assigning Authority', 'HD', 363, 420);
  oComponents.Add('Identifier Type Code', 'ID', 203, 421);
  oComponents.Add('Assigning Facility', 'HD', 0, 422);
  oComponents.Add('Name Representation Code', 'ID', 465, 423);
  oComponents.Add('Organization Identifier', 'ST', 0, 424);
  oComponents.Add('Family Name', 'FN', 0, 425);
  oComponents.Add('Given Name', 'ST', 0, 426);
  oComponents.Add('Second and Further Given Names or Initials Thereof', 'ST', 0, 427);
  oComponents.Add('Suffix (e.g., JR or III)', 'ST', 0, 428);
  oComponents.Add('Prefix (e.g., DR)', 'ST', 0, 429);
  oComponents.Add('Degree (e.g., MD)', 'IS', 360, 430);
  oComponents.Add('Name Type Code', 'ID', 200, 431);
  oComponents.Add('Name Representation Code', 'ID', 465, 432);
  oComponents.Add('Name Context', 'CWE', 448, 433);
  oComponents.Add('Name Validity Range', 'DR', 0, 434);
  oComponents.Add('Name Assembly Order', 'ID', 444, 435);
  oComponents.Add('Effective Date', 'DTM', 0, 436);
  oComponents.Add('Expiration Date', 'DTM', 0, 437);
  oComponents.Add('Professional Suffix', 'ST', 0, 438);
  oComponents.Add('Telephone Number', '-', 0, 439);
  oComponents.Add('Telecommunication Use Code', 'ID', 201, 440);
  oComponents.Add('Telecommunication Equipment Type', 'ID', 202, 441);
  oComponents.Add('Communication Address', 'ST', 0, 442);
  oComponents.Add('Country Code', 'NM', 0, 443);
  oComponents.Add('Area/City Code', 'NM', 0, 444);
  oComponents.Add('Local Number', 'NM', 0, 445);
  oComponents.Add('Extension', 'NM', 0, 446);
  oComponents.Add('Any Text', 'ST', 0, 447);
  oComponents.Add('Extension Prefix', 'ST', 0, 448);
  oComponents.Add('Speed Dial Code', 'ST', 0, 449);
  oComponents.Add('Unformatted Telephone number', 'ST', 0, 450);
  oComponents.Add('Effective Start Date', 'DTM', 0, 451);
  oComponents.Add('Expiration Date', 'DTM', 0, 452);
  oComponents.Add('Expiration Reason', 'CWE', 868, 453);
  oComponents.Add('Protection Code', 'CWE', 618, 454);
  oComponents.Add('Shared Telecommunication Identifier', 'EI', 0, 455);
  oComponents.Add('Preference Order', 'NM', 0, 456);
  oComponents.Add('varies', 'ST', 0, 9999);
End;

procedure Definitions26LoadStructures(oStructures : THL7V2ModelStructures; oComponents : THL7V2ModelComponents);
Var
  oStructure : THL7V2ModelStructure;
Begin
  oStructure := oStructures.Add('XTN', 'Extended Telecommunication Number', 'XTN', 0);
    oStructure.Components.Add(oComponents.GetByNumber(439).Link);
    oStructure.Components.Add(oComponents.GetByNumber(440).Link);
    oStructure.Components.Add(oComponents.GetByNumber(441).Link);
    oStructure.Components.Add(oComponents.GetByNumber(442).Link);
    oStructure.Components.Add(oComponents.GetByNumber(443).Link);
    oStructure.Components.Add(oComponents.GetByNumber(444).Link);
    oStructure.Components.Add(oComponents.GetByNumber(445).Link);
    oStructure.Components.Add(oComponents.GetByNumber(446).Link);
    oStructure.Components.Add(oComponents.GetByNumber(447).Link);
    oStructure.Components.Add(oComponents.GetByNumber(448).Link);
    oStructure.Components.Add(oComponents.GetByNumber(449).Link);
    oStructure.Components.Add(oComponents.GetByNumber(450).Link);
    oStructure.Components.Add(oComponents.GetByNumber(451).Link);
    oStructure.Components.Add(oComponents.GetByNumber(452).Link);
    oStructure.Components.Add(oComponents.GetByNumber(453).Link);
    oStructure.Components.Add(oComponents.GetByNumber(454).Link);
    oStructure.Components.Add(oComponents.GetByNumber(455).Link);
    oStructure.Components.Add(oComponents.GetByNumber(456).Link);
  oStructure := oStructures.Add('XPN', 'Extended Person Name', 'XPN', 0);
    oStructure.Components.Add(oComponents.GetByNumber(425).Link);
    oStructure.Components.Add(oComponents.GetByNumber(426).Link);
    oStructure.Components.Add(oComponents.GetByNumber(427).Link);
    oStructure.Components.Add(oComponents.GetByNumber(428).Link);
    oStructure.Components.Add(oComponents.GetByNumber(429).Link);
    oStructure.Components.Add(oComponents.GetByNumber(430).Link);
    oStructure.Components.Add(oComponents.GetByNumber(431).Link);
    oStructure.Components.Add(oComponents.GetByNumber(432).Link);
    oStructure.Components.Add(oComponents.GetByNumber(433).Link);
    oStructure.Components.Add(oComponents.GetByNumber(434).Link);
    oStructure.Components.Add(oComponents.GetByNumber(435).Link);
    oStructure.Components.Add(oComponents.GetByNumber(436).Link);
    oStructure.Components.Add(oComponents.GetByNumber(437).Link);
    oStructure.Components.Add(oComponents.GetByNumber(438).Link);
  oStructure := oStructures.Add('XON', 'Extended Composite Name and Identification Number for Organizations', 'XON', 0);
    oStructure.Components.Add(oComponents.GetByNumber(415).Link);
    oStructure.Components.Add(oComponents.GetByNumber(416).Link);
    oStructure.Components.Add(oComponents.GetByNumber(417).Link);
    oStructure.Components.Add(oComponents.GetByNumber(418).Link);
    oStructure.Components.Add(oComponents.GetByNumber(419).Link);
    oStructure.Components.Add(oComponents.GetByNumber(420).Link);
    oStructure.Components.Add(oComponents.GetByNumber(421).Link);
    oStructure.Components.Add(oComponents.GetByNumber(422).Link);
    oStructure.Components.Add(oComponents.GetByNumber(423).Link);
    oStructure.Components.Add(oComponents.GetByNumber(424).Link);
  oStructure := oStructures.Add('XCN', 'Extended Composite ID Number and Name for Persons', 'XCN', 0);
    oStructure.Components.Add(oComponents.GetByNumber(392).Link);
    oStructure.Components.Add(oComponents.GetByNumber(393).Link);
    oStructure.Components.Add(oComponents.GetByNumber(394).Link);
    oStructure.Components.Add(oComponents.GetByNumber(395).Link);
    oStructure.Components.Add(oComponents.GetByNumber(396).Link);
    oStructure.Components.Add(oComponents.GetByNumber(397).Link);
    oStructure.Components.Add(oComponents.GetByNumber(398).Link);
    oStructure.Components.Add(oComponents.GetByNumber(399).Link);
    oStructure.Components.Add(oComponents.GetByNumber(400).Link);
    oStructure.Components.Add(oComponents.GetByNumber(401).Link);
    oStructure.Components.Add(oComponents.GetByNumber(402).Link);
    oStructure.Components.Add(oComponents.GetByNumber(403).Link);
    oStructure.Components.Add(oComponents.GetByNumber(404).Link);
    oStructure.Components.Add(oComponents.GetByNumber(405).Link);
    oStructure.Components.Add(oComponents.GetByNumber(406).Link);
    oStructure.Components.Add(oComponents.GetByNumber(407).Link);
    oStructure.Components.Add(oComponents.GetByNumber(408).Link);
    oStructure.Components.Add(oComponents.GetByNumber(409).Link);
    oStructure.Components.Add(oComponents.GetByNumber(410).Link);
    oStructure.Components.Add(oComponents.GetByNumber(411).Link);
    oStructure.Components.Add(oComponents.GetByNumber(412).Link);
    oStructure.Components.Add(oComponents.GetByNumber(413).Link);
    oStructure.Components.Add(oComponents.GetByNumber(414).Link);
  oStructure := oStructures.Add('XAD', 'Extended Address', 'XAD', 0);
    oStructure.Components.Add(oComponents.GetByNumber(369).Link);
    oStructure.Components.Add(oComponents.GetByNumber(370).Link);
    oStructure.Components.Add(oComponents.GetByNumber(371).Link);
    oStructure.Components.Add(oComponents.GetByNumber(372).Link);
    oStructure.Components.Add(oComponents.GetByNumber(373).Link);
    oStructure.Components.Add(oComponents.GetByNumber(374).Link);
    oStructure.Components.Add(oComponents.GetByNumber(375).Link);
    oStructure.Components.Add(oComponents.GetByNumber(376).Link);
    oStructure.Components.Add(oComponents.GetByNumber(377).Link);
    oStructure.Components.Add(oComponents.GetByNumber(378).Link);
    oStructure.Components.Add(oComponents.GetByNumber(379).Link);
    oStructure.Components.Add(oComponents.GetByNumber(380).Link);
    oStructure.Components.Add(oComponents.GetByNumber(381).Link);
    oStructure.Components.Add(oComponents.GetByNumber(382).Link);
    oStructure.Components.Add(oComponents.GetByNumber(383).Link);
    oStructure.Components.Add(oComponents.GetByNumber(384).Link);
    oStructure.Components.Add(oComponents.GetByNumber(385).Link);
    oStructure.Components.Add(oComponents.GetByNumber(386).Link);
    oStructure.Components.Add(oComponents.GetByNumber(387).Link);
    oStructure.Components.Add(oComponents.GetByNumber(388).Link);
    oStructure.Components.Add(oComponents.GetByNumber(389).Link);
    oStructure.Components.Add(oComponents.GetByNumber(390).Link);
    oStructure.Components.Add(oComponents.GetByNumber(391).Link);
  oStructure := oStructures.Add('WVS', 'Waveform Source', 'WVS', 0);
    oStructure.Components.Add(oComponents.GetByNumber(367).Link);
    oStructure.Components.Add(oComponents.GetByNumber(368).Link);
  oStructure := oStructures.Add('WVI', 'Channel Identifier', 'WVI', 0);
    oStructure.Components.Add(oComponents.GetByNumber(365).Link);
    oStructure.Components.Add(oComponents.GetByNumber(366).Link);
  oStructure := oStructures.Add('VR', 'Value Range', 'VR', 0);
    oStructure.Components.Add(oComponents.GetByNumber(363).Link);
    oStructure.Components.Add(oComponents.GetByNumber(364).Link);
  oStructure := oStructures.Add('VID', 'Version Identifier', 'VID', 0);
    oStructure.Components.Add(oComponents.GetByNumber(360).Link);
    oStructure.Components.Add(oComponents.GetByNumber(361).Link);
    oStructure.Components.Add(oComponents.GetByNumber(362).Link);
  oStructure := oStructures.Add('VH', 'Visiting Hours', 'VH', 0);
    oStructure.Components.Add(oComponents.GetByNumber(356).Link);
    oStructure.Components.Add(oComponents.GetByNumber(357).Link);
    oStructure.Components.Add(oComponents.GetByNumber(358).Link);
    oStructure.Components.Add(oComponents.GetByNumber(359).Link);
  oStructure := oStructures.Add('UVC', 'UB Value Code and Amount', 'UVC', 0);
    oStructure.Components.Add(oComponents.GetByNumber(354).Link);
    oStructure.Components.Add(oComponents.GetByNumber(355).Link);
  oStructure := oStructures.Add('TS', 'Time Stamp', 'TS', 0);
    oStructure.Components.Add(oComponents.GetByNumber(351).Link);
    oStructure.Components.Add(oComponents.GetByNumber(352).Link);
  oStructure := oStructures.Add('TQ', 'Timing Quantity', 'TQ', 0);
    oStructure.Components.Add(oComponents.GetByNumber(339).Link);
    oStructure.Components.Add(oComponents.GetByNumber(340).Link);
    oStructure.Components.Add(oComponents.GetByNumber(341).Link);
    oStructure.Components.Add(oComponents.GetByNumber(342).Link);
    oStructure.Components.Add(oComponents.GetByNumber(343).Link);
    oStructure.Components.Add(oComponents.GetByNumber(344).Link);
    oStructure.Components.Add(oComponents.GetByNumber(345).Link);
    oStructure.Components.Add(oComponents.GetByNumber(346).Link);
    oStructure.Components.Add(oComponents.GetByNumber(347).Link);
    oStructure.Components.Add(oComponents.GetByNumber(348).Link);
    oStructure.Components.Add(oComponents.GetByNumber(349).Link);
    oStructure.Components.Add(oComponents.GetByNumber(350).Link);
  oStructure := oStructures.Add('SRT', 'Sort Order', 'SRT', 0);
    oStructure.Components.Add(oComponents.GetByNumber(335).Link);
    oStructure.Components.Add(oComponents.GetByNumber(336).Link);
  oStructure := oStructures.Add('SPS', 'Specimen Source', 'SPS', 0);
    oStructure.Components.Add(oComponents.GetByNumber(328).Link);
    oStructure.Components.Add(oComponents.GetByNumber(329).Link);
    oStructure.Components.Add(oComponents.GetByNumber(330).Link);
    oStructure.Components.Add(oComponents.GetByNumber(331).Link);
    oStructure.Components.Add(oComponents.GetByNumber(332).Link);
    oStructure.Components.Add(oComponents.GetByNumber(333).Link);
    oStructure.Components.Add(oComponents.GetByNumber(334).Link);
  oStructure := oStructures.Add('SPD', 'Specialty Description', 'SPD', 0);
    oStructure.Components.Add(oComponents.GetByNumber(324).Link);
    oStructure.Components.Add(oComponents.GetByNumber(325).Link);
    oStructure.Components.Add(oComponents.GetByNumber(326).Link);
    oStructure.Components.Add(oComponents.GetByNumber(327).Link);
  oStructure := oStructures.Add('SN', 'Structured Numeric', 'SN', 0);
    oStructure.Components.Add(oComponents.GetByNumber(320).Link);
    oStructure.Components.Add(oComponents.GetByNumber(321).Link);
    oStructure.Components.Add(oComponents.GetByNumber(322).Link);
    oStructure.Components.Add(oComponents.GetByNumber(323).Link);
  oStructure := oStructures.Add('SCV', 'Scheduling Class Value Pair', 'SCV', 0);
    oStructure.Components.Add(oComponents.GetByNumber(317).Link);
    oStructure.Components.Add(oComponents.GetByNumber(318).Link);
  oStructure := oStructures.Add('SAD', 'Street Address', 'SAD', 0);
    oStructure.Components.Add(oComponents.GetByNumber(314).Link);
    oStructure.Components.Add(oComponents.GetByNumber(315).Link);
    oStructure.Components.Add(oComponents.GetByNumber(316).Link);
  oStructure := oStructures.Add('RPT', 'Repeat Pattern', 'RPT', 0);
    oStructure.Components.Add(oComponents.GetByNumber(303).Link);
    oStructure.Components.Add(oComponents.GetByNumber(304).Link);
    oStructure.Components.Add(oComponents.GetByNumber(305).Link);
    oStructure.Components.Add(oComponents.GetByNumber(306).Link);
    oStructure.Components.Add(oComponents.GetByNumber(307).Link);
    oStructure.Components.Add(oComponents.GetByNumber(308).Link);
    oStructure.Components.Add(oComponents.GetByNumber(309).Link);
    oStructure.Components.Add(oComponents.GetByNumber(310).Link);
    oStructure.Components.Add(oComponents.GetByNumber(311).Link);
    oStructure.Components.Add(oComponents.GetByNumber(312).Link);
    oStructure.Components.Add(oComponents.GetByNumber(313).Link);
  oStructure := oStructures.Add('RP', 'Reference Pointer', 'RP', 0);
    oStructure.Components.Add(oComponents.GetByNumber(299).Link);
    oStructure.Components.Add(oComponents.GetByNumber(300).Link);
    oStructure.Components.Add(oComponents.GetByNumber(301).Link);
    oStructure.Components.Add(oComponents.GetByNumber(302).Link);
  oStructure := oStructures.Add('RMC', 'Room Coverage', 'RMC', 0);
    oStructure.Components.Add(oComponents.GetByNumber(295).Link);
    oStructure.Components.Add(oComponents.GetByNumber(296).Link);
    oStructure.Components.Add(oComponents.GetByNumber(297).Link);
    oStructure.Components.Add(oComponents.GetByNumber(298).Link);
  oStructure := oStructures.Add('RI', 'Repeat Interval', 'RI', 0);
    oStructure.Components.Add(oComponents.GetByNumber(293).Link);
    oStructure.Components.Add(oComponents.GetByNumber(294).Link);
  oStructure := oStructures.Add('RFR', 'Reference Range', 'RFR', 0);
    oStructure.Components.Add(oComponents.GetByNumber(286).Link);
    oStructure.Components.Add(oComponents.GetByNumber(287).Link);
    oStructure.Components.Add(oComponents.GetByNumber(288).Link);
    oStructure.Components.Add(oComponents.GetByNumber(289).Link);
    oStructure.Components.Add(oComponents.GetByNumber(290).Link);
    oStructure.Components.Add(oComponents.GetByNumber(291).Link);
    oStructure.Components.Add(oComponents.GetByNumber(292).Link);
  oStructure := oStructures.Add('RCD', 'Row Column Definition', 'RCD', 0);
    oStructure.Components.Add(oComponents.GetByNumber(283).Link);
    oStructure.Components.Add(oComponents.GetByNumber(284).Link);
    oStructure.Components.Add(oComponents.GetByNumber(285).Link);
  oStructure := oStructures.Add('QSC', 'Query Selection Criteria', 'QSC', 0);
    oStructure.Components.Add(oComponents.GetByNumber(279).Link);
    oStructure.Components.Add(oComponents.GetByNumber(280).Link);
    oStructure.Components.Add(oComponents.GetByNumber(281).Link);
    oStructure.Components.Add(oComponents.GetByNumber(282).Link);
  oStructure := oStructures.Add('QIP', 'Query Input Parameter List', 'QIP', 0);
    oStructure.Components.Add(oComponents.GetByNumber(277).Link);
    oStructure.Components.Add(oComponents.GetByNumber(278).Link);
  oStructure := oStructures.Add('PTA', 'Policy Type and Amount', 'PTA', 0);
    oStructure.Components.Add(oComponents.GetByNumber(273).Link);
    oStructure.Components.Add(oComponents.GetByNumber(274).Link);
    oStructure.Components.Add(oComponents.GetByNumber(275).Link);
    oStructure.Components.Add(oComponents.GetByNumber(276).Link);
  oStructure := oStructures.Add('PT', 'Processing Type', 'PT', 0);
    oStructure.Components.Add(oComponents.GetByNumber(271).Link);
    oStructure.Components.Add(oComponents.GetByNumber(272).Link);
  oStructure := oStructures.Add('PRL', 'Parent Result Link', 'PRL', 0);
    oStructure.Components.Add(oComponents.GetByNumber(268).Link);
    oStructure.Components.Add(oComponents.GetByNumber(269).Link);
    oStructure.Components.Add(oComponents.GetByNumber(270).Link);
  oStructure := oStructures.Add('PPN', 'Performing Person Time Stamp', 'PPN', 0);
    oStructure.Components.Add(oComponents.GetByNumber(244).Link);
    oStructure.Components.Add(oComponents.GetByNumber(245).Link);
    oStructure.Components.Add(oComponents.GetByNumber(246).Link);
    oStructure.Components.Add(oComponents.GetByNumber(247).Link);
    oStructure.Components.Add(oComponents.GetByNumber(248).Link);
    oStructure.Components.Add(oComponents.GetByNumber(249).Link);
    oStructure.Components.Add(oComponents.GetByNumber(250).Link);
    oStructure.Components.Add(oComponents.GetByNumber(251).Link);
    oStructure.Components.Add(oComponents.GetByNumber(252).Link);
    oStructure.Components.Add(oComponents.GetByNumber(253).Link);
    oStructure.Components.Add(oComponents.GetByNumber(254).Link);
    oStructure.Components.Add(oComponents.GetByNumber(255).Link);
    oStructure.Components.Add(oComponents.GetByNumber(256).Link);
    oStructure.Components.Add(oComponents.GetByNumber(257).Link);
    oStructure.Components.Add(oComponents.GetByNumber(258).Link);
    oStructure.Components.Add(oComponents.GetByNumber(259).Link);
    oStructure.Components.Add(oComponents.GetByNumber(260).Link);
    oStructure.Components.Add(oComponents.GetByNumber(261).Link);
    oStructure.Components.Add(oComponents.GetByNumber(262).Link);
    oStructure.Components.Add(oComponents.GetByNumber(263).Link);
    oStructure.Components.Add(oComponents.GetByNumber(264).Link);
    oStructure.Components.Add(oComponents.GetByNumber(265).Link);
    oStructure.Components.Add(oComponents.GetByNumber(266).Link);
    oStructure.Components.Add(oComponents.GetByNumber(267).Link);
  oStructure := oStructures.Add('PLN', 'Practitioner License or Other ID Number', 'PLN', 0);
    oStructure.Components.Add(oComponents.GetByNumber(240).Link);
    oStructure.Components.Add(oComponents.GetByNumber(241).Link);
    oStructure.Components.Add(oComponents.GetByNumber(242).Link);
    oStructure.Components.Add(oComponents.GetByNumber(243).Link);
  oStructure := oStructures.Add('PL', 'Person Location', 'PL', 0);
    oStructure.Components.Add(oComponents.GetByNumber(229).Link);
    oStructure.Components.Add(oComponents.GetByNumber(230).Link);
    oStructure.Components.Add(oComponents.GetByNumber(231).Link);
    oStructure.Components.Add(oComponents.GetByNumber(232).Link);
    oStructure.Components.Add(oComponents.GetByNumber(233).Link);
    oStructure.Components.Add(oComponents.GetByNumber(234).Link);
    oStructure.Components.Add(oComponents.GetByNumber(235).Link);
    oStructure.Components.Add(oComponents.GetByNumber(236).Link);
    oStructure.Components.Add(oComponents.GetByNumber(237).Link);
    oStructure.Components.Add(oComponents.GetByNumber(238).Link);
    oStructure.Components.Add(oComponents.GetByNumber(239).Link);
  oStructure := oStructures.Add('PIP', 'Practitioner Institutional Privileges', 'PIP', 0);
    oStructure.Components.Add(oComponents.GetByNumber(224).Link);
    oStructure.Components.Add(oComponents.GetByNumber(225).Link);
    oStructure.Components.Add(oComponents.GetByNumber(226).Link);
    oStructure.Components.Add(oComponents.GetByNumber(227).Link);
    oStructure.Components.Add(oComponents.GetByNumber(228).Link);
  oStructure := oStructures.Add('OSP', 'Occurrence Span Code and Date', 'OSP', 0);
    oStructure.Components.Add(oComponents.GetByNumber(221).Link);
    oStructure.Components.Add(oComponents.GetByNumber(222).Link);
    oStructure.Components.Add(oComponents.GetByNumber(223).Link);
  oStructure := oStructures.Add('OSD', 'Order Sequence Definition', 'OSD', 0);
    oStructure.Components.Add(oComponents.GetByNumber(210).Link);
    oStructure.Components.Add(oComponents.GetByNumber(211).Link);
    oStructure.Components.Add(oComponents.GetByNumber(212).Link);
    oStructure.Components.Add(oComponents.GetByNumber(213).Link);
    oStructure.Components.Add(oComponents.GetByNumber(214).Link);
    oStructure.Components.Add(oComponents.GetByNumber(215).Link);
    oStructure.Components.Add(oComponents.GetByNumber(216).Link);
    oStructure.Components.Add(oComponents.GetByNumber(217).Link);
    oStructure.Components.Add(oComponents.GetByNumber(218).Link);
    oStructure.Components.Add(oComponents.GetByNumber(219).Link);
    oStructure.Components.Add(oComponents.GetByNumber(220).Link);
  oStructure := oStructures.Add('OCD', 'Occurrence Code and Date', 'OCD', 0);
    oStructure.Components.Add(oComponents.GetByNumber(208).Link);
    oStructure.Components.Add(oComponents.GetByNumber(209).Link);
  oStructure := oStructures.Add('NR', 'Numeric Range', 'NR', 0);
    oStructure.Components.Add(oComponents.GetByNumber(206).Link);
    oStructure.Components.Add(oComponents.GetByNumber(207).Link);
  oStructure := oStructures.Add('NDL', 'Name with Date and Location', 'NDL', 0);
    oStructure.Components.Add(oComponents.GetByNumber(194).Link);
    oStructure.Components.Add(oComponents.GetByNumber(195).Link);
    oStructure.Components.Add(oComponents.GetByNumber(196).Link);
    oStructure.Components.Add(oComponents.GetByNumber(197).Link);
    oStructure.Components.Add(oComponents.GetByNumber(198).Link);
    oStructure.Components.Add(oComponents.GetByNumber(199).Link);
    oStructure.Components.Add(oComponents.GetByNumber(200).Link);
    oStructure.Components.Add(oComponents.GetByNumber(201).Link);
    oStructure.Components.Add(oComponents.GetByNumber(202).Link);
    oStructure.Components.Add(oComponents.GetByNumber(203).Link);
    oStructure.Components.Add(oComponents.GetByNumber(204).Link);
  oStructure := oStructures.Add('NA', 'Numeric Array', 'NA', 0);
    oStructure.Components.Add(oComponents.GetByNumber(189).Link);
    oStructure.Components.Add(oComponents.GetByNumber(190).Link);
    oStructure.Components.Add(oComponents.GetByNumber(191).Link);
    oStructure.Components.Add(oComponents.GetByNumber(192).Link);
  oStructure := oStructures.Add('MSG', 'Message Type', 'MSG', 0);
    oStructure.Components.Add(oComponents.GetByNumber(186).Link);
    oStructure.Components.Add(oComponents.GetByNumber(187).Link);
    oStructure.Components.Add(oComponents.GetByNumber(188).Link);
  oStructure := oStructures.Add('MOP', 'Money or Percentage', 'MOP', 0);
    oStructure.Components.Add(oComponents.GetByNumber(183).Link);
    oStructure.Components.Add(oComponents.GetByNumber(184).Link);
    oStructure.Components.Add(oComponents.GetByNumber(185).Link);
  oStructure := oStructures.Add('MOC', 'Money and Code', 'MOC', 0);
    oStructure.Components.Add(oComponents.GetByNumber(181).Link);
    oStructure.Components.Add(oComponents.GetByNumber(182).Link);
  oStructure := oStructures.Add('MO', 'Money', 'MO', 0);
    oStructure.Components.Add(oComponents.GetByNumber(179).Link);
    oStructure.Components.Add(oComponents.GetByNumber(180).Link);
  oStructure := oStructures.Add('MA', 'Multiplexed Array', 'MA', 0);
    oStructure.Components.Add(oComponents.GetByNumber(175).Link);
    oStructure.Components.Add(oComponents.GetByNumber(176).Link);
    oStructure.Components.Add(oComponents.GetByNumber(177).Link);
    oStructure.Components.Add(oComponents.GetByNumber(178).Link);
  oStructure := oStructures.Add('LA2', 'Location with Address Variation 2', 'LA2', 0);
    oStructure.Components.Add(oComponents.GetByNumber(159).Link);
    oStructure.Components.Add(oComponents.GetByNumber(160).Link);
    oStructure.Components.Add(oComponents.GetByNumber(161).Link);
    oStructure.Components.Add(oComponents.GetByNumber(162).Link);
    oStructure.Components.Add(oComponents.GetByNumber(163).Link);
    oStructure.Components.Add(oComponents.GetByNumber(164).Link);
    oStructure.Components.Add(oComponents.GetByNumber(165).Link);
    oStructure.Components.Add(oComponents.GetByNumber(166).Link);
    oStructure.Components.Add(oComponents.GetByNumber(167).Link);
    oStructure.Components.Add(oComponents.GetByNumber(168).Link);
    oStructure.Components.Add(oComponents.GetByNumber(169).Link);
    oStructure.Components.Add(oComponents.GetByNumber(170).Link);
    oStructure.Components.Add(oComponents.GetByNumber(171).Link);
    oStructure.Components.Add(oComponents.GetByNumber(172).Link);
    oStructure.Components.Add(oComponents.GetByNumber(173).Link);
    oStructure.Components.Add(oComponents.GetByNumber(174).Link);
  oStructure := oStructures.Add('LA1', 'Location with Address Variation 1', 'LA1', 0);
    oStructure.Components.Add(oComponents.GetByNumber(150).Link);
    oStructure.Components.Add(oComponents.GetByNumber(151).Link);
    oStructure.Components.Add(oComponents.GetByNumber(152).Link);
    oStructure.Components.Add(oComponents.GetByNumber(153).Link);
    oStructure.Components.Add(oComponents.GetByNumber(154).Link);
    oStructure.Components.Add(oComponents.GetByNumber(155).Link);
    oStructure.Components.Add(oComponents.GetByNumber(156).Link);
    oStructure.Components.Add(oComponents.GetByNumber(157).Link);
    oStructure.Components.Add(oComponents.GetByNumber(158).Link);
  oStructure := oStructures.Add('JCC', 'Job Code/Class', 'JCC', 0);
    oStructure.Components.Add(oComponents.GetByNumber(147).Link);
    oStructure.Components.Add(oComponents.GetByNumber(148).Link);
    oStructure.Components.Add(oComponents.GetByNumber(149).Link);
  oStructure := oStructures.Add('ICD', 'Insurance Certification Definition', 'ICD', 0);
    oStructure.Components.Add(oComponents.GetByNumber(142).Link);
    oStructure.Components.Add(oComponents.GetByNumber(143).Link);
    oStructure.Components.Add(oComponents.GetByNumber(144).Link);
  oStructure := oStructures.Add('HD', 'Hierarchic Designator', 'HD', 0);
    oStructure.Components.Add(oComponents.GetByNumber(139).Link);
    oStructure.Components.Add(oComponents.GetByNumber(140).Link);
    oStructure.Components.Add(oComponents.GetByNumber(141).Link);
  oStructure := oStructures.Add('FN', 'Family Name', 'FN', 0);
    oStructure.Components.Add(oComponents.GetByNumber(132).Link);
    oStructure.Components.Add(oComponents.GetByNumber(133).Link);
    oStructure.Components.Add(oComponents.GetByNumber(134).Link);
    oStructure.Components.Add(oComponents.GetByNumber(135).Link);
    oStructure.Components.Add(oComponents.GetByNumber(136).Link);
  oStructure := oStructures.Add('FC', 'Financial Class', 'FC', 0);
    oStructure.Components.Add(oComponents.GetByNumber(130).Link);
    oStructure.Components.Add(oComponents.GetByNumber(131).Link);
  oStructure := oStructures.Add('ERL', 'Error Location', 'ERL', 0);
    oStructure.Components.Add(oComponents.GetByNumber(124).Link);
    oStructure.Components.Add(oComponents.GetByNumber(125).Link);
    oStructure.Components.Add(oComponents.GetByNumber(126).Link);
    oStructure.Components.Add(oComponents.GetByNumber(127).Link);
    oStructure.Components.Add(oComponents.GetByNumber(128).Link);
    oStructure.Components.Add(oComponents.GetByNumber(129).Link);
  oStructure := oStructures.Add('ELD', 'Error Location and Description', 'ELD', 0);
    oStructure.Components.Add(oComponents.GetByNumber(120).Link);
    oStructure.Components.Add(oComponents.GetByNumber(121).Link);
    oStructure.Components.Add(oComponents.GetByNumber(122).Link);
    oStructure.Components.Add(oComponents.GetByNumber(123).Link);
  oStructure := oStructures.Add('EIP', 'Entity Identifier Pair', 'EIP', 0);
    oStructure.Components.Add(oComponents.GetByNumber(118).Link);
    oStructure.Components.Add(oComponents.GetByNumber(119).Link);
  oStructure := oStructures.Add('EI', 'Entity Identifier', 'EI', 0);
    oStructure.Components.Add(oComponents.GetByNumber(114).Link);
    oStructure.Components.Add(oComponents.GetByNumber(115).Link);
    oStructure.Components.Add(oComponents.GetByNumber(116).Link);
    oStructure.Components.Add(oComponents.GetByNumber(117).Link);
  oStructure := oStructures.Add('ED', 'Encapsulated Data', 'ED', 0);
    oStructure.Components.Add(oComponents.GetByNumber(109).Link);
    oStructure.Components.Add(oComponents.GetByNumber(110).Link);
    oStructure.Components.Add(oComponents.GetByNumber(111).Link);
    oStructure.Components.Add(oComponents.GetByNumber(112).Link);
    oStructure.Components.Add(oComponents.GetByNumber(113).Link);
  oStructure := oStructures.Add('DTN', 'Day Type and Number', 'DTN', 0);
    oStructure.Components.Add(oComponents.GetByNumber(107).Link);
    oStructure.Components.Add(oComponents.GetByNumber(108).Link);
  oStructure := oStructures.Add('DR', 'Date/Time Range', 'DR', 0);
    oStructure.Components.Add(oComponents.GetByNumber(103).Link);
    oStructure.Components.Add(oComponents.GetByNumber(104).Link);
  oStructure := oStructures.Add('DLT', 'Delta', 'DLT', 0);
    oStructure.Components.Add(oComponents.GetByNumber(99).Link);
    oStructure.Components.Add(oComponents.GetByNumber(100).Link);
    oStructure.Components.Add(oComponents.GetByNumber(101).Link);
    oStructure.Components.Add(oComponents.GetByNumber(102).Link);
  oStructure := oStructures.Add('DLN', 'Driver''s License Number', 'DLN', 0);
    oStructure.Components.Add(oComponents.GetByNumber(96).Link);
    oStructure.Components.Add(oComponents.GetByNumber(97).Link);
    oStructure.Components.Add(oComponents.GetByNumber(98).Link);
  oStructure := oStructures.Add('DLD', 'Discharge to Location and Date', 'DLD', 0);
    oStructure.Components.Add(oComponents.GetByNumber(94).Link);
    oStructure.Components.Add(oComponents.GetByNumber(95).Link);
  oStructure := oStructures.Add('DIN', 'Date and Institution Name', 'DIN', 0);
    oStructure.Components.Add(oComponents.GetByNumber(92).Link);
    oStructure.Components.Add(oComponents.GetByNumber(93).Link);
  oStructure := oStructures.Add('DDI', 'Daily Deductible Information', 'DDI', 0);
    oStructure.Components.Add(oComponents.GetByNumber(89).Link);
    oStructure.Components.Add(oComponents.GetByNumber(90).Link);
    oStructure.Components.Add(oComponents.GetByNumber(91).Link);
  oStructure := oStructures.Add('CX', 'Extended Composite ID with Check Digit', 'CX', 0);
    oStructure.Components.Add(oComponents.GetByNumber(79).Link);
    oStructure.Components.Add(oComponents.GetByNumber(80).Link);
    oStructure.Components.Add(oComponents.GetByNumber(81).Link);
    oStructure.Components.Add(oComponents.GetByNumber(82).Link);
    oStructure.Components.Add(oComponents.GetByNumber(83).Link);
    oStructure.Components.Add(oComponents.GetByNumber(84).Link);
    oStructure.Components.Add(oComponents.GetByNumber(85).Link);
    oStructure.Components.Add(oComponents.GetByNumber(86).Link);
    oStructure.Components.Add(oComponents.GetByNumber(87).Link);
    oStructure.Components.Add(oComponents.GetByNumber(88).Link);
  oStructure := oStructures.Add('CWE', 'Coded with Exceptions', 'CWE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(70).Link);
    oStructure.Components.Add(oComponents.GetByNumber(71).Link);
    oStructure.Components.Add(oComponents.GetByNumber(72).Link);
    oStructure.Components.Add(oComponents.GetByNumber(73).Link);
    oStructure.Components.Add(oComponents.GetByNumber(74).Link);
    oStructure.Components.Add(oComponents.GetByNumber(75).Link);
    oStructure.Components.Add(oComponents.GetByNumber(76).Link);
    oStructure.Components.Add(oComponents.GetByNumber(77).Link);
    oStructure.Components.Add(oComponents.GetByNumber(78).Link);
  oStructure := oStructures.Add('CSU', 'Channel Sensitivity and Units', 'CSU', 0);
    oStructure.Components.Add(oComponents.GetByNumber(63).Link);
    oStructure.Components.Add(oComponents.GetByNumber(64).Link);
    oStructure.Components.Add(oComponents.GetByNumber(65).Link);
    oStructure.Components.Add(oComponents.GetByNumber(66).Link);
    oStructure.Components.Add(oComponents.GetByNumber(67).Link);
    oStructure.Components.Add(oComponents.GetByNumber(68).Link);
    oStructure.Components.Add(oComponents.GetByNumber(69).Link);
  oStructure := oStructures.Add('CQ', 'Composite Quantity with Units', 'CQ', 0);
    oStructure.Components.Add(oComponents.GetByNumber(61).Link);
    oStructure.Components.Add(oComponents.GetByNumber(62).Link);
  oStructure := oStructures.Add('CP', 'Composite Price', 'CP', 0);
    oStructure.Components.Add(oComponents.GetByNumber(55).Link);
    oStructure.Components.Add(oComponents.GetByNumber(56).Link);
    oStructure.Components.Add(oComponents.GetByNumber(57).Link);
    oStructure.Components.Add(oComponents.GetByNumber(58).Link);
    oStructure.Components.Add(oComponents.GetByNumber(59).Link);
    oStructure.Components.Add(oComponents.GetByNumber(60).Link);
  oStructure := oStructures.Add('CNN', 'Composite ID Number and Name Simplified', 'CNN', 0);
    oStructure.Components.Add(oComponents.GetByNumber(44).Link);
    oStructure.Components.Add(oComponents.GetByNumber(45).Link);
    oStructure.Components.Add(oComponents.GetByNumber(46).Link);
    oStructure.Components.Add(oComponents.GetByNumber(47).Link);
    oStructure.Components.Add(oComponents.GetByNumber(48).Link);
    oStructure.Components.Add(oComponents.GetByNumber(49).Link);
    oStructure.Components.Add(oComponents.GetByNumber(50).Link);
    oStructure.Components.Add(oComponents.GetByNumber(51).Link);
    oStructure.Components.Add(oComponents.GetByNumber(52).Link);
    oStructure.Components.Add(oComponents.GetByNumber(53).Link);
    oStructure.Components.Add(oComponents.GetByNumber(54).Link);
  oStructure := oStructures.Add('CNE', 'Coded with No Exceptions', 'CNE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(35).Link);
    oStructure.Components.Add(oComponents.GetByNumber(36).Link);
    oStructure.Components.Add(oComponents.GetByNumber(37).Link);
    oStructure.Components.Add(oComponents.GetByNumber(38).Link);
    oStructure.Components.Add(oComponents.GetByNumber(39).Link);
    oStructure.Components.Add(oComponents.GetByNumber(40).Link);
    oStructure.Components.Add(oComponents.GetByNumber(41).Link);
    oStructure.Components.Add(oComponents.GetByNumber(42).Link);
    oStructure.Components.Add(oComponents.GetByNumber(43).Link);
  oStructure := oStructures.Add('CF', 'Coded Element with Formatted Values', 'CF', 0);
    oStructure.Components.Add(oComponents.GetByNumber(29).Link);
    oStructure.Components.Add(oComponents.GetByNumber(30).Link);
    oStructure.Components.Add(oComponents.GetByNumber(31).Link);
    oStructure.Components.Add(oComponents.GetByNumber(32).Link);
    oStructure.Components.Add(oComponents.GetByNumber(33).Link);
    oStructure.Components.Add(oComponents.GetByNumber(34).Link);
  oStructure := oStructures.Add('CE', 'Coded Element', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(23).Link);
    oStructure.Components.Add(oComponents.GetByNumber(24).Link);
    oStructure.Components.Add(oComponents.GetByNumber(25).Link);
    oStructure.Components.Add(oComponents.GetByNumber(26).Link);
    oStructure.Components.Add(oComponents.GetByNumber(27).Link);
    oStructure.Components.Add(oComponents.GetByNumber(28).Link);
  oStructure := oStructures.Add('CD', 'Channel Definition', 'CD', 0);
    oStructure.Components.Add(oComponents.GetByNumber(17).Link);
    oStructure.Components.Add(oComponents.GetByNumber(18).Link);
    oStructure.Components.Add(oComponents.GetByNumber(19).Link);
    oStructure.Components.Add(oComponents.GetByNumber(20).Link);
    oStructure.Components.Add(oComponents.GetByNumber(21).Link);
    oStructure.Components.Add(oComponents.GetByNumber(22).Link);
  oStructure := oStructures.Add('CCP', 'Channel Calibration Parameters', 'CCP', 0);
    oStructure.Components.Add(oComponents.GetByNumber(14).Link);
    oStructure.Components.Add(oComponents.GetByNumber(15).Link);
    oStructure.Components.Add(oComponents.GetByNumber(16).Link);
  oStructure := oStructures.Add('CCD', 'Charge Code and Date', 'CCD', 0);
    oStructure.Components.Add(oComponents.GetByNumber(12).Link);
    oStructure.Components.Add(oComponents.GetByNumber(13).Link);
  oStructure := oStructures.Add('AUI', 'Authorization Information', 'AUI', 0);
    oStructure.Components.Add(oComponents.GetByNumber(9).Link);
    oStructure.Components.Add(oComponents.GetByNumber(10).Link);
    oStructure.Components.Add(oComponents.GetByNumber(11).Link);
  oStructure := oStructures.Add('AD', 'Address', 'AD', 0);
    oStructure.Components.Add(oComponents.GetByNumber(1).Link);
    oStructure.Components.Add(oComponents.GetByNumber(2).Link);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructures.Add('-', 'withdrawn', '-', 0);
  oStructures.Add('varies', 'varies', 'var', 1);
  oStructures.Add('TX', 'Text Data', 'TX', 1);
  oStructures.Add('TM', 'Time', 'TM', 1);
  oStructures.Add('ST', 'String Data', 'ST', 1);
  oStructures.Add('SI', 'Sequence ID', 'SI', 1);
  oStructures.Add('NM', 'Numeric', 'NM', 1);
  oStructures.Add('IS', 'Coded Value for User-Defined Tables', 'IS', 1);
  oStructures.Add('ID', 'Coded Value for HL7 Defined Tables', 'ID', 1);
  oStructures.Add('GTS', 'General Timing Specification', 'GTS', 1);
  oStructures.Add('FT', 'Formatted Text Data', 'FT', 1);
  oStructures.Add('DTM', 'Date/Time', 'DTM', 1);
  oStructures.Add('DT', 'Date', 'DT', 1);
End;

procedure LoadDataElements1(oDataElements : THL7V2ModelDataElements);
Begin
  oDataElements.Add('Field Separator', 1, 'ST', 1, 0);
  oDataElements.Add('Encoding Characters', 2, 'ST', 4, 0);
  oDataElements.Add('Sending Application', 3, 'HD', 227, 361);
  oDataElements.Add('Sending Facility', 4, 'HD', 227, 362);
  oDataElements.Add('Receiving Application', 5, 'HD', 227, 361);
  oDataElements.Add('Receiving Facility', 6, 'HD', 227, 362);
  oDataElements.Add('Date/Time of Message', 7, 'DTM', 24, 0);
  oDataElements.Add('Security', 8, 'ST', 40, 0);
  oDataElements.Add('Message Type', 9, 'MSG', 15, 0);
  oDataElements.Add('Message Control ID', 10, 'ST', 199, 0);
  oDataElements.Add('Processing ID', 11, 'PT', 3, 0);
  oDataElements.Add('Version ID', 12, 'VID', 60, 0);
  oDataElements.Add('Sequence Number', 13, 'NM', 15, 0);
  oDataElements.Add('Continuation Pointer', 14, 'ST', 180, 0);
  oDataElements.Add('Accept Acknowledgment Type', 15, 'ID', 2, 155);
  oDataElements.Add('Application Acknowledgment Type', 16, 'ID', 2, 155);
  oDataElements.Add('Country Code', 17, 'ID', 3, 399);
  oDataElements.Add('Acknowledgment Code', 18, 'ID', 2, 8);
  oDataElements.Add('Text Message', 20, 'ST', 0, 0);
  oDataElements.Add('Expected Sequence Number', 21, 'NM', 15, 0);
  oDataElements.Add('Delayed Acknowledgment Type', 22, '-', 0, 0);
  oDataElements.Add('Error Condition', 23, 'CNE', 0, 357);
  oDataElements.Add('Error Code and Location', 24, 'ELD', 0, 0);
  oDataElements.Add('Query Date/Time', 25, 'DTM', 24, 0);
  oDataElements.Add('Query Format Code', 26, 'ID', 1, 106);
  oDataElements.Add('Query Priority', 27, 'ID', 1, 91);
  oDataElements.Add('Query ID', 28, 'ST', 10, 0);
  oDataElements.Add('Deferred Response Type', 29, 'ID', 1, 107);
  oDataElements.Add('Deferred Response Date/Time', 30, 'DTM', 24, 0);
  oDataElements.Add('Quantity Limited Request', 31, 'CQ', 10, 126);
  oDataElements.Add('Who Subject Filter', 32, 'XCN', 250, 0);
  oDataElements.Add('What Subject Filter', 33, 'CWE', 250, 48);
  oDataElements.Add('What Department Data Code', 34, 'CWE', 250, 0);
  oDataElements.Add('What Data Code Value Qual.', 35, 'VR', 20, 0);
  oDataElements.Add('Query Results Level', 36, 'ID', 1, 108);
  oDataElements.Add('Where Subject Filter', 37, 'ST', 20, 0);
  oDataElements.Add('When Data Start Date/Time', 38, 'DTM', 0, 0);
  oDataElements.Add('When Data End Date/Time', 39, 'DTM', 0, 0);
  oDataElements.Add('What User Qualifier', 40, 'ST', 60, 0);
  oDataElements.Add('Other QRY Subject Filter', 41, 'ST', 60, 0);
  oDataElements.Add('Which Date/Time Qualifier', 42, 'ID', 12, 156);
  oDataElements.Add('Which Date/Time Status Qualifier', 43, 'ID', 12, 157);
  oDataElements.Add('Date/Time Selection Qualifier', 44, 'ID', 12, 158);
  oDataElements.Add('R/U Date/Time', 45, 'DTM', 24, 0);
  oDataElements.Add('Report Priority', 46, 'ID', 1, 109);
  oDataElements.Add('R/U Who Subject Definition', 47, 'XCN', 250, 0);
  oDataElements.Add('R/U What Subject Definition', 48, 'CWE', 250, 48);
  oDataElements.Add('R/U What Department Code', 49, 'CWE', 250, 0);
  oDataElements.Add('R/U Display/Print Locations', 50, 'ST', 20, 0);
  oDataElements.Add('R/U Results Level', 51, 'ID', 1, 108);
  oDataElements.Add('R/U Where Subject Definition', 52, 'ST', 20, 0);
  oDataElements.Add('R/U When Data Start Date/Time', 53, 'DTM', 24, 0);
  oDataElements.Add('R/U When Data End Date/Time', 54, 'DTM', 24, 0);
  oDataElements.Add('R/U What User Qualifier', 55, 'ST', 20, 0);
  oDataElements.Add('R/U Other Results Subject Definition', 56, 'ST', 20, 0);
  oDataElements.Add('R/U Which Date/Time Qualifier', 57, 'ID', 12, 156);
  oDataElements.Add('R/U Which Date/Time Status Qualifier', 58, 'ID', 12, 157);
  oDataElements.Add('R/U Date/Time Selection Qualifier', 59, 'ID', 12, 158);
  oDataElements.Add('Set ID - DSP', 61, 'SI', 4, 0);
  oDataElements.Add('Display Level', 62, 'SI', 4, 0);
  oDataElements.Add('Data Line', 63, 'TX', 300, 0);
  oDataElements.Add('Logical Break Point', 64, 'ST', 2, 0);
  oDataElements.Add('Result ID', 65, 'TX', 20, 0);
  oDataElements.Add('Addendum Continuation Pointer', 66, 'ST', 65536, 0);
  oDataElements.Add('File Field Separator', 67, 'ST', 1, 0);
  oDataElements.Add('File Encoding Characters', 68, 'ST', 4, 0);
  oDataElements.Add('File Sending Application', 69, 'HD', 227, 0);
  oDataElements.Add('File Sending Facility', 70, 'HD', 227, 0);
  oDataElements.Add('File Receiving Application', 71, 'HD', 227, 0);
  oDataElements.Add('File Receiving Facility', 72, 'HD', 227, 0);
  oDataElements.Add('File Creation Date/Time', 73, 'DTM', 24, 0);
  oDataElements.Add('File Security', 74, 'ST', 40, 0);
  oDataElements.Add('File Name/ID', 75, 'ST', 20, 0);
  oDataElements.Add('File Header Comment', 76, 'ST', 80, 0);
  oDataElements.Add('File Control ID', 77, 'ST', 20, 0);
  oDataElements.Add('Reference File Control ID', 78, 'ST', 20, 0);
  oDataElements.Add('File Batch Count', 79, 'NM', 10, 0);
  oDataElements.Add('File Trailer Comment', 80, 'ST', 80, 0);
  oDataElements.Add('Batch Field Separator', 81, 'ST', 1, 0);
  oDataElements.Add('Batch Encoding Characters', 82, 'ST', 4, 0);
  oDataElements.Add('Batch Sending Application', 83, 'HD', 227, 0);
  oDataElements.Add('Batch Sending Facility', 84, 'HD', 227, 0);
  oDataElements.Add('Batch Receiving Application', 85, 'HD', 227, 0);
  oDataElements.Add('Batch Receiving Facility', 86, 'HD', 227, 0);
  oDataElements.Add('Batch Creation Date/Time', 87, 'DTM', 24, 0);
  oDataElements.Add('Batch Security', 88, 'ST', 40, 0);
  oDataElements.Add('Batch Name/ID/Type', 89, 'ST', 20, 0);
  oDataElements.Add('Batch Comment', 90, 'ST', 80, 0);
  oDataElements.Add('Batch Control ID', 91, 'ST', 20, 0);
  oDataElements.Add('Reference Batch Control ID', 92, 'ST', 20, 0);
  oDataElements.Add('Batch Message Count', 93, 'ST', 10, 0);
  oDataElements.Add('Batch Totals', 95, 'NM', 100, 0);
  oDataElements.Add('Set ID - NTE', 96, 'SI', 4, 0);
  oDataElements.Add('Source of Comment', 97, 'ID', 8, 105);
  oDataElements.Add('Comment', 98, 'FT', 65536, 0);
  oDataElements.Add('Event Type Code', 99, 'ID', 0, 3);
  oDataElements.Add('Recorded Date/Time', 100, 'DTM', 24, 0);
  oDataElements.Add('Date/Time Planned Event', 101, 'DTM', 24, 0);
  oDataElements.Add('Event Reason Code', 102, 'IS', 3, 62);
  oDataElements.Add('Operator ID', 103, 'XCN', 250, 188);
  oDataElements.Add('Set ID - PID', 104, 'SI', 4, 0);
  oDataElements.Add('Patient ID', 105, 'CX', 0, 0);
  oDataElements.Add('Patient Identifier List', 106, 'CX', 250, 0);
  oDataElements.Add('Alternate Patient ID - PID', 107, 'CX', 0, 0);
  oDataElements.Add('Patient Name', 108, 'XPN', 250, 200);
  oDataElements.Add('Mother''s Maiden Name', 109, 'XPN', 250, 0);
  oDataElements.Add('Date/Time of Birth', 110, 'DTM', 24, 0);
  oDataElements.Add('Administrative Sex', 111, 'IS', 1, 1);
  oDataElements.Add('Patient Alias', 112, 'XPN', 0, 0);
  oDataElements.Add('Race', 113, 'CWE', 705, 5);
  oDataElements.Add('Patient Address', 114, 'XAD', 250, 0);
  oDataElements.Add('County Code', 115, 'IS', 0, 289);
  oDataElements.Add('Phone Number - Home', 116, 'XTN', 250, 0);
  oDataElements.Add('Phone Number - Business', 117, 'XTN', 250, 0);
  oDataElements.Add('Primary Language', 118, 'CWE', 705, 296);
  oDataElements.Add('Marital Status', 119, 'CWE', 705, 2);
  oDataElements.Add('Religion', 120, 'CWE', 705, 6);
  oDataElements.Add('Patient Account Number', 121, 'CX', 250, 0);
  oDataElements.Add('SSN Number - Patient', 122, 'ST', 0, 0);
  oDataElements.Add('Driver''s License Number - Patient', 123, 'DLN', 0, 0);
  oDataElements.Add('Mother''s Identifier', 124, 'CX', 250, 0);
  oDataElements.Add('Ethnic Group', 125, 'CWE', 705, 189);
  oDataElements.Add('Birth Place', 126, 'ST', 250, 0);
  oDataElements.Add('Multiple Birth Indicator', 127, 'ID', 1, 136);
  oDataElements.Add('Birth Order', 128, 'NM', 2, 0);
  oDataElements.Add('Citizenship', 129, 'CWE', 705, 171);
  oDataElements.Add('Veterans Military Status', 130, 'CWE', 705, 172);
  oDataElements.Add('Set ID - PV1', 131, 'SI', 4, 0);
  oDataElements.Add('Patient Class', 132, 'IS', 1, 4);
  oDataElements.Add('Assigned Patient Location', 133, 'PL', 80, 0);
  oDataElements.Add('Admission Type', 134, 'IS', 2, 7);
  oDataElements.Add('Preadmit Number', 135, 'CX', 250, 0);
  oDataElements.Add('Prior Patient Location', 136, 'PL', 80, 0);
  oDataElements.Add('Attending Doctor', 137, 'XCN', 250, 10);
  oDataElements.Add('Referring Doctor', 138, 'XCN', 250, 10);
  oDataElements.Add('Consulting Doctor', 139, 'XCN', 0, 10);
  oDataElements.Add('Hospital Service', 140, 'IS', 3, 69);
  oDataElements.Add('Temporary Location', 141, 'PL', 80, 0);
  oDataElements.Add('Preadmit Test Indicator', 142, 'IS', 2, 87);
  oDataElements.Add('Re-admission Indicator', 143, 'IS', 2, 92);
  oDataElements.Add('Admit Source', 144, 'IS', 6, 23);
  oDataElements.Add('Ambulatory Status', 145, 'IS', 2, 9);
  oDataElements.Add('VIP Indicator', 146, 'IS', 2, 99);
  oDataElements.Add('Admitting Doctor', 147, 'XCN', 250, 10);
  oDataElements.Add('Patient Type', 148, 'IS', 2, 18);
  oDataElements.Add('Visit Number', 149, 'CX', 250, 0);
  oDataElements.Add('Financial Class', 150, 'FC', 50, 64);
  oDataElements.Add('Charge Price Indicator', 151, 'IS', 2, 32);
  oDataElements.Add('Courtesy Code', 152, 'IS', 2, 45);
  oDataElements.Add('Credit Rating', 153, 'IS', 2, 46);
  oDataElements.Add('Contract Code', 154, 'IS', 2, 44);
  oDataElements.Add('Contract Effective Date', 155, 'DT', 8, 0);
  oDataElements.Add('Contract Amount', 156, 'NM', 12, 0);
  oDataElements.Add('Contract Period', 157, 'NM', 3, 0);
  oDataElements.Add('Interest Code', 158, 'IS', 2, 73);
  oDataElements.Add('Transfer to Bad Debt Code', 159, 'IS', 4, 110);
  oDataElements.Add('Transfer to Bad Debt Date', 160, 'DT', 8, 0);
  oDataElements.Add('Bad Debt Agency Code', 161, 'IS', 10, 21);
  oDataElements.Add('Bad Debt Transfer Amount', 162, 'NM', 12, 0);
  oDataElements.Add('Bad Debt Recovery Amount', 163, 'NM', 12, 0);
  oDataElements.Add('Delete Account Indicator', 164, 'IS', 1, 111);
  oDataElements.Add('Delete Account Date', 165, 'DT', 8, 0);
  oDataElements.Add('Discharge Disposition', 166, 'IS', 3, 112);
  oDataElements.Add('Discharged to Location', 167, 'DLD', 47, 113);
  oDataElements.Add('Diet Type', 168, 'CWE', 705, 114);
  oDataElements.Add('Servicing Facility', 169, 'IS', 2, 115);
  oDataElements.Add('Bed Status', 170, 'IS', 0, 116);
  oDataElements.Add('Account Status', 171, 'IS', 2, 117);
  oDataElements.Add('Pending Location', 172, 'PL', 80, 0);
  oDataElements.Add('Prior Temporary Location', 173, 'PL', 80, 0);
  oDataElements.Add('Admit Date/Time', 174, 'DTM', 24, 0);
  oDataElements.Add('Discharge Date/Time', 175, 'DTM', 24, 0);
  oDataElements.Add('Current Patient Balance', 176, 'NM', 12, 0);
  oDataElements.Add('Total Charges', 177, 'NM', 12, 0);
  oDataElements.Add('Total Adjustments', 178, 'NM', 12, 0);
  oDataElements.Add('Total Payments', 179, 'NM', 12, 0);
  oDataElements.Add('Alternate Visit ID', 180, 'CX', 250, 203);
  oDataElements.Add('Prior Pending Location', 181, 'PL', 80, 0);
  oDataElements.Add('Accommodation Code', 182, 'CWE', 705, 129);
  oDataElements.Add('Admit Reason', 183, 'CWE', 705, 0);
  oDataElements.Add('Transfer Reason', 184, 'CWE', 705, 0);
  oDataElements.Add('Patient Valuables', 185, 'ST', 25, 0);
  oDataElements.Add('Patient Valuables Location', 186, 'ST', 25, 0);
  oDataElements.Add('Visit User Code', 187, 'IS', 2, 130);
  oDataElements.Add('Expected Admit Date/Time', 188, 'DTM', 24, 0);
  oDataElements.Add('Expected Discharge Date/Time', 189, 'DTM', 24, 0);
  oDataElements.Add('Set ID - NK1', 190, 'SI', 4, 0);
  oDataElements.Add('Name', 191, 'XPN', 250, 200);
  oDataElements.Add('Relationship', 192, 'CWE', 705, 63);
  oDataElements.Add('Address', 193, 'XAD', 250, 0);
  oDataElements.Add('Phone Number', 194, 'XTN', 250, 0);
  oDataElements.Add('Business Phone Number', 195, 'XTN', 250, 0);
  oDataElements.Add('Contact Role', 196, 'CWE', 705, 131);
  oDataElements.Add('Start Date', 197, 'DT', 8, 0);
  oDataElements.Add('End Date', 198, 'DT', 8, 0);
  oDataElements.Add('Next of Kin / Associated Parties Job Title', 199, 'ST', 60, 0);
  oDataElements.Add('Next of Kin / Associated Parties Job Code/Class', 200, 'JCC', 20, 0);
  oDataElements.Add('Next of Kin / Associated Parties Employee Number', 201, 'CX', 250, 0);
  oDataElements.Add('Organization Name - NK1', 202, 'XON', 250, 0);
  oDataElements.Add('Set ID - AL1', 203, 'SI', 4, 0);
  oDataElements.Add('Allergen Type Code', 204, 'CWE', 705, 127);
  oDataElements.Add('Allergen Code/Mnemonic/Description', 205, 'CWE', 705, 0);
  oDataElements.Add('Allergy Severity Code', 206, 'CWE', 705, 128);
  oDataElements.Add('Allergy Reaction Code', 207, 'ST', 15, 0);
  oDataElements.Add('Identification Date', 208, 'DT', 0, 0);
  oDataElements.Add('Bed Location', 209, 'PL', 80, 0);
  oDataElements.Add('Prior Patient Identifier List', 211, 'CX', 250, 0);
  oDataElements.Add('Prior Alternate Patient ID', 212, 'CX', 0, 0);
  oDataElements.Add('Prior Patient Account Number', 213, 'CX', 250, 0);
  oDataElements.Add('Prior Patient ID', 214, 'CX', 0, 0);
  oDataElements.Add('Order Control', 215, 'ID', 2, 119);
  oDataElements.Add('Placer Order Number', 216, 'EI', 427, 0);
  oDataElements.Add('Filler Order Number', 217, 'EI', 427, 0);
  oDataElements.Add('Placer Group Number', 218, 'EI', 22, 0);
  oDataElements.Add('Order Status', 219, 'ID', 2, 38);
  oDataElements.Add('Response Flag', 220, 'ID', 1, 121);
  oDataElements.Add('Quantity/Timing', 221, 'TQ', 0, 0);
  oDataElements.Add('Parent', 222, 'EIP', 200, 0);
  oDataElements.Add('Date/Time of Transaction', 223, 'DTM', 24, 0);
  oDataElements.Add('Entered By', 224, 'XCN', 3220, 0);
  oDataElements.Add('Verified By', 225, 'XCN', 250, 0);
  oDataElements.Add('Ordering Provider', 226, 'XCN', 3220, 0);
  oDataElements.Add('Enterer''s Location', 227, 'PL', 80, 0);
  oDataElements.Add('Call Back Phone Number', 228, 'XTN', 250, 0);
  oDataElements.Add('Order Effective Date/Time', 229, 'DTM', 24, 0);
  oDataElements.Add('Order Control Code Reason', 230, 'CWE', 250, 9999);
  oDataElements.Add('Entering Organization', 231, 'CWE', 250, 9999);
  oDataElements.Add('Entering Device', 232, 'CWE', 250, 9999);
  oDataElements.Add('Action By', 233, 'XCN', 250, 0);
  oDataElements.Add('When to Charge', 234, 'CCD', 40, 100);
  oDataElements.Add('Charge Type', 235, 'ID', 50, 122);
  oDataElements.Add('Account ID', 236, 'CX', 100, 0);
  oDataElements.Add('Set ID - OBR', 237, 'SI', 4, 0);
  oDataElements.Add('Universal Service Identifier', 238, 'CWE', 705, 0);
  oDataElements.Add('Priority', 239, 'ID', 0, 0);
  oDataElements.Add('Requested Date/Time', 240, 'DTM', 0, 0);
  oDataElements.Add('Observation Date/Time #', 241, 'DTM', 24, 0);
  oDataElements.Add('Observation End Date/Time #', 242, 'DTM', 24, 0);
  oDataElements.Add('Collection Volume *', 243, 'CQ', 722, 0);
  oDataElements.Add('Collector Identifier *', 244, 'XCN', 3220, 0);
  oDataElements.Add('Specimen Action Code *', 245, 'ID', 1, 65);
  oDataElements.Add('Danger Code', 246, 'CWE', 705, 9999);
  oDataElements.Add('Relevant Clinical Information', 247, 'ST', 300, 0);
  oDataElements.Add('Specimen Received Date/Time', 248, 'DTM', 24, 0);
  oDataElements.Add('Specimen Source', 249, 'SPS', 0, 0);
  oDataElements.Add('Order Callback Phone Number', 250, 'XTN', 2743, 0);
  oDataElements.Add('Placer Field 1', 251, 'ST', 199, 0);
  oDataElements.Add('Placer Field 2', 252, 'ST', 199, 0);
  oDataElements.Add('Filler Field 1 +', 253, 'ST', 199, 0);
  oDataElements.Add('Filler Field 2 +', 254, 'ST', 199, 0);
  oDataElements.Add('Results Rpt/Status Chng - Date/Time +', 255, 'DTM', 24, 0);
  oDataElements.Add('Charge to Practice +', 256, 'MOC', 504, 0);
  oDataElements.Add('Diagnostic Serv Sect ID', 257, 'ID', 10, 74);
  oDataElements.Add('Result Status +', 258, 'ID', 1, 123);
  oDataElements.Add('Parent Result +', 259, 'PRL', 977, 0);
  oDataElements.Add('Result Copies To', 260, 'XCN', 3220, 0);
  oDataElements.Add('Parent', 261, 'EIP', 855, 0);
  oDataElements.Add('Transportation Mode', 262, 'ID', 20, 124);
  oDataElements.Add('Reason for Study', 263, 'CWE', 705, 9999);
  oDataElements.Add('Principal Result Interpreter +', 264, 'NDL', 0, 0);
  oDataElements.Add('Assistant Result Interpreter +', 265, 'NDL', 0, 0);
  oDataElements.Add('Technician +', 266, 'NDL', 0, 0);
  oDataElements.Add('Transcriptionist +', 267, 'NDL', 0, 0);
  oDataElements.Add('Scheduled Date/Time +', 268, 'DTM', 24, 0);
  oDataElements.Add('Type', 269, 'ID', 1, 159);
  oDataElements.Add('Service Period', 270, 'CWE', 250, 9999);
  oDataElements.Add('Diet, Supplement, or Preference Code', 271, 'CWE', 250, 9999);
  oDataElements.Add('Text Instruction', 272, 'ST', 80, 0);
  oDataElements.Add('Tray Type', 273, 'CWE', 250, 160);
  oDataElements.Add('Requisition Line Number', 275, 'SI', 4, 0);
  oDataElements.Add('Item Code - Internal', 276, 'CWE', 250, 9999);
  oDataElements.Add('Item Code - External', 277, 'CWE', 250, 9999);
  oDataElements.Add('Hospital Item Code', 278, 'CWE', 250, 9999);
  oDataElements.Add('Requisition Quantity', 279, 'NM', 6, 0);
  oDataElements.Add('Requisition Unit of Measure', 280, 'CWE', 250, 9999);
  oDataElements.Add('Cost Center Account Number', 281, 'IS', 30, 319);
  oDataElements.Add('Item Natural Account Code', 282, 'IS', 30, 320);
  oDataElements.Add('Deliver To ID', 283, 'CWE', 250, 9999);
  oDataElements.Add('Date Needed', 284, 'DT', 8, 0);
  oDataElements.Add('Anticipated Price', 285, 'ST', 10, 0);
  oDataElements.Add('Manufacturer Identifier', 286, 'CWE', 705, 385);
  oDataElements.Add('Manufacturer''s Catalog', 287, 'ST', 16, 0);
  oDataElements.Add('Vendor ID', 288, 'CWE', 250, 9999);
  oDataElements.Add('Vendor Catalog', 289, 'ST', 16, 0);
  oDataElements.Add('Taxable', 290, 'ID', 1, 136);
  oDataElements.Add('Substitute Allowed', 291, 'ID', 1, 136);
  oDataElements.Add('Requested Give Code', 292, 'CWE', 250, 9999);
  oDataElements.Add('Requested Give Amount - Minimum', 293, 'NM', 20, 0);
  oDataElements.Add('Requested Give Amount - Maximum', 294, 'NM', 20, 0);
  oDataElements.Add('Requested Give Units', 295, 'CWE', 250, 9999);
  oDataElements.Add('Requested Dosage Form', 296, 'CWE', 250, 9999);
  oDataElements.Add('Provider''s Pharmacy/Treatment Instructions', 297, 'CWE', 250, 9999);
  oDataElements.Add('Provider''s Administration Instructions', 298, 'CWE', 250, 9999);
  oDataElements.Add('Deliver-To Location', 299, 'LA1', 0, 0);
  oDataElements.Add('Allow Substitutions', 300, 'ID', 1, 161);
  oDataElements.Add('Requested Dispense Code', 301, 'CWE', 250, 9999);
  oDataElements.Add('Requested Dispense Amount', 302, 'NM', 20, 0);
  oDataElements.Add('Requested Dispense Units', 303, 'CWE', 250, 9999);
  oDataElements.Add('Number Of Refills', 304, 'NM', 3, 0);
  oDataElements.Add('Ordering Provider''s DEA Number', 305, 'XCN', 250, 0);
  oDataElements.Add('Pharmacist/Treatment Supplier''s Verifier ID', 306, 'XCN', 250, 0);
  oDataElements.Add('Needs Human Review', 307, 'ID', 1, 136);
  oDataElements.Add('Requested Give Per (Time Unit)', 308, 'ST', 20, 0);
  oDataElements.Add('Route', 309, 'CWE', 250, 162);
  oDataElements.Add('Administration Site', 310, 'CWE', 250, 550);
  oDataElements.Add('Administration Device', 311, 'CWE', 250, 164);
  oDataElements.Add('Administration Method', 312, 'CWE', 250, 165);
  oDataElements.Add('RX Component Type', 313, 'ID', 1, 166);
  oDataElements.Add('Component Code', 314, 'CWE', 250, 9999);
  oDataElements.Add('Component Amount', 315, 'NM', 20, 0);
  oDataElements.Add('Component Units', 316, 'CWE', 250, 9999);
  oDataElements.Add('Give Code', 317, 'CWE', 250, 292);
  oDataElements.Add('Give Amount - Minimum', 318, 'NM', 20, 0);
  oDataElements.Add('Give Amount - Maximum', 319, 'NM', 20, 0);
  oDataElements.Add('Give Units', 320, 'CWE', 250, 9999);
  oDataElements.Add('Give Dosage Form', 321, 'CWE', 250, 9999);
  oDataElements.Add('Substitution Status', 322, 'ID', 1, 167);
  oDataElements.Add('Dispense Amount', 323, 'NM', 20, 0);
  oDataElements.Add('Dispense Units', 324, 'CWE', 250, 9999);
  oDataElements.Add('Prescription Number', 325, 'ST', 20, 0);
  oDataElements.Add('Number of Refills Remaining', 326, 'NM', 20, 0);
  oDataElements.Add('Number of Refills/Doses Dispensed', 327, 'NM', 20, 0);
  oDataElements.Add('D/T of Most Recent Refill or Dose Dispensed', 328, 'DTM', 24, 0);
  oDataElements.Add('Total Daily Dose', 329, 'CQ', 10, 0);
  oDataElements.Add('Pharmacy/Treatment Supplier''s Special Dispensing Instructions', 330, 'CWE', 250, 9999);
  oDataElements.Add('Give Per (Time Unit)', 331, 'ST', 20, 0);
  oDataElements.Add('Give Rate Amount', 332, 'ST', 6, 0);
  oDataElements.Add('Give Rate Units', 333, 'CWE', 250, 9999);
  oDataElements.Add('Dispense Sub-ID Counter', 334, 'NM', 4, 0);
  oDataElements.Add('Dispense/Give Code', 335, 'CWE', 250, 292);
  oDataElements.Add('Date/Time Dispensed', 336, 'DTM', 24, 0);
  oDataElements.Add('Actual Dispense Amount', 337, 'NM', 20, 0);
  oDataElements.Add('Actual Dispense Units', 338, 'CWE', 250, 9999);
  oDataElements.Add('Actual Dosage Form', 339, 'CWE', 250, 9999);
  oDataElements.Add('Dispense Notes', 340, 'ST', 200, 0);
  oDataElements.Add('Dispensing Provider', 341, 'XCN', 200, 0);
  oDataElements.Add('Give Sub-ID Counter', 342, 'NM', 4, 0);
  oDataElements.Add('Pharmacy/Treatment Supplier''s Special Administration Instructions', 343, 'CWE', 250, 9999);
  oDataElements.Add('Administration Sub-ID Counter', 344, 'NM', 4, 0);
  oDataElements.Add('Date/Time Start of Administration', 345, 'DTM', 24, 0);
  oDataElements.Add('Date/Time End of Administration', 346, 'DTM', 24, 0);
  oDataElements.Add('Administered Code', 347, 'CWE', 250, 292);
  oDataElements.Add('Administered Amount', 348, 'NM', 20, 0);
  oDataElements.Add('Administered Units', 349, 'CWE', 250, 9999);
  oDataElements.Add('Administered Dosage Form', 350, 'CWE', 250, 9999);
  oDataElements.Add('Administration Notes', 351, 'CWE', 250, 9999);
  oDataElements.Add('Administering Provider', 352, 'XCN', 250, 0);
  oDataElements.Add('Administered-at Location', 353, 'LA2', 0, 0);
  oDataElements.Add('Administered Per (Time Unit)', 354, 'ST', 20, 0);
  oDataElements.Add('Set ID - FT1', 355, 'SI', 4, 0);
  oDataElements.Add('Transaction ID', 356, 'ST', 12, 0);
  oDataElements.Add('Transaction Batch ID', 357, 'ST', 10, 0);
  oDataElements.Add('Transaction Date', 358, 'DR', 53, 0);
  oDataElements.Add('Transaction Posting Date', 359, 'DTM', 24, 0);
  oDataElements.Add('Transaction Type', 360, 'IS', 8, 17);
  oDataElements.Add('Transaction Code', 361, 'CWE', 250, 132);
  oDataElements.Add('Transaction Description', 362, '-', 0, 0);
  oDataElements.Add('Transaction Description - Alt', 363, '-', 0, 0);
  oDataElements.Add('Transaction Quantity', 364, 'NM', 6, 0);
  oDataElements.Add('Transaction Amount - Extended', 365, 'CP', 12, 0);
  oDataElements.Add('Transaction amount - unit', 366, 'CP', 12, 0);
  oDataElements.Add('Department Code', 367, 'CWE', 250, 49);
  oDataElements.Add('Insurance Plan ID', 368, 'CWE', 250, 72);
  oDataElements.Add('Insurance Amount', 369, 'CP', 12, 0);
  oDataElements.Add('Fee Schedule', 370, 'IS', 1, 24);
  oDataElements.Add('Diagnosis Code - FT1', 371, 'CWE', 250, 51);
  oDataElements.Add('Performed By Code', 372, 'XCN', 250, 84);
  oDataElements.Add('Ordered By Code', 373, 'XCN', 250, 0);
  oDataElements.Add('Unit Cost', 374, 'CP', 12, 0);
  oDataElements.Add('Set ID - DG1', 375, 'SI', 4, 0);
  oDataElements.Add('Diagnosis Coding Method', 376, '-', 0, 0);
  oDataElements.Add('Diagnosis Code - DG1', 377, 'CWE', 250, 51);
  oDataElements.Add('Diagnosis Description', 378, '-', 0, 0);
  oDataElements.Add('Diagnosis Date/Time', 379, 'DTM', 24, 0);
  oDataElements.Add('Diagnosis Type', 380, 'IS', 2, 52);
  oDataElements.Add('Major Diagnostic Category', 381, 'CNE', 1, 118);
  oDataElements.Add('Diagnostic Related Group', 382, 'CNE', 250, 55);
  oDataElements.Add('DRG Approval Indicator', 383, 'ID', 1, 136);
  oDataElements.Add('DRG Grouper Review Code', 384, 'IS', 2, 56);
  oDataElements.Add('Outlier Type', 385, 'CWE', 250, 83);
  oDataElements.Add('Outlier Days', 386, 'NM', 3, 0);
  oDataElements.Add('Outlier Cost', 387, 'CP', 12, 0);
  oDataElements.Add('Grouper Version And Type', 388, '-', 0, 0);
  oDataElements.Add('Diagnosis Priority', 389, 'ID', 2, 359);
  oDataElements.Add('Diagnosing Clinician', 390, 'XCN', 250, 0);
  oDataElements.Add('Set ID - PR1', 391, 'SI', 4, 0);
  oDataElements.Add('Procedure Coding Method', 392, '-', 0, 0);
  oDataElements.Add('Procedure Code', 393, 'CNE', 705, 88);
  oDataElements.Add('Procedure Description', 394, '-', 0, 0);
  oDataElements.Add('Procedure Date/Time', 395, 'DTM', 24, 0);
  oDataElements.Add('Procedure Functional Type', 396, 'IS', 2, 230);
  oDataElements.Add('Procedure Minutes', 397, 'NM', 4, 0);
  oDataElements.Add('Anesthesiologist', 398, '-', 0, 0);
  oDataElements.Add('Anesthesia Code', 399, 'IS', 2, 19);
  oDataElements.Add('Anesthesia Minutes', 400, 'NM', 4, 0);
  oDataElements.Add('Surgeon', 401, '-', 0, 0);
  oDataElements.Add('Procedure Practitioner', 402, '-', 0, 0);
  oDataElements.Add('Consent Code', 403, 'CWE', 250, 59);
  oDataElements.Add('Procedure Priority', 404, 'ID', 2, 418);
  oDataElements.Add('Set ID - GT1', 405, 'SI', 4, 0);
  oDataElements.Add('Guarantor Number', 406, 'CX', 250, 0);
  oDataElements.Add('Guarantor Name', 407, 'XPN', 250, 0);
  oDataElements.Add('Guarantor Spouse Name', 408, 'XPN', 250, 0);
  oDataElements.Add('Guarantor Address', 409, 'XAD', 250, 0);
  oDataElements.Add('Guarantor Ph Num - Home', 410, 'XTN', 250, 0);
  oDataElements.Add('Guarantor Ph Num - Business', 411, 'XTN', 250, 0);
  oDataElements.Add('Guarantor Date/Time Of Birth', 412, 'DTM', 24, 0);
  oDataElements.Add('Guarantor Administrative Sex', 413, 'IS', 1, 1);
  oDataElements.Add('Guarantor Type', 414, 'IS', 2, 68);
  oDataElements.Add('Guarantor Relationship', 415, 'CWE', 250, 63);
  oDataElements.Add('Guarantor SSN', 416, 'ST', 11, 0);
  oDataElements.Add('Guarantor Date - Begin', 417, 'DT', 8, 0);
  oDataElements.Add('Guarantor Date - End', 418, 'DT', 8, 0);
  oDataElements.Add('Guarantor Priority', 419, 'NM', 2, 0);
  oDataElements.Add('Guarantor Employer Name', 420, 'XPN', 250, 0);
  oDataElements.Add('Guarantor Employer Address', 421, 'XAD', 250, 0);
  oDataElements.Add('Guarantor Employer Phone Number', 422, 'XTN', 250, 0);
  oDataElements.Add('Guarantor Employee ID Number', 423, 'CX', 250, 0);
  oDataElements.Add('Guarantor Employment Status', 424, 'IS', 2, 66);
  oDataElements.Add('Guarantor Organization Name', 425, 'XON', 250, 0);
  oDataElements.Add('Set ID - IN1', 426, 'SI', 4, 0);
  oDataElements.Add('Insurance Company ID', 428, 'CX', 250, 0);
  oDataElements.Add('Insurance Company Name', 429, 'XON', 250, 0);
  oDataElements.Add('Insurance Company Address', 430, 'XAD', 250, 0);
  oDataElements.Add('Insurance Co Contact Person', 431, 'XPN', 250, 0);
  oDataElements.Add('Insurance Co Phone Number', 432, 'XTN', 250, 0);
  oDataElements.Add('Group Number', 433, 'ST', 12, 0);
  oDataElements.Add('Group Name', 434, 'XON', 250, 0);
  oDataElements.Add('Insured''s Group Emp ID', 435, 'CX', 250, 0);
  oDataElements.Add('Insured''s Group Emp Name', 436, 'XON', 250, 0);
  oDataElements.Add('Plan Effective Date', 437, 'DT', 8, 0);
  oDataElements.Add('Plan Expiration Date', 438, 'DT', 8, 0);
  oDataElements.Add('Authorization Information', 439, 'AUI', 239, 0);
  oDataElements.Add('Plan Type', 440, 'IS', 3, 86);
  oDataElements.Add('Name Of Insured', 441, 'XPN', 250, 0);
  oDataElements.Add('Insured''s Relationship To Patient', 442, 'CWE', 250, 63);
  oDataElements.Add('Insured''s Date Of Birth', 443, 'DTM', 24, 0);
  oDataElements.Add('Insured''s Address', 444, 'XAD', 250, 0);
  oDataElements.Add('Assignment Of Benefits', 445, 'IS', 2, 135);
  oDataElements.Add('Coordination Of Benefits', 446, 'IS', 2, 173);
  oDataElements.Add('Coord Of Ben. Priority', 447, 'ST', 2, 0);
  oDataElements.Add('Notice Of Admission Flag', 448, 'ID', 1, 136);
  oDataElements.Add('Notice Of Admission Date', 449, 'DT', 8, 0);
  oDataElements.Add('Report Of Eligibility Flag', 450, 'ID', 1, 136);
  oDataElements.Add('Report Of Eligibility Date', 451, 'DT', 8, 0);
  oDataElements.Add('Release Information Code', 452, 'IS', 2, 93);
  oDataElements.Add('Pre-Admit Cert (PAC)', 453, 'ST', 15, 0);
  oDataElements.Add('Verification Date/Time', 454, 'DTM', 24, 0);
  oDataElements.Add('Verification By', 455, 'XCN', 250, 0);
  oDataElements.Add('Type Of Agreement Code', 456, 'IS', 2, 98);
  oDataElements.Add('Billing Status', 457, 'IS', 2, 22);
  oDataElements.Add('Lifetime Reserve Days', 458, 'NM', 4, 0);
  oDataElements.Add('Delay Before L.R. Day', 459, 'NM', 4, 0);
  oDataElements.Add('Company Plan Code', 460, 'IS', 20, 42);
  oDataElements.Add('Policy Number', 461, 'ST', 15, 0);
  oDataElements.Add('Policy Deductible', 462, 'CP', 12, 0);
  oDataElements.Add('Policy Limit - Amount', 463, '-', 0, 0);
  oDataElements.Add('Policy Limit - Days', 464, 'NM', 4, 0);
  oDataElements.Add('Room Rate - Semi-Private', 465, '-', 0, 0);
  oDataElements.Add('Room Rate - Private', 466, '-', 0, 0);
  oDataElements.Add('Insured''s Employment Status', 467, 'CWE', 250, 66);
  oDataElements.Add('Insured''s Administrative Sex', 468, 'IS', 1, 1);
  oDataElements.Add('Insured''s Employer''s Address', 469, 'XAD', 250, 0);
  oDataElements.Add('Verification Status', 470, 'ST', 2, 0);
  oDataElements.Add('Prior Insurance Plan ID', 471, 'IS', 8, 72);
  oDataElements.Add('Insured''s Employee ID', 472, 'CX', 250, 0);
  oDataElements.Add('Insured''s Social Security Number', 473, 'ST', 11, 0);
  oDataElements.Add('Insured''s Employer''s Name and ID', 474, 'XCN', 250, 0);
  oDataElements.Add('Employer Information Data', 475, 'IS', 1, 139);
  oDataElements.Add('Mail Claim Party', 476, 'IS', 1, 137);
  oDataElements.Add('Medicare Health Ins Card Number', 477, 'ST', 15, 0);
  oDataElements.Add('Medicaid Case Name', 478, 'XPN', 250, 0);
  oDataElements.Add('Medicaid Case Number', 479, 'ST', 15, 0);
  oDataElements.Add('Military Sponsor Name', 480, 'XPN', 250, 0);
  oDataElements.Add('Military ID Number', 481, 'ST', 20, 0);
  oDataElements.Add('Dependent Of Military Recipient', 482, 'CWE', 250, 342);
  oDataElements.Add('Military Organization', 483, 'ST', 25, 0);
  oDataElements.Add('Military Station', 484, 'ST', 25, 0);
  oDataElements.Add('Military Service', 485, 'IS', 14, 140);
  oDataElements.Add('Military Rank/Grade', 486, 'IS', 2, 141);
  oDataElements.Add('Military Status', 487, 'IS', 3, 142);
  oDataElements.Add('Military Retire Date', 488, 'DT', 8, 0);
  oDataElements.Add('Military Non-Avail Cert On File', 489, 'ID', 1, 136);
  oDataElements.Add('Baby Coverage', 490, 'ID', 1, 136);
  oDataElements.Add('Combine Baby Bill', 491, 'ID', 1, 136);
  oDataElements.Add('Blood Deductible', 492, 'ST', 1, 0);
  oDataElements.Add('Special Coverage Approval Name', 493, 'XPN', 250, 0);
  oDataElements.Add('Special Coverage Approval Title', 494, 'ST', 30, 0);
  oDataElements.Add('Non-Covered Insurance Code', 495, 'IS', 8, 143);
  oDataElements.Add('Payor ID', 496, 'CX', 250, 0);
  oDataElements.Add('Payor Subscriber ID', 497, 'CX', 250, 0);
  oDataElements.Add('Eligibility Source', 498, 'IS', 1, 144);
  oDataElements.Add('Room Coverage Type/Amount', 499, 'RMC', 82, 0);
  oDataElements.Add('Policy Type/Amount', 500, 'PTA', 56, 0);
  oDataElements.Add('Daily Deductible', 501, 'DDI', 25, 0);
  oDataElements.Add('Set ID - IN3', 502, 'SI', 4, 0);
  oDataElements.Add('Certification Number', 503, 'CX', 250, 0);
  oDataElements.Add('Certified By', 504, 'XCN', 250, 0);
  oDataElements.Add('Certification Required', 505, 'ID', 1, 136);
  oDataElements.Add('Penalty', 506, 'MOP', 23, 0);
End;

procedure LoadDataElements2(oDataElements : THL7V2ModelDataElements);
Begin
  oDataElements.Add('Certification Date/Time', 507, 'DTM', 24, 0);
  oDataElements.Add('Certification Modify Date/Time', 508, 'DTM', 24, 0);
  oDataElements.Add('Operator', 509, 'XCN', 250, 0);
  oDataElements.Add('Certification Begin Date', 510, 'DT', 8, 0);
  oDataElements.Add('Certification End Date', 511, 'DT', 8, 0);
  oDataElements.Add('Days', 512, 'DTN', 6, 0);
  oDataElements.Add('Non-Concur Code/Description', 513, 'CWE', 250, 233);
  oDataElements.Add('Non-Concur Effective Date/Time', 514, 'DTM', 24, 0);
  oDataElements.Add('Physician Reviewer', 515, 'XCN', 250, 10);
  oDataElements.Add('Certification Contact', 516, 'ST', 48, 0);
  oDataElements.Add('Certification Contact Phone Number', 517, 'XTN', 250, 0);
  oDataElements.Add('Appeal Reason', 518, 'CWE', 250, 345);
  oDataElements.Add('Certification Agency', 519, 'CWE', 250, 346);
  oDataElements.Add('Certification Agency Phone Number', 520, 'XTN', 250, 0);
  oDataElements.Add('Pre-Certification Requirement', 521, 'ICD', 40, 0);
  oDataElements.Add('Case Manager', 522, 'ST', 48, 0);
  oDataElements.Add('Second Opinion Date', 523, 'DT', 8, 0);
  oDataElements.Add('Second Opinion Status', 524, 'IS', 1, 151);
  oDataElements.Add('Second Opinion Documentation Received', 525, 'IS', 1, 152);
  oDataElements.Add('Second Opinion Physician', 526, 'XCN', 250, 10);
  oDataElements.Add('Accident Date/Time', 527, 'DTM', 24, 0);
  oDataElements.Add('Accident Code', 528, 'CWE', 250, 50);
  oDataElements.Add('Accident Location', 529, 'ST', 25, 0);
  oDataElements.Add('Set ID - UB1', 530, 'SI', 4, 0);
  oDataElements.Add('Blood Deductible', 531, '-', 0, 0);
  oDataElements.Add('Blood Furnished-Pints', 532, 'NM', 2, 0);
  oDataElements.Add('Blood Replaced-Pints', 533, 'NM', 2, 0);
  oDataElements.Add('Blood Not Replaced-Pints', 534, 'NM', 2, 0);
  oDataElements.Add('Co-Insurance Days', 535, 'NM', 0, 0);
  oDataElements.Add('Condition Code', 536, 'IS', 0, 43);
  oDataElements.Add('Covered Days', 537, 'NM', 0, 0);
  oDataElements.Add('Non Covered Days', 538, 'NM', 0, 0);
  oDataElements.Add('Value Amount & Code', 539, 'UVC', 0, 0);
  oDataElements.Add('Number Of Grace Days', 540, 'NM', 2, 0);
  oDataElements.Add('Special Program Indicator', 541, 'CWE', 250, 348);
  oDataElements.Add('PSRO/UR Approval Indicator', 542, 'CWE', 250, 349);
  oDataElements.Add('PSRO/UR Approved Stay-Fm', 543, 'DT', 8, 0);
  oDataElements.Add('PSRO/UR Approved Stay-To', 544, 'DT', 8, 0);
  oDataElements.Add('Occurrence', 545, 'OCD', 0, 0);
  oDataElements.Add('Occurrence Span', 546, 'CWE', 0, 351);
  oDataElements.Add('Occur Span Start Date', 547, 'DT', 0, 0);
  oDataElements.Add('Occur Span End Date', 548, 'DT', 0, 0);
  oDataElements.Add('UB-82 Locator 2', 549, 'ST', 0, 0);
  oDataElements.Add('UB-82 Locator 9', 550, 'ST', 0, 0);
  oDataElements.Add('UB-82 Locator 27', 551, 'ST', 0, 0);
  oDataElements.Add('UB-82 Locator 45', 552, 'ST', 0, 0);
  oDataElements.Add('Set ID - UB2', 553, 'SI', 4, 0);
  oDataElements.Add('Co-Insurance Days (9)', 554, 'ST', 3, 0);
  oDataElements.Add('Condition Code (24-30)', 555, 'IS', 2, 43);
  oDataElements.Add('Covered Days (7)', 556, 'ST', 3, 0);
  oDataElements.Add('Non-Covered Days (8)', 557, 'ST', 4, 0);
  oDataElements.Add('Value Amount & Code', 558, 'UVC', 41, 0);
  oDataElements.Add('Occurrence Code & Date (32-35)', 559, 'OCD', 259, 0);
  oDataElements.Add('Occurrence Span Code/Dates (36)', 560, 'OSP', 268, 0);
  oDataElements.Add('UB92 Locator 2 (State)', 561, 'ST', 29, 0);
  oDataElements.Add('UB92 Locator 11 (State)', 562, 'ST', 12, 0);
  oDataElements.Add('UB92 Locator 31 (National)', 563, 'ST', 5, 0);
  oDataElements.Add('Document Control Number', 564, 'ST', 23, 0);
  oDataElements.Add('UB92 Locator 49 (National)', 565, 'ST', 4, 0);
  oDataElements.Add('UB92 Locator 56 (State)', 566, 'ST', 14, 0);
  oDataElements.Add('UB92 Locator 57 (National)', 567, 'ST', 27, 0);
  oDataElements.Add('UB92 Locator 78 (State)', 568, 'ST', 2, 0);
  oDataElements.Add('Set ID - OBX', 569, 'SI', 4, 0);
  oDataElements.Add('Value Type', 570, 'ID', 3, 125);
  oDataElements.Add('Observation Identifier', 571, 'CWE', 705, 9999);
  oDataElements.Add('Observation Sub-ID', 572, 'ST', 20, 0);
  oDataElements.Add('Observation Value', 573, 'varies', 65536, 0);
  oDataElements.Add('Units', 574, 'CWE', 705, 9999);
  oDataElements.Add('References Range', 575, 'ST', 60, 0);
  oDataElements.Add('Abnormal Flags', 576, 'IS', 5, 78);
  oDataElements.Add('Probability', 577, 'NM', 5, 0);
  oDataElements.Add('Nature of Abnormal Test', 578, 'ID', 2, 80);
  oDataElements.Add('Observation Result Status', 579, 'ID', 1, 85);
  oDataElements.Add('Effective Date of Reference Range', 580, 'DTM', 24, 0);
  oDataElements.Add('User Defined Access Checks', 581, 'ST', 20, 0);
  oDataElements.Add('Date/Time of the Observation', 582, 'DTM', 24, 0);
  oDataElements.Add('Producer''s ID', 583, 'CWE', 705, 9999);
  oDataElements.Add('Responsible Observer', 584, 'XCN', 3220, 0);
  oDataElements.Add('Sequence Number - Test/Observation Master File', 586, 'NM', 4, 0);
  oDataElements.Add('Producer''s Service/Test/Observation ID', 587, 'CWE', 250, 9999);
  oDataElements.Add('Permitted Data Types', 588, 'ID', 12, 125);
  oDataElements.Add('Specimen Required', 589, 'ID', 1, 136);
  oDataElements.Add('Producer ID', 590, 'CWE', 250, 9999);
  oDataElements.Add('Observation Description', 591, 'TX', 200, 0);
  oDataElements.Add('Other Service/Test/Observation IDs for the Observation', 592, 'CWE', 250, 9999);
  oDataElements.Add('Other Names', 593, 'ST', 200, 0);
  oDataElements.Add('Preferred Report Name for the Observation', 594, 'ST', 30, 0);
  oDataElements.Add('Preferred Short Name or Mnemonic for Observation', 595, 'ST', 8, 0);
  oDataElements.Add('Preferred Long Name for the Observation', 596, 'ST', 200, 0);
  oDataElements.Add('Orderability', 597, 'ID', 1, 136);
  oDataElements.Add('Identity of Instrument Used to Perform this Study', 598, 'CWE', 250, 9999);
  oDataElements.Add('Coded Representation of Method', 599, 'CWE', 250, 9999);
  oDataElements.Add('Portable Device Indicator', 600, 'ID', 1, 136);
  oDataElements.Add('Observation Producing Department/Section', 601, 'CWE', 250, 9999);
  oDataElements.Add('Telephone Number of Section', 602, 'XTN', 250, 0);
  oDataElements.Add('Nature of Service/Test/Observation', 603, 'IS', 1, 174);
  oDataElements.Add('Report Subheader', 604, 'CWE', 250, 9999);
  oDataElements.Add('Report Display Order', 605, 'ST', 20, 0);
  oDataElements.Add('Date/Time Stamp for any change in Definition for the Observation', 606, 'DTM', 24, 0);
  oDataElements.Add('Effective Date/Time of Change', 607, 'DTM', 24, 0);
  oDataElements.Add('Typical Turn-Around Time', 608, 'NM', 20, 0);
  oDataElements.Add('Processing Time', 609, 'NM', 20, 0);
  oDataElements.Add('Processing Priority', 610, 'ID', 40, 168);
  oDataElements.Add('Reporting Priority', 611, 'ID', 5, 169);
  oDataElements.Add('Outside Site(s) Where Observation may be Performed', 612, 'CWE', 250, 9999);
  oDataElements.Add('Address of Outside Site(s)', 613, 'XAD', 250, 0);
  oDataElements.Add('Phone Number of Outside Site', 614, 'XTN', 250, 0);
  oDataElements.Add('Confidentiality Code', 615, 'CWE', 250, 177);
  oDataElements.Add('Observations Required to Interpret the Observation', 616, 'CWE', 250, 9999);
  oDataElements.Add('Interpretation of Observations', 617, 'TX', 65536, 0);
  oDataElements.Add('Contraindications to Observations', 618, 'CWE', 250, 9999);
  oDataElements.Add('Reflex Tests/Observations', 619, 'CWE', 250, 9999);
  oDataElements.Add('Rules that Trigger Reflex Testing', 620, 'TX', 80, 0);
  oDataElements.Add('Fixed Canned Message', 621, 'CWE', 250, 9999);
  oDataElements.Add('Patient Preparation', 622, 'TX', 200, 0);
  oDataElements.Add('Procedure Medication', 623, 'CWE', 250, 9999);
  oDataElements.Add('Factors that may Affect the Observation', 624, 'TX', 200, 0);
  oDataElements.Add('Service/Test/Observation Performance Schedule', 625, 'ST', 60, 0);
  oDataElements.Add('Description of Test Methods', 626, 'TX', 65536, 0);
  oDataElements.Add('Units of Measure', 627, 'CWE', 250, 9999);
  oDataElements.Add('Range of Decimal Precision', 628, 'NM', 10, 0);
  oDataElements.Add('Corresponding SI Units of Measure', 629, 'CWE', 250, 9999);
  oDataElements.Add('SI Conversion Factor', 630, 'TX', 60, 0);
  oDataElements.Add('Reference (Normal) Range for Ordinal and Continuous Observations', 631, 'RFR', 250, 0);
  oDataElements.Add('Critical Range for Ordinal and Continuous Observations', 632, 'RFR', 205, 0);
  oDataElements.Add('Absolute Range for Ordinal and Continuous Observations', 633, 'RFR', 250, 0);
  oDataElements.Add('Delta Check Criteria', 634, 'DLT', 250, 0);
  oDataElements.Add('Minimum Meaningful Increments', 635, 'NM', 20, 0);
  oDataElements.Add('Preferred Coding System', 636, 'CWE', 250, 9999);
  oDataElements.Add('Valid Coded "Answers"', 637, 'CWE', 250, 9999);
  oDataElements.Add('Normal Text/Codes for Categorical Observations', 638, 'CWE', 250, 9999);
  oDataElements.Add('Abnormal Text/Codes for Categorical Observations', 639, 'CWE', 250, 9999);
  oDataElements.Add('Critical Text/Codes for Categorical Observations', 640, 'CWE', 250, 9999);
  oDataElements.Add('Derived Specimen', 642, 'ID', 1, 170);
  oDataElements.Add('Container Description', 643, 'TX', 60, 0);
  oDataElements.Add('Container Volume', 644, 'NM', 20, 0);
  oDataElements.Add('Container Units', 645, 'CWE', 250, 9999);
  oDataElements.Add('Specimen', 646, 'CWE', 250, 9999);
  oDataElements.Add('Additive', 647, 'CWE', 705, 371);
  oDataElements.Add('Preparation', 648, 'TX', 10240, 0);
  oDataElements.Add('Special Handling Requirements', 649, 'TX', 10240, 0);
  oDataElements.Add('Normal Collection Volume', 650, 'CQ', 20, 0);
  oDataElements.Add('Minimum Collection Volume', 651, 'CQ', 20, 0);
  oDataElements.Add('Specimen Requirements', 652, 'TX', 10240, 0);
  oDataElements.Add('Specimen Priorities', 653, 'ID', 1, 27);
  oDataElements.Add('Specimen Retention Time', 654, 'CQ', 20, 0);
  oDataElements.Add('Test/Observations Included Within an Ordered Test Battery', 655, 'CWE', 250, 9999);
  oDataElements.Add('Observation ID Suffixes', 656, 'ST', 250, 0);
  oDataElements.Add('Derivation Rule', 657, 'TX', 10240, 0);
  oDataElements.Add('Master File Identifier', 658, 'CWE', 250, 175);
  oDataElements.Add('Master File Application Identifier', 659, 'HD', 180, 361);
  oDataElements.Add('File-Level Event Code', 660, 'ID', 3, 178);
  oDataElements.Add('Entered Date/Time', 661, 'DTM', 24, 0);
  oDataElements.Add('Effective Date/Time', 662, 'DTM', 24, 0);
  oDataElements.Add('Response Level Code', 663, 'ID', 2, 179);
  oDataElements.Add('Record-Level Event Code', 664, 'ID', 3, 180);
  oDataElements.Add('MFN Control ID', 665, 'ST', 20, 0);
  oDataElements.Add('Primary Key Value - MFE', 667, 'varies', 200, 9999);
  oDataElements.Add('Event Completion Date/Time', 668, 'DTM', 24, 0);
  oDataElements.Add('MFN Record Level Error Return', 669, 'CWE', 250, 181);
  oDataElements.Add('Primary Key Value - STF', 671, 'CWE', 250, 9999);
  oDataElements.Add('Staff Identifier List', 672, 'CX', 250, 61);
  oDataElements.Add('Staff Name', 673, 'XPN', 250, 0);
  oDataElements.Add('Staff Type', 674, 'IS', 2, 182);
  oDataElements.Add('Active/Inactive Flag', 675, 'ID', 1, 183);
  oDataElements.Add('Department', 676, 'CWE', 250, 184);
  oDataElements.Add('Hospital Service - STF', 677, 'CWE', 250, 69);
  oDataElements.Add('Phone', 678, 'XTN', 250, 0);
  oDataElements.Add('Office/Home Address/Birthplace', 679, 'XAD', 250, 0);
  oDataElements.Add('Institution Activation Date', 680, 'DIN', 276, 537);
  oDataElements.Add('Institution Inactivation Date', 681, 'DIN', 276, 537);
  oDataElements.Add('Backup Person ID', 682, 'CWE', 250, 0);
  oDataElements.Add('E-Mail Address', 683, 'ST', 40, 0);
  oDataElements.Add('Preferred Method of Contact', 684, 'CWE', 705, 185);
  oDataElements.Add('Primary Key Value - PRA', 685, 'CWE', 250, 9999);
  oDataElements.Add('Practitioner Group', 686, 'CWE', 250, 358);
  oDataElements.Add('Practitioner Category', 687, 'IS', 3, 186);
  oDataElements.Add('Provider Billing', 688, 'ID', 1, 187);
  oDataElements.Add('Specialty', 689, 'SPD', 112, 337);
  oDataElements.Add('Practitioner ID Numbers', 690, 'PLN', 0, 338);
  oDataElements.Add('Privileges', 691, 'PIP', 770, 0);
  oDataElements.Add('Character Set', 692, 'ID', 16, 211);
  oDataElements.Add('Principal Language Of Message', 693, 'CWE', 250, 0);
  oDataElements.Add('When Quantity/Timing Qualifier', 694, 'TQ', 0, 0);
  oDataElements.Add('R/U Quantity/Timing Qualifier', 695, 'TQ', 0, 0);
  oDataElements.Add('Query Tag', 696, 'ST', 32, 0);
  oDataElements.Add('Number of Columns per Row', 701, 'NM', 3, 0);
  oDataElements.Add('Column Description', 702, 'RCD', 40, 440);
  oDataElements.Add('Column Value', 703, 'varies', 99999, 0);
  oDataElements.Add('Query Response Status', 708, 'ID', 2, 208);
  oDataElements.Add('Estimated Length of Inpatient Stay', 711, 'NM', 3, 0);
  oDataElements.Add('Actual Length of Inpatient Stay', 712, 'NM', 3, 0);
  oDataElements.Add('Visit Description', 713, 'ST', 50, 0);
  oDataElements.Add('Referral Source Code', 714, 'XCN', 250, 0);
  oDataElements.Add('Previous Service Date', 715, 'DT', 8, 0);
  oDataElements.Add('Employment Illness Related Indicator', 716, 'ID', 1, 136);
  oDataElements.Add('Purge Status Code', 717, 'IS', 1, 213);
  oDataElements.Add('Purge Status Date', 718, 'DT', 8, 0);
  oDataElements.Add('Special Program Code', 719, 'IS', 2, 214);
  oDataElements.Add('Retention Indicator', 720, 'ID', 1, 136);
  oDataElements.Add('Expected Number of Insurance Plans', 721, 'NM', 1, 0);
  oDataElements.Add('Visit Publicity Code', 722, 'IS', 1, 215);
  oDataElements.Add('Visit Protection Indicator', 723, 'ID', 0, 136);
  oDataElements.Add('Clinic Organization Name', 724, 'XON', 250, 0);
  oDataElements.Add('Patient Status Code', 725, 'IS', 2, 216);
  oDataElements.Add('Visit Priority Code', 726, 'IS', 1, 217);
  oDataElements.Add('Previous Treatment Date', 727, 'DT', 8, 0);
  oDataElements.Add('Expected Discharge Disposition', 728, 'IS', 2, 112);
  oDataElements.Add('Signature on File Date', 729, 'DT', 8, 0);
  oDataElements.Add('First Similar Illness Date', 730, 'DT', 8, 0);
  oDataElements.Add('Patient Charge Adjustment Code', 731, 'CWE', 705, 218);
  oDataElements.Add('Recurring Service Code', 732, 'IS', 2, 219);
  oDataElements.Add('Billing Media Code', 733, 'ID', 1, 136);
  oDataElements.Add('Expected Surgery Date and Time', 734, 'DTM', 24, 0);
  oDataElements.Add('Military Partnership Code', 735, 'ID', 1, 136);
  oDataElements.Add('Military Non-Availability Code', 736, 'ID', 1, 136);
  oDataElements.Add('Newborn Baby Indicator', 737, 'ID', 1, 136);
  oDataElements.Add('Baby Detained Indicator', 738, 'ID', 1, 136);
  oDataElements.Add('Nationality', 739, 'CWE', 0, 212);
  oDataElements.Add('Patient Death Date and Time', 740, 'DTM', 24, 0);
  oDataElements.Add('Patient Death Indicator', 741, 'ID', 1, 136);
  oDataElements.Add('Living Arrangement', 742, 'IS', 2, 220);
  oDataElements.Add('Publicity Code', 743, 'CWE', 705, 215);
  oDataElements.Add('Protection Indicator', 744, 'ID', 0, 136);
  oDataElements.Add('Student Indicator', 745, 'IS', 2, 231);
  oDataElements.Add('Contact Reason', 747, 'CWE', 705, 222);
  oDataElements.Add('Contact Person''s Name', 748, 'XPN', 250, 200);
  oDataElements.Add('Contact Person''s Telephone Number', 749, 'XTN', 250, 0);
  oDataElements.Add('Contact Person''s Address', 750, 'XAD', 250, 0);
  oDataElements.Add('Next of Kin/Associated Party''s Identifiers', 751, 'CX', 250, 0);
  oDataElements.Add('Job Status', 752, 'IS', 2, 311);
  oDataElements.Add('Handicap', 753, 'IS', 2, 295);
  oDataElements.Add('Contact Person Social Security Number', 754, 'ST', 16, 0);
  oDataElements.Add('Living Dependency', 755, 'IS', 2, 223);
  oDataElements.Add('Patient Primary Facility', 756, 'XON', 250, 204);
  oDataElements.Add('Patient Primary Care Provider Name & ID No.', 757, 'XCN', 0, 0);
  oDataElements.Add('Living Will Code', 759, 'IS', 2, 315);
  oDataElements.Add('Organ Donor Code', 760, 'IS', 2, 316);
  oDataElements.Add('Separate Bill', 761, 'ID', 1, 136);
  oDataElements.Add('Duplicate Patient', 762, 'CX', 250, 0);
  oDataElements.Add('Segment Action Code', 763, 'ID', 3, 206);
  oDataElements.Add('Segment Unique Key', 764, 'EI', 80, 0);
  oDataElements.Add('Entered By Code', 765, 'XCN', 250, 0);
  oDataElements.Add('Diagnosis Classification', 766, 'IS', 3, 228);
  oDataElements.Add('Confidential Indicator', 767, 'ID', 1, 136);
  oDataElements.Add('Attestation Date/Time', 768, 'DTM', 24, 0);
  oDataElements.Add('DRG Assigned Date/Time', 769, 'DTM', 24, 0);
  oDataElements.Add('DRG Payor', 770, 'IS', 1, 229);
  oDataElements.Add('Outlier Reimbursement', 771, 'CP', 9, 0);
  oDataElements.Add('Associated Diagnosis Code', 772, 'CWE', 250, 51);
  oDataElements.Add('Guarantor Billing Hold Flag', 773, 'ID', 1, 136);
  oDataElements.Add('Guarantor Credit Rating Code', 774, 'CWE', 250, 341);
  oDataElements.Add('Guarantor Death Date And Time', 775, 'DTM', 24, 0);
  oDataElements.Add('Guarantor Death Flag', 776, 'ID', 1, 136);
  oDataElements.Add('Guarantor Charge Adjustment Code', 777, 'CWE', 250, 218);
  oDataElements.Add('Guarantor Household Annual Income', 778, 'CP', 10, 0);
  oDataElements.Add('Guarantor Household Size', 779, 'NM', 3, 0);
  oDataElements.Add('Guarantor Employer ID Number', 780, 'CX', 250, 0);
  oDataElements.Add('Guarantor Marital Status Code', 781, 'CWE', 250, 2);
  oDataElements.Add('Guarantor Hire Effective Date', 782, 'DT', 8, 0);
  oDataElements.Add('Employment Stop Date', 783, 'DT', 8, 0);
  oDataElements.Add('Contact Relationship', 784, 'IS', 3, 63);
  oDataElements.Add('Job Title', 785, 'ST', 20, 0);
  oDataElements.Add('Job Code/Class', 786, 'JCC', 20, 0);
  oDataElements.Add('Insured''s Employment Start Date', 787, 'DT', 8, 0);
  oDataElements.Add('Employer Contact Person Name', 789, 'XPN', 250, 0);
  oDataElements.Add('Employer Contact Person Phone Number', 790, 'XTN', 250, 0);
  oDataElements.Add('Employer Contact Reason', 791, 'IS', 2, 222);
  oDataElements.Add('Insured''s Contact Person''s Name', 792, 'XPN', 250, 0);
  oDataElements.Add('Insured''s Contact Person Phone Number', 793, 'XTN', 250, 0);
  oDataElements.Add('Insured''s Contact Person Reason', 794, 'IS', 2, 222);
  oDataElements.Add('Relationship to the Patient Start Date', 795, 'DT', 8, 0);
  oDataElements.Add('Relationship to the Patient Stop Date', 796, 'DT', 8, 0);
  oDataElements.Add('Insurance Co Contact Reason', 797, 'IS', 2, 232);
  oDataElements.Add('Insurance Co Contact Phone Number', 798, 'XTN', 250, 0);
  oDataElements.Add('Policy Scope', 799, 'IS', 2, 312);
  oDataElements.Add('Policy Source', 800, 'IS', 2, 313);
  oDataElements.Add('Patient Member Number', 801, 'CX', 250, 0);
  oDataElements.Add('Guarantor''s Relationship to Insured', 802, 'CWE', 250, 63);
  oDataElements.Add('Insured''s Phone Number - Home', 803, 'XTN', 250, 0);
  oDataElements.Add('Insured''s Employer Phone Number', 804, 'XTN', 250, 0);
  oDataElements.Add('Military Handicapped Program', 805, 'CWE', 250, 343);
  oDataElements.Add('Suspend Flag', 806, 'ID', 1, 136);
  oDataElements.Add('Copay Limit Flag', 807, 'ID', 1, 136);
  oDataElements.Add('Stoploss Limit Flag', 808, 'ID', 1, 136);
  oDataElements.Add('Insured Organization Name and ID', 809, 'XON', 250, 0);
  oDataElements.Add('Insured Employer Organization Name and ID', 810, 'XON', 250, 0);
  oDataElements.Add('Patient''s Relationship to Insured', 811, 'CWE', 705, 344);
  oDataElements.Add('Auto Accident State', 812, 'CWE', 0, 347);
  oDataElements.Add('Accident Job Related Indicator', 813, 'ID', 1, 136);
  oDataElements.Add('Accident Death Indicator', 814, 'ID', 12, 136);
  oDataElements.Add('Special Visit Count', 815, 'NM', 3, 0);
  oDataElements.Add('Action Code', 816, 'ID', 2, 287);
  oDataElements.Add('Action Date/Time', 817, 'DTM', 24, 0);
  oDataElements.Add('Goal ID', 818, 'CWE', 705, 0);
  oDataElements.Add('Goal Instance ID', 819, 'EI', 60, 0);
  oDataElements.Add('Episode of Care ID', 820, 'EI', 60, 0);
  oDataElements.Add('Goal List Priority', 821, 'NM', 60, 0);
  oDataElements.Add('Goal Established Date/Time', 822, 'DTM', 24, 0);
  oDataElements.Add('Security/Sensitivity', 823, 'CWE', 705, 0);
  oDataElements.Add('Expected Goal Achieve Date/Time', 824, 'DTM', 24, 0);
  oDataElements.Add('Goal Classification', 825, 'CWE', 705, 0);
  oDataElements.Add('Goal Management Discipline', 826, 'CWE', 705, 0);
  oDataElements.Add('Current Goal Review Status', 827, 'CWE', 705, 0);
  oDataElements.Add('Current Goal Review Date/Time', 828, 'DTM', 24, 0);
  oDataElements.Add('Next Goal Review Date/Time', 829, 'DTM', 24, 0);
  oDataElements.Add('Previous Goal Review Date/Time', 830, 'DTM', 24, 0);
  oDataElements.Add('Goal Review Interval', 831, 'TQ', 200, 0);
  oDataElements.Add('Goal Evaluation', 832, 'CWE', 705, 0);
  oDataElements.Add('Goal Evaluation Comment', 833, 'ST', 300, 0);
  oDataElements.Add('Goal Life Cycle Status', 834, 'CWE', 705, 0);
  oDataElements.Add('Goal Life Cycle Status Date/Time', 835, 'DTM', 24, 0);
  oDataElements.Add('Goal Target Type', 836, 'CWE', 705, 0);
  oDataElements.Add('Goal Target Name', 837, 'XPN', 250, 0);
  oDataElements.Add('Problem ID', 838, 'CWE', 705, 0);
  oDataElements.Add('Problem Instance ID', 839, 'EI', 60, 0);
  oDataElements.Add('Problem List Priority', 841, 'NM', 60, 0);
  oDataElements.Add('Problem Established Date/Time', 842, 'DTM', 24, 0);
  oDataElements.Add('Anticipated Problem Resolution Date/Time', 843, 'DTM', 24, 0);
  oDataElements.Add('Actual Problem Resolution Date/Time', 844, 'DTM', 24, 0);
  oDataElements.Add('Problem Classification', 845, 'CWE', 705, 0);
  oDataElements.Add('Problem Management Discipline', 846, 'CWE', 705, 0);
  oDataElements.Add('Problem Persistence', 847, 'CWE', 705, 0);
  oDataElements.Add('Problem Confirmation Status', 848, 'CWE', 705, 0);
  oDataElements.Add('Problem Life Cycle Status', 849, 'CWE', 705, 0);
  oDataElements.Add('Problem Life Cycle Status Date/Time', 850, 'DTM', 24, 0);
  oDataElements.Add('Problem Date of Onset', 851, 'DTM', 24, 0);
  oDataElements.Add('Problem Onset Text', 852, 'ST', 80, 0);
  oDataElements.Add('Problem Ranking', 853, 'CWE', 705, 0);
  oDataElements.Add('Certainty of Problem', 854, 'CWE', 705, 0);
  oDataElements.Add('Probability of Problem (0-1)', 855, 'NM', 5, 0);
  oDataElements.Add('Individual Awareness of Problem', 856, 'CWE', 705, 0);
  oDataElements.Add('Problem Prognosis', 857, 'CWE', 705, 0);
  oDataElements.Add('Individual Awareness of Prognosis', 858, 'CWE', 705, 0);
  oDataElements.Add('Family/Significant Other Awareness of Problem/Prognosis', 859, 'ST', 200, 0);
  oDataElements.Add('Placer Appointment ID', 860, 'EI', 75, 0);
  oDataElements.Add('Filler Appointment ID', 861, 'EI', 75, 0);
  oDataElements.Add('Occurrence Number', 862, 'NM', 5, 0);
  oDataElements.Add('Schedule ID', 864, 'CWE', 250, 0);
  oDataElements.Add('Request Event Reason', 865, 'CWE', 250, 0);
  oDataElements.Add('Appointment Reason', 866, 'CWE', 250, 276);
  oDataElements.Add('Appointment Type', 867, 'CWE', 250, 277);
  oDataElements.Add('Appointment Duration', 868, 'NM', 0, 0);
  oDataElements.Add('Appointment Duration Units', 869, 'CNE', 0, 0);
  oDataElements.Add('Requested Start Date/Time Range', 870, 'DR', 49, 0);
  oDataElements.Add('Priority-ARQ', 871, 'ST', 5, 0);
  oDataElements.Add('Repeating Interval', 872, 'RI', 100, 0);
  oDataElements.Add('Repeating Interval Duration', 873, 'ST', 5, 0);
  oDataElements.Add('Placer Contact Person', 874, 'XCN', 250, 0);
  oDataElements.Add('Placer Contact Phone Number', 875, 'XTN', 250, 0);
  oDataElements.Add('Placer Contact Address', 876, 'XAD', 250, 0);
  oDataElements.Add('Placer Contact Location', 877, 'PL', 80, 0);
  oDataElements.Add('Entered By Person', 878, 'XCN', 250, 0);
  oDataElements.Add('Entered By Phone Number', 879, 'XTN', 250, 0);
  oDataElements.Add('Entered By Location', 880, 'PL', 80, 0);
  oDataElements.Add('Parent Placer Appointment ID', 881, 'EI', 75, 0);
  oDataElements.Add('Parent Filler Appointment ID', 882, 'EI', 75, 0);
  oDataElements.Add('Event Reason', 883, 'CWE', 250, 0);
  oDataElements.Add('Appointment Timing Quantity', 884, 'TQ', 0, 0);
  oDataElements.Add('Filler Contact Person', 885, 'XCN', 250, 0);
  oDataElements.Add('Filler Contact Phone Number', 886, 'XTN', 250, 0);
  oDataElements.Add('Filler Contact Address', 887, 'XAD', 250, 0);
  oDataElements.Add('Filler Contact Location', 888, 'PL', 80, 0);
  oDataElements.Add('Filler Status Code', 889, 'CWE', 250, 278);
  oDataElements.Add('Set ID - AIS', 890, 'SI', 4, 0);
  oDataElements.Add('Start Date/Time Offset', 891, 'NM', 20, 0);
  oDataElements.Add('Start Date/Time Offset Units', 892, 'CNE', 250, 0);
  oDataElements.Add('Duration', 893, 'NM', 20, 0);
  oDataElements.Add('Duration Units', 894, 'CNE', 250, 0);
  oDataElements.Add('Allow Substitution Code', 895, 'IS', 10, 279);
  oDataElements.Add('Set ID - AIG', 896, 'SI', 4, 0);
  oDataElements.Add('Resource ID', 897, 'CWE', 250, 0);
  oDataElements.Add('Resource Type', 898, 'CWE', 250, 0);
  oDataElements.Add('Resource Group', 899, 'CWE', 250, 0);
  oDataElements.Add('Resource Quantity', 900, 'NM', 5, 0);
  oDataElements.Add('Resource Quantity Units', 901, 'CNE', 250, 0);
  oDataElements.Add('Set ID - AIL', 902, 'SI', 4, 0);
  oDataElements.Add('Location Resource ID', 903, 'PL', 80, 0);
  oDataElements.Add('Location Type - AIL', 904, 'CWE', 250, 305);
  oDataElements.Add('Location Group', 905, 'CWE', 250, 0);
  oDataElements.Add('Set ID - AIP', 906, 'SI', 4, 0);
  oDataElements.Add('Resource Type', 907, 'CWE', 250, 182);
  oDataElements.Add('Time Selection Criteria', 908, 'SCV', 80, 294);
  oDataElements.Add('Resource Selection Criteria', 909, 'SCV', 80, 294);
  oDataElements.Add('Location Selection Criteria', 910, 'SCV', 80, 294);
  oDataElements.Add('Slot Spacing Criteria', 911, 'NM', 5, 0);
  oDataElements.Add('Filler Override Criteria', 912, 'SCV', 80, 0);
  oDataElements.Add('Personnel Resource ID', 913, 'XCN', 250, 0);
  oDataElements.Add('Set ID- TXA', 914, 'SI', 4, 0);
  oDataElements.Add('Document Type', 915, 'IS', 30, 270);
  oDataElements.Add('Document Content Presentation', 916, 'ID', 2, 191);
  oDataElements.Add('Activity Date/Time', 917, 'DTM', 24, 0);
  oDataElements.Add('Primary Activity Provider Code/Name', 918, 'XCN', 250, 0);
  oDataElements.Add('Origination Date/Time', 919, 'DTM', 24, 0);
  oDataElements.Add('Transcription Date/Time', 920, 'DTM', 24, 0);
  oDataElements.Add('Edit Date/Time', 921, 'DTM', 24, 0);
  oDataElements.Add('Originator Code/Name', 922, 'XCN', 250, 0);
  oDataElements.Add('Assigned Document Authenticator', 923, 'XCN', 250, 0);
  oDataElements.Add('Transcriptionist Code/Name', 924, 'XCN', 250, 0);
  oDataElements.Add('Unique Document Number', 925, 'EI', 427, 0);
  oDataElements.Add('Parent Document Number', 926, 'EI', 427, 0);
  oDataElements.Add('Unique Document File Name', 927, 'ST', 30, 0);
  oDataElements.Add('Document Completion Status', 928, 'ID', 2, 271);
  oDataElements.Add('Document Confidentiality Status', 929, 'ID', 2, 272);
  oDataElements.Add('Document Availability Status', 930, 'ID', 2, 273);
  oDataElements.Add('Document Storage Status', 932, 'ID', 2, 275);
  oDataElements.Add('Document Change Reason', 933, 'ST', 30, 0);
  oDataElements.Add('Authentication Person, Time Stamp (set)', 934, 'PPN', 250, 0);
  oDataElements.Add('Distributed Copies (Code and Name of Recipient(s) )', 935, 'XCN', 250, 0);
  oDataElements.Add('Observation Method', 936, 'CWE', 705, 9999);
  oDataElements.Add('Kind of Quantity Observed', 937, 'CWE', 250, 254);
  oDataElements.Add('Point Versus Interval', 938, 'CWE', 250, 255);
  oDataElements.Add('Challenge Information', 939, 'TX', 200, 256);
  oDataElements.Add('Relationship Modifier', 940, 'CWE', 250, 258);
  oDataElements.Add('Target Anatomic Site Of Test', 941, 'CWE', 250, 9999);
  oDataElements.Add('Modality Of Imaging Measurement', 942, 'CWE', 250, 259);
  oDataElements.Add('Primary Key Value - LRL', 943, 'PL', 200, 0);
  oDataElements.Add('Location Description', 944, 'ST', 48, 0);
  oDataElements.Add('Location Type - LOC', 945, 'IS', 2, 260);
  oDataElements.Add('Organization Name - LOC', 947, 'XON', 250, 0);
  oDataElements.Add('Location Address', 948, 'XAD', 250, 0);
  oDataElements.Add('Location Phone', 949, 'XTN', 250, 0);
  oDataElements.Add('License Number', 951, 'CWE', 250, 461);
  oDataElements.Add('Location Equipment', 953, 'IS', 3, 261);
  oDataElements.Add('Primary Key Value - LDP', 963, 'PL', 200, 0);
  oDataElements.Add('Location Department', 964, 'CWE', 250, 264);
  oDataElements.Add('Location Service', 965, 'IS', 3, 69);
  oDataElements.Add('Specialty Type', 966, 'CWE', 250, 265);
  oDataElements.Add('Valid Patient Classes', 967, 'IS', 1, 4);
  oDataElements.Add('Activation Date - LDP', 969, 'DTM', 24, 0);
  oDataElements.Add('Inactivation Date - LDP', 970, 'DTM', 24, 0);
  oDataElements.Add('Inactivated Reason', 971, 'ST', 80, 0);
  oDataElements.Add('Visiting Hours', 976, 'VH', 80, 267);
  oDataElements.Add('Contact Phone', 978, 'XTN', 250, 0);
  oDataElements.Add('Primary Key Value - LCC', 979, 'PL', 200, 0);
  oDataElements.Add('Accommodation Type', 980, 'CWE', 250, 129);
  oDataElements.Add('Charge Code', 981, 'CWE', 250, 132);
  oDataElements.Add('Primary Key Value-PRC', 982, 'CWE', 250, 132);
  oDataElements.Add('Charge Code Alias', 983, 'CWE', 250, 0);
  oDataElements.Add('Charge Description Short', 984, 'ST', 20, 0);
  oDataElements.Add('Charge Description Long', 985, 'ST', 250, 0);
  oDataElements.Add('Description Override Indicator', 986, 'IS', 1, 268);
  oDataElements.Add('Exploding Charges', 987, 'CWE', 250, 132);
  oDataElements.Add('Cost', 989, 'MO', 12, 0);
  oDataElements.Add('Inventory Number', 990, 'CWE', 250, 463);
  oDataElements.Add('Resource Load', 991, 'NM', 12, 0);
  oDataElements.Add('Contract Number', 992, 'CX', 250, 0);
  oDataElements.Add('Contract Organization', 993, 'XON', 250, 0);
  oDataElements.Add('Room Fee Indicator', 994, 'ID', 1, 136);
  oDataElements.Add('Facility ID-PRC', 995, 'CWE', 250, 464);
  oDataElements.Add('Price', 998, 'CP', 12, 0);
  oDataElements.Add('Formula', 999, 'ST', 200, 0);
  oDataElements.Add('Minimum Quantity', 1000, 'NM', 4, 0);
  oDataElements.Add('Maximum Quantity', 1001, 'NM', 4, 0);
  oDataElements.Add('Minimum Price', 1002, 'MO', 12, 0);
  oDataElements.Add('Maximum Price', 1003, 'MO', 12, 0);
  oDataElements.Add('Effective Start Date', 1004, 'DTM', 24, 0);
  oDataElements.Add('Effective End Date', 1005, 'DTM', 24, 0);
  oDataElements.Add('Price Override Flag', 1006, 'IS', 1, 268);
  oDataElements.Add('Billing Category', 1007, 'CWE', 250, 293);
  oDataElements.Add('Chargeable Flag', 1008, 'ID', 1, 136);
  oDataElements.Add('Charge on Indicator', 1009, 'IS', 1, 269);
  oDataElements.Add('Set ID - CM0', 1010, 'SI', 4, 0);
  oDataElements.Add('Sponsor Study ID', 1011, 'EI', 427, 0);
  oDataElements.Add('Title of Study', 1013, 'ST', 300, 0);
  oDataElements.Add('Chairman of Study', 1014, 'XCN', 250, 0);
  oDataElements.Add('Last IRB Approval Date', 1015, 'DT', 8, 0);
  oDataElements.Add('Total Accrual to Date', 1016, 'NM', 8, 0);
  oDataElements.Add('Last Accrual Date', 1017, 'DT', 8, 0);
  oDataElements.Add('Contact for Study', 1018, 'XCN', 250, 0);
  oDataElements.Add('Contact''s Telephone Number', 1019, 'XTN', 250, 0);
  oDataElements.Add('Contact''s Address', 1020, 'XAD', 250, 0);
  oDataElements.Add('Set ID - CM1', 1021, 'SI', 4, 0);
  oDataElements.Add('Study Phase Identifier', 1022, 'CWE', 705, 0);
  oDataElements.Add('Description of Study Phase', 1023, 'ST', 300, 0);
  oDataElements.Add('Set ID- CM2', 1024, 'SI', 4, 0);
  oDataElements.Add('Scheduled Time Point', 1025, 'CWE', 250, 0);
  oDataElements.Add('Description of Time Point', 1026, 'ST', 300, 0);
  oDataElements.Add('Events Scheduled This Time Point', 1027, 'CWE', 250, 0);
  oDataElements.Add('Number of Sample Containers *', 1028, 'NM', 16, 0);
  oDataElements.Add('Transport Logistics of Collected Sample *', 1029, 'CWE', 705, 9999);
  oDataElements.Add('Collector''s Comment *', 1030, 'CWE', 705, 9999);
  oDataElements.Add('Transport Arrangement Responsibility', 1031, 'CWE', 705, 9999);
  oDataElements.Add('Transport Arranged', 1032, 'ID', 30, 224);
  oDataElements.Add('Escort Required', 1033, 'ID', 1, 225);
  oDataElements.Add('Planned Patient Transport Comment', 1034, 'CWE', 705, 9999);
  oDataElements.Add('Alternate Study ID', 1036, 'EI', 427, 0);
  oDataElements.Add('Institution Registering the Patient', 1037, 'CWE', 705, 9999);
  oDataElements.Add('Sponsor Patient ID', 1038, 'CX', 1913, 0);
  oDataElements.Add('Alternate Patient ID - CSR', 1039, 'CX', 1913, 0);
  oDataElements.Add('Date/Time of Patient Study Registration', 1040, 'DTM', 24, 0);
  oDataElements.Add('Person Performing Study Registration', 1041, 'XCN', 3220, 0);
  oDataElements.Add('Study Authorizing Provider', 1042, 'XCN', 3220, 0);
  oDataElements.Add('Date/time Patient Study Consent Signed', 1043, 'DTM', 24, 0);
  oDataElements.Add('Patient Study Eligibility Status', 1044, 'CWE', 705, 9999);
  oDataElements.Add('Study Randomization Date/time', 1045, 'DTM', 24, 0);
  oDataElements.Add('Randomized Study Arm', 1046, 'CWE', 705, 9999);
  oDataElements.Add('Stratum for Study Randomization', 1047, 'CWE', 705, 9999);
  oDataElements.Add('Patient Evaluability Status', 1048, 'CWE', 705, 9999);
  oDataElements.Add('Date/time Ended Study', 1049, 'DTM', 24, 0);
End;

procedure LoadDataElements3(oDataElements : THL7V2ModelDataElements);
Begin
  oDataElements.Add('Reason Ended Study', 1050, 'CWE', 705, 9999);
  oDataElements.Add('Date/time Study Phase Began', 1052, 'DTM', 24, 0);
  oDataElements.Add('Date/time Study Phase Ended', 1053, 'DTM', 24, 0);
  oDataElements.Add('Study Phase Evaluability', 1054, 'CWE', 705, 9999);
  oDataElements.Add('Study Scheduled Time Point', 1055, 'CWE', 705, 9999);
  oDataElements.Add('Study Scheduled Patient Time Point', 1056, 'DTM', 24, 0);
  oDataElements.Add('Study Quality Control Codes', 1057, 'CWE', 705, 9999);
  oDataElements.Add('Sender Organization Name', 1059, 'XON', 567, 0);
  oDataElements.Add('Sender Individual Name', 1060, 'XCN', 3220, 0);
  oDataElements.Add('Sender Address', 1062, 'XAD', 2915, 0);
  oDataElements.Add('Sender Telephone', 1063, 'XTN', 2743, 0);
  oDataElements.Add('Sender Event Identifier', 1064, 'EI', 427, 0);
  oDataElements.Add('Sender Sequence Number', 1065, 'NM', 16, 0);
  oDataElements.Add('Sender Event Description', 1066, 'FT', 600, 0);
  oDataElements.Add('Sender Comment', 1067, 'FT', 600, 0);
  oDataElements.Add('Sender Aware Date/Time', 1068, 'DTM', 24, 0);
  oDataElements.Add('Event Report Date', 1069, 'DTM', 24, 0);
  oDataElements.Add('Event Report Timing/Type', 1070, 'ID', 3, 234);
  oDataElements.Add('Event Report Source', 1071, 'ID', 1, 235);
  oDataElements.Add('Event Reported To', 1072, 'ID', 1, 236);
  oDataElements.Add('Event Identifiers Used', 1073, 'CWE', 705, 9999);
  oDataElements.Add('Event Symptom/Diagnosis Code', 1074, 'CWE', 705, 9999);
  oDataElements.Add('Event Onset Date/Time', 1075, 'DTM', 24, 0);
  oDataElements.Add('Event Exacerbation Date/Time', 1076, 'DTM', 24, 0);
  oDataElements.Add('Event Improved Date/Time', 1077, 'DTM', 24, 0);
  oDataElements.Add('Event Ended Data/Time', 1078, 'DTM', 24, 0);
  oDataElements.Add('Event Location Occurred Address', 1079, 'XAD', 2915, 0);
  oDataElements.Add('Event Qualification', 1080, 'ID', 1, 237);
  oDataElements.Add('Event Serious', 1081, 'ID', 1, 238);
  oDataElements.Add('Event Expected', 1082, 'ID', 1, 239);
  oDataElements.Add('Event Outcome', 1083, 'ID', 1, 240);
  oDataElements.Add('Patient Outcome', 1084, 'ID', 1, 241);
  oDataElements.Add('Event Description from Others', 1085, 'FT', 600, 0);
  oDataElements.Add('Event Description from Original Reporter', 1086, 'FT', 600, 0);
  oDataElements.Add('Event Description from Patient', 1087, 'FT', 600, 0);
  oDataElements.Add('Event Description from Practitioner', 1088, 'FT', 600, 0);
  oDataElements.Add('Event Description from Autopsy', 1089, 'FT', 600, 0);
  oDataElements.Add('Cause Of Death', 1090, 'CWE', 705, 9999);
  oDataElements.Add('Primary Observer Name', 1091, 'XPN', 1317, 0);
  oDataElements.Add('Primary Observer Address', 1092, 'XAD', 2915, 0);
  oDataElements.Add('Primary Observer Telephone', 1093, 'XTN', 2743, 0);
  oDataElements.Add('Primary Observer''s Qualification', 1094, 'ID', 1, 242);
  oDataElements.Add('Confirmation Provided By', 1095, 'ID', 1, 242);
  oDataElements.Add('Primary Observer Aware Date/Time', 1096, 'DTM', 24, 0);
  oDataElements.Add('Primary Observer''s identity May Be Divulged', 1097, 'ID', 1, 243);
  oDataElements.Add('Implicated Product', 1098, 'CWE', 705, 9999);
  oDataElements.Add('Generic Product', 1099, 'IS', 1, 249);
  oDataElements.Add('Product Class', 1100, 'CWE', 705, 9999);
  oDataElements.Add('Total Duration Of Therapy', 1101, 'CQ', 500, 0);
  oDataElements.Add('Product Manufacture Date', 1102, 'DTM', 24, 0);
  oDataElements.Add('Product Expiration Date', 1103, 'DTM', 24, 0);
  oDataElements.Add('Product Implantation Date', 1104, 'DTM', 24, 0);
  oDataElements.Add('Product Explantation Date', 1105, 'DTM', 24, 0);
  oDataElements.Add('Single Use Device', 1106, 'IS', 8, 244);
  oDataElements.Add('Indication For Product Use', 1107, 'CWE', 705, 9999);
  oDataElements.Add('Product Problem', 1108, 'IS', 8, 245);
  oDataElements.Add('Product Serial/Lot Number', 1109, 'ST', 199, 0);
  oDataElements.Add('Product Available For Inspection', 1110, 'IS', 1, 246);
  oDataElements.Add('Product Evaluation Performed', 1111, 'CWE', 705, 9999);
  oDataElements.Add('Product Evaluation Status', 1112, 'CWE', 705, 247);
  oDataElements.Add('Product Evaluation Results', 1113, 'CWE', 705, 9999);
  oDataElements.Add('Evaluated Product Source', 1114, 'ID', 8, 248);
  oDataElements.Add('Date Product Returned To Manufacturer', 1115, 'DTM', 24, 0);
  oDataElements.Add('Device Operator Qualifications', 1116, 'ID', 1, 242);
  oDataElements.Add('Relatedness Assessment', 1117, 'ID', 1, 250);
  oDataElements.Add('Action Taken In Response To The Event', 1118, 'ID', 2, 251);
  oDataElements.Add('Event Causality Observations', 1119, 'ID', 2, 252);
  oDataElements.Add('Indirect Exposure Mechanism', 1120, 'ID', 1, 253);
  oDataElements.Add('Requested Give Strength', 1121, 'NM', 20, 0);
  oDataElements.Add('Requested Give Strength Units', 1122, 'CWE', 250, 9999);
  oDataElements.Add('Indication', 1123, 'CWE', 250, 9999);
  oDataElements.Add('Component Strength', 1124, 'NM', 20, 0);
  oDataElements.Add('Component Strength Units', 1125, 'CWE', 250, 9999);
  oDataElements.Add('Give Strength', 1126, 'NM', 20, 0);
  oDataElements.Add('Give Strength Units', 1127, 'CWE', 250, 9999);
  oDataElements.Add('Give Indication', 1128, 'CWE', 250, 9999);
  oDataElements.Add('Substance Lot Number', 1129, 'ST', 20, 0);
  oDataElements.Add('Substance Expiration Date', 1130, 'DTM', 24, 0);
  oDataElements.Add('Substance Manufacturer Name', 1131, 'CWE', 250, 227);
  oDataElements.Add('Actual Strength', 1132, 'NM', 20, 0);
  oDataElements.Add('Actual Strength Unit', 1133, 'CWE', 250, 9999);
  oDataElements.Add('Administered Strength', 1134, 'NM', 20, 0);
  oDataElements.Add('Administered Strength Units', 1135, 'CWE', 250, 9999);
  oDataElements.Add('Substance/Treatment Refusal Reason', 1136, 'CWE', 250, 9999);
  oDataElements.Add('Referral Status', 1137, 'CWE', 705, 283);
  oDataElements.Add('Referral Priority', 1138, 'CWE', 705, 280);
  oDataElements.Add('Referral Type', 1139, 'CWE', 705, 281);
  oDataElements.Add('Referral Disposition', 1140, 'CWE', 705, 282);
  oDataElements.Add('Referral Category', 1141, 'CWE', 705, 284);
  oDataElements.Add('Originating Referral Identifier', 1142, 'EI', 30, 0);
  oDataElements.Add('Effective Date', 1143, 'DTM', 24, 0);
  oDataElements.Add('Expiration Date', 1144, 'DTM', 24, 0);
  oDataElements.Add('Process Date', 1145, 'DTM', 24, 0);
  oDataElements.Add('Authorizing Payor, Plan ID', 1146, 'CWE', 250, 72);
  oDataElements.Add('Authorizing Payor, Company ID', 1147, 'CWE', 250, 285);
  oDataElements.Add('Authorizing Payor, Company Name', 1148, 'ST', 45, 0);
  oDataElements.Add('Authorization Effective Date', 1149, 'DTM', 24, 0);
  oDataElements.Add('Authorization Expiration Date', 1150, 'DTM', 24, 0);
  oDataElements.Add('Authorization Identifier', 1151, 'EI', 30, 0);
  oDataElements.Add('Reimbursement Limit', 1152, 'CP', 25, 0);
  oDataElements.Add('Requested Number of Treatments', 1153, 'NM', 2, 0);
  oDataElements.Add('Authorized Number of Treatments', 1154, 'NM', 2, 0);
  oDataElements.Add('Provider Role', 1155, 'CWE', 705, 286);
  oDataElements.Add('Provider Name', 1156, 'XPN', 250, 0);
  oDataElements.Add('Provider Address', 1157, 'XAD', 250, 0);
  oDataElements.Add('Provider Location', 1158, 'PL', 60, 0);
  oDataElements.Add('Provider Communication Information', 1159, 'XTN', 250, 0);
  oDataElements.Add('Provider Identifiers', 1162, 'PLN', 100, 338);
  oDataElements.Add('Effective Start Date of Provider Role', 1163, 'DTM', 24, 0);
  oDataElements.Add('Effective End Date of Provider Role', 1164, 'DTM', 24, 0);
  oDataElements.Add('Contact Name', 1165, 'XPN', 250, 0);
  oDataElements.Add('Contact Address', 1166, 'XAD', 2915, 0);
  oDataElements.Add('Contact Location', 1167, 'PL', 60, 0);
  oDataElements.Add('Contact Communication Information', 1168, 'XTN', 250, 0);
  oDataElements.Add('Contact Identifiers', 1171, 'PLN', 100, 338);
  oDataElements.Add('System Date/Time', 1172, 'DTM', 24, 0);
  oDataElements.Add('Statistics Available', 1173, 'ID', 1, 136);
  oDataElements.Add('Source Identifier', 1174, 'ST', 30, 0);
  oDataElements.Add('Source Type', 1175, 'ID', 3, 332);
  oDataElements.Add('Statistics Start', 1176, 'DTM', 24, 0);
  oDataElements.Add('Statistics End', 1177, 'DTM', 24, 0);
  oDataElements.Add('Receive Character Count', 1178, 'NM', 10, 0);
  oDataElements.Add('Send Character Count', 1179, 'NM', 10, 0);
  oDataElements.Add('Messages Received', 1180, 'NM', 10, 0);
  oDataElements.Add('Messages Sent', 1181, 'NM', 10, 0);
  oDataElements.Add('Checksum Errors Received', 1182, 'NM', 10, 0);
  oDataElements.Add('Length Errors Received', 1183, 'NM', 10, 0);
  oDataElements.Add('Other Errors Received', 1184, 'NM', 10, 0);
  oDataElements.Add('Connect Timeouts', 1185, 'NM', 10, 0);
  oDataElements.Add('Receive Timeouts', 1186, 'NM', 10, 0);
  oDataElements.Add('Application control-level Errors', 1187, 'NM', 10, 0);
  oDataElements.Add('Application Change Type', 1188, 'IS', 4, 409);
  oDataElements.Add('Current CPU', 1189, 'ST', 30, 0);
  oDataElements.Add('Current Fileserver', 1190, 'ST', 30, 0);
  oDataElements.Add('Current Application', 1191, 'HD', 30, 0);
  oDataElements.Add('Current Facility', 1192, 'HD', 30, 0);
  oDataElements.Add('New CPU', 1193, 'ST', 30, 0);
  oDataElements.Add('New Fileserver', 1194, 'ST', 30, 0);
  oDataElements.Add('New Application', 1195, 'HD', 30, 0);
  oDataElements.Add('New Facility', 1196, 'HD', 30, 0);
  oDataElements.Add('Role-ROL', 1197, 'CWE', 250, 443);
  oDataElements.Add('Role Person', 1198, 'XCN', 250, 0);
  oDataElements.Add('Role Begin Date/Time', 1199, 'DTM', 24, 0);
  oDataElements.Add('Role End Date/Time', 1200, 'DTM', 24, 0);
  oDataElements.Add('Role Duration', 1201, 'CWE', 250, 0);
  oDataElements.Add('Start Date/Time', 1202, 'DTM', 24, 0);
  oDataElements.Add('Set ID - RGS', 1203, 'SI', 4, 0);
  oDataElements.Add('Resource Group ID', 1204, 'CWE', 250, 0);
  oDataElements.Add('Role Action Reason', 1205, 'CWE', 250, 0);
  oDataElements.Add('Role Instance ID', 1206, 'EI', 60, 0);
  oDataElements.Add('Pathway ID', 1207, 'CWE', 705, 0);
  oDataElements.Add('Pathway Instance ID', 1208, 'EI', 60, 0);
  oDataElements.Add('Pathway Established Date/Time', 1209, 'DTM', 24, 0);
  oDataElements.Add('Pathway Life Cycle Status', 1210, 'CWE', 705, 0);
  oDataElements.Add('Change Pathway Life Cycle Status Date/Time', 1211, 'DTM', 24, 0);
  oDataElements.Add('Variance Instance ID', 1212, 'EI', 60, 0);
  oDataElements.Add('Documented Date/Time', 1213, 'DTM', 24, 0);
  oDataElements.Add('Stated Variance Date/Time', 1214, 'DTM', 24, 0);
  oDataElements.Add('Variance Originator', 1215, 'XCN', 250, 0);
  oDataElements.Add('Variance Classification', 1216, 'CWE', 705, 0);
  oDataElements.Add('Variance Description', 1217, 'ST', 512, 0);
  oDataElements.Add('Requested Give Rate Amount', 1218, 'ST', 6, 0);
  oDataElements.Add('Requested Give Rate Units', 1219, 'CWE', 250, 9999);
  oDataElements.Add('Dispense Package Size', 1220, 'NM', 20, 0);
  oDataElements.Add('Dispense Package Size Unit', 1221, 'CWE', 250, 9999);
  oDataElements.Add('Dispense Package Method', 1222, 'ID', 2, 321);
  oDataElements.Add('Completion Status', 1223, 'ID', 2, 322);
  oDataElements.Add('Action Code - RXA', 1224, 'ID', 2, 206);
  oDataElements.Add('System Entry Date/Time', 1225, 'DTM', 24, 0);
  oDataElements.Add('Visit Indicator', 1226, 'IS', 1, 326);
  oDataElements.Add('Coverage Type', 1227, 'IS', 3, 309);
  oDataElements.Add('Referral Reason', 1228, 'CWE', 705, 336);
  oDataElements.Add('Copy Auto Ins', 1229, 'ID', 1, 136);
  oDataElements.Add('Insured''s ID Number', 1230, 'CX', 250, 0);
  oDataElements.Add('Guarantor Financial Class', 1231, 'FC', 50, 0);
  oDataElements.Add('Auto Ins Expires', 1232, 'DT', 8, 0);
  oDataElements.Add('Report Type', 1233, 'ST', 60, 0);
  oDataElements.Add('Date Next DMV Review', 1234, 'DT', 8, 0);
  oDataElements.Add('Report Date', 1235, 'DTM', 24, 0);
  oDataElements.Add('Report Interval Start Date', 1236, 'DTM', 24, 0);
  oDataElements.Add('Report Interval End Date', 1237, 'DTM', 24, 0);
  oDataElements.Add('Quantity Manufactured', 1238, 'CQ', 722, 0);
  oDataElements.Add('Quantity Distributed', 1239, 'CQ', 722, 0);
  oDataElements.Add('Quantity Distributed Method', 1240, 'ID', 1, 329);
  oDataElements.Add('Quantity Distributed Comment', 1241, 'FT', 600, 0);
  oDataElements.Add('Quantity in Use', 1242, 'CQ', 722, 0);
  oDataElements.Add('Quantity in Use Method', 1243, 'ID', 1, 329);
  oDataElements.Add('Quantity in Use Comment', 1244, 'FT', 600, 0);
  oDataElements.Add('Number of Product Experience Reports Filed by Facility', 1245, 'NM', 16, 0);
  oDataElements.Add('Number of Product Experience Reports Filed by Distributor', 1246, 'NM', 16, 0);
  oDataElements.Add('Manufacturer/Distributor', 1247, 'XON', 570, 0);
  oDataElements.Add('Country', 1248, 'CWE', 705, 9999);
  oDataElements.Add('Brand Name', 1249, 'ST', 60, 0);
  oDataElements.Add('Device Family Name', 1250, 'ST', 60, 0);
  oDataElements.Add('Generic Name', 1251, 'CWE', 705, 9999);
  oDataElements.Add('Model Identifier', 1252, 'ST', 60, 0);
  oDataElements.Add('Catalogue Identifier', 1253, 'ST', 60, 0);
  oDataElements.Add('Other Identifier', 1254, 'ST', 60, 0);
  oDataElements.Add('Product Code', 1255, 'CWE', 705, 9999);
  oDataElements.Add('Marketing Basis', 1256, 'ID', 4, 330);
  oDataElements.Add('Marketing Approval ID', 1257, 'ST', 60, 0);
  oDataElements.Add('Labeled Shelf Life', 1258, 'CQ', 722, 0);
  oDataElements.Add('Expected Shelf Life', 1259, 'CQ', 722, 0);
  oDataElements.Add('Date First Marketed', 1260, 'DTM', 24, 0);
  oDataElements.Add('Date Last Marketed', 1261, 'DTM', 24, 0);
  oDataElements.Add('Facility ID-FAC', 1262, 'EI', 427, 0);
  oDataElements.Add('Facility Type', 1263, 'ID', 1, 331);
  oDataElements.Add('Facility Address', 1264, 'XAD', 2915, 0);
  oDataElements.Add('Facility Telecommunication', 1265, 'XTN', 2743, 0);
  oDataElements.Add('Contact Person', 1266, 'XCN', 3220, 0);
  oDataElements.Add('Contact Title', 1267, 'ST', 60, 0);
  oDataElements.Add('Contact Telecommunication', 1269, 'XTN', 2743, 0);
  oDataElements.Add('Signature Authority', 1270, 'XCN', 3220, 0);
  oDataElements.Add('Signature Authority Title', 1271, 'ST', 199, 0);
  oDataElements.Add('Signature Authority Address', 1272, 'XAD', 2915, 0);
  oDataElements.Add('Signature Authority Telecommunication', 1273, 'XTN', 2743, 0);
  oDataElements.Add('Other Healthcare Provider', 1274, 'XCN', 0, 10);
  oDataElements.Add('Additional Insured on Auto', 1275, 'ID', 1, 136);
  oDataElements.Add('Employment Status Code', 1276, 'CWE', 250, 66);
  oDataElements.Add('Location Relationship ID', 1277, 'CWE', 250, 325);
  oDataElements.Add('Event Occurred', 1278, 'DTM', 24, 0);
  oDataElements.Add('Prior Visit Number', 1279, 'CX', 250, 0);
  oDataElements.Add('Prior Alternate Visit ID', 1280, 'CX', 250, 0);
  oDataElements.Add('Prior Patient Name', 1281, 'XPN', 250, 200);
  oDataElements.Add('Set ID - DB1', 1283, 'SI', 4, 0);
  oDataElements.Add('Disabled Person Code', 1284, 'IS', 2, 334);
  oDataElements.Add('Disabled Person Identifier', 1285, 'CX', 250, 0);
  oDataElements.Add('Disability Indicator', 1286, 'ID', 1, 136);
  oDataElements.Add('Disability Start Date', 1287, 'DT', 8, 0);
  oDataElements.Add('Disability End Date', 1288, 'DT', 8, 0);
  oDataElements.Add('Disability Return to Work Date', 1289, 'DT', 8, 0);
  oDataElements.Add('Disability Unable to Work Date', 1290, 'DT', 8, 0);
  oDataElements.Add('Guarantor Race', 1291, 'CWE', 250, 5);
  oDataElements.Add('Patient Location Relationship Value', 1292, 'PL', 80, 0);
  oDataElements.Add('Location Characteristic Value - LCH', 1294, 'CWE', 250, 136);
  oDataElements.Add('Location Characteristic ID', 1295, 'CWE', 250, 324);
  oDataElements.Add('Date Entered Practice', 1296, 'DT', 8, 0);
  oDataElements.Add('Report Form Identifier', 1297, 'ST', 60, 0);
  oDataElements.Add('Date Last DMV Review', 1298, 'DT', 8, 0);
  oDataElements.Add('Guarantor Employer''s Organization Name', 1299, 'XON', 250, 0);
  oDataElements.Add('External Referral Identifier', 1300, 'EI', 30, 0);
  oDataElements.Add('Organizational Location Relationship Value', 1301, 'XON', 250, 0);
  oDataElements.Add('Driver''s License Number - Staff', 1302, 'DLN', 25, 0);
  oDataElements.Add('Dispense-to Location', 1303, 'LA2', 0, 0);
  oDataElements.Add('Primary Key Value - LCH', 1305, 'PL', 200, 0);
  oDataElements.Add('Primary Key Value - CDM', 1306, 'CWE', 250, 132);
  oDataElements.Add('Primary Key Value - LOC', 1307, 'PL', 200, 0);
  oDataElements.Add('Primary Key Value - MFA', 1308, 'varies', 250, 9999);
  oDataElements.Add('Advanced Beneficiary Notice Code', 1310, 'CWE', 250, 339);
  oDataElements.Add('Ordering Facility Name', 1311, 'XON', 250, 0);
  oDataElements.Add('Ordering Facility Address', 1312, 'XAD', 250, 0);
  oDataElements.Add('Ordering Facility Phone Number', 1313, 'XTN', 250, 0);
  oDataElements.Add('Ordering Provider Address', 1314, 'XAD', 250, 0);
  oDataElements.Add('Routing Instruction', 1315, 'CWE', 250, 9999);
  oDataElements.Add('Procedure Code Modifier', 1316, 'CNE', 705, 340);
  oDataElements.Add('Alternate Character Set Handling Scheme', 1317, 'ID', 20, 356);
  oDataElements.Add('Comment Type', 1318, 'CWE', 250, 364);
  oDataElements.Add('Primary Key Value Type', 1319, 'ID', 3, 355);
  oDataElements.Add('Primary Key Value Type - MFA', 1320, 'ID', 3, 355);
  oDataElements.Add('Event Date/Time', 1322, 'DTM', 24, 0);
  oDataElements.Add('Equipment State', 1323, 'CWE', 705, 365);
  oDataElements.Add('Local/Remote Control State', 1324, 'CWE', 705, 366);
  oDataElements.Add('Alert Level', 1325, 'CWE', 705, 367);
  oDataElements.Add('Reference Interaction Number', 1326, 'NM', 20, 0);
  oDataElements.Add('Interaction Type Identifier', 1327, 'CWE', 705, 368);
  oDataElements.Add('Interaction Active State', 1328, 'CWE', 705, 387);
  oDataElements.Add('External Accession Identifier', 1329, 'EI', 427, 0);
  oDataElements.Add('Accession Identifier', 1330, 'EI', 427, 0);
  oDataElements.Add('Container Identifier', 1331, 'EI', 427, 0);
  oDataElements.Add('Primary (Parent) Container Identifier', 1332, 'EI', 427, 0);
  oDataElements.Add('Equipment Container Identifier', 1333, 'EI', 427, 0);
  oDataElements.Add('Registration Date/Time', 1334, 'DTM', 24, 0);
  oDataElements.Add('Container Status', 1335, 'CWE', 705, 370);
  oDataElements.Add('Carrier Type', 1336, 'CWE', 705, 378);
  oDataElements.Add('Carrier Identifier', 1337, 'EI', 705, 0);
  oDataElements.Add('Position in Carrier', 1338, 'NA', 80, 0);
  oDataElements.Add('Tray Type - SAC', 1339, 'CWE', 705, 379);
  oDataElements.Add('Tray Identifier', 1340, 'EI', 427, 0);
  oDataElements.Add('Position in Tray', 1341, 'NA', 80, 0);
  oDataElements.Add('Location', 1342, 'CWE', 705, 9999);
  oDataElements.Add('Container Height', 1343, 'NM', 20, 0);
  oDataElements.Add('Container Diameter', 1344, 'NM', 20, 0);
  oDataElements.Add('Barrier Delta', 1345, 'NM', 20, 0);
  oDataElements.Add('Bottom Delta', 1346, 'NM', 20, 0);
  oDataElements.Add('Container Height/Diameter/Delta Units', 1347, 'CWE', 705, 9999);
  oDataElements.Add('Date Left Practice', 1348, 'DT', 8, 0);
  oDataElements.Add('Available Specimen Volume', 1349, 'NM', 20, 0);
  oDataElements.Add('Initial Specimen Volume', 1350, 'NM', 20, 0);
  oDataElements.Add('Volume Units', 1351, 'CWE', 705, 9999);
  oDataElements.Add('Separator Type', 1352, 'CWE', 705, 380);
  oDataElements.Add('Cap Type', 1353, 'CWE', 705, 381);
  oDataElements.Add('Continuation Style', 1354, 'ID', 1, 398);
  oDataElements.Add('Specimen Component', 1355, 'CWE', 705, 372);
  oDataElements.Add('Dilution Factor', 1356, 'SN', 36, 0);
  oDataElements.Add('Treatment', 1357, 'CWE', 705, 373);
  oDataElements.Add('Temperature', 1358, 'SN', 36, 0);
  oDataElements.Add('Hemolysis Index', 1359, 'NM', 20, 0);
  oDataElements.Add('Hemolysis Index Units', 1360, 'CWE', 705, 9999);
  oDataElements.Add('Lipemia Index', 1361, 'NM', 20, 0);
  oDataElements.Add('Lipemia Index Units', 1362, 'CWE', 705, 9999);
  oDataElements.Add('Icterus Index', 1363, 'NM', 20, 0);
  oDataElements.Add('Icterus Index Units', 1364, 'CWE', 705, 9999);
  oDataElements.Add('Fibrin Index', 1365, 'NM', 20, 0);
  oDataElements.Add('Fibrin Index Units', 1366, 'CWE', 705, 9999);
  oDataElements.Add('System Induced Contaminants', 1367, 'CWE', 705, 374);
  oDataElements.Add('Drug Interference', 1368, 'CWE', 705, 382);
  oDataElements.Add('Artificial Blood', 1369, 'CWE', 705, 375);
  oDataElements.Add('Special Handling Code', 1370, 'CWE', 705, 376);
  oDataElements.Add('Other Environmental Factors', 1371, 'CWE', 705, 377);
  oDataElements.Add('Substance Identifier', 1372, 'CWE', 705, 451);
  oDataElements.Add('Substance Status', 1373, 'CWE', 705, 383);
  oDataElements.Add('Substance Type', 1374, 'CWE', 705, 384);
  oDataElements.Add('Message Query Name', 1375, 'CWE', 250, 471);
  oDataElements.Add('Container Carrier Identifier', 1376, 'CWE', 705, 9999);
  oDataElements.Add('Position on Carrier', 1377, 'CWE', 705, 9999);
  oDataElements.Add('Initial Quantity', 1378, 'NM', 20, 0);
  oDataElements.Add('Current Quantity', 1379, 'NM', 20, 0);
  oDataElements.Add('Available Quantity', 1380, 'NM', 20, 0);
  oDataElements.Add('Consumption Quantity', 1381, 'NM', 20, 0);
  oDataElements.Add('Quantity Units', 1382, 'CWE', 705, 9999);
  oDataElements.Add('Expiration Date/Time', 1383, 'DTM', 24, 0);
  oDataElements.Add('First Used Date/Time', 1384, 'DTM', 24, 0);
  oDataElements.Add('On Board Stability Duration', 1385, 'TQ', 0, 0);
  oDataElements.Add('Test/Fluid Identifier(s)', 1386, 'CWE', 705, 9999);
  oDataElements.Add('Manufacturer Lot Number', 1387, 'ST', 200, 0);
  oDataElements.Add('Government Reimbursement Billing Eligibility', 1388, 'CWE', 250, 401);
  oDataElements.Add('Supplier Identifier', 1389, 'CWE', 705, 386);
  oDataElements.Add('Reference Command Number', 1390, 'NM', 20, 0);
  oDataElements.Add('Remote Control Command', 1391, 'CWE', 250, 368);
  oDataElements.Add('Response Required', 1392, 'ID', 80, 136);
  oDataElements.Add('Requested Completion Time', 1393, 'TQ', 0, 0);
  oDataElements.Add('Parameters', 1394, 'TX', 65536, 0);
  oDataElements.Add('Command Response', 1395, 'CWE', 705, 387);
  oDataElements.Add('Date/Time Completed', 1396, 'DTM', 24, 0);
  oDataElements.Add('Command Response Parameters', 1397, 'TX', 65536, 0);
  oDataElements.Add('Notification Reference Number', 1398, 'NM', 20, 0);
  oDataElements.Add('Notification Date/Time', 1399, 'DTM', 24, 0);
  oDataElements.Add('Notification Alert Severity', 1400, 'CWE', 705, 367);
  oDataElements.Add('Notification Code', 1401, 'CWE', 705, 9999);
  oDataElements.Add('Starting Notification Reference Number', 1402, 'NM', 20, 0);
  oDataElements.Add('Ending Notification Reference Number', 1403, 'NM', 20, 0);
  oDataElements.Add('Starting Notification Date/Time', 1404, 'DTM', 24, 0);
  oDataElements.Add('Ending Notification Date/Time', 1405, 'DTM', 24, 0);
  oDataElements.Add('Starting Notification Code', 1406, 'CWE', 705, 9999);
  oDataElements.Add('Ending Notification Code', 1407, 'CWE', 705, 9999);
  oDataElements.Add('Equipment Test Application Identifier', 1408, 'EI', 427, 0);
  oDataElements.Add('Auto-Dilution Factor Default', 1410, 'SN', 36, 0);
  oDataElements.Add('Rerun Dilution Factor Default', 1411, 'SN', 36, 0);
  oDataElements.Add('Pre-Dilution Factor Default', 1412, 'SN', 36, 0);
  oDataElements.Add('Endogenous Content of Pre-Dilution Diluent', 1413, 'SN', 36, 0);
  oDataElements.Add('Inventory Limits Warning Level', 1414, 'NM', 10, 0);
  oDataElements.Add('Automatic Rerun Allowed', 1415, 'ID', 1, 136);
  oDataElements.Add('Automatic Repeat Allowed', 1416, 'ID', 1, 136);
  oDataElements.Add('Automatic Reflex Allowed', 1417, 'ID', 1, 136);
  oDataElements.Add('Equipment Dynamic Range', 1418, 'SN', 36, 0);
  oDataElements.Add('Processing Type', 1419, 'CWE', 705, 388);
  oDataElements.Add('Auto-Dilution Factor', 1420, 'SN', 36, 0);
  oDataElements.Add('Rerun Dilution Factor', 1421, 'SN', 36, 0);
  oDataElements.Add('Pre-Dilution Factor', 1422, 'SN', 36, 0);
  oDataElements.Add('Reflex Allowed', 1424, 'ID', 1, 136);
  oDataElements.Add('Analyte Repeat Status', 1425, 'CWE', 705, 389);
  oDataElements.Add('Application/Method Identifier', 1426, 'CWE', 705, 9999);
  oDataElements.Add('Set ID - AFF', 1427, 'SI', 60, 0);
  oDataElements.Add('Substance Container Identifier', 1428, 'ST', 200, 0);
  oDataElements.Add('Substance Manufacturer Identifier', 1429, 'CWE', 705, 385);
  oDataElements.Add('Event type', 1430, 'CWE', 705, 450);
  oDataElements.Add('File Name', 1431, 'ST', 20, 0);
  oDataElements.Add('End Date/Time', 1432, 'DTM', 24, 0);
  oDataElements.Add('Transaction Data', 1433, 'FT', 65536, 0);
  oDataElements.Add('Hit Count Total', 1434, 'NM', 10, 0);
  oDataElements.Add('User Parameters (in successive fields)', 1435, 'varies', 256, 0);
  oDataElements.Add('Candidate Confidence', 1436, 'NM', 10, 0);
  oDataElements.Add('Match Reason Code', 1437, 'IS', 2, 392);
  oDataElements.Add('Algorithm Descriptor', 1438, 'CWE', 250, 393);
  oDataElements.Add('Response Modality', 1440, 'CNE', 250, 394);
  oDataElements.Add('Execution and Delivery Time', 1441, 'DTM', 24, 0);
  oDataElements.Add('Search Confidence Threshold', 1442, 'NM', 10, 0);
  oDataElements.Add('Modify Indicator', 1443, 'ID', 1, 395);
  oDataElements.Add('Professional Organization', 1444, 'XON', 250, 0);
  oDataElements.Add('Professional Organization Address', 1445, 'XAD', 250, 0);
  oDataElements.Add('Professional Organization Affiliation Date Range', 1446, 'DR', 52, 0);
  oDataElements.Add('Professional Affiliation Additional Information', 1447, 'ST', 60, 0);
  oDataElements.Add('Set ID - EDU', 1448, 'SI', 60, 0);
  oDataElements.Add('Academic Degree', 1449, 'IS', 10, 360);
  oDataElements.Add('Academic Degree Program Participation Date Range', 1450, 'DR', 52, 0);
  oDataElements.Add('Academic Degree Granted Date', 1451, 'DT', 8, 0);
  oDataElements.Add('School', 1452, 'XON', 250, 0);
  oDataElements.Add('School Type Code', 1453, 'CWE', 250, 402);
  oDataElements.Add('School Address', 1454, 'XAD', 250, 0);
  oDataElements.Add('Set ID - LAN', 1455, 'SI', 60, 0);
  oDataElements.Add('Language Code', 1456, 'CWE', 250, 296);
  oDataElements.Add('Language Ability Code', 1457, 'CWE', 250, 403);
  oDataElements.Add('Language Proficiency Code', 1458, 'CWE', 250, 404);
  oDataElements.Add('Set ID - ORG', 1459, 'SI', 60, 0);
  oDataElements.Add('Organization Unit Code', 1460, 'CWE', 250, 405);
  oDataElements.Add('Organization Unit Type', 1461, 'CWE', 250, 406);
  oDataElements.Add('Primary Org Unit Indicator', 1462, 'ID', 1, 136);
  oDataElements.Add('Practitioner Org Unit Identifier', 1463, 'CX', 60, 0);
  oDataElements.Add('Health Care Provider Type Code', 1464, 'CWE', 250, 452);
  oDataElements.Add('Effective Date Range', 1465, 'DR', 52, 0);
  oDataElements.Add('Board Approval Indicator', 1467, 'ID', 1, 136);
  oDataElements.Add('Primary Care Physician Indicator', 1468, 'ID', 1, 136);
  oDataElements.Add('Order Status Modifier', 1473, 'CWE', 250, 9999);
  oDataElements.Add('Placer Supplemental Service Information', 1474, 'CWE', 705, 411);
  oDataElements.Add('Filler Supplemental Service Information', 1475, 'CWE', 705, 411);
  oDataElements.Add('Supplementary Code', 1476, 'CWE', 250, 9999);
  oDataElements.Add('Initiating Location', 1477, 'CWE', 250, 9999);
  oDataElements.Add('Packaging/Assembly Location', 1478, 'CWE', 250, 9999);
  oDataElements.Add('Equipment Instance Identifier', 1479, 'EI', 427, 0);
  oDataElements.Add('Date/Time of the Analysis', 1480, 'DTM', 24, 0);
  oDataElements.Add('Category Identifier', 1481, 'CWE', 250, 412);
  oDataElements.Add('Category Description', 1482, 'TX', 200, 0);
  oDataElements.Add('Category Synonym', 1483, 'ST', 200, 0);
  oDataElements.Add('Effective Test/Service Start Date/Time', 1484, 'DTM', 24, 0);
  oDataElements.Add('Effective Test/Service End Date/Time', 1485, 'DTM', 24, 0);
  oDataElements.Add('Test/Service Default Duration Quantity', 1486, 'NM', 5, 0);
  oDataElements.Add('Test/Service Default Duration Units', 1487, 'CWE', 250, 9999);
  oDataElements.Add('Test/Service Default Frequency', 1488, 'IS', 60, 0);
  oDataElements.Add('Consent Indicator', 1489, 'ID', 1, 136);
  oDataElements.Add('Consent Identifier', 1490, 'CWE', 250, 413);
  oDataElements.Add('Consent Effective Start Date/Time', 1491, 'DTM', 24, 0);
  oDataElements.Add('Consent Effective End Date/Time', 1492, 'DTM', 24, 0);
  oDataElements.Add('Consent Interval Quantity', 1493, 'NM', 5, 0);
  oDataElements.Add('Consent Interval Units', 1494, 'CWE', 250, 414);
  oDataElements.Add('Consent Waiting Period Quantity', 1495, 'NM', 5, 0);
  oDataElements.Add('Consent Waiting Period Units', 1496, 'CWE', 250, 414);
  oDataElements.Add('Orderable-at Location', 1497, 'PL', 200, 0);
  oDataElements.Add('Formulary Status', 1498, 'IS', 1, 473);
  oDataElements.Add('Special Order Indicator', 1499, 'ID', 1, 136);
  oDataElements.Add('DRG Transfer Type', 1500, 'IS', 21, 415);
  oDataElements.Add('Procedure DRG Type', 1501, 'IS', 20, 416);
  oDataElements.Add('Tissue Type Code', 1502, 'CWE', 250, 417);
  oDataElements.Add('Accident Description', 1503, 'ST', 25, 0);
  oDataElements.Add('Brought In By', 1504, 'ST', 80, 0);
  oDataElements.Add('Police Notified Indicator', 1505, 'ID', 1, 136);
  oDataElements.Add('Provider Type', 1510, 'CWE', 250, 0);
  oDataElements.Add('Discharge Care Provider', 1514, 'XCN', 250, 10);
  oDataElements.Add('Transfer Medical Service Code', 1515, 'CWE', 250, 69);
  oDataElements.Add('Severity of Illness Code', 1516, 'CWE', 250, 421);
  oDataElements.Add('Date/Time of Attestation', 1517, 'DTM', 24, 0);
  oDataElements.Add('Attested By', 1518, 'XCN', 250, 0);
  oDataElements.Add('Triage Code', 1519, 'CWE', 250, 422);
  oDataElements.Add('Abstract Completion Date/Time', 1520, 'DTM', 24, 0);
  oDataElements.Add('Abstracted By', 1521, 'XCN', 250, 0);
  oDataElements.Add('Case Category Code', 1522, 'CWE', 250, 423);
  oDataElements.Add('Caesarian Section Indicator', 1523, 'ID', 1, 136);
  oDataElements.Add('Gestation Category Code', 1524, 'CWE', 250, 424);
  oDataElements.Add('Gestation Period - Weeks', 1525, 'NM', 3, 0);
  oDataElements.Add('Newborn Code', 1526, 'CWE', 250, 425);
  oDataElements.Add('Stillborn Indicator', 1527, 'ID', 1, 136);
  oDataElements.Add('Blood Product Code', 1528, 'CWE', 250, 426);
  oDataElements.Add('Blood Amount', 1529, 'CQ', 267, 0);
  oDataElements.Add('Risk Management Incident Code', 1530, 'CWE', 250, 427);
  oDataElements.Add('Date/Time Incident', 1531, 'DTM', 24, 0);
  oDataElements.Add('Inventory Container Identifier', 1532, 'CWE', 705, 9999);
  oDataElements.Add('Incident Type Code', 1533, 'CWE', 250, 428);
  oDataElements.Add('Event Facility', 1534, 'HD', 241, 0);
  oDataElements.Add('Identity Unknown Indicator', 1535, 'ID', 1, 136);
  oDataElements.Add('Identity Reliability Code', 1536, 'IS', 20, 445);
  oDataElements.Add('Last Update Date/Time', 1537, 'DTM', 24, 0);
  oDataElements.Add('Last Update Facility', 1538, 'HD', 241, 0);
  oDataElements.Add('Species Code', 1539, 'CWE', 705, 446);
  oDataElements.Add('Breed Code', 1540, 'CWE', 705, 447);
  oDataElements.Add('Strain', 1541, 'ST', 80, 0);
  oDataElements.Add('Production Class Code', 1542, 'CWE', 705, 429);
  oDataElements.Add('Mode of Arrival Code', 1543, 'CWE', 705, 430);
  oDataElements.Add('Recreational Drug Use Code', 1544, 'CWE', 705, 431);
  oDataElements.Add('Admission Level of Care Code', 1545, 'CWE', 705, 432);
  oDataElements.Add('Precaution Code', 1546, 'CWE', 705, 433);
  oDataElements.Add('Patient Condition Code', 1547, 'CWE', 705, 434);
  oDataElements.Add('Advance Directive Code', 1548, 'CWE', 705, 435);
  oDataElements.Add('Patient Status Effective Date', 1549, 'DT', 8, 0);
  oDataElements.Add('Expected LOA Return Date/Time', 1550, 'DTM', 24, 0);
  oDataElements.Add('Allergy Action Code', 1551, 'CNE', 250, 206);
  oDataElements.Add('Allergy Unique Identifier', 1552, 'EI', 427, 0);
  oDataElements.Add('Action Reason', 1553, 'ST', 60, 0);
  oDataElements.Add('Sensitivity to Causative Agent Code', 1554, 'CWE', 705, 436);
  oDataElements.Add('Allergen Group Code/Mnemonic/Description', 1555, 'CWE', 705, 0);
  oDataElements.Add('Onset Date', 1556, 'DT', 8, 0);
  oDataElements.Add('Onset Date Text', 1557, 'ST', 60, 0);
  oDataElements.Add('Reported Date/Time', 1558, 'DTM', 8, 0);
  oDataElements.Add('Reported By', 1559, 'XPN', 250, 0);
  oDataElements.Add('Relationship to Patient Code', 1560, 'CWE', 705, 63);
  oDataElements.Add('Alert Device Code', 1561, 'CWE', 705, 437);
  oDataElements.Add('Allergy Clinical Status Code', 1562, 'CWE', 705, 438);
  oDataElements.Add('Statused by Person', 1563, 'XCN', 250, 0);
  oDataElements.Add('Statused by Organization', 1564, 'XON', 250, 0);
  oDataElements.Add('Statused at Date/Time', 1565, 'DTM', 8, 0);
  oDataElements.Add('Protection Indicator Effective Date', 1566, 'DT', 0, 0);
  oDataElements.Add('Place of Worship', 1567, 'XON', 250, 0);
  oDataElements.Add('Immunization Registry Status', 1569, 'IS', 1, 441);
  oDataElements.Add('Immunization Registry Status Effective Date', 1570, 'DT', 8, 0);
  oDataElements.Add('Publicity Code Effective Date', 1571, 'DT', 8, 0);
  oDataElements.Add('Military Branch', 1572, 'IS', 5, 140);
  oDataElements.Add('Military Status', 1573, 'IS', 3, 142);
  oDataElements.Add('Death Cause Code', 1574, 'CWE', 705, 0);
  oDataElements.Add('Death Location', 1575, 'PL', 80, 0);
  oDataElements.Add('Death Certified Indicator', 1576, 'ID', 1, 136);
  oDataElements.Add('Death Certificate Signed Date/Time', 1577, 'DTM', 24, 0);
  oDataElements.Add('Death Certified By', 1578, 'XCN', 250, 0);
End;

procedure LoadDataElements4(oDataElements : THL7V2ModelDataElements);
Begin
  oDataElements.Add('Autopsy Indicator', 1579, 'ID', 1, 136);
  oDataElements.Add('Autopsy Start and End Date/Time', 1580, 'DR', 53, 0);
  oDataElements.Add('Autopsy Performed By', 1581, 'XCN', 250, 0);
  oDataElements.Add('Coroner Indicator', 1582, 'ID', 1, 136);
  oDataElements.Add('Location Service Code', 1583, 'IS', 1, 442);
  oDataElements.Add('Location Cost Center', 1584, 'CWE', 250, 462);
  oDataElements.Add('Segment group inclusion', 1594, 'ID', 256, 391);
  oDataElements.Add('Re-activation Approval Indicator', 1596, 'ID', 1, 136);
  oDataElements.Add('Academic Degree Program Date Range', 1597, 'DR', 52, 0);
  oDataElements.Add('Message Profile Identifier', 1598, 'EI', 427, 0);
  oDataElements.Add('Type of Bill Code', 1599, 'IS', 3, 455);
  oDataElements.Add('Revenue Code', 1600, 'IS', 3, 456);
  oDataElements.Add('Overall Claim Disposition Code', 1601, 'IS', 1, 457);
  oDataElements.Add('OCE Edits per Visit Code', 1602, 'IS', 2, 458);
  oDataElements.Add('Number of Service Units', 1604, 'NM', 7, 0);
  oDataElements.Add('Charge', 1605, 'CP', 12, 0);
  oDataElements.Add('Reimbursement Action Code', 1606, 'IS', 1, 459);
  oDataElements.Add('Denial or Rejection Code', 1607, 'IS', 1, 460);
  oDataElements.Add('OCE Edit Code', 1608, 'IS', 3, 458);
  oDataElements.Add('Ambulatory Payment Classification Code', 1609, 'CWE', 250, 466);
  oDataElements.Add('Modifier Edit Code', 1610, 'IS', 1, 467);
  oDataElements.Add('Payment Adjustment Code', 1611, 'IS', 1, 468);
  oDataElements.Add('Set ID - IAM', 1612, 'SI', 4, 0);
  oDataElements.Add('Institution', 1613, 'CWE', 250, 537);
  oDataElements.Add('Health Care Provider Classification Code', 1614, 'CWE', 250, 453);
  oDataElements.Add('Health Care Provider Area of Specialization Code', 1615, 'CWE', 250, 454);
  oDataElements.Add('Set ID - PRA', 1616, 'SI', 60, 0);
  oDataElements.Add('Packaging Status Code', 1617, 'IS', 1, 469);
  oDataElements.Add('Expected CMS Payment Amount', 1618, 'CP', 12, 0);
  oDataElements.Add('Reimbursement Type Code', 1619, 'IS', 2, 470);
  oDataElements.Add('Co-Pay Amount', 1620, 'CP', 12, 0);
  oDataElements.Add('Pay Rate per Service Unit', 1621, 'NM', 4, 0);
  oDataElements.Add('This payload', 1622, 'NM', 10, 0);
  oDataElements.Add('Hits remaining', 1623, 'NM', 10, 0);
  oDataElements.Add('Sort-by Field', 1624, 'SRT', 512, 0);
  oDataElements.Add('Organization Unit Type Code', 1625, 'CWE', 250, 474);
  oDataElements.Add('On Board Stability Time', 1626, 'CQ', 722, 0);
  oDataElements.Add('Set ID - TQ1', 1627, 'SI', 4, 0);
  oDataElements.Add('Quantity', 1628, 'CQ', 20, 0);
  oDataElements.Add('Repeat Pattern', 1629, 'RPT', 540, 0);
  oDataElements.Add('Explicit Time', 1630, 'TM', 20, 0);
  oDataElements.Add('Relative Time and Units', 1631, 'CQ', 20, 0);
  oDataElements.Add('Service Duration', 1632, 'CQ', 20, 0);
  oDataElements.Add('Start date/time', 1633, 'DTM', 24, 0);
  oDataElements.Add('End date/time', 1634, 'DTM', 24, 0);
  oDataElements.Add('Priority', 1635, 'CWE', 250, 485);
  oDataElements.Add('Condition text', 1636, 'TX', 250, 0);
  oDataElements.Add('Text instruction', 1637, 'TX', 250, 0);
  oDataElements.Add('Conjunction', 1638, 'ID', 10, 472);
  oDataElements.Add('Occurrence duration', 1639, 'CQ', 20, 0);
  oDataElements.Add('Total occurrences', 1640, 'NM', 10, 0);
  oDataElements.Add('Advanced Beneficiary Notice Override Reason', 1641, 'CWE', 60, 552);
  oDataElements.Add('Filler''s Expected Availability Date/Time', 1642, 'DTM', 24, 0);
  oDataElements.Add('Order Type', 1643, 'CWE', 250, 482);
  oDataElements.Add('Enterer Authorization Mode', 1644, 'CNE', 250, 483);
  oDataElements.Add('Charge Type Reason', 1645, 'CWE', 60, 475);
  oDataElements.Add('Medically Necessary Duplicate Procedure Reason', 1646, 'CWE', 705, 476);
  oDataElements.Add('Result Handling', 1647, 'IS', 2, 507);
  oDataElements.Add('Set ID - TQ2', 1648, 'SI', 4, 0);
  oDataElements.Add('Sequence/Results Flag', 1649, 'ID', 1, 503);
  oDataElements.Add('Related Placer Number', 1650, 'EI', 22, 0);
  oDataElements.Add('Related Filler Number', 1651, 'EI', 22, 0);
  oDataElements.Add('Related Placer Group Number', 1652, 'EI', 22, 0);
  oDataElements.Add('Sequence Condition Code', 1653, 'ID', 2, 504);
  oDataElements.Add('Cyclic Entry/Exit Indicator', 1654, 'ID', 1, 505);
  oDataElements.Add('Sequence Condition Time Interval', 1655, 'CQ', 20, 0);
  oDataElements.Add('Cyclic Group Maximum Number of Repeats', 1656, 'NM', 10, 0);
  oDataElements.Add('Special Service Request Relationship', 1657, 'ID', 1, 506);
  oDataElements.Add('Requested Procedure ID', 1658, 'EI', 22, 0);
  oDataElements.Add('Study Instance UID', 1659, 'EI', 70, 0);
  oDataElements.Add('Scheduled Procedure Step ID', 1660, 'EI', 22, 0);
  oDataElements.Add('Modality', 1661, 'CWE', 16, 9999);
  oDataElements.Add('Protocol Code', 1662, 'CWE', 250, 9999);
  oDataElements.Add('Scheduled Station Name', 1663, 'EI', 22, 0);
  oDataElements.Add('Scheduled Procedure Step Location', 1664, 'CWE', 250, 9999);
  oDataElements.Add('Scheduled Station AE Title', 1665, 'ST', 16, 0);
  oDataElements.Add('Requested Drug Strength Volume', 1666, 'NM', 5, 0);
  oDataElements.Add('Requested Drug Strength Volume Units', 1667, 'CWE', 250, 9999);
  oDataElements.Add('Pharmacy Order Type', 1668, 'ID', 1, 480);
  oDataElements.Add('Dispensing Interval', 1669, 'NM', 20, 0);
  oDataElements.Add('Administration Site Modifier', 1670, 'CWE', 250, 495);
  oDataElements.Add('Component Drug Strength Volume', 1671, 'NM', 5, 0);
  oDataElements.Add('Component Drug Strength Volume Units', 1672, 'CWE', 250, 9999);
  oDataElements.Add('Original Order Date/Time', 1673, 'DTM', 24, 0);
  oDataElements.Add('Give Drug Strength Volume', 1674, 'NM', 5, 0);
  oDataElements.Add('Give Drug Strength Volume Units', 1675, 'CWE', 250, 9999);
  oDataElements.Add('Controlled Substance Schedule', 1676, 'CWE', 60, 477);
  oDataElements.Add('Formulary Status', 1677, 'ID', 1, 478);
  oDataElements.Add('Pharmaceutical Substance Alternative', 1678, 'CWE', 60, 9999);
  oDataElements.Add('Pharmacy of Most Recent Fill', 1679, 'CWE', 250, 9999);
  oDataElements.Add('Initial Dispense Amount', 1680, 'NM', 250, 0);
  oDataElements.Add('Dispensing Pharmacy', 1681, 'CWE', 250, 9999);
  oDataElements.Add('Dispensing Pharmacy Address', 1682, 'XAD', 250, 0);
  oDataElements.Add('Deliver-to Patient Location', 1683, 'PL', 80, 0);
  oDataElements.Add('Deliver-to Address', 1684, 'XAD', 250, 0);
  oDataElements.Add('Pharmacy Order Type', 1685, 'ID', 1, 480);
  oDataElements.Add('Actual Drug Strength Volume', 1686, 'NM', 5, 0);
  oDataElements.Add('Actual Drug Strength Volume Units', 1687, 'CWE', 250, 9999);
  oDataElements.Add('Dispense to Pharmacy', 1688, 'CWE', 180, 9999);
  oDataElements.Add('Dispense to Pharmacy Address', 1689, 'XAD', 106, 0);
  oDataElements.Add('Pharmacy Order Type', 1690, 'ID', 1, 480);
  oDataElements.Add('Dispense Type', 1691, 'CWE', 250, 484);
  oDataElements.Add('Give Drug Strength Volume', 1692, 'NM', 5, 0);
  oDataElements.Add('Give Drug Strength Volume Units', 1693, 'CWE', 250, 9999);
  oDataElements.Add('Give Barcode Identifier', 1694, 'CWE', 60, 9999);
  oDataElements.Add('Pharmacy Order Type', 1695, 'ID', 1, 480);
  oDataElements.Add('Administered Drug Strength Volume', 1696, 'NM', 5, 0);
  oDataElements.Add('Administered Drug Strength Volume Units', 1697, 'CWE', 250, 9999);
  oDataElements.Add('Administered Barcode Identifier', 1698, 'CWE', 60, 9999);
  oDataElements.Add('Pharmacy Order Type', 1699, 'ID', 1, 480);
  oDataElements.Add('Set ID - BPO', 1700, 'SI', 4, 0);
  oDataElements.Add('BP Universal Service Identifier', 1701, 'CWE', 250, 9999);
  oDataElements.Add('BP  Processing Requirements', 1702, 'CWE', 250, 508);
  oDataElements.Add('BP Quantity', 1703, 'NM', 5, 0);
  oDataElements.Add('BP Amount', 1704, 'NM', 5, 0);
  oDataElements.Add('BP Units', 1705, 'CWE', 250, 9999);
  oDataElements.Add('BP Intended Use Date/Time', 1706, 'DTM', 24, 0);
  oDataElements.Add('BP Intended Dispense From Location', 1707, 'PL', 80, 0);
  oDataElements.Add('BP Intended Dispense From Address', 1708, 'XAD', 250, 0);
  oDataElements.Add('BP Requested Dispense Date/Time', 1709, 'DTM', 24, 0);
  oDataElements.Add('BP Requested Dispense To Location', 1710, 'PL', 80, 0);
  oDataElements.Add('BP Requested Dispense To Address', 1711, 'XAD', 250, 0);
  oDataElements.Add('BP Indication for Use', 1712, 'CWE', 250, 509);
  oDataElements.Add('BP Informed Consent Indicator', 1713, 'ID', 1, 136);
  oDataElements.Add('Set ID - BPX', 1714, 'SI', 4, 0);
  oDataElements.Add('BP Dispense Status', 1715, 'CWE', 250, 510);
  oDataElements.Add('BP Status', 1716, 'ID', 1, 511);
  oDataElements.Add('BP Date/Time of Status', 1717, 'DTM', 24, 0);
  oDataElements.Add('BC Donation ID', 1718, 'EI', 22, 0);
  oDataElements.Add('BC Component', 1719, 'CNE', 250, 9999);
  oDataElements.Add('BC Donation Type / Intended Use', 1720, 'CNE', 250, 9999);
  oDataElements.Add('CP Commercial Product', 1721, 'CWE', 250, 512);
  oDataElements.Add('CP Manufacturer', 1722, 'XON', 250, 0);
  oDataElements.Add('CP Lot Number', 1723, 'EI', 22, 0);
  oDataElements.Add('BP Blood Group', 1724, 'CNE', 250, 9999);
  oDataElements.Add('BC Special Testing', 1725, 'CNE', 250, 9999);
  oDataElements.Add('BP Expiration Date/Time', 1726, 'DTM', 24, 0);
  oDataElements.Add('BP Quantity', 1727, 'NM', 5, 0);
  oDataElements.Add('BP Amount', 1728, 'NM', 5, 0);
  oDataElements.Add('BP Units', 1729, 'CWE', 250, 9999);
  oDataElements.Add('BP Unique ID', 1730, 'EI', 22, 0);
  oDataElements.Add('BP Actual Dispensed To Location', 1731, 'PL', 80, 0);
  oDataElements.Add('BP Actual Dispensed To Address', 1732, 'XAD', 250, 0);
  oDataElements.Add('BP Dispensed to Receiver', 1733, 'XCN', 250, 0);
  oDataElements.Add('BP Dispensing Individual', 1734, 'XCN', 250, 0);
  oDataElements.Add('Set ID - BTX', 1735, 'SI', 4, 0);
  oDataElements.Add('BC Donation ID', 1736, 'EI', 22, 0);
  oDataElements.Add('BC Component', 1737, 'CNE', 250, 9999);
  oDataElements.Add('BC Blood Group', 1738, 'CNE', 250, 9999);
  oDataElements.Add('CP Commercial Product', 1739, 'CWE', 250, 512);
  oDataElements.Add('CP Manufacturer', 1740, 'XON', 250, 0);
  oDataElements.Add('CP Lot Number', 1741, 'EI', 22, 0);
  oDataElements.Add('BP Quantity', 1742, 'NM', 5, 0);
  oDataElements.Add('BP Amount', 1743, 'NM', 5, 0);
  oDataElements.Add('BP Units', 1744, 'CWE', 250, 9999);
  oDataElements.Add('BP Transfusion/Disposition Status', 1745, 'CWE', 250, 513);
  oDataElements.Add('BP Message Status', 1746, 'ID', 1, 511);
  oDataElements.Add('BP Date/Time of Status', 1747, 'DTM', 24, 0);
  oDataElements.Add('BP Transfusion Administrator', 1748, 'XCN', 250, 0);
  oDataElements.Add('BP Transfusion Verifier', 1749, 'XCN', 250, 0);
  oDataElements.Add('BP Transfusion Start Date/Time of Status', 1750, 'DTM', 24, 0);
  oDataElements.Add('BP Transfusion End Date/Time of Status', 1751, 'DTM', 24, 0);
  oDataElements.Add('BP Adverse Reaction Type', 1752, 'CWE', 250, 514);
  oDataElements.Add('BP Transfusion Interrupted Reason', 1753, 'CWE', 250, 515);
  oDataElements.Add('Set ID - SPM', 1754, 'SI', 4, 0);
  oDataElements.Add('Specimen ID', 1755, 'EIP', 855, 0);
  oDataElements.Add('Specimen Parent IDs', 1756, 'EIP', 855, 0);
  oDataElements.Add('Specimen Type Modifier', 1757, 'CWE', 705, 541);
  oDataElements.Add('Specimen Additives', 1758, 'CWE', 705, 371);
  oDataElements.Add('Specimen Collection Method', 1759, 'CWE', 705, 488);
  oDataElements.Add('Specimen Source Site Modifier', 1760, 'CWE', 705, 542);
  oDataElements.Add('Specimen Collection Site', 1761, 'CWE', 705, 543);
  oDataElements.Add('Specimen Role', 1762, 'CWE', 705, 369);
  oDataElements.Add('Grouped Specimen Count', 1763, 'NM', 6, 0);
  oDataElements.Add('Specimen Description', 1764, 'ST', 250, 0);
  oDataElements.Add('Specimen Collection Date/Time', 1765, 'DR', 49, 0);
  oDataElements.Add('Specimen Availability', 1766, 'ID', 1, 136);
  oDataElements.Add('Specimen Reject Reason', 1767, 'CWE', 705, 490);
  oDataElements.Add('Specimen Quality', 1768, 'CWE', 705, 491);
  oDataElements.Add('Specimen Appropriateness', 1769, 'CWE', 705, 492);
  oDataElements.Add('Specimen Condition', 1770, 'CWE', 705, 493);
  oDataElements.Add('Specimen Current Quantity', 1771, 'CQ', 722, 0);
  oDataElements.Add('Number of Specimen Containers', 1772, 'NM', 4, 0);
  oDataElements.Add('Container Type', 1773, 'CWE', 705, 9999);
  oDataElements.Add('Container Condition', 1774, 'CWE', 705, 544);
  oDataElements.Add('Specimen Child Role', 1775, 'CWE', 705, 494);
  oDataElements.Add('Set ID - CON', 1776, 'SI', 4, 0);
  oDataElements.Add('Consent Type', 1777, 'CWE', 705, 496);
  oDataElements.Add('Consent Form ID and Version', 1778, 'ST', 40, 0);
  oDataElements.Add('Consent Form Number', 1779, 'EI', 427, 0);
  oDataElements.Add('Consent Text', 1780, 'FT', 65536, 0);
  oDataElements.Add('Subject-specific Consent Text', 1781, 'FT', 65536, 0);
  oDataElements.Add('Consent Background Information', 1782, 'FT', 65536, 0);
  oDataElements.Add('Subject-specific Consent Background Text', 1783, 'FT', 65536, 0);
  oDataElements.Add('Consenter-imposed limitations', 1784, 'FT', 65536, 0);
  oDataElements.Add('Consent Mode', 1785, 'CNE', 2, 497);
  oDataElements.Add('Consent Status', 1786, 'CNE', 2, 498);
  oDataElements.Add('Consent Discussion Date/Time', 1787, 'DTM', 24, 0);
  oDataElements.Add('Consent Decision Date/Time', 1788, 'DTM', 24, 0);
  oDataElements.Add('Consent Effective Date/Time', 1789, 'DTM', 24, 0);
  oDataElements.Add('Consent End Date/Time', 1790, 'DTM', 24, 0);
  oDataElements.Add('Subject Competence Indicator', 1791, 'ID', 1, 136);
  oDataElements.Add('Translator Assistance Indicator', 1792, 'ID', 1, 136);
  oDataElements.Add('Language Translated To', 1793, 'CWE', 250, 296);
  oDataElements.Add('Informational Material Supplied Indicator', 1794, 'ID', 1, 136);
  oDataElements.Add('Consent Bypass Reason', 1795, 'CWE', 705, 499);
  oDataElements.Add('Consent Disclosure Level', 1796, 'ID', 1, 500);
  oDataElements.Add('Consent Non-disclosure Reason', 1797, 'CWE', 705, 501);
  oDataElements.Add('Non-subject Consenter Reason', 1798, 'CWE', 705, 502);
  oDataElements.Add('Service Item Code', 1799, 'CWE', 250, 0);
  oDataElements.Add('Inventory Lot Number', 1800, 'ST', 250, 0);
  oDataElements.Add('Inventory Expiration Date', 1801, 'DTM', 24, 0);
  oDataElements.Add('Inventory Manufacturer Name', 1802, 'CWE', 250, 0);
  oDataElements.Add('Inventory Location', 1803, 'CWE', 250, 0);
  oDataElements.Add('Inventory Received Date', 1804, 'DTM', 24, 0);
  oDataElements.Add('Inventory Received Quantity', 1805, 'NM', 12, 0);
  oDataElements.Add('Inventory Received Quantity Unit', 1806, 'CWE', 250, 0);
  oDataElements.Add('Inventory Received Item Cost', 1807, 'MO', 12, 0);
  oDataElements.Add('Inventory On Hand Date', 1808, 'DTM', 24, 0);
  oDataElements.Add('Inventory On Hand Quantity', 1809, 'NM', 12, 0);
  oDataElements.Add('Inventory On Hand Quantity Unit', 1810, 'CWE', 250, 0);
  oDataElements.Add('Error Location', 1812, 'ERL', 18, 0);
  oDataElements.Add('HL7 Error Code', 1813, 'CWE', 705, 357);
  oDataElements.Add('Severity', 1814, 'ID', 2, 516);
  oDataElements.Add('Application Error Code', 1815, 'CWE', 705, 533);
  oDataElements.Add('Application Error Parameter', 1816, 'ST', 80, 0);
  oDataElements.Add('Diagnostic Information', 1817, 'TX', 2048, 0);
  oDataElements.Add('User Message', 1818, 'TX', 250, 0);
  oDataElements.Add('Inform Person Indicator', 1819, 'IS', 20, 517);
  oDataElements.Add('Override Type', 1820, 'CWE', 705, 518);
  oDataElements.Add('Override Reason Code', 1821, 'CWE', 705, 519);
  oDataElements.Add('Help Desk Contact Point', 1822, 'XTN', 652, 0);
  oDataElements.Add('Sending Responsible Organization', 1823, 'XON', 567, 0);
  oDataElements.Add('Receiving Responsible Organization', 1824, 'XON', 567, 0);
  oDataElements.Add('Sending Network Address', 1825, 'HD', 227, 0);
  oDataElements.Add('Receiving Network Address', 1826, 'HD', 227, 0);
  oDataElements.Add('Message Waiting Number', 1827, 'NM', 5, 0);
  oDataElements.Add('Message Waiting Priority', 1828, 'ID', 1, 520);
  oDataElements.Add('Business Rule Override Type', 1829, 'CWE', 705, 518);
  oDataElements.Add('Business Rule Override Code', 1830, 'CWE', 705, 521);
  oDataElements.Add('Override Comments', 1831, 'TX', 200, 0);
  oDataElements.Add('Override Entered By', 1832, 'XCN', 250, 0);
  oDataElements.Add('Override Authorized By', 1833, 'XCN', 250, 0);
  oDataElements.Add('Software Vendor Organization', 1834, 'XON', 567, 0);
  oDataElements.Add('Software Certified Version or Release Number', 1835, 'ST', 15, 0);
  oDataElements.Add('Software Product Name', 1836, 'ST', 20, 0);
  oDataElements.Add('Software Binary ID', 1837, 'ST', 20, 0);
  oDataElements.Add('Software Product Information', 1838, 'TX', 1024, 0);
  oDataElements.Add('Software Install Date', 1839, 'DTM', 24, 0);
  oDataElements.Add('Tribal Citizenship', 1840, 'CWE', 705, 171);
  oDataElements.Add('Expected Pre-admission Testing Date/Time', 1841, 'DTM', 24, 0);
  oDataElements.Add('Notify Clergy Code', 1842, 'IS', 20, 534);
  oDataElements.Add('NDC Code', 1845, 'CWE', 250, 549);
  oDataElements.Add('Payment Reference ID', 1846, 'CX', 250, 0);
  oDataElements.Add('Transaction Reference Key', 1847, 'SI', 4, 0);
  oDataElements.Add('Procedure Identifier', 1848, 'EI', 427, 0);
  oDataElements.Add('Procedure Action Code', 1849, 'ID', 1, 206);
  oDataElements.Add('Diagnosis Identifier', 1850, 'EI', 427, 0);
  oDataElements.Add('Guarantor Birth Place', 1851, 'ST', 250, 0);
  oDataElements.Add('VIP Indicator', 1852, 'IS', 2, 99);
  oDataElements.Add('Accident Address', 1853, 'XAD', 250, 0);
  oDataElements.Add('Signature Code', 1854, 'IS', 1, 535);
  oDataElements.Add('Signature Code Date', 1855, 'DT', 8, 0);
  oDataElements.Add('Set ID - CER', 1856, 'SI', 4, 0);
  oDataElements.Add('Serial Number', 1857, 'ST', 80, 0);
  oDataElements.Add('Version', 1858, 'ST', 80, 0);
  oDataElements.Add('Granting Authority', 1859, 'XON', 250, 0);
  oDataElements.Add('Issuing Authority', 1860, 'XCN', 250, 0);
  oDataElements.Add('Signature of Issuing Authority', 1861, 'ED', 65536, 0);
  oDataElements.Add('Granting Country', 1862, 'ID', 3, 399);
  oDataElements.Add('Granting State/Province', 1863, 'CWE', 250, 347);
  oDataElements.Add('Granting County/Parish', 1864, 'CWE', 250, 289);
  oDataElements.Add('Certificate Type', 1865, 'CWE', 250, 0);
  oDataElements.Add('Certificate Domain', 1866, 'CWE', 250, 0);
  oDataElements.Add('Subject ID', 1867, 'ID', 250, 0);
  oDataElements.Add('Subject Directory Attribute Extension', 1868, 'CWE', 250, 0);
  oDataElements.Add('Subject Public Key Info', 1869, 'CWE', 250, 0);
  oDataElements.Add('Authority Key Identifier', 1870, 'CWE', 250, 0);
  oDataElements.Add('Basic Constraint', 1871, 'ID', 250, 136);
  oDataElements.Add('CRL Distribution Point', 1872, 'CWE', 250, 0);
  oDataElements.Add('Jurisdiction State/Province', 1873, 'CWE', 250, 347);
  oDataElements.Add('Jurisdiction County/Parish', 1874, 'CWE', 250, 289);
  oDataElements.Add('Jurisdiction Country', 1875, 'ID', 3, 399);
  oDataElements.Add('Granting Date', 1876, 'DTM', 24, 0);
  oDataElements.Add('Issuing Date', 1877, 'DTM', 24, 0);
  oDataElements.Add('Activation Date', 1878, 'DTM', 24, 0);
  oDataElements.Add('Inactivation Date', 1879, 'DTM', 24, 0);
  oDataElements.Add('Expiration Date', 1880, 'DTM', 24, 0);
  oDataElements.Add('Renewal Date', 1881, 'DTM', 24, 0);
  oDataElements.Add('Revocation Date', 1882, 'DTM', 24, 0);
  oDataElements.Add('Revocation Reason Code', 1883, 'CWE', 250, 0);
  oDataElements.Add('Certificate Status Code', 1884, 'CWE', 250, 536);
  oDataElements.Add('Major Field of Study', 1885, 'CWE', 250, 0);
  oDataElements.Add('Date/Time of Death', 1886, 'DTM', 8, 0);
  oDataElements.Add('Death Indicator', 1887, 'ID', 1, 136);
  oDataElements.Add('Institution Relationship Type Code', 1888, 'CWE', 250, 538);
  oDataElements.Add('Institution Relationship Period', 1889, 'DR', 52, 0);
  oDataElements.Add('Expected Return Date', 1890, 'DT', 8, 0);
  oDataElements.Add('Cost Center Code', 1891, 'CWE', 250, 539);
  oDataElements.Add('Generic Classification Indicator', 1892, 'ID', 1, 136);
  oDataElements.Add('Inactive Reason Code', 1893, 'CWE', 250, 540);
  oDataElements.Add('Diagnosis Action Code', 1894, 'ID', 1, 206);
  oDataElements.Add('Jurisdiction Breadth', 1895, 'CWE', 250, 547);
  oDataElements.Add('Target Value', 1896, 'CQ', 722, 0);
  oDataElements.Add('Primary Key Value - IIM', 1897, 'CWE', 250, 0);
  oDataElements.Add('Relationship to Subject', 1898, 'IS', 100, 548);
  oDataElements.Add('Insured''s Birth Place', 1899, 'ST', 250, 0);
  oDataElements.Add('Specimen Type', 1900, 'CWE', 705, 487);
  oDataElements.Add('Specimen Source Site', 1901, 'CWE', 705, 9999);
  oDataElements.Add('Specimen Collection Amount', 1902, 'CQ', 20, 0);
  oDataElements.Add('Specimen Risk Code', 1903, 'CWE', 705, 489);
  oDataElements.Add('Specimen Expiration Date/Time', 1904, 'DTM', 24, 0);
  oDataElements.Add('Next of Kin Birth Place', 1905, 'ST', 250, 0);
  oDataElements.Add('Subject Name', 1907, 'ST', 250, 0);
  oDataElements.Add('Specimen Handling Code', 1908, 'CWE', 705, 376);
  oDataElements.Add('Consenter ID', 1909, 'XPN', 250, 0);
  oDataElements.Add('Request Date', 1910, 'DTM', 24, 0);
  oDataElements.Add('Response Due Date', 1911, 'DTM', 24, 0);
  oDataElements.Add('Patient Consent', 1912, 'ID', 1, 136);
  oDataElements.Add('Date Additional Information was submitted', 1913, 'DTM', 24, 0);
  oDataElements.Add('Provider Invoice Number', 1914, 'EI', 74, 0);
  oDataElements.Add('Payer Invoice Number', 1915, 'EI', 74, 0);
  oDataElements.Add('Contract/Agreement Number', 1916, 'EI', 74, 0);
  oDataElements.Add('Invoice Control', 1917, 'IS', 2, 553);
  oDataElements.Add('Invoice Reason', 1918, 'IS', 4, 554);
  oDataElements.Add('Invoice Type', 1919, 'IS', 2, 555);
  oDataElements.Add('Invoice Date/Time', 1920, 'DTM', 24, 0);
  oDataElements.Add('Invoice Amount', 1921, 'CP', 254, 0);
  oDataElements.Add('Payment Terms', 1922, 'ST', 80, 0);
  oDataElements.Add('Provider Organization', 1923, 'XON', 183, 0);
  oDataElements.Add('Payer Organization', 1924, 'XON', 183, 0);
  oDataElements.Add('Attention', 1925, 'XCN', 637, 0);
  oDataElements.Add('Last Invoice Indicator', 1926, 'ID', 1, 136);
  oDataElements.Add('Invoice Booking Period', 1927, 'DTM', 24, 0);
  oDataElements.Add('Origin', 1928, 'ST', 250, 0);
  oDataElements.Add('Invoice Fixed Amount', 1929, 'CP', 254, 0);
  oDataElements.Add('Special Costs', 1930, 'CP', 254, 0);
  oDataElements.Add('Amount for Doctors Treatment', 1931, 'CP', 254, 0);
  oDataElements.Add('Responsible Physician', 1932, 'XCN', 250, 0);
  oDataElements.Add('Cost Center', 1933, 'CX', 250, 0);
  oDataElements.Add('Invoice Prepaid Amount', 1934, 'CP', 254, 0);
  oDataElements.Add('Total Invoice Amount without Prepaid Amount', 1935, 'CP', 254, 0);
  oDataElements.Add('Total-Amount of VAT', 1936, 'CP', 254, 0);
  oDataElements.Add('VAT-Rates applied', 1937, 'NM', 1024, 0);
  oDataElements.Add('Benefit Group', 1938, 'IS', 4, 556);
  oDataElements.Add('Set ID - PYE', 1939, 'SI', 4, 0);
  oDataElements.Add('Payee Type', 1940, 'IS', 6, 557);
  oDataElements.Add('Payee Relationship to Invoice (Patient)', 1941, 'IS', 2, 558);
  oDataElements.Add('Payee Identification List', 1942, 'XON', 183, 0);
  oDataElements.Add('Payee Person Name', 1943, 'XPN', 466, 0);
  oDataElements.Add('Payee Address', 1944, 'XAD', 235, 0);
  oDataElements.Add('Payment Method', 1945, 'IS', 80, 570);
  oDataElements.Add('Provider Product/Service Section Number', 1946, 'EI', 73, 0);
  oDataElements.Add('Payer Product/Service Section Number', 1947, 'EI', 73, 0);
  oDataElements.Add('Product/Service Section Sequence Number', 1948, 'SI', 4, 0);
  oDataElements.Add('Billed Amount', 1949, 'CP', 254, 0);
  oDataElements.Add('Provider Product/Service Group Number', 1950, 'EI', 73, 0);
  oDataElements.Add('Payer Product/Service Group Number', 1951, 'EI', 73, 0);
  oDataElements.Add('Product/Service Group Sequence Number', 1952, 'SI', 4, 0);
  oDataElements.Add('Adjudicate as Group', 1953, 'ID', 1, 136);
  oDataElements.Add('Product/Service Group Billed Amount', 1954, 'CP', 254, 0);
  oDataElements.Add('Provider Product/Service Line Item Number', 1955, 'EI', 73, 0);
  oDataElements.Add('Payer Product/Service Line Item Number', 1956, 'EI', 73, 0);
  oDataElements.Add('Product/Service Line Item Sequence Number', 1957, 'SI', 4, 0);
  oDataElements.Add('Provider Tracking ID', 1958, 'EI', 20, 0);
  oDataElements.Add('Payer Tracking ID', 1959, 'EI', 20, 0);
  oDataElements.Add('Product/Service Line Item Status', 1960, 'CWE', 2, 559);
  oDataElements.Add('Product/Service Code', 1961, 'CWE', 177, 879);
  oDataElements.Add('Product/Service Code Modifier', 1962, 'CWE', 177, 880);
  oDataElements.Add('Product/Service Code Description', 1963, 'ST', 80, 0);
  oDataElements.Add('Product/Service Effective Date', 1964, 'DTM', 24, 0);
  oDataElements.Add('Product/Service Expiration Date', 1965, 'DTM', 24, 0);
  oDataElements.Add('Product/Service Quantity', 1966, 'CQ', 222, 560);
  oDataElements.Add('Product/Service Unit Cost', 1967, 'CP', 254, 0);
  oDataElements.Add('Number of Items per Unit', 1968, 'NM', 10, 0);
  oDataElements.Add('Product/Service Gross Amount', 1969, 'CP', 254, 0);
  oDataElements.Add('Product/Service Billed Amount', 1970, 'CP', 254, 0);
  oDataElements.Add('Product/Service Clarification Code Type', 1971, 'IS', 10, 561);
  oDataElements.Add('Product/Service Clarification Code Value', 1972, 'ST', 40, 0);
  oDataElements.Add('Health Document Reference Identifier', 1973, 'EI', 73, 0);
  oDataElements.Add('Processing Consideration Code', 1974, 'IS', 10, 562);
  oDataElements.Add('Restricted Disclosure Indicator', 1975, 'ID', 2, 532);
  oDataElements.Add('Related Product/Service Code Indicator', 1976, 'CWE', 177, 879);
  oDataElements.Add('Product/Service Amount for Physician', 1977, 'CP', 254, 0);
  oDataElements.Add('Product/Service Cost Factor', 1978, 'NM', 5, 0);
  oDataElements.Add('Billing Period', 1980, 'DR', 49, 0);
  oDataElements.Add('Days without Billing', 1981, 'NM', 5, 0);
  oDataElements.Add('Session-No', 1982, 'NM', 4, 0);
  oDataElements.Add('Executing Physician ID', 1983, 'XCN', 20, 0);
  oDataElements.Add('Responsible Physician ID', 1984, 'XCN', 20, 0);
  oDataElements.Add('Role Executing Physician', 1985, 'CWE', 10, 881);
  oDataElements.Add('Medical Role Executing Physician', 1986, 'CWE', 10, 882);
  oDataElements.Add('Side of body', 1987, 'CWE', 3, 894);
  oDataElements.Add('Number of TP''s PP', 1988, 'NM', 6, 0);
  oDataElements.Add('TP-Value PP', 1989, 'CP', 6, 0);
  oDataElements.Add('Internal Scaling Factor PP', 1990, 'NM', 4, 0);
  oDataElements.Add('External Scaling Factor PP', 1991, 'NM', 4, 0);
  oDataElements.Add('Amount PP', 1992, 'CP', 7, 0);
  oDataElements.Add('Number of TP''s Technical Part', 1993, 'NM', 6, 0);
  oDataElements.Add('TP-Value Technical Part', 1994, 'CP', 6, 0);
  oDataElements.Add('Internal Scaling Factor Technical Part', 1995, 'NM', 4, 0);
  oDataElements.Add('External Scaling Factor Technical Part', 1996, 'NM', 4, 0);
  oDataElements.Add('Amount Technical Part', 1997, 'CP', 7, 0);
  oDataElements.Add('Total Amount Professional Part + Technical Part', 1998, 'CP', 8, 0);
  oDataElements.Add('VAT-Rate', 1999, 'NM', 3, 0);
  oDataElements.Add('Main-Service', 2000, 'ID', 20, 0);
  oDataElements.Add('Validation', 2001, 'ID', 1, 136);
  oDataElements.Add('Comment', 2002, 'ST', 255, 0);
  oDataElements.Add('Provider Adjustment Number', 2003, 'EI', 73, 0);
  oDataElements.Add('Payer Adjustment Number', 2004, 'EI', 73, 0);
  oDataElements.Add('Adjustment Sequence Number', 2005, 'SI', 4, 0);
  oDataElements.Add('Adjustment Category', 2006, 'IS', 4, 564);
  oDataElements.Add('Adjustment Amount', 2007, 'CP', 254, 0);
  oDataElements.Add('Adjustment Quantity', 2008, 'CQ', 222, 560);
  oDataElements.Add('Adjustment Reason PA', 2009, 'CWE', 211, 565);
  oDataElements.Add('Adjustment Description', 2010, 'ST', 250, 0);
  oDataElements.Add('Original Value', 2011, 'NM', 250, 0);
  oDataElements.Add('Substitute Value', 2012, 'NM', 250, 0);
  oDataElements.Add('Adjustment Action', 2013, 'IS', 4, 569);
  oDataElements.Add('Provider Adjustment Number Cross Reference', 2014, 'EI', 73, 0);
  oDataElements.Add('Provider Product/Service Line Item Number Cross Reference', 2015, 'EI', 73, 0);
  oDataElements.Add('Adjustment Date', 2016, 'DTM', 26, 0);
  oDataElements.Add('Responsible Organization', 2017, 'XON', 183, 0);
  oDataElements.Add('Payment/Remittance Advice Number', 2018, 'EI', 73, 0);
  oDataElements.Add('Payment/Remittance Effective Date/Time', 2019, 'DTM', 26, 0);
  oDataElements.Add('Payment/Remittance Expiration Date/Time', 2020, 'DTM', 26, 0);
  oDataElements.Add('Payment Method', 2021, 'CWE', 177, 570);
  oDataElements.Add('Payment/Remittance Date/Time', 2022, 'DTM', 26, 0);
  oDataElements.Add('Payment/Remittance Amount', 2023, 'CP', 254, 0);
  oDataElements.Add('Check Number', 2024, 'EI', 15, 0);
  oDataElements.Add('Payee Bank Identification', 2025, 'XON', 6, 0);
  oDataElements.Add('Payee Transit Number', 2026, 'ST', 4, 0);
  oDataElements.Add('Payee Bank Account ID', 2027, 'CX', 20, 0);
  oDataElements.Add('Payment Organization', 2028, 'XON', 183, 0);
  oDataElements.Add('ESR-Code-Line', 2029, 'ST', 100, 0);
  oDataElements.Add('IPR Identifier', 2030, 'EI', 73, 0);
  oDataElements.Add('Provider Cross Reference Identifier', 2031, 'EI', 73, 0);
  oDataElements.Add('Payer Cross Reference Identifier', 2032, 'EI', 73, 0);
  oDataElements.Add('IPR Status', 2033, 'CWE', 177, 571);
  oDataElements.Add('IPR Date/Time', 2034, 'DTM', 26, 0);
  oDataElements.Add('Adjudicated/Paid Amount', 2035, 'CP', 254, 0);
  oDataElements.Add('Expected Payment Date/Time', 2036, 'DTM', 26, 0);
  oDataElements.Add('IPR Checksum', 2037, 'ST', 10, 0);
  oDataElements.Add('Provider Tax ID', 2038, 'ST', 20, 0);
  oDataElements.Add('Payer Tax ID', 2039, 'ST', 20, 0);
  oDataElements.Add('Provider Tax status', 2040, 'IS', 4, 572);
  oDataElements.Add('Payer Tax status', 2041, 'IS', 4, 572);
  oDataElements.Add('Sales Tax ID', 2042, 'ST', 20, 0);
  oDataElements.Add('Section Description or Heading', 2043, 'ST', 254, 0);
  oDataElements.Add('Product/Service Group Description', 2044, 'ST', 254, 0);
  oDataElements.Add('Set Id - IVT', 2062, 'SI', 4, 0);
  oDataElements.Add('Inventory Location Identifier', 2063, 'EI', 250, 0);
  oDataElements.Add('Source Location Identifier', 2064, 'EI', 250, 0);
  oDataElements.Add('Item Status', 2065, 'CWE', 250, 625);
  oDataElements.Add('Bin Location Identifier', 2066, 'EI', 250, 0);
  oDataElements.Add('Order Packaging', 2067, 'CWE', 250, 0);
  oDataElements.Add('Issue Packaging', 2068, 'CWE', 250, 0);
  oDataElements.Add('Default Inventory Asset Account', 2069, 'EI', 16, 0);
  oDataElements.Add('Patient Chargeable Indicator', 2070, 'CNE', 4, 532);
  oDataElements.Add('Item Importance Code', 2073, 'CWE', 250, 634);
  oDataElements.Add('Stocked Item Indicator', 2074, 'CNE', 4, 532);
  oDataElements.Add('Consignment Item Indicator', 2075, 'CNE', 4, 532);
  oDataElements.Add('Reusable Item Indicator', 2076, 'CNE', 4, 532);
  oDataElements.Add('Reusable Cost', 2077, 'CP', 12, 0);
  oDataElements.Add('Substitute Item Identifier', 2078, 'EI', 250, 0);
  oDataElements.Add('Latex-Free Substitute Item Identifier', 2079, 'EI', 250, 0);
  oDataElements.Add('Recommended Reorder Theory', 2080, 'CWE', 250, 642);
  oDataElements.Add('Recommended Safety Stock Days', 2081, 'NM', 4, 0);
  oDataElements.Add('Recommended Maximum Days Inventory', 2082, 'NM', 4, 0);
  oDataElements.Add('Recommended Order Point', 2083, 'NM', 8, 0);
  oDataElements.Add('Recommended Order Amount', 2084, 'NM', 8, 0);
  oDataElements.Add('Operating Room Par Level Indicator', 2085, 'CNE', 4, 532);
  oDataElements.Add('Set Id - ILT', 2086, 'SI', 4, 0);
  oDataElements.Add('Number Of Decontamination/Sterilization Devices', 2087, 'NM', 2, 0);
  oDataElements.Add('Labor Calculation Type', 2088, 'CWE', 250, 651);
  oDataElements.Add('Date Format', 2089, 'CWE', 250, 653);
  oDataElements.Add('Device Number', 2090, 'EI', 8, 0);
  oDataElements.Add('Device Model Name', 2091, 'ST', 2, 0);
  oDataElements.Add('Device Type', 2092, 'CWE', 250, 657);
  oDataElements.Add('Lot Control', 2093, 'CWE', 250, 659);
  oDataElements.Add('Device Number', 2094, 'EI', 8, 0);
  oDataElements.Add('Lot Number', 2095, 'EI', 11, 0);
  oDataElements.Add('Item Identifier', 2096, 'EI', 250, 0);
  oDataElements.Add('Bar Code', 2097, 'ST', 30, 0);
  oDataElements.Add('Lot Number', 2098, 'EI', 11, 0);
  oDataElements.Add('Device Number', 2099, 'EI', 8, 0);
  oDataElements.Add('Device Data State', 2100, 'IS', 1, 667);
  oDataElements.Add('Load Status', 2101, 'IS', 3, 669);
  oDataElements.Add('Control Code', 2102, 'NM', 3, 0);
  oDataElements.Add('Operator Name', 2103, 'ST', 15, 0);
  oDataElements.Add('Cycle Start Time', 2104, 'TM', 16, 0);
  oDataElements.Add('Cycle Count', 2105, 'NM', 16, 0);
  oDataElements.Add('Temp Max', 2106, 'CQ', 36, 0);
  oDataElements.Add('Temp Min', 2107, 'CQ', 36, 0);
  oDataElements.Add('Load Number', 2108, 'NM', 16, 0);
  oDataElements.Add('Condition Time', 2109, 'CQ', 16, 0);
  oDataElements.Add('Sterilize Time', 2110, 'CQ', 16, 0);
  oDataElements.Add('Exhaust Time', 2111, 'CQ', 16, 0);
  oDataElements.Add('Total Cycle Time', 2112, 'CQ', 16, 0);
  oDataElements.Add('Device Status', 2113, 'CWE', 4, 682);
End;

procedure LoadDataElements5(oDataElements : THL7V2ModelDataElements);
Begin
  oDataElements.Add('Cycle Start Date/Time', 2114, 'DTM', 24, 0);
  oDataElements.Add('Dry Time', 2115, 'CQ', 16, 0);
  oDataElements.Add('Leak Rate', 2116, 'CQ', 16, 0);
  oDataElements.Add('Control Temperature', 2117, 'CQ', 36, 0);
  oDataElements.Add('Sterilizer Temperature', 2118, 'CQ', 36, 0);
  oDataElements.Add('Cycle Complete Time', 2119, 'TM', 16, 0);
  oDataElements.Add('Under Temperature', 2120, 'CQ', 36, 0);
  oDataElements.Add('Over Temperature', 2121, 'CQ', 36, 0);
  oDataElements.Add('Abort Cycle', 2122, 'CNE', 4, 532);
  oDataElements.Add('Alarm', 2123, 'CNE', 4, 532);
  oDataElements.Add('Long in Charge Phase', 2124, 'CNE', 4, 532);
  oDataElements.Add('Long in Exhaust Phase', 2125, 'CNE', 4, 532);
  oDataElements.Add('Long in Fast Exhaust Phase', 2126, 'CNE', 4, 532);
  oDataElements.Add('Reset', 2127, 'CNE', 4, 532);
  oDataElements.Add('Operator - Unload', 2128, 'XCN', 15, 0);
  oDataElements.Add('Door Open', 2129, 'CNE', 4, 532);
  oDataElements.Add('Reading Failure', 2130, 'CNE', 4, 532);
  oDataElements.Add('Cycle Type', 2131, 'CWE', 3, 702);
  oDataElements.Add('Thermal Rinse Time', 2132, 'CQ', 16, 0);
  oDataElements.Add('Wash Time', 2133, 'CQ', 16, 0);
  oDataElements.Add('Injection Rate', 2134, 'CQ', 16, 0);
  oDataElements.Add('Fill Time', 2139, 'CQ', 16, 0);
  oDataElements.Add('Inlet Temperature', 2140, 'CQ', 36, 0);
  oDataElements.Add('Advance Directive Last Verified Date', 2141, 'DT', 8, 0);
  oDataElements.Add('Set ID', 2143, 'SI', 4, 0);
  oDataElements.Add('Access Restriction Action Code', 2144, 'CNE', 705, 206);
  oDataElements.Add('Access Restriction Value', 2145, 'CWE', 705, 717);
  oDataElements.Add('Access Restriction Reason', 2146, 'CWE', 705, 719);
  oDataElements.Add('Special Access Restriction Instructions', 2147, 'ST', 250, 0);
  oDataElements.Add('Access Restriction Date Range', 2148, 'DR', 49, 0);
  oDataElements.Add('Medication Instance Identifier', 2149, 'EI', 60, 0);
  oDataElements.Add('Segment Instance Identifier', 2150, 'EI', 60, 0);
  oDataElements.Add('Mood Code', 2151, 'CNE', 2, 725);
  oDataElements.Add('Parent Diagnosis', 2152, 'EI', 427, 0);
  oDataElements.Add('DRG CCL Value Code', 2153, 'CWE', 705, 728);
  oDataElements.Add('DRG Grouping Usage', 2154, 'ID', 20, 136);
  oDataElements.Add('DRG Diagnosis Determination Status', 2155, 'IS', 20, 731);
  oDataElements.Add('Name of Coder', 2156, 'XPN', 1103, 0);
  oDataElements.Add('Grouper Status', 2157, 'CWE', 705, 734);
  oDataElements.Add('PCCL Value Code', 2158, 'CWE', 20, 728);
  oDataElements.Add('Effective Weight', 2159, 'NM', 5, 0);
  oDataElements.Add('Monetary Amount', 2160, 'MO', 20, 0);
  oDataElements.Add('Status Patient', 2161, 'IS', 20, 739);
  oDataElements.Add('Grouper Software Name', 2162, 'ST', 100, 0);
  oDataElements.Add('Status Financial Calculation', 2163, 'IS', 20, 742);
  oDataElements.Add('Relative Discount/Surcharge', 2164, 'MO', 20, 0);
  oDataElements.Add('Basic Charge', 2165, 'MO', 20, 0);
  oDataElements.Add('Total Charge', 2166, 'MO', 20, 0);
  oDataElements.Add('Discount/Surcharge', 2167, 'MO', 20, 0);
  oDataElements.Add('Calculated Days', 2168, 'NM', 5, 0);
  oDataElements.Add('Status Gender', 2169, 'IS', 20, 749);
  oDataElements.Add('Status Age', 2170, 'IS', 20, 749);
  oDataElements.Add('Status Length of Stay', 2171, 'IS', 20, 749);
  oDataElements.Add('Status Same Day Flag', 2172, 'IS', 20, 749);
  oDataElements.Add('Status Separation Mode', 2173, 'IS', 20, 749);
  oDataElements.Add('Status Weight at Birth', 2174, 'IS', 20, 755);
  oDataElements.Add('Status Respiration Minutes', 2175, 'IS', 20, 757);
  oDataElements.Add('Status Admission', 2176, 'IS', 20, 759);
  oDataElements.Add('DRG Procedure Determination Status', 2177, 'IS', 20, 761);
  oDataElements.Add('DRG Procedure Relevance', 2178, 'IS', 20, 763);
  oDataElements.Add('Observation Site', 2179, 'CWE', 705, 163);
  oDataElements.Add('Observation Instance Identifier', 2180, 'EI', 427, 0);
  oDataElements.Add('Mood Code', 2182, 'CNE', 705, 725);
  oDataElements.Add('Person''s Location', 2183, 'PL', 1230, 0);
  oDataElements.Add('Generic resource type or category', 2184, 'CWE', 1, 771);
  oDataElements.Add('Expiration Date', 2185, 'DTM', 24, 0);
  oDataElements.Add('Item Identifier', 2186, 'EI', 250, 0);
  oDataElements.Add('Item Status', 2187, 'CWE', 250, 776);
  oDataElements.Add('Item Type', 2188, 'CWE', 250, 778);
  oDataElements.Add('Item Category', 2189, 'CWE', 250, 0);
  oDataElements.Add('Subject to Expiration Indicator', 2190, 'CNE', 4, 532);
  oDataElements.Add('Manufacturer Identifier', 2191, 'EI', 250, 0);
  oDataElements.Add('Manufacturer Catalog Number', 2192, 'ST', 20, 0);
  oDataElements.Add('Manufacturer Labeler Identification Code', 2193, 'CWE', 4, 0);
  oDataElements.Add('Stocked Item Indicator', 2197, 'CNE', 4, 532);
  oDataElements.Add('Approving Regulatory Agency', 2199, 'XON', 250, 790);
  oDataElements.Add('Latex Indicator', 2200, 'CNE', 4, 532);
  oDataElements.Add('Ruling Act', 2201, 'CWE', 250, 793);
  oDataElements.Add('Approved To Buy Quantity', 2203, 'NM', 6, 0);
  oDataElements.Add('Approved To Buy Price', 2204, 'MO', 10, 0);
  oDataElements.Add('Taxable Item Indicator', 2205, 'CNE', 4, 532);
  oDataElements.Add('Freight Charge Indicator', 2206, 'CNE', 4, 532);
  oDataElements.Add('Item Set Indicator', 2207, 'CNE', 4, 532);
  oDataElements.Add('Item Set Identifier', 2208, 'EI', 250, 0);
  oDataElements.Add('Track Department Usage Indicator', 2209, 'CNE', 4, 532);
  oDataElements.Add('Sterilization Type', 2213, 'CWE', 250, 806);
  oDataElements.Add('Sterilization Cycle', 2214, 'CWE', 250, 0);
  oDataElements.Add('Maintenance Cycle', 2215, 'CWE', 250, 809);
  oDataElements.Add('Maintenance Type', 2216, 'CWE', 250, 811);
  oDataElements.Add('Set Id - VND', 2217, 'SI', 2, 0);
  oDataElements.Add('Vendor Identifier', 2218, 'EI', 250, 0);
  oDataElements.Add('Vendor Catalog Number', 2219, 'EI', 20, 0);
  oDataElements.Add('Primary Vendor Indicator', 2220, 'CNE', 1, 532);
  oDataElements.Add('Set Id - PKG', 2221, 'SI', 2, 0);
  oDataElements.Add('Packaging Units', 2222, 'CWE', 250, 818);
  oDataElements.Add('Default Order Unit Of Measure Indicator', 2223, 'CNE', 1, 532);
  oDataElements.Add('Package Quantity', 2224, 'NM', 12, 0);
  oDataElements.Add('Price', 2225, 'CP', 12, 0);
  oDataElements.Add('Future Item Price', 2226, 'CP', 12, 0);
  oDataElements.Add('Future Item Price Effective Date', 2227, 'DTM', 24, 0);
  oDataElements.Add('Set ID - PCE', 2228, 'SI', 2, 0);
  oDataElements.Add('Lower and Upper Trim Points', 2231, 'NR', 7, 0);
  oDataElements.Add('Average Length of Stay', 2232, 'NM', 5, 0);
  oDataElements.Add('Relative Weight', 2233, 'NM', 7, 0);
  oDataElements.Add('Problem Severity', 2234, 'CWE', 705, 836);
  oDataElements.Add('Problem Perspective', 2235, 'CWE', 705, 838);
  oDataElements.Add('Mood Code', 2237, 'CNE', 60, 725);
  oDataElements.Add('Mood Code', 2239, 'CNE', 60, 725);
  oDataElements.Add('Set ID -REL', 2240, 'SI', 4, 0);
  oDataElements.Add('Relationship Type', 2241, 'CWE', 705, 0);
  oDataElements.Add('This Relationship Instance Identifier', 2242, 'EI', 60, 0);
  oDataElements.Add('Source Information Instance Identifier', 2243, 'EI', 60, 0);
  oDataElements.Add('Target Information Instance Identifier', 2244, 'EI', 60, 0);
  oDataElements.Add('Asserting Entity Instance ID', 2245, 'EI', 60, 0);
  oDataElements.Add('Asserting Person', 2246, 'XCN', 250, 0);
  oDataElements.Add('Asserting Organization', 2247, 'XON', 250, 0);
  oDataElements.Add('Assertor Address', 2248, 'XAD', 250, 0);
  oDataElements.Add('Assertor Contact', 2249, 'XTN', 250, 0);
  oDataElements.Add('Assertion Date Range', 2250, 'DR', 53, 0);
  oDataElements.Add('Negation Indicator', 2251, 'ID', 1, 136);
  oDataElements.Add('Certainty of Relationship', 2252, 'CWE', 705, 0);
  oDataElements.Add('Priority No', 2253, 'NM', 26, 0);
  oDataElements.Add('Priority  Sequence No (rel preference for consideration)', 2254, 'NM', 250, 0);
  oDataElements.Add('Separability Indicator', 2255, 'ID', 1, 136);
  oDataElements.Add('Provider Organization Name and Identifier', 2256, 'XON', 250, 0);
  oDataElements.Add('Provider Organization Address', 2257, 'XAD', 60, 0);
  oDataElements.Add('Provider Organization Location Information', 2258, 'PL', 60, 0);
  oDataElements.Add('Provider Organization Communication Information', 2259, 'XTN', 250, 0);
  oDataElements.Add('Provider Organization Method of Contact', 2260, 'CWE', 705, 185);
  oDataElements.Add('Referral Documentation Completion Status', 2262, 'CWE', 705, 865);
  oDataElements.Add('Administer-at', 2264, 'PL', 180, 0);
  oDataElements.Add('Administered-at Address', 2265, 'XAD', 106, 0);
  oDataElements.Add('Supply Risk Codes', 2266, 'CWE', 250, 871);
  oDataElements.Add('User Authentication Credential Type Code', 2267, 'CWE', 705, 615);
  oDataElements.Add('User Authentication Credential', 2268, 'ED', 65536, 0);
  oDataElements.Add('File Sending Network Address', 2269, 'HD', 227, 0);
  oDataElements.Add('File Receiving Network Address', 2270, 'HD', 227, 0);
  oDataElements.Add('Batch Sending Network Address', 2271, 'HD', 227, 0);
  oDataElements.Add('Batch Receiving Network Address', 2272, 'HD', 227, 0);
  oDataElements.Add('Item Description', 2274, 'ST', 999, 0);
  oDataElements.Add('Manufacturer Name', 2275, 'ST', 999, 0);
  oDataElements.Add('Vendor Name', 2276, 'ST', 999, 0);
  oDataElements.Add('Inventory Location Name', 2277, 'ST', 999, 0);
  oDataElements.Add('Source Location Name', 2278, 'ST', 999, 0);
  oDataElements.Add('Device Name', 2279, 'ST', 999, 0);
  oDataElements.Add('Device Name', 2280, 'ST', 999, 0);
  oDataElements.Add('Device Name', 2281, 'ST', 999, 0);
  oDataElements.Add('Grouper Software Version', 2282, 'ST', 100, 0);
  oDataElements.Add('Performing Organization Name', 2283, 'XON', 570, 0);
  oDataElements.Add('Performing Organization Address', 2284, 'XAD', 2915, 0);
  oDataElements.Add('Performing Organization Medical Director', 2285, 'XCN', 3220, 0);
  oDataElements.Add('Parent Universal Service Identifier', 2286, 'CWE', 705, 0);
  oDataElements.Add('Parent Universal Service Identifier', 2287, 'CWE', 250, 0);
  oDataElements.Add('Present On Admission (POA) Indicator', 2288, 'IS', 1, 895);
End;

procedure Definitions26LoadDataElements(oDataElements : THL7V2ModelDataElements);
Begin
  LoadDataElements1(oDataElements);
  LoadDataElements2(oDataElements);
  LoadDataElements3(oDataElements);
  LoadDataElements4(oDataElements);
  LoadDataElements5(oDataElements);
End;

procedure Definitions26LoadSegments(oSegments : THL7V2ModelSegments);
Var
  oSegment : THL7V2ModelSegment;
Begin
  oSegments.Add('<', 'begin choice');
  oSegments.Add('>', 'end choice');
  oSegment := oSegments.Add('ABS', 'Abstract');
    oSegment.Fields.Add(1514, False, 0, False, 1);
    oSegment.Fields.Add(1515, False, 0, False, 2);
    oSegment.Fields.Add(1516, False, 0, False, 3);
    oSegment.Fields.Add(1517, False, 0, False, 4);
    oSegment.Fields.Add(1518, False, 0, False, 5);
    oSegment.Fields.Add(1519, False, 0, False, 6);
    oSegment.Fields.Add(1520, False, 0, False, 7);
    oSegment.Fields.Add(1521, False, 0, False, 8);
    oSegment.Fields.Add(1522, False, 0, False, 9);
    oSegment.Fields.Add(1523, False, 0, False, 10);
    oSegment.Fields.Add(1524, False, 0, False, 11);
    oSegment.Fields.Add(1525, False, 0, False, 12);
    oSegment.Fields.Add(1526, False, 0, False, 13);
    oSegment.Fields.Add(1527, False, 0, False, 14);
  oSegment := oSegments.Add('ACC', 'Accident');
    oSegment.Fields.Add(527, False, 0, False, 1);
    oSegment.Fields.Add(528, False, 0, False, 2);
    oSegment.Fields.Add(529, False, 0, False, 3);
    oSegment.Fields.Add(812, False, 0, False, 4);
    oSegment.Fields.Add(813, False, 0, False, 5);
    oSegment.Fields.Add(814, False, 0, False, 6);
    oSegment.Fields.Add(224, False, 0, False, 7);
    oSegment.Fields.Add(1503, False, 0, False, 8);
    oSegment.Fields.Add(1504, False, 0, False, 9);
    oSegment.Fields.Add(1505, False, 0, False, 10);
    oSegment.Fields.Add(1853, False, 0, False, 11);
  oSegment := oSegments.Add('ADD', 'Addendum');
    oSegment.Fields.Add(66, False, 0, False, 1);
  oSegment := oSegments.Add('ADJ', 'Adjustment');
    oSegment.Fields.Add(2003, False, 0, True, 1);
    oSegment.Fields.Add(2004, False, 0, True, 2);
    oSegment.Fields.Add(2005, False, 0, True, 3);
    oSegment.Fields.Add(2006, False, 0, True, 4);
    oSegment.Fields.Add(2007, False, 0, False, 5);
    oSegment.Fields.Add(2008, False, 0, False, 6);
    oSegment.Fields.Add(2009, False, 0, False, 7);
    oSegment.Fields.Add(2010, False, 0, False, 8);
    oSegment.Fields.Add(2011, False, 0, False, 9);
    oSegment.Fields.Add(2012, False, 0, False, 10);
    oSegment.Fields.Add(2013, False, 0, False, 11);
    oSegment.Fields.Add(2014, False, 0, False, 12);
    oSegment.Fields.Add(2015, False, 0, False, 13);
    oSegment.Fields.Add(2016, False, 0, True, 14);
    oSegment.Fields.Add(2017, False, 0, False, 15);
  oSegment := oSegments.Add('AFF', 'Professional Affiliation');
    oSegment.Fields.Add(1427, False, 0, True, 1);
    oSegment.Fields.Add(1444, False, 0, True, 2);
    oSegment.Fields.Add(1445, False, 0, False, 3);
    oSegment.Fields.Add(1446, True, 0, False, 4);
    oSegment.Fields.Add(1447, False, 0, False, 5);
  oSegment := oSegments.Add('AIG', 'Appointment Information - General Resource');
    oSegment.Fields.Add(896, False, 0, True, 1);
    oSegment.Fields.Add(763, False, 0, False, 2);
    oSegment.Fields.Add(897, False, 0, False, 3);
    oSegment.Fields.Add(898, False, 0, True, 4);
    oSegment.Fields.Add(899, True, 0, False, 5);
    oSegment.Fields.Add(900, False, 0, False, 6);
    oSegment.Fields.Add(901, False, 0, False, 7);
    oSegment.Fields.Add(1202, False, 0, False, 8);
    oSegment.Fields.Add(891, False, 0, False, 9);
    oSegment.Fields.Add(892, False, 0, False, 10);
    oSegment.Fields.Add(893, False, 0, False, 11);
    oSegment.Fields.Add(894, False, 0, False, 12);
    oSegment.Fields.Add(895, False, 0, False, 13);
    oSegment.Fields.Add(889, False, 0, False, 14);
  oSegment := oSegments.Add('AIL', 'Appointment Information - Location Resource');
    oSegment.Fields.Add(902, False, 0, True, 1);
    oSegment.Fields.Add(763, False, 0, False, 2);
    oSegment.Fields.Add(903, True, 0, False, 3);
    oSegment.Fields.Add(904, False, 0, False, 4);
    oSegment.Fields.Add(905, False, 0, False, 5);
    oSegment.Fields.Add(1202, False, 0, False, 6);
    oSegment.Fields.Add(891, False, 0, False, 7);
    oSegment.Fields.Add(892, False, 0, False, 8);
    oSegment.Fields.Add(893, False, 0, False, 9);
    oSegment.Fields.Add(894, False, 0, False, 10);
    oSegment.Fields.Add(895, False, 0, False, 11);
    oSegment.Fields.Add(889, False, 0, False, 12);
  oSegment := oSegments.Add('AIP', 'Appointment Information - Personnel Resource');
    oSegment.Fields.Add(906, False, 0, True, 1);
    oSegment.Fields.Add(763, False, 0, False, 2);
    oSegment.Fields.Add(913, True, 0, False, 3);
    oSegment.Fields.Add(907, False, 0, False, 4);
    oSegment.Fields.Add(899, False, 0, False, 5);
    oSegment.Fields.Add(1202, False, 0, False, 6);
    oSegment.Fields.Add(891, False, 0, False, 7);
    oSegment.Fields.Add(892, False, 0, False, 8);
    oSegment.Fields.Add(893, False, 0, False, 9);
    oSegment.Fields.Add(894, False, 0, False, 10);
    oSegment.Fields.Add(895, False, 0, False, 11);
    oSegment.Fields.Add(889, False, 0, False, 12);
  oSegment := oSegments.Add('AIS', 'Appointment Information');
    oSegment.Fields.Add(890, False, 0, True, 1);
    oSegment.Fields.Add(763, False, 0, False, 2);
    oSegment.Fields.Add(238, False, 0, True, 3);
    oSegment.Fields.Add(1202, False, 0, False, 4);
    oSegment.Fields.Add(891, False, 0, False, 5);
    oSegment.Fields.Add(892, False, 0, False, 6);
    oSegment.Fields.Add(893, False, 0, False, 7);
    oSegment.Fields.Add(894, False, 0, False, 8);
    oSegment.Fields.Add(895, False, 0, False, 9);
    oSegment.Fields.Add(889, False, 0, False, 10);
    oSegment.Fields.Add(1474, True, 0, False, 11);
    oSegment.Fields.Add(1475, True, 0, False, 12);
  oSegment := oSegments.Add('AL1', 'Patient Allergy Information');
    oSegment.Fields.Add(203, False, 0, True, 1);
    oSegment.Fields.Add(204, False, 0, False, 2);
    oSegment.Fields.Add(205, False, 0, True, 3);
    oSegment.Fields.Add(206, False, 0, False, 4);
    oSegment.Fields.Add(207, True, 0, False, 5);
    oSegment.Fields.Add(208, False, 0, False, 6);
  oSegment := oSegments.Add('APR', 'Appointment Preferences');
    oSegment.Fields.Add(908, True, 0, False, 1);
    oSegment.Fields.Add(909, True, 0, False, 2);
    oSegment.Fields.Add(910, True, 0, False, 3);
    oSegment.Fields.Add(911, False, 0, False, 4);
    oSegment.Fields.Add(912, True, 0, False, 5);
  oSegment := oSegments.Add('ARQ', 'Appointment Request');
    oSegment.Fields.Add(860, False, 0, True, 1);
    oSegment.Fields.Add(861, False, 0, False, 2);
    oSegment.Fields.Add(862, False, 0, False, 3);
    oSegment.Fields.Add(218, False, 0, False, 4);
    oSegment.Fields.Add(864, False, 0, False, 5);
    oSegment.Fields.Add(865, False, 0, False, 6);
    oSegment.Fields.Add(866, False, 0, False, 7);
    oSegment.Fields.Add(867, False, 0, False, 8);
    oSegment.Fields.Add(868, False, 0, False, 9);
    oSegment.Fields.Add(869, False, 0, False, 10);
    oSegment.Fields.Add(870, True, 0, False, 11);
    oSegment.Fields.Add(871, False, 0, False, 12);
    oSegment.Fields.Add(872, False, 0, False, 13);
    oSegment.Fields.Add(873, False, 0, False, 14);
    oSegment.Fields.Add(874, True, 0, True, 15);
    oSegment.Fields.Add(875, True, 0, False, 16);
    oSegment.Fields.Add(876, True, 0, False, 17);
    oSegment.Fields.Add(877, False, 0, False, 18);
    oSegment.Fields.Add(878, True, 0, True, 19);
    oSegment.Fields.Add(879, True, 0, False, 20);
    oSegment.Fields.Add(880, False, 0, False, 21);
    oSegment.Fields.Add(881, False, 0, False, 22);
    oSegment.Fields.Add(882, False, 0, False, 23);
    oSegment.Fields.Add(216, True, 0, False, 24);
    oSegment.Fields.Add(217, True, 0, False, 25);
  oSegment := oSegments.Add('ARV', 'Access Restriction');
    oSegment.Fields.Add(2143, False, 0, False, 1);
    oSegment.Fields.Add(2144, False, 0, True, 2);
    oSegment.Fields.Add(2145, False, 0, True, 3);
    oSegment.Fields.Add(2146, True, 0, False, 4);
    oSegment.Fields.Add(2147, True, 0, False, 5);
    oSegment.Fields.Add(2148, False, 0, False, 6);
  oSegment := oSegments.Add('AUT', 'Authorization Information');
    oSegment.Fields.Add(1146, False, 0, False, 1);
    oSegment.Fields.Add(1147, False, 0, True, 2);
    oSegment.Fields.Add(1148, False, 0, False, 3);
    oSegment.Fields.Add(1149, False, 0, False, 4);
    oSegment.Fields.Add(1150, False, 0, False, 5);
    oSegment.Fields.Add(1151, False, 0, False, 6);
    oSegment.Fields.Add(1152, False, 0, False, 7);
    oSegment.Fields.Add(1153, False, 0, False, 8);
    oSegment.Fields.Add(1154, False, 0, False, 9);
    oSegment.Fields.Add(1145, False, 0, False, 10);
  oSegment := oSegments.Add('BHS', 'Batch Header');
    oSegment.Fields.Add(81, False, 0, True, 1);
    oSegment.Fields.Add(82, False, 0, True, 2);
    oSegment.Fields.Add(83, False, 0, False, 3);
    oSegment.Fields.Add(84, False, 0, False, 4);
    oSegment.Fields.Add(85, False, 0, False, 5);
    oSegment.Fields.Add(86, False, 0, False, 6);
    oSegment.Fields.Add(87, False, 0, False, 7);
    oSegment.Fields.Add(88, False, 0, False, 8);
    oSegment.Fields.Add(89, False, 0, False, 9);
    oSegment.Fields.Add(90, False, 0, False, 10);
    oSegment.Fields.Add(91, False, 0, False, 11);
    oSegment.Fields.Add(92, False, 0, False, 12);
    oSegment.Fields.Add(2271, False, 0, False, 13);
    oSegment.Fields.Add(2272, False, 0, False, 14);
  oSegment := oSegments.Add('BLC', 'Blood Code');
    oSegment.Fields.Add(1528, False, 0, False, 1);
    oSegment.Fields.Add(1529, False, 0, False, 2);
  oSegment := oSegments.Add('BLG', 'Billing');
    oSegment.Fields.Add(234, False, 0, False, 1);
    oSegment.Fields.Add(235, False, 0, False, 2);
    oSegment.Fields.Add(236, False, 0, False, 3);
    oSegment.Fields.Add(1645, False, 0, False, 4);
  oSegment := oSegments.Add('BPO', 'Blood product order');
    oSegment.Fields.Add(1700, False, 0, True, 1);
    oSegment.Fields.Add(1701, False, 0, True, 2);
    oSegment.Fields.Add(1702, True, 0, False, 3);
    oSegment.Fields.Add(1703, False, 0, True, 4);
    oSegment.Fields.Add(1704, False, 0, False, 5);
    oSegment.Fields.Add(1705, False, 0, False, 6);
    oSegment.Fields.Add(1706, False, 0, False, 7);
    oSegment.Fields.Add(1707, False, 0, False, 8);
    oSegment.Fields.Add(1708, False, 0, False, 9);
    oSegment.Fields.Add(1709, False, 0, False, 10);
    oSegment.Fields.Add(1710, False, 0, False, 11);
    oSegment.Fields.Add(1711, False, 0, False, 12);
    oSegment.Fields.Add(1712, True, 0, False, 13);
    oSegment.Fields.Add(1713, False, 0, False, 14);
  oSegment := oSegments.Add('BPX', 'Blood product dispense status');
    oSegment.Fields.Add(1714, False, 0, True, 1);
    oSegment.Fields.Add(1715, False, 0, True, 2);
    oSegment.Fields.Add(1716, False, 0, True, 3);
    oSegment.Fields.Add(1717, False, 0, True, 4);
    oSegment.Fields.Add(1718, False, 0, False, 5);
    oSegment.Fields.Add(1719, False, 0, False, 6);
    oSegment.Fields.Add(1720, False, 0, False, 7);
    oSegment.Fields.Add(1721, False, 0, False, 8);
    oSegment.Fields.Add(1722, False, 0, False, 9);
    oSegment.Fields.Add(1723, False, 0, False, 10);
    oSegment.Fields.Add(1724, False, 0, False, 11);
    oSegment.Fields.Add(1725, True, 0, False, 12);
    oSegment.Fields.Add(1726, False, 0, False, 13);
    oSegment.Fields.Add(1727, False, 0, True, 14);
    oSegment.Fields.Add(1728, False, 0, False, 15);
    oSegment.Fields.Add(1729, False, 0, False, 16);
    oSegment.Fields.Add(1730, False, 0, False, 17);
    oSegment.Fields.Add(1731, False, 0, False, 18);
    oSegment.Fields.Add(1732, False, 0, False, 19);
    oSegment.Fields.Add(1733, False, 0, False, 20);
    oSegment.Fields.Add(1734, False, 0, False, 21);
  oSegment := oSegments.Add('BTS', 'Batch Trailer');
    oSegment.Fields.Add(93, False, 0, False, 1);
    oSegment.Fields.Add(90, False, 0, False, 2);
    oSegment.Fields.Add(95, True, 0, False, 3);
  oSegment := oSegments.Add('BTX', 'Blood Product Transfusion/Disposition');
    oSegment.Fields.Add(1735, False, 0, True, 1);
    oSegment.Fields.Add(1736, False, 0, False, 2);
    oSegment.Fields.Add(1737, False, 0, False, 3);
    oSegment.Fields.Add(1738, False, 0, False, 4);
    oSegment.Fields.Add(1739, False, 0, False, 5);
    oSegment.Fields.Add(1740, False, 0, False, 6);
    oSegment.Fields.Add(1741, False, 0, False, 7);
    oSegment.Fields.Add(1742, False, 0, True, 8);
    oSegment.Fields.Add(1743, False, 0, False, 9);
    oSegment.Fields.Add(1744, False, 0, False, 10);
    oSegment.Fields.Add(1745, False, 0, True, 11);
    oSegment.Fields.Add(1746, False, 0, True, 12);
    oSegment.Fields.Add(1747, False, 0, True, 13);
    oSegment.Fields.Add(1748, False, 0, False, 14);
    oSegment.Fields.Add(1749, False, 0, False, 15);
    oSegment.Fields.Add(1750, False, 0, False, 16);
    oSegment.Fields.Add(1751, False, 0, False, 17);
    oSegment.Fields.Add(1752, True, 0, False, 18);
    oSegment.Fields.Add(1753, False, 0, False, 19);
  oSegment := oSegments.Add('CDM', 'Charge Description Master');
    oSegment.Fields.Add(1306, False, 0, True, 1);
    oSegment.Fields.Add(983, True, 0, False, 2);
    oSegment.Fields.Add(984, False, 0, True, 3);
    oSegment.Fields.Add(985, False, 0, False, 4);
    oSegment.Fields.Add(986, False, 0, False, 5);
    oSegment.Fields.Add(987, True, 0, False, 6);
    oSegment.Fields.Add(393, True, 0, False, 7);
    oSegment.Fields.Add(675, False, 0, False, 8);
    oSegment.Fields.Add(990, True, 0, False, 9);
    oSegment.Fields.Add(991, False, 0, False, 10);
    oSegment.Fields.Add(992, True, 0, False, 11);
    oSegment.Fields.Add(993, True, 0, False, 12);
    oSegment.Fields.Add(994, False, 0, False, 13);
  oSegment := oSegments.Add('CER', 'Certificate Detail');
    oSegment.Fields.Add(1856, False, 0, True, 1);
    oSegment.Fields.Add(1857, False, 0, False, 2);
    oSegment.Fields.Add(1858, False, 0, False, 3);
    oSegment.Fields.Add(1859, False, 0, False, 4);
    oSegment.Fields.Add(1860, False, 0, False, 5);
    oSegment.Fields.Add(1861, False, 0, False, 6);
    oSegment.Fields.Add(1862, False, 0, False, 7);
    oSegment.Fields.Add(1863, False, 0, False, 8);
    oSegment.Fields.Add(1864, False, 0, False, 9);
    oSegment.Fields.Add(1865, False, 0, False, 10);
    oSegment.Fields.Add(1866, False, 0, False, 11);
    oSegment.Fields.Add(1867, False, 0, False, 12);
    oSegment.Fields.Add(1907, False, 0, True, 13);
    oSegment.Fields.Add(1868, True, 0, False, 14);
    oSegment.Fields.Add(1869, False, 0, False, 15);
    oSegment.Fields.Add(1870, False, 0, False, 16);
    oSegment.Fields.Add(1871, False, 0, False, 17);
    oSegment.Fields.Add(1872, True, 0, False, 18);
    oSegment.Fields.Add(1875, False, 0, False, 19);
    oSegment.Fields.Add(1873, False, 0, False, 20);
    oSegment.Fields.Add(1874, False, 0, False, 21);
    oSegment.Fields.Add(1895, True, 0, False, 22);
    oSegment.Fields.Add(1876, False, 0, False, 23);
    oSegment.Fields.Add(1877, False, 0, False, 24);
    oSegment.Fields.Add(1878, False, 0, False, 25);
    oSegment.Fields.Add(1879, False, 0, False, 26);
    oSegment.Fields.Add(1880, False, 0, False, 27);
    oSegment.Fields.Add(1881, False, 0, False, 28);
    oSegment.Fields.Add(1882, False, 0, False, 29);
    oSegment.Fields.Add(1883, False, 0, False, 30);
    oSegment.Fields.Add(1884, False, 0, False, 31);
  oSegment := oSegments.Add('CM0', 'Clinical Study Master');
    oSegment.Fields.Add(1010, False, 0, False, 1);
    oSegment.Fields.Add(1011, False, 0, True, 2);
    oSegment.Fields.Add(1036, True, 3, False, 3);
    oSegment.Fields.Add(1013, False, 0, True, 4);
    oSegment.Fields.Add(1014, True, 0, False, 5);
    oSegment.Fields.Add(1015, False, 0, False, 6);
    oSegment.Fields.Add(1016, False, 0, False, 7);
    oSegment.Fields.Add(1017, False, 0, False, 8);
    oSegment.Fields.Add(1018, True, 0, False, 9);
    oSegment.Fields.Add(1019, False, 0, False, 10);
    oSegment.Fields.Add(1020, True, 0, False, 11);
  oSegment := oSegments.Add('CM1', 'Clinical Study Phase Master');
    oSegment.Fields.Add(1021, False, 0, True, 1);
    oSegment.Fields.Add(1022, False, 0, True, 2);
    oSegment.Fields.Add(1023, False, 0, True, 3);
  oSegment := oSegments.Add('CM2', 'Clinical Study Schedule Master');
    oSegment.Fields.Add(1024, False, 0, False, 1);
    oSegment.Fields.Add(1025, False, 0, True, 2);
    oSegment.Fields.Add(1026, False, 0, False, 3);
    oSegment.Fields.Add(1027, True, 200, True, 4);
  oSegment := oSegments.Add('CNS', 'Clear Notification');
    oSegment.Fields.Add(1402, False, 0, False, 1);
    oSegment.Fields.Add(1403, False, 0, False, 2);
    oSegment.Fields.Add(1404, False, 0, False, 3);
    oSegment.Fields.Add(1405, False, 0, False, 4);
    oSegment.Fields.Add(1406, False, 0, False, 5);
    oSegment.Fields.Add(1407, False, 0, False, 6);
  oSegment := oSegments.Add('CON', 'Consent Segment');
    oSegment.Fields.Add(1776, False, 0, True, 1);
    oSegment.Fields.Add(1777, False, 0, False, 2);
    oSegment.Fields.Add(1778, False, 0, False, 3);
    oSegment.Fields.Add(1779, False, 0, False, 4);
    oSegment.Fields.Add(1780, True, 0, False, 5);
    oSegment.Fields.Add(1781, True, 0, False, 6);
    oSegment.Fields.Add(1782, True, 0, False, 7);
    oSegment.Fields.Add(1783, True, 0, False, 8);
    oSegment.Fields.Add(1784, True, 0, False, 9);
    oSegment.Fields.Add(1785, False, 0, False, 10);
    oSegment.Fields.Add(1786, False, 0, True, 11);
    oSegment.Fields.Add(1787, False, 0, False, 12);
    oSegment.Fields.Add(1788, False, 0, False, 13);
    oSegment.Fields.Add(1789, False, 0, False, 14);
    oSegment.Fields.Add(1790, False, 0, False, 15);
    oSegment.Fields.Add(1791, False, 0, False, 16);
    oSegment.Fields.Add(1792, False, 0, False, 17);
    oSegment.Fields.Add(1793, False, 0, False, 18);
    oSegment.Fields.Add(1794, False, 0, False, 19);
    oSegment.Fields.Add(1795, False, 0, False, 20);
    oSegment.Fields.Add(1796, False, 0, False, 21);
    oSegment.Fields.Add(1797, False, 0, False, 22);
    oSegment.Fields.Add(1798, False, 0, False, 23);
    oSegment.Fields.Add(1909, True, 0, True, 24);
    oSegment.Fields.Add(1898, True, 0, True, 25);
  oSegment := oSegments.Add('CSP', 'Clinical Study Phase');
    oSegment.Fields.Add(1022, False, 0, True, 1);
    oSegment.Fields.Add(1052, False, 0, True, 2);
    oSegment.Fields.Add(1053, False, 0, False, 3);
    oSegment.Fields.Add(1054, False, 0, False, 4);
  oSegment := oSegments.Add('CSR', 'Clinical Study Registration');
    oSegment.Fields.Add(1011, False, 0, True, 1);
    oSegment.Fields.Add(1036, False, 0, False, 2);
    oSegment.Fields.Add(1037, False, 0, False, 3);
    oSegment.Fields.Add(1038, False, 0, True, 4);
    oSegment.Fields.Add(1039, False, 0, False, 5);
    oSegment.Fields.Add(1040, False, 0, True, 6);
    oSegment.Fields.Add(1041, True, 0, False, 7);
    oSegment.Fields.Add(1042, True, 0, True, 8);
    oSegment.Fields.Add(1043, False, 0, False, 9);
    oSegment.Fields.Add(1044, False, 0, False, 10);
    oSegment.Fields.Add(1045, True, 3, False, 11);
    oSegment.Fields.Add(1046, True, 3, False, 12);
    oSegment.Fields.Add(1047, True, 3, False, 13);
    oSegment.Fields.Add(1048, False, 0, False, 14);
    oSegment.Fields.Add(1049, False, 0, False, 15);
    oSegment.Fields.Add(1050, False, 0, False, 16);
  oSegment := oSegments.Add('CSS', 'Clinical Study Data Schedule Segment');
    oSegment.Fields.Add(1055, False, 0, True, 1);
    oSegment.Fields.Add(1056, False, 0, False, 2);
    oSegment.Fields.Add(1057, True, 3, False, 3);
  oSegment := oSegments.Add('CTD', 'Contact Data');
    oSegment.Fields.Add(196, True, 0, True, 1);
    oSegment.Fields.Add(1165, True, 0, False, 2);
    oSegment.Fields.Add(1166, True, 0, False, 3);
    oSegment.Fields.Add(1167, False, 0, False, 4);
    oSegment.Fields.Add(1168, True, 0, False, 5);
    oSegment.Fields.Add(684, False, 0, False, 6);
    oSegment.Fields.Add(1171, True, 0, False, 7);
  oSegment := oSegments.Add('CTI', 'Clinical Trial Identification');
    oSegment.Fields.Add(1011, False, 0, True, 1);
    oSegment.Fields.Add(1022, False, 0, False, 2);
    oSegment.Fields.Add(1055, False, 0, False, 3);
  oSegment := oSegments.Add('DB1', 'Disability');
    oSegment.Fields.Add(1283, False, 0, True, 1);
    oSegment.Fields.Add(1284, False, 0, False, 2);
    oSegment.Fields.Add(1285, True, 0, False, 3);
    oSegment.Fields.Add(1286, False, 0, False, 4);
    oSegment.Fields.Add(1287, False, 0, False, 5);
    oSegment.Fields.Add(1288, False, 0, False, 6);
    oSegment.Fields.Add(1289, False, 0, False, 7);
    oSegment.Fields.Add(1290, False, 0, False, 8);
  oSegment := oSegments.Add('DG1', 'Diagnosis');
    oSegment.Fields.Add(375, False, 0, True, 1);
    oSegment.Fields.Add(376, False, 0, False, 2);
    oSegment.Fields.Add(377, False, 0, True, 3);
    oSegment.Fields.Add(378, False, 0, False, 4);
    oSegment.Fields.Add(379, False, 0, False, 5);
    oSegment.Fields.Add(380, False, 0, True, 6);
    oSegment.Fields.Add(381, False, 0, False, 7);
    oSegment.Fields.Add(382, False, 0, False, 8);
    oSegment.Fields.Add(383, False, 0, False, 9);
    oSegment.Fields.Add(384, False, 0, False, 10);
    oSegment.Fields.Add(385, False, 0, False, 11);
    oSegment.Fields.Add(386, False, 0, False, 12);
    oSegment.Fields.Add(387, False, 0, False, 13);
    oSegment.Fields.Add(388, False, 0, False, 14);
    oSegment.Fields.Add(389, False, 0, False, 15);
    oSegment.Fields.Add(390, True, 0, False, 16);
    oSegment.Fields.Add(766, False, 0, False, 17);
    oSegment.Fields.Add(767, False, 0, False, 18);
    oSegment.Fields.Add(768, False, 0, False, 19);
    oSegment.Fields.Add(1850, False, 0, False, 20);
    oSegment.Fields.Add(1894, False, 0, False, 21);
    oSegment.Fields.Add(2152, False, 0, False, 22);
    oSegment.Fields.Add(2153, False, 0, False, 23);
    oSegment.Fields.Add(2154, False, 0, False, 24);
    oSegment.Fields.Add(2155, False, 0, False, 25);
    oSegment.Fields.Add(2288, False, 0, False, 26);
  oSegment := oSegments.Add('DMI', 'DRG Master File Information');
    oSegment.Fields.Add(382, False, 0, False, 1);
    oSegment.Fields.Add(381, False, 0, False, 2);
    oSegment.Fields.Add(2231, False, 0, False, 3);
    oSegment.Fields.Add(2232, False, 0, False, 4);
    oSegment.Fields.Add(2233, False, 0, False, 5);
  oSegment := oSegments.Add('DRG', 'Diagnosis Related Group');
    oSegment.Fields.Add(382, False, 0, False, 1);
    oSegment.Fields.Add(769, False, 0, False, 2);
    oSegment.Fields.Add(383, False, 0, False, 3);
    oSegment.Fields.Add(384, False, 0, False, 4);
    oSegment.Fields.Add(385, False, 0, False, 5);
    oSegment.Fields.Add(386, False, 0, False, 6);
    oSegment.Fields.Add(387, False, 0, False, 7);
    oSegment.Fields.Add(770, False, 0, False, 8);
    oSegment.Fields.Add(771, False, 0, False, 9);
    oSegment.Fields.Add(767, False, 0, False, 10);
    oSegment.Fields.Add(1500, False, 0, False, 11);
    oSegment.Fields.Add(2156, False, 0, False, 12);
    oSegment.Fields.Add(2157, False, 0, False, 13);
    oSegment.Fields.Add(2158, False, 0, False, 14);
    oSegment.Fields.Add(2159, False, 0, False, 15);
    oSegment.Fields.Add(2160, False, 0, False, 16);
    oSegment.Fields.Add(2161, False, 0, False, 17);
    oSegment.Fields.Add(2162, False, 0, False, 18);
    oSegment.Fields.Add(2282, False, 0, False, 19);
    oSegment.Fields.Add(2163, False, 0, False, 20);
    oSegment.Fields.Add(2164, False, 0, False, 21);
    oSegment.Fields.Add(2165, False, 0, False, 22);
    oSegment.Fields.Add(2166, False, 0, False, 23);
    oSegment.Fields.Add(2167, False, 0, False, 24);
    oSegment.Fields.Add(2168, False, 0, False, 25);
    oSegment.Fields.Add(2169, False, 0, False, 26);
    oSegment.Fields.Add(2170, False, 0, False, 27);
    oSegment.Fields.Add(2171, False, 0, False, 28);
    oSegment.Fields.Add(2172, False, 0, False, 29);
    oSegment.Fields.Add(2173, False, 0, False, 30);
    oSegment.Fields.Add(2174, False, 0, False, 31);
    oSegment.Fields.Add(2175, False, 0, False, 32);
    oSegment.Fields.Add(2176, False, 0, False, 33);
  oSegment := oSegments.Add('DSC', 'Continuation Pointer');
    oSegment.Fields.Add(14, False, 0, False, 1);
    oSegment.Fields.Add(1354, False, 0, False, 2);
  oSegment := oSegments.Add('DSP', 'Display Data');
    oSegment.Fields.Add(61, False, 0, False, 1);
    oSegment.Fields.Add(62, False, 0, False, 2);
    oSegment.Fields.Add(63, False, 0, True, 3);
    oSegment.Fields.Add(64, False, 0, False, 4);
    oSegment.Fields.Add(65, False, 0, False, 5);
  oSegment := oSegments.Add('ECD', 'Equipment Command');
    oSegment.Fields.Add(1390, False, 0, True, 1);
    oSegment.Fields.Add(1391, False, 0, True, 2);
    oSegment.Fields.Add(1392, False, 0, False, 3);
    oSegment.Fields.Add(1393, False, 0, False, 4);
    oSegment.Fields.Add(1394, True, 0, False, 5);
  oSegment := oSegments.Add('ECR', 'Equipment Command Response');
    oSegment.Fields.Add(1395, False, 0, True, 1);
    oSegment.Fields.Add(1396, False, 0, True, 2);
    oSegment.Fields.Add(1397, True, 0, False, 3);
  oSegments.Add('ED', 'Encapsulated Data (wrong segment)');
  oSegment := oSegments.Add('EDU', 'Educational Detail');
    oSegment.Fields.Add(1448, False, 0, True, 1);
    oSegment.Fields.Add(1449, False, 0, False, 2);
    oSegment.Fields.Add(1597, False, 0, False, 3);
    oSegment.Fields.Add(1450, False, 0, False, 4);
    oSegment.Fields.Add(1451, False, 0, False, 5);
    oSegment.Fields.Add(1452, False, 0, False, 6);
    oSegment.Fields.Add(1453, False, 0, False, 7);
    oSegment.Fields.Add(1454, False, 0, False, 8);
    oSegment.Fields.Add(1885, True, 0, False, 9);
  oSegment := oSegments.Add('EQP', 'Equipment/log Service');
    oSegment.Fields.Add(1430, False, 0, True, 1);
    oSegment.Fields.Add(1431, False, 0, False, 2);
    oSegment.Fields.Add(1202, False, 0, True, 3);
    oSegment.Fields.Add(1432, False, 0, False, 4);
    oSegment.Fields.Add(1433, False, 0, True, 5);
  oSegment := oSegments.Add('EQU', 'Equipment Detail');
    oSegment.Fields.Add(1479, False, 0, True, 1);
    oSegment.Fields.Add(1322, False, 0, True, 2);
    oSegment.Fields.Add(1323, False, 0, False, 3);
    oSegment.Fields.Add(1324, False, 0, False, 4);
    oSegment.Fields.Add(1325, False, 0, False, 5);
  oSegment := oSegments.Add('ERR', 'Error');
    oSegment.Fields.Add(24, True, 0, False, 1);
    oSegment.Fields.Add(1812, True, 0, False, 2);
    oSegment.Fields.Add(1813, False, 0, True, 3);
    oSegment.Fields.Add(1814, False, 0, True, 4);
    oSegment.Fields.Add(1815, False, 0, False, 5);
    oSegment.Fields.Add(1816, True, 10, False, 6);
    oSegment.Fields.Add(1817, False, 0, False, 7);
    oSegment.Fields.Add(1818, False, 0, False, 8);
    oSegment.Fields.Add(1819, True, 0, False, 9);
    oSegment.Fields.Add(1820, False, 0, False, 10);
    oSegment.Fields.Add(1821, True, 0, False, 11);
    oSegment.Fields.Add(1822, True, 0, False, 12);
  oSegment := oSegments.Add('EVN', 'Event Type');
    oSegment.Fields.Add(99, False, 0, False, 1);
    oSegment.Fields.Add(100, False, 0, True, 2);
    oSegment.Fields.Add(101, False, 0, False, 3);
    oSegment.Fields.Add(102, False, 0, False, 4);
    oSegment.Fields.Add(103, True, 0, False, 5);
    oSegment.Fields.Add(1278, False, 0, False, 6);
    oSegment.Fields.Add(1534, False, 0, False, 7);
  oSegment := oSegments.Add('FAC', 'Facility');
    oSegment.Fields.Add(1262, False, 0, True, 1);
    oSegment.Fields.Add(1263, False, 0, False, 2);
    oSegment.Fields.Add(1264, True, 0, True, 3);
    oSegment.Fields.Add(1265, False, 0, True, 4);
    oSegment.Fields.Add(1266, True, 0, False, 5);
    oSegment.Fields.Add(1267, True, 0, False, 6);
    oSegment.Fields.Add(1166, True, 0, False, 7);
    oSegment.Fields.Add(1269, True, 0, False, 8);
    oSegment.Fields.Add(1270, True, 0, True, 9);
    oSegment.Fields.Add(1271, False, 0, False, 10);
    oSegment.Fields.Add(1272, True, 0, False, 11);
    oSegment.Fields.Add(1273, False, 0, False, 12);
  oSegment := oSegments.Add('FHS', 'File Header');
    oSegment.Fields.Add(67, False, 0, True, 1);
    oSegment.Fields.Add(68, False, 0, True, 2);
    oSegment.Fields.Add(69, False, 0, False, 3);
    oSegment.Fields.Add(70, False, 0, False, 4);
    oSegment.Fields.Add(71, False, 0, False, 5);
    oSegment.Fields.Add(72, False, 0, False, 6);
    oSegment.Fields.Add(73, False, 0, False, 7);
    oSegment.Fields.Add(74, False, 0, False, 8);
    oSegment.Fields.Add(75, False, 0, False, 9);
    oSegment.Fields.Add(76, False, 0, False, 10);
    oSegment.Fields.Add(77, False, 0, False, 11);
    oSegment.Fields.Add(78, False, 0, False, 12);
    oSegment.Fields.Add(2269, False, 0, False, 13);
    oSegment.Fields.Add(2270, False, 0, False, 14);
  oSegment := oSegments.Add('FT1', 'Financial Transaction');
    oSegment.Fields.Add(355, False, 0, False, 1);
    oSegment.Fields.Add(356, False, 0, False, 2);
    oSegment.Fields.Add(357, False, 0, False, 3);
    oSegment.Fields.Add(358, False, 0, True, 4);
    oSegment.Fields.Add(359, False, 0, False, 5);
    oSegment.Fields.Add(360, False, 0, True, 6);
    oSegment.Fields.Add(361, False, 0, True, 7);
    oSegment.Fields.Add(362, False, 0, False, 8);
    oSegment.Fields.Add(363, False, 0, False, 9);
    oSegment.Fields.Add(364, False, 0, False, 10);
    oSegment.Fields.Add(365, False, 0, False, 11);
    oSegment.Fields.Add(366, False, 0, False, 12);
    oSegment.Fields.Add(367, False, 0, False, 13);
    oSegment.Fields.Add(368, False, 0, False, 14);
    oSegment.Fields.Add(369, False, 0, False, 15);
    oSegment.Fields.Add(133, False, 0, False, 16);
    oSegment.Fields.Add(370, False, 0, False, 17);
    oSegment.Fields.Add(148, False, 0, False, 18);
    oSegment.Fields.Add(371, True, 0, False, 19);
    oSegment.Fields.Add(372, True, 0, False, 20);
    oSegment.Fields.Add(373, True, 0, False, 21);
    oSegment.Fields.Add(374, False, 0, False, 22);
    oSegment.Fields.Add(217, False, 0, False, 23);
    oSegment.Fields.Add(765, True, 0, False, 24);
    oSegment.Fields.Add(393, False, 0, False, 25);
    oSegment.Fields.Add(1316, True, 0, False, 26);
    oSegment.Fields.Add(1310, False, 0, False, 27);
    oSegment.Fields.Add(1646, False, 0, False, 28);
    oSegment.Fields.Add(1845, False, 0, False, 29);
    oSegment.Fields.Add(1846, False, 0, False, 30);
    oSegment.Fields.Add(1847, True, 0, False, 31);
  oSegment := oSegments.Add('FTS', 'File Trailer');
    oSegment.Fields.Add(79, False, 0, False, 1);
    oSegment.Fields.Add(80, False, 0, False, 2);
  oSegment := oSegments.Add('GOL', 'Goal Detail');
    oSegment.Fields.Add(816, False, 0, True, 1);
    oSegment.Fields.Add(817, False, 0, True, 2);
    oSegment.Fields.Add(818, False, 0, True, 3);
    oSegment.Fields.Add(819, False, 0, True, 4);
    oSegment.Fields.Add(820, False, 0, False, 5);
    oSegment.Fields.Add(821, False, 0, False, 6);
    oSegment.Fields.Add(822, False, 0, False, 7);
    oSegment.Fields.Add(824, False, 0, False, 8);
    oSegment.Fields.Add(825, False, 0, False, 9);
    oSegment.Fields.Add(826, False, 0, False, 10);
    oSegment.Fields.Add(827, False, 0, False, 11);
    oSegment.Fields.Add(828, False, 0, False, 12);
    oSegment.Fields.Add(829, False, 0, False, 13);
    oSegment.Fields.Add(830, False, 0, False, 14);
    oSegment.Fields.Add(831, False, 0, False, 15);
    oSegment.Fields.Add(832, False, 0, False, 16);
    oSegment.Fields.Add(833, True, 0, False, 17);
    oSegment.Fields.Add(834, False, 0, False, 18);
    oSegment.Fields.Add(835, False, 0, False, 19);
    oSegment.Fields.Add(836, True, 0, False, 20);
    oSegment.Fields.Add(837, True, 0, False, 21);
    oSegment.Fields.Add(2182, False, 0, False, 22);
  oSegment := oSegments.Add('GP1', 'Grouping/Reimbursement - Visit');
    oSegment.Fields.Add(1599, False, 0, True, 1);
    oSegment.Fields.Add(1600, True, 0, False, 2);
    oSegment.Fields.Add(1601, False, 0, False, 3);
    oSegment.Fields.Add(1602, True, 0, False, 4);
    oSegment.Fields.Add(387, False, 0, False, 5);
  oSegment := oSegments.Add('GP2', 'Grouping/Reimbursement - Procedure Line Item');
    oSegment.Fields.Add(1600, False, 0, False, 1);
    oSegment.Fields.Add(1604, False, 0, False, 2);
    oSegment.Fields.Add(1605, False, 0, False, 3);
    oSegment.Fields.Add(1606, False, 0, False, 4);
    oSegment.Fields.Add(1607, False, 0, False, 5);
    oSegment.Fields.Add(1608, True, 0, False, 6);
    oSegment.Fields.Add(1609, False, 0, False, 7);
    oSegment.Fields.Add(1610, True, 0, False, 8);
    oSegment.Fields.Add(1611, False, 0, False, 9);
    oSegment.Fields.Add(1617, False, 0, False, 10);
    oSegment.Fields.Add(1618, False, 0, False, 11);
    oSegment.Fields.Add(1619, False, 0, False, 12);
    oSegment.Fields.Add(1620, False, 0, False, 13);
    oSegment.Fields.Add(1621, False, 0, False, 14);
  oSegment := oSegments.Add('GT1', 'Guarantor');
    oSegment.Fields.Add(405, False, 0, True, 1);
    oSegment.Fields.Add(406, True, 0, False, 2);
    oSegment.Fields.Add(407, True, 0, True, 3);
    oSegment.Fields.Add(408, True, 0, False, 4);
    oSegment.Fields.Add(409, True, 0, False, 5);
    oSegment.Fields.Add(410, True, 0, False, 6);
    oSegment.Fields.Add(411, True, 0, False, 7);
    oSegment.Fields.Add(412, False, 0, False, 8);
    oSegment.Fields.Add(413, False, 0, False, 9);
    oSegment.Fields.Add(414, False, 0, False, 10);
    oSegment.Fields.Add(415, False, 0, False, 11);
    oSegment.Fields.Add(416, False, 0, False, 12);
    oSegment.Fields.Add(417, False, 0, False, 13);
    oSegment.Fields.Add(418, False, 0, False, 14);
    oSegment.Fields.Add(419, False, 0, False, 15);
    oSegment.Fields.Add(420, True, 0, False, 16);
    oSegment.Fields.Add(421, True, 0, False, 17);
    oSegment.Fields.Add(422, True, 0, False, 18);
    oSegment.Fields.Add(423, True, 0, False, 19);
    oSegment.Fields.Add(424, False, 0, False, 20);
    oSegment.Fields.Add(425, True, 0, False, 21);
    oSegment.Fields.Add(773, False, 0, False, 22);
    oSegment.Fields.Add(774, False, 0, False, 23);
    oSegment.Fields.Add(775, False, 0, False, 24);
    oSegment.Fields.Add(776, False, 0, False, 25);
    oSegment.Fields.Add(777, False, 0, False, 26);
    oSegment.Fields.Add(778, False, 0, False, 27);
    oSegment.Fields.Add(779, False, 0, False, 28);
    oSegment.Fields.Add(780, True, 0, False, 29);
    oSegment.Fields.Add(781, False, 0, False, 30);
    oSegment.Fields.Add(782, False, 0, False, 31);
    oSegment.Fields.Add(783, False, 0, False, 32);
    oSegment.Fields.Add(755, False, 0, False, 33);
    oSegment.Fields.Add(145, True, 0, False, 34);
    oSegment.Fields.Add(129, True, 0, False, 35);
    oSegment.Fields.Add(118, False, 0, False, 36);
    oSegment.Fields.Add(742, False, 0, False, 37);
    oSegment.Fields.Add(743, False, 0, False, 38);
    oSegment.Fields.Add(744, False, 0, False, 39);
    oSegment.Fields.Add(745, False, 0, False, 40);
    oSegment.Fields.Add(120, False, 0, False, 41);
    oSegment.Fields.Add(109, True, 0, False, 42);
    oSegment.Fields.Add(739, False, 0, False, 43);
    oSegment.Fields.Add(125, True, 0, False, 44);
    oSegment.Fields.Add(748, True, 0, False, 45);
    oSegment.Fields.Add(749, True, 0, False, 46);
    oSegment.Fields.Add(747, False, 0, False, 47);
    oSegment.Fields.Add(784, False, 0, False, 48);
    oSegment.Fields.Add(785, False, 0, False, 49);
    oSegment.Fields.Add(786, False, 0, False, 50);
    oSegment.Fields.Add(1299, True, 0, False, 51);
    oSegment.Fields.Add(753, False, 0, False, 52);
    oSegment.Fields.Add(752, False, 0, False, 53);
    oSegment.Fields.Add(1231, False, 0, False, 54);
    oSegment.Fields.Add(1291, True, 0, False, 55);
    oSegment.Fields.Add(1851, False, 0, False, 56);
    oSegment.Fields.Add(146, False, 0, False, 57);
  oSegments.Add('Hxx', 'any HL7 segment');
  oSegment := oSegments.Add('IAM', 'Patient Adverse Reaction Information');
    oSegment.Fields.Add(1612, False, 0, True, 1);
    oSegment.Fields.Add(204, False, 0, False, 2);
    oSegment.Fields.Add(205, False, 0, True, 3);
    oSegment.Fields.Add(206, False, 0, False, 4);
    oSegment.Fields.Add(207, True, 0, False, 5);
    oSegment.Fields.Add(1551, False, 0, True, 6);
    oSegment.Fields.Add(1552, False, 0, False, 7);
    oSegment.Fields.Add(1553, False, 0, False, 8);
    oSegment.Fields.Add(1554, False, 0, False, 9);
    oSegment.Fields.Add(1555, False, 0, False, 10);
    oSegment.Fields.Add(1556, False, 0, False, 11);
    oSegment.Fields.Add(1557, False, 0, False, 12);
    oSegment.Fields.Add(1558, False, 0, False, 13);
    oSegment.Fields.Add(1559, False, 0, False, 14);
    oSegment.Fields.Add(1560, False, 0, False, 15);
    oSegment.Fields.Add(1561, False, 0, False, 16);
    oSegment.Fields.Add(1562, False, 0, False, 17);
    oSegment.Fields.Add(1563, False, 0, False, 18);
    oSegment.Fields.Add(1564, False, 0, False, 19);
    oSegment.Fields.Add(1565, False, 0, False, 20);
  oSegment := oSegments.Add('IIM', 'Inventory Item Master');
    oSegment.Fields.Add(1897, False, 0, True, 1);
    oSegment.Fields.Add(1799, False, 0, True, 2);
    oSegment.Fields.Add(1800, False, 0, False, 3);
    oSegment.Fields.Add(1801, False, 0, False, 4);
    oSegment.Fields.Add(1802, False, 0, False, 5);
    oSegment.Fields.Add(1803, False, 0, False, 6);
    oSegment.Fields.Add(1804, False, 0, False, 7);
    oSegment.Fields.Add(1805, False, 0, False, 8);
    oSegment.Fields.Add(1806, False, 0, False, 9);
    oSegment.Fields.Add(1807, False, 0, False, 10);
    oSegment.Fields.Add(1808, False, 0, False, 11);
    oSegment.Fields.Add(1809, False, 0, False, 12);
    oSegment.Fields.Add(1810, False, 0, False, 13);
    oSegment.Fields.Add(393, False, 0, False, 14);
    oSegment.Fields.Add(1316, True, 0, False, 15);
  oSegment := oSegments.Add('ILT', 'Material Lot');
    oSegment.Fields.Add(2086, False, 0, True, 1);
    oSegment.Fields.Add(1800, False, 0, True, 2);
    oSegment.Fields.Add(1801, False, 0, False, 3);
    oSegment.Fields.Add(1804, False, 0, False, 4);
    oSegment.Fields.Add(1805, False, 0, False, 5);
    oSegment.Fields.Add(1806, False, 0, False, 6);
    oSegment.Fields.Add(1807, False, 0, False, 7);
    oSegment.Fields.Add(1808, False, 0, False, 8);
    oSegment.Fields.Add(1809, False, 0, False, 9);
    oSegment.Fields.Add(1810, False, 0, False, 10);
  oSegment := oSegments.Add('IN1', 'Insurance');
    oSegment.Fields.Add(426, False, 0, True, 1);
    oSegment.Fields.Add(368, False, 0, True, 2);
    oSegment.Fields.Add(428, True, 0, True, 3);
    oSegment.Fields.Add(429, True, 0, False, 4);
    oSegment.Fields.Add(430, True, 0, False, 5);
    oSegment.Fields.Add(431, True, 0, False, 6);
    oSegment.Fields.Add(432, True, 0, False, 7);
    oSegment.Fields.Add(433, False, 0, False, 8);
    oSegment.Fields.Add(434, True, 0, False, 9);
    oSegment.Fields.Add(435, True, 0, False, 10);
    oSegment.Fields.Add(436, True, 0, False, 11);
    oSegment.Fields.Add(437, False, 0, False, 12);
    oSegment.Fields.Add(438, False, 0, False, 13);
    oSegment.Fields.Add(439, False, 0, False, 14);
    oSegment.Fields.Add(440, False, 0, False, 15);
    oSegment.Fields.Add(441, True, 0, False, 16);
    oSegment.Fields.Add(442, False, 0, False, 17);
    oSegment.Fields.Add(443, False, 0, False, 18);
    oSegment.Fields.Add(444, True, 0, False, 19);
    oSegment.Fields.Add(445, False, 0, False, 20);
    oSegment.Fields.Add(446, False, 0, False, 21);
    oSegment.Fields.Add(447, False, 0, False, 22);
    oSegment.Fields.Add(448, False, 0, False, 23);
    oSegment.Fields.Add(449, False, 0, False, 24);
    oSegment.Fields.Add(450, False, 0, False, 25);
    oSegment.Fields.Add(451, False, 0, False, 26);
    oSegment.Fields.Add(452, False, 0, False, 27);
    oSegment.Fields.Add(453, False, 0, False, 28);
    oSegment.Fields.Add(454, False, 0, False, 29);
    oSegment.Fields.Add(455, True, 0, False, 30);
    oSegment.Fields.Add(456, False, 0, False, 31);
    oSegment.Fields.Add(457, False, 0, False, 32);
    oSegment.Fields.Add(458, False, 0, False, 33);
    oSegment.Fields.Add(459, False, 0, False, 34);
    oSegment.Fields.Add(460, False, 0, False, 35);
    oSegment.Fields.Add(461, False, 0, False, 36);
    oSegment.Fields.Add(462, False, 0, False, 37);
    oSegment.Fields.Add(463, False, 0, False, 38);
    oSegment.Fields.Add(464, False, 0, False, 39);
    oSegment.Fields.Add(465, False, 0, False, 40);
    oSegment.Fields.Add(466, False, 0, False, 41);
    oSegment.Fields.Add(467, False, 0, False, 42);
    oSegment.Fields.Add(468, False, 0, False, 43);
    oSegment.Fields.Add(469, True, 0, False, 44);
    oSegment.Fields.Add(470, False, 0, False, 45);
    oSegment.Fields.Add(471, False, 0, False, 46);
    oSegment.Fields.Add(1227, False, 0, False, 47);
    oSegment.Fields.Add(753, False, 0, False, 48);
    oSegment.Fields.Add(1230, True, 0, False, 49);
    oSegment.Fields.Add(1854, False, 0, False, 50);
    oSegment.Fields.Add(1855, False, 0, False, 51);
    oSegment.Fields.Add(1899, False, 0, False, 52);
    oSegment.Fields.Add(1852, False, 0, False, 53);
  oSegment := oSegments.Add('IN2', 'Insurance Additional Information');
    oSegment.Fields.Add(472, True, 0, False, 1);
    oSegment.Fields.Add(473, False, 0, False, 2);
    oSegment.Fields.Add(474, True, 0, False, 3);
    oSegment.Fields.Add(475, False, 0, False, 4);
    oSegment.Fields.Add(476, True, 0, False, 5);
    oSegment.Fields.Add(477, False, 0, False, 6);
    oSegment.Fields.Add(478, True, 0, False, 7);
    oSegment.Fields.Add(479, False, 0, False, 8);
    oSegment.Fields.Add(480, True, 0, False, 9);
    oSegment.Fields.Add(481, False, 0, False, 10);
    oSegment.Fields.Add(482, False, 0, False, 11);
    oSegment.Fields.Add(483, False, 0, False, 12);
    oSegment.Fields.Add(484, False, 0, False, 13);
    oSegment.Fields.Add(485, False, 0, False, 14);
    oSegment.Fields.Add(486, False, 0, False, 15);
    oSegment.Fields.Add(487, False, 0, False, 16);
    oSegment.Fields.Add(488, False, 0, False, 17);
    oSegment.Fields.Add(489, False, 0, False, 18);
    oSegment.Fields.Add(490, False, 0, False, 19);
    oSegment.Fields.Add(491, False, 0, False, 20);
    oSegment.Fields.Add(492, False, 0, False, 21);
    oSegment.Fields.Add(493, True, 0, False, 22);
    oSegment.Fields.Add(494, False, 0, False, 23);
    oSegment.Fields.Add(495, True, 0, False, 24);
    oSegment.Fields.Add(496, True, 0, False, 25);
    oSegment.Fields.Add(497, True, 0, False, 26);
    oSegment.Fields.Add(498, False, 0, False, 27);
    oSegment.Fields.Add(499, True, 0, False, 28);
    oSegment.Fields.Add(500, True, 0, False, 29);
    oSegment.Fields.Add(501, False, 0, False, 30);
    oSegment.Fields.Add(755, False, 0, False, 31);
    oSegment.Fields.Add(145, True, 0, False, 32);
    oSegment.Fields.Add(129, True, 0, False, 33);
    oSegment.Fields.Add(118, False, 0, False, 34);
    oSegment.Fields.Add(742, False, 0, False, 35);
    oSegment.Fields.Add(743, False, 0, False, 36);
    oSegment.Fields.Add(744, False, 0, False, 37);
    oSegment.Fields.Add(745, False, 0, False, 38);
    oSegment.Fields.Add(120, False, 0, False, 39);
    oSegment.Fields.Add(109, True, 0, False, 40);
    oSegment.Fields.Add(739, False, 0, False, 41);
    oSegment.Fields.Add(125, True, 0, False, 42);
    oSegment.Fields.Add(119, True, 0, False, 43);
    oSegment.Fields.Add(787, False, 0, False, 44);
    oSegment.Fields.Add(783, False, 0, False, 45);
    oSegment.Fields.Add(785, False, 0, False, 46);
    oSegment.Fields.Add(786, False, 0, False, 47);
    oSegment.Fields.Add(752, False, 0, False, 48);
    oSegment.Fields.Add(789, True, 0, False, 49);
    oSegment.Fields.Add(790, True, 0, False, 50);
    oSegment.Fields.Add(791, False, 0, False, 51);
    oSegment.Fields.Add(792, True, 0, False, 52);
    oSegment.Fields.Add(793, True, 0, False, 53);
    oSegment.Fields.Add(794, True, 0, False, 54);
    oSegment.Fields.Add(795, False, 0, False, 55);
    oSegment.Fields.Add(796, True, 0, False, 56);
    oSegment.Fields.Add(797, False, 0, False, 57);
    oSegment.Fields.Add(798, True, 0, False, 58);
    oSegment.Fields.Add(799, False, 0, False, 59);
    oSegment.Fields.Add(800, False, 0, False, 60);
    oSegment.Fields.Add(801, False, 0, False, 61);
    oSegment.Fields.Add(802, False, 0, False, 62);
    oSegment.Fields.Add(803, True, 0, False, 63);
    oSegment.Fields.Add(804, True, 0, False, 64);
    oSegment.Fields.Add(805, False, 0, False, 65);
    oSegment.Fields.Add(806, False, 0, False, 66);
    oSegment.Fields.Add(807, False, 0, False, 67);
    oSegment.Fields.Add(808, False, 0, False, 68);
    oSegment.Fields.Add(809, True, 0, False, 69);
    oSegment.Fields.Add(810, True, 0, False, 70);
    oSegment.Fields.Add(113, True, 0, False, 71);
    oSegment.Fields.Add(811, False, 0, False, 72);
  oSegment := oSegments.Add('IN3', 'Insurance Additional Information, Certification');
    oSegment.Fields.Add(502, False, 0, True, 1);
    oSegment.Fields.Add(503, False, 0, False, 2);
    oSegment.Fields.Add(504, True, 0, False, 3);
    oSegment.Fields.Add(505, False, 0, False, 4);
    oSegment.Fields.Add(506, False, 0, False, 5);
    oSegment.Fields.Add(507, False, 0, False, 6);
    oSegment.Fields.Add(508, False, 0, False, 7);
    oSegment.Fields.Add(509, True, 0, False, 8);
    oSegment.Fields.Add(510, False, 0, False, 9);
    oSegment.Fields.Add(511, False, 0, False, 10);
    oSegment.Fields.Add(512, False, 0, False, 11);
    oSegment.Fields.Add(513, False, 0, False, 12);
    oSegment.Fields.Add(514, False, 0, False, 13);
    oSegment.Fields.Add(515, True, 0, False, 14);
    oSegment.Fields.Add(516, False, 0, False, 15);
    oSegment.Fields.Add(517, True, 0, False, 16);
    oSegment.Fields.Add(518, False, 0, False, 17);
    oSegment.Fields.Add(519, False, 0, False, 18);
    oSegment.Fields.Add(520, True, 0, False, 19);
    oSegment.Fields.Add(521, True, 0, False, 20);
    oSegment.Fields.Add(522, False, 0, False, 21);
    oSegment.Fields.Add(523, False, 0, False, 22);
    oSegment.Fields.Add(524, False, 0, False, 23);
    oSegment.Fields.Add(525, True, 0, False, 24);
    oSegment.Fields.Add(526, True, 0, False, 25);
  oSegment := oSegments.Add('INV', 'Inventory Detail');
    oSegment.Fields.Add(1372, False, 0, True, 1);
    oSegment.Fields.Add(1373, True, 0, True, 2);
    oSegment.Fields.Add(1374, False, 0, False, 3);
    oSegment.Fields.Add(1532, False, 0, False, 4);
    oSegment.Fields.Add(1376, False, 0, False, 5);
    oSegment.Fields.Add(1377, False, 0, False, 6);
    oSegment.Fields.Add(1378, False, 0, False, 7);
    oSegment.Fields.Add(1379, False, 0, False, 8);
    oSegment.Fields.Add(1380, False, 0, False, 9);
    oSegment.Fields.Add(1381, False, 0, False, 10);
    oSegment.Fields.Add(1382, False, 0, False, 11);
    oSegment.Fields.Add(1383, False, 0, False, 12);
    oSegment.Fields.Add(1384, False, 0, False, 13);
    oSegment.Fields.Add(1385, False, 0, False, 14);
    oSegment.Fields.Add(1386, True, 0, False, 15);
    oSegment.Fields.Add(1387, False, 0, False, 16);
    oSegment.Fields.Add(286, False, 0, False, 17);
    oSegment.Fields.Add(1389, False, 0, False, 18);
    oSegment.Fields.Add(1626, False, 0, False, 19);
    oSegment.Fields.Add(1896, False, 0, False, 20);
  oSegment := oSegments.Add('IPC', 'Imaging Procedure Control Segment');
    oSegment.Fields.Add(1330, False, 0, True, 1);
    oSegment.Fields.Add(1658, False, 0, True, 2);
    oSegment.Fields.Add(1659, False, 0, True, 3);
    oSegment.Fields.Add(1660, False, 0, True, 4);
    oSegment.Fields.Add(1661, False, 0, False, 5);
    oSegment.Fields.Add(1662, True, 0, False, 6);
    oSegment.Fields.Add(1663, False, 0, False, 7);
    oSegment.Fields.Add(1664, True, 0, False, 8);
    oSegment.Fields.Add(1665, False, 0, False, 9);
  oSegment := oSegments.Add('IPR', 'Invoice Processing Results');
    oSegment.Fields.Add(2030, False, 0, True, 1);
    oSegment.Fields.Add(2031, False, 0, True, 2);
    oSegment.Fields.Add(2032, False, 0, True, 3);
    oSegment.Fields.Add(2033, False, 0, True, 4);
    oSegment.Fields.Add(2034, False, 0, True, 5);
    oSegment.Fields.Add(2035, False, 0, False, 6);
    oSegment.Fields.Add(2036, False, 0, False, 7);
    oSegment.Fields.Add(2037, False, 0, True, 8);
  oSegment := oSegments.Add('ISD', 'Interaction Status Detail');
    oSegment.Fields.Add(1326, False, 0, True, 1);
    oSegment.Fields.Add(1327, False, 0, False, 2);
    oSegment.Fields.Add(1328, False, 0, True, 3);
  oSegment := oSegments.Add('ITM', 'Material Item');
    oSegment.Fields.Add(2186, False, 0, True, 1);
    oSegment.Fields.Add(2274, False, 0, False, 2);
    oSegment.Fields.Add(2187, False, 0, False, 3);
    oSegment.Fields.Add(2188, False, 0, False, 4);
    oSegment.Fields.Add(2189, False, 0, False, 5);
    oSegment.Fields.Add(2190, False, 0, False, 6);
    oSegment.Fields.Add(2191, False, 0, False, 7);
    oSegment.Fields.Add(2275, False, 0, False, 8);
    oSegment.Fields.Add(2192, False, 0, False, 9);
    oSegment.Fields.Add(2193, False, 0, False, 10);
    oSegment.Fields.Add(2070, False, 0, False, 11);
    oSegment.Fields.Add(361, False, 0, False, 12);
    oSegment.Fields.Add(366, False, 0, False, 13);
    oSegment.Fields.Add(2197, False, 0, False, 14);
    oSegment.Fields.Add(2266, False, 0, False, 15);
    oSegment.Fields.Add(2199, True, 0, False, 16);
    oSegment.Fields.Add(2200, False, 0, False, 17);
    oSegment.Fields.Add(2201, True, 0, False, 18);
    oSegment.Fields.Add(282, False, 0, False, 19);
    oSegment.Fields.Add(2203, False, 0, False, 20);
    oSegment.Fields.Add(2204, False, 0, False, 21);
    oSegment.Fields.Add(2205, False, 0, False, 22);
    oSegment.Fields.Add(2206, False, 0, False, 23);
    oSegment.Fields.Add(2207, False, 0, False, 24);
    oSegment.Fields.Add(2208, False, 0, False, 25);
    oSegment.Fields.Add(2209, False, 0, False, 26);
    oSegment.Fields.Add(393, False, 0, False, 27);
    oSegment.Fields.Add(1316, True, 0, False, 28);
    oSegment.Fields.Add(1370, False, 0, False, 29);
  oSegment := oSegments.Add('IVC', 'Invoice Segment');
    oSegment.Fields.Add(1914, False, 0, True, 1);
    oSegment.Fields.Add(1915, False, 0, False, 2);
    oSegment.Fields.Add(1916, False, 0, False, 3);
    oSegment.Fields.Add(1917, False, 0, True, 4);
    oSegment.Fields.Add(1918, False, 0, True, 5);
    oSegment.Fields.Add(1919, False, 0, True, 6);
    oSegment.Fields.Add(1920, False, 0, True, 7);
    oSegment.Fields.Add(1921, False, 0, True, 8);
    oSegment.Fields.Add(1922, False, 0, False, 9);
    oSegment.Fields.Add(1923, False, 0, True, 10);
    oSegment.Fields.Add(1924, False, 0, True, 11);
    oSegment.Fields.Add(1925, False, 0, False, 12);
    oSegment.Fields.Add(1926, False, 0, False, 13);
    oSegment.Fields.Add(1927, False, 0, False, 14);
    oSegment.Fields.Add(1928, False, 0, False, 15);
    oSegment.Fields.Add(1929, False, 0, False, 16);
    oSegment.Fields.Add(1930, False, 0, False, 17);
    oSegment.Fields.Add(1931, False, 0, False, 18);
    oSegment.Fields.Add(1932, False, 0, False, 19);
    oSegment.Fields.Add(1933, False, 0, False, 20);
    oSegment.Fields.Add(1934, False, 0, False, 21);
    oSegment.Fields.Add(1935, False, 0, False, 22);
    oSegment.Fields.Add(1936, False, 0, False, 23);
    oSegment.Fields.Add(1937, True, 0, False, 24);
    oSegment.Fields.Add(1938, False, 0, True, 25);
    oSegment.Fields.Add(2038, False, 0, False, 26);
    oSegment.Fields.Add(2039, False, 0, False, 27);
    oSegment.Fields.Add(2040, False, 0, False, 28);
    oSegment.Fields.Add(2041, False, 0, False, 29);
    oSegment.Fields.Add(2042, False, 0, False, 30);
  oSegment := oSegments.Add('IVT', 'Material Location');
    oSegment.Fields.Add(2062, False, 0, True, 1);
    oSegment.Fields.Add(2063, False, 0, True, 2);
    oSegment.Fields.Add(2277, False, 0, False, 3);
    oSegment.Fields.Add(2064, False, 0, False, 4);
    oSegment.Fields.Add(2278, False, 0, False, 5);
    oSegment.Fields.Add(2065, False, 0, False, 6);
    oSegment.Fields.Add(2066, True, 0, False, 7);
    oSegment.Fields.Add(2067, False, 0, False, 8);
    oSegment.Fields.Add(2068, False, 0, False, 9);
    oSegment.Fields.Add(2069, False, 0, False, 10);
    oSegment.Fields.Add(2070, False, 0, False, 11);
    oSegment.Fields.Add(361, False, 0, False, 12);
    oSegment.Fields.Add(366, False, 0, False, 13);
    oSegment.Fields.Add(2073, False, 0, False, 14);
    oSegment.Fields.Add(2074, False, 0, False, 15);
    oSegment.Fields.Add(2075, False, 0, False, 16);
    oSegment.Fields.Add(2076, False, 0, False, 17);
    oSegment.Fields.Add(2077, False, 0, False, 18);
    oSegment.Fields.Add(2078, True, 0, False, 19);
    oSegment.Fields.Add(2079, False, 0, False, 20);
    oSegment.Fields.Add(2080, False, 0, False, 21);
    oSegment.Fields.Add(2081, False, 0, False, 22);
    oSegment.Fields.Add(2082, False, 0, False, 23);
    oSegment.Fields.Add(2083, False, 0, False, 24);
    oSegment.Fields.Add(2084, False, 0, False, 25);
    oSegment.Fields.Add(2085, False, 0, False, 26);
  oSegment := oSegments.Add('LAN', 'Language Detail');
    oSegment.Fields.Add(1455, False, 0, True, 1);
    oSegment.Fields.Add(1456, False, 0, True, 2);
    oSegment.Fields.Add(1457, True, 0, False, 3);
    oSegment.Fields.Add(1458, False, 0, False, 4);
  oSegment := oSegments.Add('LCC', 'Location Charge Code');
    oSegment.Fields.Add(979, False, 0, True, 1);
    oSegment.Fields.Add(964, False, 0, True, 2);
    oSegment.Fields.Add(980, True, 0, False, 3);
    oSegment.Fields.Add(981, True, 0, True, 4);
  oSegment := oSegments.Add('LCH', 'Location Characteristic');
    oSegment.Fields.Add(1305, False, 0, True, 1);
    oSegment.Fields.Add(763, False, 0, False, 2);
    oSegment.Fields.Add(764, False, 0, False, 3);
    oSegment.Fields.Add(1295, False, 0, True, 4);
    oSegment.Fields.Add(1294, False, 0, True, 5);
  oSegment := oSegments.Add('LDP', 'Location Department');
    oSegment.Fields.Add(963, False, 0, True, 1);
    oSegment.Fields.Add(964, False, 0, True, 2);
    oSegment.Fields.Add(965, True, 0, False, 3);
    oSegment.Fields.Add(966, True, 0, False, 4);
    oSegment.Fields.Add(967, True, 0, False, 5);
    oSegment.Fields.Add(675, False, 0, False, 6);
    oSegment.Fields.Add(969, False, 0, False, 7);
    oSegment.Fields.Add(970, False, 0, False, 8);
    oSegment.Fields.Add(971, False, 0, False, 9);
    oSegment.Fields.Add(976, True, 0, False, 10);
    oSegment.Fields.Add(978, False, 0, False, 11);
    oSegment.Fields.Add(1584, False, 0, False, 12);
  oSegment := oSegments.Add('LOC', 'Location Identification');
    oSegment.Fields.Add(1307, False, 0, True, 1);
    oSegment.Fields.Add(944, False, 0, False, 2);
    oSegment.Fields.Add(945, True, 0, True, 3);
    oSegment.Fields.Add(947, True, 0, False, 4);
    oSegment.Fields.Add(948, True, 0, False, 5);
    oSegment.Fields.Add(949, True, 0, False, 6);
    oSegment.Fields.Add(951, True, 0, False, 7);
    oSegment.Fields.Add(953, True, 0, False, 8);
    oSegment.Fields.Add(1583, False, 0, False, 9);
  oSegment := oSegments.Add('LRL', 'Location Relationship');
    oSegment.Fields.Add(943, False, 0, True, 1);
    oSegment.Fields.Add(763, False, 0, False, 2);
    oSegment.Fields.Add(764, False, 0, False, 3);
    oSegment.Fields.Add(1277, False, 0, True, 4);
    oSegment.Fields.Add(1301, True, 0, False, 5);
    oSegment.Fields.Add(1292, False, 0, False, 6);
  oSegment := oSegments.Add('MFA', 'Master File Acknowledgment');
    oSegment.Fields.Add(664, False, 0, True, 1);
    oSegment.Fields.Add(665, False, 0, False, 2);
    oSegment.Fields.Add(668, False, 0, False, 3);
    oSegment.Fields.Add(669, False, 0, True, 4);
    oSegment.Fields.Add(1308, True, 0, True, 5);
    oSegment.Fields.Add(1320, True, 0, True, 6);
  oSegment := oSegments.Add('MFE', 'Master File Entry');
    oSegment.Fields.Add(664, False, 0, True, 1);
    oSegment.Fields.Add(665, False, 0, False, 2);
    oSegment.Fields.Add(662, False, 0, False, 3);
    oSegment.Fields.Add(667, True, 0, True, 4);
    oSegment.Fields.Add(1319, True, 0, True, 5);
    oSegment.Fields.Add(661, False, 0, False, 6);
    oSegment.Fields.Add(224, False, 0, False, 7);
  oSegment := oSegments.Add('MFI', 'Master File Identification');
    oSegment.Fields.Add(658, False, 0, True, 1);
    oSegment.Fields.Add(659, False, 0, False, 2);
    oSegment.Fields.Add(660, False, 0, True, 3);
    oSegment.Fields.Add(661, False, 0, False, 4);
    oSegment.Fields.Add(662, False, 0, False, 5);
    oSegment.Fields.Add(663, False, 0, True, 6);
  oSegment := oSegments.Add('MRG', 'Merge Patient Information');
    oSegment.Fields.Add(211, True, 0, True, 1);
    oSegment.Fields.Add(212, True, 0, False, 2);
    oSegment.Fields.Add(213, False, 0, False, 3);
    oSegment.Fields.Add(214, False, 0, False, 4);
    oSegment.Fields.Add(1279, False, 0, False, 5);
    oSegment.Fields.Add(1280, False, 0, False, 6);
    oSegment.Fields.Add(1281, True, 0, False, 7);
  oSegment := oSegments.Add('MSA', 'Message Acknowledgment');
    oSegment.Fields.Add(18, False, 0, True, 1);
    oSegment.Fields.Add(10, False, 0, True, 2);
    oSegment.Fields.Add(20, False, 0, False, 3);
    oSegment.Fields.Add(21, False, 0, False, 4);
    oSegment.Fields.Add(22, False, 0, False, 5);
    oSegment.Fields.Add(23, False, 0, False, 6);
    oSegment.Fields.Add(1827, False, 0, False, 7);
    oSegment.Fields.Add(1828, False, 0, False, 8);
  oSegment := oSegments.Add('MSH', 'Message Header');
    oSegment.Fields.Add(1, False, 0, True, 1);
    oSegment.Fields.Add(2, False, 0, True, 2);
    oSegment.Fields.Add(3, False, 0, False, 3);
    oSegment.Fields.Add(4, False, 0, False, 4);
    oSegment.Fields.Add(5, False, 0, False, 5);
    oSegment.Fields.Add(6, False, 0, False, 6);
    oSegment.Fields.Add(7, False, 0, True, 7);
    oSegment.Fields.Add(8, False, 0, False, 8);
    oSegment.Fields.Add(9, False, 0, True, 9);
    oSegment.Fields.Add(10, False, 0, True, 10);
    oSegment.Fields.Add(11, False, 0, True, 11);
    oSegment.Fields.Add(12, False, 0, True, 12);
    oSegment.Fields.Add(13, False, 0, False, 13);
    oSegment.Fields.Add(14, False, 0, False, 14);
    oSegment.Fields.Add(15, False, 0, False, 15);
    oSegment.Fields.Add(16, False, 0, False, 16);
    oSegment.Fields.Add(17, False, 0, False, 17);
    oSegment.Fields.Add(692, True, 0, False, 18);
    oSegment.Fields.Add(693, False, 0, False, 19);
    oSegment.Fields.Add(1317, False, 0, False, 20);
    oSegment.Fields.Add(1598, True, 0, False, 21);
    oSegment.Fields.Add(1823, False, 0, False, 22);
    oSegment.Fields.Add(1824, False, 0, False, 23);
    oSegment.Fields.Add(1825, False, 0, False, 24);
    oSegment.Fields.Add(1826, False, 0, False, 25);
  oSegment := oSegments.Add('NCK', 'System Clock');
    oSegment.Fields.Add(1172, False, 0, True, 1);
  oSegment := oSegments.Add('NDS', 'Notification Detail');
    oSegment.Fields.Add(1398, False, 0, True, 1);
    oSegment.Fields.Add(1399, False, 0, True, 2);
    oSegment.Fields.Add(1400, False, 0, True, 3);
    oSegment.Fields.Add(1401, False, 0, True, 4);
  oSegment := oSegments.Add('NK1', 'Next of Kin / Associated Parties');
    oSegment.Fields.Add(190, False, 0, True, 1);
    oSegment.Fields.Add(191, True, 0, False, 2);
    oSegment.Fields.Add(192, False, 0, False, 3);
    oSegment.Fields.Add(193, True, 0, False, 4);
    oSegment.Fields.Add(194, True, 0, False, 5);
    oSegment.Fields.Add(195, True, 0, False, 6);
    oSegment.Fields.Add(196, False, 0, False, 7);
    oSegment.Fields.Add(197, False, 0, False, 8);
    oSegment.Fields.Add(198, False, 0, False, 9);
    oSegment.Fields.Add(199, False, 0, False, 10);
    oSegment.Fields.Add(200, False, 0, False, 11);
    oSegment.Fields.Add(201, False, 0, False, 12);
    oSegment.Fields.Add(202, True, 0, False, 13);
    oSegment.Fields.Add(119, False, 0, False, 14);
    oSegment.Fields.Add(111, False, 0, False, 15);
    oSegment.Fields.Add(110, False, 0, False, 16);
    oSegment.Fields.Add(755, True, 0, False, 17);
    oSegment.Fields.Add(145, True, 0, False, 18);
    oSegment.Fields.Add(129, True, 0, False, 19);
    oSegment.Fields.Add(118, False, 0, False, 20);
    oSegment.Fields.Add(742, False, 0, False, 21);
    oSegment.Fields.Add(743, False, 0, False, 22);
    oSegment.Fields.Add(744, False, 0, False, 23);
    oSegment.Fields.Add(745, False, 0, False, 24);
    oSegment.Fields.Add(120, False, 0, False, 25);
    oSegment.Fields.Add(109, True, 0, False, 26);
    oSegment.Fields.Add(739, False, 0, False, 27);
    oSegment.Fields.Add(125, True, 0, False, 28);
    oSegment.Fields.Add(747, True, 0, False, 29);
    oSegment.Fields.Add(748, True, 0, False, 30);
    oSegment.Fields.Add(749, True, 0, False, 31);
    oSegment.Fields.Add(750, True, 0, False, 32);
    oSegment.Fields.Add(751, True, 0, False, 33);
    oSegment.Fields.Add(752, False, 0, False, 34);
    oSegment.Fields.Add(113, True, 0, False, 35);
    oSegment.Fields.Add(753, False, 0, False, 36);
    oSegment.Fields.Add(754, False, 0, False, 37);
    oSegment.Fields.Add(1905, False, 0, False, 38);
    oSegment.Fields.Add(146, False, 0, False, 39);
  oSegment := oSegments.Add('NPU', 'Bed Status Update');
    oSegment.Fields.Add(209, False, 0, True, 1);
    oSegment.Fields.Add(170, False, 0, False, 2);
  oSegment := oSegments.Add('NSC', 'Application Status Change');
    oSegment.Fields.Add(1188, False, 0, True, 1);
    oSegment.Fields.Add(1189, False, 0, False, 2);
    oSegment.Fields.Add(1190, False, 0, False, 3);
    oSegment.Fields.Add(1191, False, 0, False, 4);
    oSegment.Fields.Add(1192, False, 0, False, 5);
    oSegment.Fields.Add(1193, False, 0, False, 6);
    oSegment.Fields.Add(1194, False, 0, False, 7);
    oSegment.Fields.Add(1195, False, 0, False, 8);
    oSegment.Fields.Add(1196, False, 0, False, 9);
  oSegment := oSegments.Add('NST', 'Application control level statistics');
    oSegment.Fields.Add(1173, False, 0, True, 1);
    oSegment.Fields.Add(1174, False, 0, False, 2);
    oSegment.Fields.Add(1175, False, 0, False, 3);
    oSegment.Fields.Add(1176, False, 0, False, 4);
    oSegment.Fields.Add(1177, False, 0, False, 5);
    oSegment.Fields.Add(1178, False, 0, False, 6);
    oSegment.Fields.Add(1179, False, 0, False, 7);
    oSegment.Fields.Add(1180, False, 0, False, 8);
    oSegment.Fields.Add(1181, False, 0, False, 9);
    oSegment.Fields.Add(1182, False, 0, False, 10);
    oSegment.Fields.Add(1183, False, 0, False, 11);
    oSegment.Fields.Add(1184, False, 0, False, 12);
    oSegment.Fields.Add(1185, False, 0, False, 13);
    oSegment.Fields.Add(1186, False, 0, False, 14);
    oSegment.Fields.Add(1187, False, 0, False, 15);
  oSegment := oSegments.Add('NTE', 'Notes and Comments');
    oSegment.Fields.Add(96, False, 0, False, 1);
    oSegment.Fields.Add(97, False, 0, False, 2);
    oSegment.Fields.Add(98, True, 0, False, 3);
    oSegment.Fields.Add(1318, False, 0, False, 4);
    oSegment.Fields.Add(224, False, 0, False, 5);
    oSegment.Fields.Add(661, False, 0, False, 6);
    oSegment.Fields.Add(1004, False, 0, False, 7);
    oSegment.Fields.Add(2185, False, 0, False, 8);
  oSegment := oSegments.Add('OBR', 'Observation Request');
    oSegment.Fields.Add(237, False, 0, False, 1);
    oSegment.Fields.Add(216, False, 0, False, 2);
    oSegment.Fields.Add(217, False, 0, False, 3);
    oSegment.Fields.Add(238, False, 0, True, 4);
    oSegment.Fields.Add(239, False, 0, False, 5);
    oSegment.Fields.Add(240, False, 0, False, 6);
    oSegment.Fields.Add(241, False, 0, False, 7);
    oSegment.Fields.Add(242, False, 0, False, 8);
    oSegment.Fields.Add(243, False, 0, False, 9);
    oSegment.Fields.Add(244, True, 0, False, 10);
    oSegment.Fields.Add(245, False, 0, False, 11);
    oSegment.Fields.Add(246, False, 0, False, 12);
    oSegment.Fields.Add(247, False, 0, False, 13);
    oSegment.Fields.Add(248, False, 0, False, 14);
    oSegment.Fields.Add(249, False, 0, False, 15);
    oSegment.Fields.Add(226, True, 0, False, 16);
    oSegment.Fields.Add(250, True, 2, False, 17);
    oSegment.Fields.Add(251, False, 0, False, 18);
    oSegment.Fields.Add(252, False, 0, False, 19);
    oSegment.Fields.Add(253, False, 0, False, 20);
    oSegment.Fields.Add(254, False, 0, False, 21);
    oSegment.Fields.Add(255, False, 0, False, 22);
    oSegment.Fields.Add(256, False, 0, False, 23);
    oSegment.Fields.Add(257, False, 0, False, 24);
    oSegment.Fields.Add(258, False, 0, False, 25);
    oSegment.Fields.Add(259, False, 0, False, 26);
    oSegment.Fields.Add(221, True, 0, False, 27);
    oSegment.Fields.Add(260, True, 0, False, 28);
    oSegment.Fields.Add(261, False, 0, False, 29);
    oSegment.Fields.Add(262, False, 0, False, 30);
    oSegment.Fields.Add(263, True, 0, False, 31);
    oSegment.Fields.Add(264, False, 0, False, 32);
    oSegment.Fields.Add(265, True, 0, False, 33);
    oSegment.Fields.Add(266, True, 0, False, 34);
    oSegment.Fields.Add(267, True, 0, False, 35);
    oSegment.Fields.Add(268, False, 0, False, 36);
    oSegment.Fields.Add(1028, False, 0, False, 37);
    oSegment.Fields.Add(1029, True, 0, False, 38);
    oSegment.Fields.Add(1030, True, 0, False, 39);
    oSegment.Fields.Add(1031, False, 0, False, 40);
    oSegment.Fields.Add(1032, False, 0, False, 41);
    oSegment.Fields.Add(1033, False, 0, False, 42);
    oSegment.Fields.Add(1034, True, 0, False, 43);
    oSegment.Fields.Add(393, False, 0, False, 44);
    oSegment.Fields.Add(1316, True, 0, False, 45);
    oSegment.Fields.Add(1474, True, 0, False, 46);
    oSegment.Fields.Add(1475, True, 0, False, 47);
    oSegment.Fields.Add(1646, False, 0, False, 48);
    oSegment.Fields.Add(1647, False, 0, False, 49);
    oSegment.Fields.Add(2286, False, 0, False, 50);
  oSegment := oSegments.Add('OBX', 'Observation/Result');
    oSegment.Fields.Add(569, False, 0, False, 1);
    oSegment.Fields.Add(570, False, 0, False, 2);
    oSegment.Fields.Add(571, False, 0, True, 3);
    oSegment.Fields.Add(572, False, 0, False, 4);
    oSegment.Fields.Add(573, True, 0, False, 5);
    oSegment.Fields.Add(574, False, 0, False, 6);
    oSegment.Fields.Add(575, False, 0, False, 7);
    oSegment.Fields.Add(576, True, 0, False, 8);
    oSegment.Fields.Add(577, False, 0, False, 9);
    oSegment.Fields.Add(578, True, 0, False, 10);
    oSegment.Fields.Add(579, False, 0, True, 11);
    oSegment.Fields.Add(580, False, 0, False, 12);
    oSegment.Fields.Add(581, False, 0, False, 13);
    oSegment.Fields.Add(582, False, 0, False, 14);
    oSegment.Fields.Add(583, False, 0, False, 15);
    oSegment.Fields.Add(584, True, 0, False, 16);
    oSegment.Fields.Add(936, True, 0, False, 17);
    oSegment.Fields.Add(1479, True, 0, False, 18);
    oSegment.Fields.Add(1480, False, 0, False, 19);
    oSegment.Fields.Add(2179, True, 0, False, 20);
    oSegment.Fields.Add(2180, False, 0, False, 21);
    oSegment.Fields.Add(2182, False, 0, False, 22);
    oSegment.Fields.Add(2283, False, 0, False, 23);
    oSegment.Fields.Add(2284, False, 0, False, 24);
    oSegment.Fields.Add(2285, False, 0, False, 25);
  oSegment := oSegments.Add('ODS', 'Dietary Orders, Supplements, and Preferences');
    oSegment.Fields.Add(269, False, 0, True, 1);
    oSegment.Fields.Add(270, True, 10, False, 2);
    oSegment.Fields.Add(271, True, 20, True, 3);
    oSegment.Fields.Add(272, True, 2, False, 4);
  oSegment := oSegments.Add('ODT', 'Diet Tray Instructions');
    oSegment.Fields.Add(273, False, 0, True, 1);
    oSegment.Fields.Add(270, True, 10, False, 2);
    oSegment.Fields.Add(272, False, 0, False, 3);
  oSegment := oSegments.Add('OM1', 'General Segment');
    oSegment.Fields.Add(586, False, 0, True, 1);
    oSegment.Fields.Add(587, False, 0, True, 2);
    oSegment.Fields.Add(588, True, 0, False, 3);
    oSegment.Fields.Add(589, False, 0, True, 4);
    oSegment.Fields.Add(590, False, 0, True, 5);
    oSegment.Fields.Add(591, False, 0, False, 6);
    oSegment.Fields.Add(592, False, 0, False, 7);
    oSegment.Fields.Add(593, True, 0, True, 8);
    oSegment.Fields.Add(594, False, 0, False, 9);
    oSegment.Fields.Add(595, False, 0, False, 10);
    oSegment.Fields.Add(596, False, 0, False, 11);
    oSegment.Fields.Add(597, False, 0, False, 12);
    oSegment.Fields.Add(598, True, 0, False, 13);
    oSegment.Fields.Add(599, True, 0, False, 14);
    oSegment.Fields.Add(600, False, 0, False, 15);
    oSegment.Fields.Add(601, True, 0, False, 16);
    oSegment.Fields.Add(602, False, 0, False, 17);
    oSegment.Fields.Add(603, False, 0, True, 18);
    oSegment.Fields.Add(604, False, 0, False, 19);
    oSegment.Fields.Add(605, False, 0, False, 20);
    oSegment.Fields.Add(606, False, 0, False, 21);
    oSegment.Fields.Add(607, False, 0, False, 22);
    oSegment.Fields.Add(608, False, 0, False, 23);
    oSegment.Fields.Add(609, False, 0, False, 24);
    oSegment.Fields.Add(610, True, 0, False, 25);
    oSegment.Fields.Add(611, False, 0, False, 26);
    oSegment.Fields.Add(612, True, 0, False, 27);
    oSegment.Fields.Add(613, True, 0, False, 28);
    oSegment.Fields.Add(614, False, 0, False, 29);
    oSegment.Fields.Add(615, False, 0, False, 30);
    oSegment.Fields.Add(616, False, 0, False, 31);
    oSegment.Fields.Add(617, False, 0, False, 32);
    oSegment.Fields.Add(618, False, 0, False, 33);
    oSegment.Fields.Add(619, True, 0, False, 34);
    oSegment.Fields.Add(620, False, 0, False, 35);
    oSegment.Fields.Add(621, False, 0, False, 36);
    oSegment.Fields.Add(622, False, 0, False, 37);
    oSegment.Fields.Add(623, False, 0, False, 38);
    oSegment.Fields.Add(624, False, 0, False, 39);
    oSegment.Fields.Add(625, True, 0, False, 40);
    oSegment.Fields.Add(626, False, 0, False, 41);
    oSegment.Fields.Add(937, False, 0, False, 42);
    oSegment.Fields.Add(938, False, 0, False, 43);
    oSegment.Fields.Add(939, False, 0, False, 44);
    oSegment.Fields.Add(940, False, 0, False, 45);
    oSegment.Fields.Add(941, False, 0, False, 46);
    oSegment.Fields.Add(942, False, 0, False, 47);
  oSegment := oSegments.Add('OM2', 'Numeric Observation');
    oSegment.Fields.Add(586, False, 0, False, 1);
    oSegment.Fields.Add(627, False, 0, False, 2);
    oSegment.Fields.Add(628, True, 0, False, 3);
    oSegment.Fields.Add(629, False, 0, False, 4);
    oSegment.Fields.Add(630, False, 0, False, 5);
    oSegment.Fields.Add(631, True, 0, False, 6);
    oSegment.Fields.Add(632, True, 0, False, 7);
    oSegment.Fields.Add(633, False, 0, False, 8);
    oSegment.Fields.Add(634, True, 0, False, 9);
    oSegment.Fields.Add(635, False, 0, False, 10);
  oSegment := oSegments.Add('OM3', 'Categorical Service/Test/Observation');
    oSegment.Fields.Add(586, False, 0, False, 1);
    oSegment.Fields.Add(636, False, 0, False, 2);
    oSegment.Fields.Add(637, True, 0, False, 3);
    oSegment.Fields.Add(638, True, 0, False, 4);
    oSegment.Fields.Add(639, True, 0, False, 5);
    oSegment.Fields.Add(640, True, 0, False, 6);
    oSegment.Fields.Add(570, False, 0, False, 7);
  oSegment := oSegments.Add('OM4', 'Observations that Require Specimens');
    oSegment.Fields.Add(586, False, 0, False, 1);
    oSegment.Fields.Add(642, False, 0, False, 2);
    oSegment.Fields.Add(643, False, 0, False, 3);
    oSegment.Fields.Add(644, False, 0, False, 4);
    oSegment.Fields.Add(645, False, 0, False, 5);
    oSegment.Fields.Add(646, False, 0, False, 6);
    oSegment.Fields.Add(647, False, 0, False, 7);
    oSegment.Fields.Add(648, False, 0, False, 8);
    oSegment.Fields.Add(649, False, 0, False, 9);
    oSegment.Fields.Add(650, False, 0, False, 10);
    oSegment.Fields.Add(651, False, 0, False, 11);
    oSegment.Fields.Add(652, False, 0, False, 12);
    oSegment.Fields.Add(653, True, 0, False, 13);
    oSegment.Fields.Add(654, False, 0, False, 14);
  oSegment := oSegments.Add('OM5', 'Observation Batteries (Sets)');
    oSegment.Fields.Add(586, False, 0, False, 1);
    oSegment.Fields.Add(655, True, 0, False, 2);
    oSegment.Fields.Add(656, False, 0, False, 3);
  oSegment := oSegments.Add('OM6', 'Observations that are Calculated from Other Observations');
    oSegment.Fields.Add(586, False, 0, False, 1);
    oSegment.Fields.Add(657, False, 0, False, 2);
  oSegment := oSegments.Add('OM7', 'Additional Basic Attributes');
    oSegment.Fields.Add(586, False, 0, True, 1);
    oSegment.Fields.Add(238, False, 0, True, 2);
    oSegment.Fields.Add(1481, True, 0, False, 3);
    oSegment.Fields.Add(1482, False, 0, False, 4);
    oSegment.Fields.Add(1483, True, 0, False, 5);
    oSegment.Fields.Add(1484, False, 0, False, 6);
    oSegment.Fields.Add(1485, False, 0, False, 7);
    oSegment.Fields.Add(1486, False, 0, False, 8);
    oSegment.Fields.Add(1487, False, 0, False, 9);
    oSegment.Fields.Add(1488, False, 0, False, 10);
    oSegment.Fields.Add(1489, False, 0, False, 11);
    oSegment.Fields.Add(1490, False, 0, False, 12);
    oSegment.Fields.Add(1491, False, 0, False, 13);
    oSegment.Fields.Add(1492, False, 0, False, 14);
    oSegment.Fields.Add(1493, False, 0, False, 15);
    oSegment.Fields.Add(1494, False, 0, False, 16);
    oSegment.Fields.Add(1495, False, 0, False, 17);
    oSegment.Fields.Add(1496, False, 0, False, 18);
    oSegment.Fields.Add(607, False, 0, False, 19);
    oSegment.Fields.Add(224, False, 0, False, 20);
    oSegment.Fields.Add(1497, True, 0, False, 21);
    oSegment.Fields.Add(1498, False, 0, False, 22);
    oSegment.Fields.Add(1499, False, 0, False, 23);
    oSegment.Fields.Add(1306, True, 0, False, 24);
  oSegment := oSegments.Add('ORC', 'Common Order');
    oSegment.Fields.Add(215, False, 0, True, 1);
    oSegment.Fields.Add(216, False, 0, False, 2);
    oSegment.Fields.Add(217, False, 0, False, 3);
    oSegment.Fields.Add(218, False, 0, False, 4);
    oSegment.Fields.Add(219, False, 0, False, 5);
    oSegment.Fields.Add(220, False, 0, False, 6);
    oSegment.Fields.Add(221, True, 0, False, 7);
    oSegment.Fields.Add(222, False, 0, False, 8);
    oSegment.Fields.Add(223, False, 0, False, 9);
    oSegment.Fields.Add(224, True, 0, False, 10);
    oSegment.Fields.Add(225, True, 0, False, 11);
    oSegment.Fields.Add(226, True, 0, False, 12);
    oSegment.Fields.Add(227, False, 0, False, 13);
    oSegment.Fields.Add(228, True, 2, False, 14);
    oSegment.Fields.Add(229, False, 0, False, 15);
    oSegment.Fields.Add(230, False, 0, False, 16);
    oSegment.Fields.Add(231, False, 0, False, 17);
    oSegment.Fields.Add(232, False, 0, False, 18);
    oSegment.Fields.Add(233, True, 0, False, 19);
    oSegment.Fields.Add(1310, False, 0, False, 20);
    oSegment.Fields.Add(1311, True, 0, False, 21);
    oSegment.Fields.Add(1312, True, 0, False, 22);
    oSegment.Fields.Add(1313, True, 0, False, 23);
    oSegment.Fields.Add(1314, True, 0, False, 24);
    oSegment.Fields.Add(1473, False, 0, False, 25);
    oSegment.Fields.Add(1641, False, 0, False, 26);
    oSegment.Fields.Add(1642, False, 0, False, 27);
    oSegment.Fields.Add(615, False, 0, False, 28);
    oSegment.Fields.Add(1643, False, 0, False, 29);
    oSegment.Fields.Add(1644, False, 0, False, 30);
    oSegment.Fields.Add(2287, False, 0, False, 31);
  oSegment := oSegments.Add('ORG', 'Practitioner Organization Unit');
    oSegment.Fields.Add(1459, False, 0, True, 1);
    oSegment.Fields.Add(1460, False, 0, False, 2);
    oSegment.Fields.Add(1625, False, 0, False, 3);
    oSegment.Fields.Add(1462, False, 0, False, 4);
    oSegment.Fields.Add(1463, False, 0, False, 5);
    oSegment.Fields.Add(1464, False, 0, False, 6);
    oSegment.Fields.Add(1614, False, 0, False, 7);
    oSegment.Fields.Add(1615, False, 0, False, 8);
    oSegment.Fields.Add(1465, False, 0, False, 9);
    oSegment.Fields.Add(1276, False, 0, False, 10);
    oSegment.Fields.Add(1467, False, 0, False, 11);
    oSegment.Fields.Add(1468, False, 0, False, 12);
  oSegment := oSegments.Add('OVR', 'Override Segment');
    oSegment.Fields.Add(1829, False, 0, False, 1);
    oSegment.Fields.Add(1830, False, 0, False, 2);
    oSegment.Fields.Add(1831, False, 0, False, 3);
    oSegment.Fields.Add(1832, False, 0, False, 4);
    oSegment.Fields.Add(1833, False, 0, False, 5);
  oSegment := oSegments.Add('PCE', 'Patient Charge Cost Center Exceptions');
    oSegment.Fields.Add(2228, False, 0, True, 1);
    oSegment.Fields.Add(281, False, 0, False, 2);
    oSegment.Fields.Add(361, False, 0, False, 3);
    oSegment.Fields.Add(366, False, 0, False, 4);
  oSegment := oSegments.Add('PCR', 'Possible Causal Relationship');
    oSegment.Fields.Add(1098, False, 0, True, 1);
    oSegment.Fields.Add(1099, False, 0, False, 2);
    oSegment.Fields.Add(1100, False, 0, False, 3);
    oSegment.Fields.Add(1101, False, 0, False, 4);
    oSegment.Fields.Add(1102, False, 0, False, 5);
    oSegment.Fields.Add(1103, False, 0, False, 6);
    oSegment.Fields.Add(1104, False, 0, False, 7);
    oSegment.Fields.Add(1105, False, 0, False, 8);
    oSegment.Fields.Add(1106, False, 0, False, 9);
    oSegment.Fields.Add(1107, False, 0, False, 10);
    oSegment.Fields.Add(1108, False, 0, False, 11);
    oSegment.Fields.Add(1109, True, 3, False, 12);
    oSegment.Fields.Add(1110, False, 0, False, 13);
    oSegment.Fields.Add(1111, False, 0, False, 14);
    oSegment.Fields.Add(1112, False, 0, False, 15);
    oSegment.Fields.Add(1113, False, 0, False, 16);
    oSegment.Fields.Add(1114, False, 0, False, 17);
    oSegment.Fields.Add(1115, False, 0, False, 18);
    oSegment.Fields.Add(1116, False, 0, False, 19);
    oSegment.Fields.Add(1117, False, 0, False, 20);
    oSegment.Fields.Add(1118, True, 6, False, 21);
    oSegment.Fields.Add(1119, True, 6, False, 22);
    oSegment.Fields.Add(1120, True, 3, False, 23);
  oSegment := oSegments.Add('PD1', 'Patient Additional Demographic');
    oSegment.Fields.Add(755, True, 0, False, 1);
    oSegment.Fields.Add(742, False, 0, False, 2);
    oSegment.Fields.Add(756, True, 0, False, 3);
    oSegment.Fields.Add(757, True, 0, False, 4);
    oSegment.Fields.Add(745, False, 0, False, 5);
    oSegment.Fields.Add(753, False, 0, False, 6);
    oSegment.Fields.Add(759, False, 0, False, 7);
    oSegment.Fields.Add(760, False, 0, False, 8);
    oSegment.Fields.Add(761, False, 0, False, 9);
    oSegment.Fields.Add(762, True, 0, False, 10);
    oSegment.Fields.Add(743, False, 0, False, 11);
    oSegment.Fields.Add(744, False, 0, False, 12);
    oSegment.Fields.Add(1566, False, 0, False, 13);
    oSegment.Fields.Add(1567, True, 0, False, 14);
    oSegment.Fields.Add(1548, True, 0, False, 15);
    oSegment.Fields.Add(1569, False, 0, False, 16);
    oSegment.Fields.Add(1570, False, 0, False, 17);
    oSegment.Fields.Add(1571, False, 0, False, 18);
    oSegment.Fields.Add(1572, False, 0, False, 19);
    oSegment.Fields.Add(486, False, 0, False, 20);
    oSegment.Fields.Add(1573, False, 0, False, 21);
    oSegment.Fields.Add(2141, False, 0, False, 22);
  oSegment := oSegments.Add('PDA', 'Patient Death and Autopsy');
    oSegment.Fields.Add(1574, True, 0, False, 1);
    oSegment.Fields.Add(1575, False, 0, False, 2);
    oSegment.Fields.Add(1576, False, 0, False, 3);
    oSegment.Fields.Add(1577, False, 0, False, 4);
    oSegment.Fields.Add(1578, False, 0, False, 5);
    oSegment.Fields.Add(1579, False, 0, False, 6);
    oSegment.Fields.Add(1580, False, 0, False, 7);
    oSegment.Fields.Add(1581, False, 0, False, 8);
    oSegment.Fields.Add(1582, False, 0, False, 9);
  oSegment := oSegments.Add('PDC', 'Product Detail Country');
    oSegment.Fields.Add(1247, True, 0, True, 1);
    oSegment.Fields.Add(1248, False, 0, True, 2);
    oSegment.Fields.Add(1249, False, 0, True, 3);
    oSegment.Fields.Add(1250, False, 0, False, 4);
    oSegment.Fields.Add(1251, False, 0, False, 5);
    oSegment.Fields.Add(1252, True, 0, False, 6);
    oSegment.Fields.Add(1253, False, 0, False, 7);
    oSegment.Fields.Add(1254, True, 0, False, 8);
    oSegment.Fields.Add(1255, False, 0, False, 9);
    oSegment.Fields.Add(1256, False, 0, False, 10);
    oSegment.Fields.Add(1257, False, 0, False, 11);
    oSegment.Fields.Add(1258, False, 0, False, 12);
    oSegment.Fields.Add(1259, False, 0, False, 13);
    oSegment.Fields.Add(1260, False, 0, False, 14);
    oSegment.Fields.Add(1261, False, 0, False, 15);
  oSegment := oSegments.Add('PEO', 'Product Experience Observation');
    oSegment.Fields.Add(1073, True, 0, False, 1);
    oSegment.Fields.Add(1074, True, 0, False, 2);
    oSegment.Fields.Add(1075, False, 0, True, 3);
    oSegment.Fields.Add(1076, False, 0, False, 4);
    oSegment.Fields.Add(1077, False, 0, False, 5);
    oSegment.Fields.Add(1078, False, 0, False, 6);
    oSegment.Fields.Add(1079, True, 0, False, 7);
    oSegment.Fields.Add(1080, True, 0, False, 8);
    oSegment.Fields.Add(1081, False, 0, False, 9);
    oSegment.Fields.Add(1082, False, 0, False, 10);
    oSegment.Fields.Add(1083, True, 0, False, 11);
    oSegment.Fields.Add(1084, False, 0, False, 12);
    oSegment.Fields.Add(1085, True, 0, False, 13);
    oSegment.Fields.Add(1086, True, 0, False, 14);
    oSegment.Fields.Add(1087, True, 0, False, 15);
    oSegment.Fields.Add(1088, True, 0, False, 16);
    oSegment.Fields.Add(1089, True, 0, False, 17);
    oSegment.Fields.Add(1090, True, 0, False, 18);
    oSegment.Fields.Add(1091, True, 0, False, 19);
    oSegment.Fields.Add(1092, True, 0, False, 20);
    oSegment.Fields.Add(1093, True, 0, False, 21);
    oSegment.Fields.Add(1094, False, 0, False, 22);
    oSegment.Fields.Add(1095, False, 0, False, 23);
    oSegment.Fields.Add(1096, False, 0, False, 24);
    oSegment.Fields.Add(1097, False, 0, False, 25);
  oSegment := oSegments.Add('PES', 'Product Experience Sender');
    oSegment.Fields.Add(1059, True, 0, False, 1);
    oSegment.Fields.Add(1060, True, 0, False, 2);
    oSegment.Fields.Add(1062, True, 0, False, 3);
    oSegment.Fields.Add(1063, True, 0, False, 4);
    oSegment.Fields.Add(1064, False, 0, False, 5);
    oSegment.Fields.Add(1065, False, 0, False, 6);
    oSegment.Fields.Add(1066, True, 0, False, 7);
    oSegment.Fields.Add(1067, False, 0, False, 8);
    oSegment.Fields.Add(1068, False, 0, False, 9);
    oSegment.Fields.Add(1069, False, 0, True, 10);
    oSegment.Fields.Add(1070, True, 2, False, 11);
    oSegment.Fields.Add(1071, False, 0, False, 12);
    oSegment.Fields.Add(1072, True, 0, False, 13);
  oSegment := oSegments.Add('PID', 'Patient Identification');
    oSegment.Fields.Add(104, False, 0, False, 1);
    oSegment.Fields.Add(105, False, 0, False, 2);
    oSegment.Fields.Add(106, True, 0, True, 3);
    oSegment.Fields.Add(107, True, 0, False, 4);
    oSegment.Fields.Add(108, True, 0, True, 5);
    oSegment.Fields.Add(109, True, 0, False, 6);
    oSegment.Fields.Add(110, False, 0, False, 7);
    oSegment.Fields.Add(111, False, 0, False, 8);
    oSegment.Fields.Add(112, True, 0, False, 9);
    oSegment.Fields.Add(113, True, 0, False, 10);
    oSegment.Fields.Add(114, True, 0, False, 11);
    oSegment.Fields.Add(115, False, 0, False, 12);
    oSegment.Fields.Add(116, True, 0, False, 13);
    oSegment.Fields.Add(117, True, 0, False, 14);
    oSegment.Fields.Add(118, False, 0, False, 15);
    oSegment.Fields.Add(119, False, 0, False, 16);
    oSegment.Fields.Add(120, False, 0, False, 17);
    oSegment.Fields.Add(121, False, 0, False, 18);
    oSegment.Fields.Add(122, False, 0, False, 19);
    oSegment.Fields.Add(123, False, 0, False, 20);
    oSegment.Fields.Add(124, True, 0, False, 21);
    oSegment.Fields.Add(125, True, 0, False, 22);
    oSegment.Fields.Add(126, False, 0, False, 23);
    oSegment.Fields.Add(127, False, 0, False, 24);
    oSegment.Fields.Add(128, False, 0, False, 25);
    oSegment.Fields.Add(129, True, 0, False, 26);
    oSegment.Fields.Add(130, False, 0, False, 27);
    oSegment.Fields.Add(739, False, 0, False, 28);
    oSegment.Fields.Add(740, False, 0, False, 29);
    oSegment.Fields.Add(741, False, 0, False, 30);
    oSegment.Fields.Add(1535, False, 0, False, 31);
    oSegment.Fields.Add(1536, True, 0, False, 32);
    oSegment.Fields.Add(1537, False, 0, False, 33);
    oSegment.Fields.Add(1538, False, 0, False, 34);
    oSegment.Fields.Add(1539, False, 0, False, 35);
    oSegment.Fields.Add(1540, False, 0, False, 36);
    oSegment.Fields.Add(1541, False, 0, False, 37);
    oSegment.Fields.Add(1542, False, 0, False, 38);
    oSegment.Fields.Add(1840, True, 0, False, 39);
  oSegment := oSegments.Add('PKG', 'Item Packaging');
    oSegment.Fields.Add(2221, False, 0, True, 1);
    oSegment.Fields.Add(2222, False, 0, False, 2);
    oSegment.Fields.Add(2223, False, 0, False, 3);
    oSegment.Fields.Add(2224, False, 0, False, 4);
    oSegment.Fields.Add(2225, False, 0, False, 5);
    oSegment.Fields.Add(2226, False, 0, False, 6);
    oSegment.Fields.Add(2227, False, 0, False, 7);
  oSegment := oSegments.Add('PMT', 'Payment Information');
    oSegment.Fields.Add(2018, False, 0, True, 1);
    oSegment.Fields.Add(2019, False, 0, True, 2);
    oSegment.Fields.Add(2020, False, 0, True, 3);
    oSegment.Fields.Add(2021, False, 0, True, 4);
    oSegment.Fields.Add(2022, False, 0, True, 5);
    oSegment.Fields.Add(2023, False, 0, True, 6);
    oSegment.Fields.Add(2024, False, 0, False, 7);
    oSegment.Fields.Add(2025, False, 0, False, 8);
    oSegment.Fields.Add(2026, False, 0, False, 9);
    oSegment.Fields.Add(2027, False, 0, False, 10);
    oSegment.Fields.Add(2028, False, 0, True, 11);
    oSegment.Fields.Add(2029, False, 0, False, 12);
  oSegment := oSegments.Add('PR1', 'Procedures');
    oSegment.Fields.Add(391, False, 0, True, 1);
    oSegment.Fields.Add(392, False, 0, False, 2);
    oSegment.Fields.Add(393, False, 0, True, 3);
    oSegment.Fields.Add(394, False, 0, False, 4);
    oSegment.Fields.Add(395, False, 0, True, 5);
    oSegment.Fields.Add(396, False, 0, False, 6);
    oSegment.Fields.Add(397, False, 0, False, 7);
    oSegment.Fields.Add(398, False, 0, False, 8);
    oSegment.Fields.Add(399, False, 0, False, 9);
    oSegment.Fields.Add(400, False, 0, False, 10);
    oSegment.Fields.Add(401, False, 0, False, 11);
    oSegment.Fields.Add(402, False, 0, False, 12);
    oSegment.Fields.Add(403, False, 0, False, 13);
    oSegment.Fields.Add(404, False, 0, False, 14);
    oSegment.Fields.Add(772, False, 0, False, 15);
    oSegment.Fields.Add(1316, True, 0, False, 16);
    oSegment.Fields.Add(1501, False, 0, False, 17);
    oSegment.Fields.Add(1502, True, 0, False, 18);
    oSegment.Fields.Add(1848, False, 0, False, 19);
    oSegment.Fields.Add(1849, False, 0, False, 20);
    oSegment.Fields.Add(2177, False, 0, False, 21);
    oSegment.Fields.Add(2178, False, 0, False, 22);
  oSegment := oSegments.Add('PRA', 'Practitioner Detail');
    oSegment.Fields.Add(685, False, 0, False, 1);
    oSegment.Fields.Add(686, True, 0, False, 2);
    oSegment.Fields.Add(687, True, 0, False, 3);
    oSegment.Fields.Add(688, False, 0, False, 4);
    oSegment.Fields.Add(689, True, 0, False, 5);
    oSegment.Fields.Add(690, True, 0, False, 6);
    oSegment.Fields.Add(691, True, 0, False, 7);
    oSegment.Fields.Add(1296, False, 0, False, 8);
    oSegment.Fields.Add(1613, False, 0, False, 9);
    oSegment.Fields.Add(1348, False, 0, False, 10);
    oSegment.Fields.Add(1388, True, 0, False, 11);
    oSegment.Fields.Add(1616, False, 0, False, 12);
  oSegment := oSegments.Add('PRB', 'Problem Details');
    oSegment.Fields.Add(816, False, 0, True, 1);
    oSegment.Fields.Add(817, False, 0, True, 2);
    oSegment.Fields.Add(838, False, 0, True, 3);
    oSegment.Fields.Add(839, False, 0, True, 4);
    oSegment.Fields.Add(820, False, 0, False, 5);
    oSegment.Fields.Add(841, False, 0, False, 6);
    oSegment.Fields.Add(842, False, 0, False, 7);
    oSegment.Fields.Add(843, False, 0, False, 8);
    oSegment.Fields.Add(844, False, 0, False, 9);
    oSegment.Fields.Add(845, False, 0, False, 10);
    oSegment.Fields.Add(846, True, 0, False, 11);
    oSegment.Fields.Add(847, False, 0, False, 12);
    oSegment.Fields.Add(848, False, 0, False, 13);
    oSegment.Fields.Add(849, False, 0, False, 14);
    oSegment.Fields.Add(850, False, 0, False, 15);
    oSegment.Fields.Add(851, False, 0, False, 16);
    oSegment.Fields.Add(852, False, 0, False, 17);
    oSegment.Fields.Add(853, False, 0, False, 18);
    oSegment.Fields.Add(854, False, 0, False, 19);
    oSegment.Fields.Add(855, False, 0, False, 20);
    oSegment.Fields.Add(856, False, 0, False, 21);
    oSegment.Fields.Add(857, False, 0, False, 22);
    oSegment.Fields.Add(858, False, 0, False, 23);
    oSegment.Fields.Add(859, False, 0, False, 24);
    oSegment.Fields.Add(823, False, 0, False, 25);
    oSegment.Fields.Add(2234, False, 0, False, 26);
    oSegment.Fields.Add(2235, False, 0, False, 27);
    oSegment.Fields.Add(2237, False, 0, False, 28);
  oSegment := oSegments.Add('PRC', 'Pricing');
    oSegment.Fields.Add(982, False, 0, True, 1);
    oSegment.Fields.Add(995, True, 0, False, 2);
    oSegment.Fields.Add(676, True, 0, False, 3);
    oSegment.Fields.Add(967, True, 0, False, 4);
    oSegment.Fields.Add(998, True, 0, False, 5);
    oSegment.Fields.Add(999, True, 0, False, 6);
    oSegment.Fields.Add(1000, False, 0, False, 7);
    oSegment.Fields.Add(1001, False, 0, False, 8);
    oSegment.Fields.Add(1002, False, 0, False, 9);
    oSegment.Fields.Add(1003, False, 0, False, 10);
    oSegment.Fields.Add(1004, False, 0, False, 11);
    oSegment.Fields.Add(1005, False, 0, False, 12);
    oSegment.Fields.Add(1006, False, 0, False, 13);
    oSegment.Fields.Add(1007, True, 0, False, 14);
    oSegment.Fields.Add(1008, False, 0, False, 15);
    oSegment.Fields.Add(675, False, 0, False, 16);
    oSegment.Fields.Add(989, False, 0, False, 17);
    oSegment.Fields.Add(1009, False, 0, False, 18);
  oSegment := oSegments.Add('PRD', 'Provider Data');
    oSegment.Fields.Add(1155, True, 0, True, 1);
    oSegment.Fields.Add(1156, True, 0, False, 2);
    oSegment.Fields.Add(1157, True, 0, False, 3);
    oSegment.Fields.Add(1158, False, 0, False, 4);
    oSegment.Fields.Add(1159, True, 0, False, 5);
    oSegment.Fields.Add(684, False, 0, False, 6);
    oSegment.Fields.Add(1162, True, 0, False, 7);
    oSegment.Fields.Add(1163, False, 0, False, 8);
    oSegment.Fields.Add(1164, True, 0, False, 9);
    oSegment.Fields.Add(2256, False, 0, False, 10);
    oSegment.Fields.Add(2257, True, 0, False, 11);
    oSegment.Fields.Add(2258, True, 0, False, 12);
    oSegment.Fields.Add(2259, True, 0, False, 13);
    oSegment.Fields.Add(2260, False, 0, False, 14);
  oSegment := oSegments.Add('PSG', 'Product/Service Group');
    oSegment.Fields.Add(1950, False, 0, True, 1);
    oSegment.Fields.Add(1951, False, 0, False, 2);
    oSegment.Fields.Add(1952, False, 0, True, 3);
    oSegment.Fields.Add(1953, False, 0, True, 4);
    oSegment.Fields.Add(1954, False, 0, True, 5);
    oSegment.Fields.Add(2044, False, 0, True, 6);
  oSegment := oSegments.Add('PSH', 'Product Summary Header');
    oSegment.Fields.Add(1233, False, 0, True, 1);
    oSegment.Fields.Add(1297, False, 0, False, 2);
    oSegment.Fields.Add(1235, False, 0, True, 3);
    oSegment.Fields.Add(1236, False, 0, False, 4);
    oSegment.Fields.Add(1237, False, 0, False, 5);
    oSegment.Fields.Add(1238, False, 0, False, 6);
    oSegment.Fields.Add(1239, False, 0, False, 7);
    oSegment.Fields.Add(1240, False, 0, False, 8);
    oSegment.Fields.Add(1241, False, 0, False, 9);
    oSegment.Fields.Add(1242, False, 0, False, 10);
    oSegment.Fields.Add(1243, False, 0, False, 11);
    oSegment.Fields.Add(1244, False, 0, False, 12);
    oSegment.Fields.Add(1245, True, 8, False, 13);
    oSegment.Fields.Add(1246, True, 8, False, 14);
  oSegment := oSegments.Add('PSL', 'Product/Service Line Item');
    oSegment.Fields.Add(1955, False, 0, True, 1);
    oSegment.Fields.Add(1956, False, 0, False, 2);
    oSegment.Fields.Add(1957, False, 0, True, 3);
    oSegment.Fields.Add(1958, False, 0, False, 4);
    oSegment.Fields.Add(1959, False, 0, False, 5);
    oSegment.Fields.Add(1960, False, 0, True, 6);
    oSegment.Fields.Add(1961, False, 0, True, 7);
    oSegment.Fields.Add(1962, False, 0, False, 8);
    oSegment.Fields.Add(1963, False, 0, False, 9);
    oSegment.Fields.Add(1964, False, 0, False, 10);
    oSegment.Fields.Add(1965, False, 0, False, 11);
    oSegment.Fields.Add(1966, False, 0, False, 12);
    oSegment.Fields.Add(1967, False, 0, False, 13);
    oSegment.Fields.Add(1968, False, 0, False, 14);
    oSegment.Fields.Add(1969, False, 0, False, 15);
    oSegment.Fields.Add(1970, False, 0, False, 16);
    oSegment.Fields.Add(1971, False, 0, False, 17);
    oSegment.Fields.Add(1972, False, 0, False, 18);
    oSegment.Fields.Add(1973, False, 0, False, 19);
    oSegment.Fields.Add(1974, False, 0, False, 20);
    oSegment.Fields.Add(1975, False, 0, True, 21);
    oSegment.Fields.Add(1976, False, 0, False, 22);
    oSegment.Fields.Add(1977, False, 0, False, 23);
    oSegment.Fields.Add(1978, False, 0, False, 24);
    oSegment.Fields.Add(1933, False, 0, False, 25);
    oSegment.Fields.Add(1980, False, 0, False, 26);
    oSegment.Fields.Add(1981, False, 0, False, 27);
    oSegment.Fields.Add(1982, False, 0, False, 28);
    oSegment.Fields.Add(1983, False, 0, False, 29);
    oSegment.Fields.Add(1984, False, 0, False, 30);
    oSegment.Fields.Add(1985, False, 0, False, 31);
    oSegment.Fields.Add(1986, False, 0, False, 32);
    oSegment.Fields.Add(1987, False, 0, False, 33);
    oSegment.Fields.Add(1988, False, 0, False, 34);
    oSegment.Fields.Add(1989, False, 0, False, 35);
    oSegment.Fields.Add(1990, False, 0, False, 36);
    oSegment.Fields.Add(1991, False, 0, False, 37);
    oSegment.Fields.Add(1992, False, 0, False, 38);
    oSegment.Fields.Add(1993, False, 0, False, 39);
    oSegment.Fields.Add(1994, False, 0, False, 40);
    oSegment.Fields.Add(1995, False, 0, False, 41);
    oSegment.Fields.Add(1996, False, 0, False, 42);
    oSegment.Fields.Add(1997, False, 0, False, 43);
    oSegment.Fields.Add(1998, False, 0, False, 44);
    oSegment.Fields.Add(1999, False, 0, False, 45);
    oSegment.Fields.Add(2000, False, 0, False, 46);
    oSegment.Fields.Add(2001, False, 0, False, 47);
    oSegment.Fields.Add(2002, False, 0, False, 48);
  oSegment := oSegments.Add('PSS', 'Product/Service Section');
    oSegment.Fields.Add(1946, False, 0, True, 1);
    oSegment.Fields.Add(1947, False, 0, False, 2);
    oSegment.Fields.Add(1948, False, 0, True, 3);
    oSegment.Fields.Add(1949, False, 0, True, 4);
    oSegment.Fields.Add(2043, False, 0, True, 5);
  oSegment := oSegments.Add('PTH', 'Pathway');
    oSegment.Fields.Add(816, False, 0, True, 1);
    oSegment.Fields.Add(1207, False, 0, True, 2);
    oSegment.Fields.Add(1208, False, 0, True, 3);
    oSegment.Fields.Add(1209, False, 0, True, 4);
    oSegment.Fields.Add(1210, False, 0, False, 5);
    oSegment.Fields.Add(1211, False, 0, False, 6);
    oSegment.Fields.Add(2239, False, 0, False, 7);
  oSegment := oSegments.Add('PV1', 'Patient Visit');
    oSegment.Fields.Add(131, False, 0, False, 1);
    oSegment.Fields.Add(132, False, 0, True, 2);
    oSegment.Fields.Add(133, False, 0, False, 3);
    oSegment.Fields.Add(134, False, 0, False, 4);
    oSegment.Fields.Add(135, False, 0, False, 5);
    oSegment.Fields.Add(136, False, 0, False, 6);
    oSegment.Fields.Add(137, True, 0, False, 7);
    oSegment.Fields.Add(138, True, 0, False, 8);
    oSegment.Fields.Add(139, True, 0, False, 9);
    oSegment.Fields.Add(140, False, 0, False, 10);
    oSegment.Fields.Add(141, False, 0, False, 11);
    oSegment.Fields.Add(142, False, 0, False, 12);
    oSegment.Fields.Add(143, False, 0, False, 13);
    oSegment.Fields.Add(144, False, 0, False, 14);
    oSegment.Fields.Add(145, True, 0, False, 15);
    oSegment.Fields.Add(146, False, 0, False, 16);
    oSegment.Fields.Add(147, True, 0, False, 17);
    oSegment.Fields.Add(148, False, 0, False, 18);
    oSegment.Fields.Add(149, False, 0, False, 19);
    oSegment.Fields.Add(150, True, 0, False, 20);
    oSegment.Fields.Add(151, False, 0, False, 21);
    oSegment.Fields.Add(152, False, 0, False, 22);
    oSegment.Fields.Add(153, False, 0, False, 23);
    oSegment.Fields.Add(154, True, 0, False, 24);
    oSegment.Fields.Add(155, True, 0, False, 25);
    oSegment.Fields.Add(156, True, 0, False, 26);
    oSegment.Fields.Add(157, True, 0, False, 27);
    oSegment.Fields.Add(158, False, 0, False, 28);
    oSegment.Fields.Add(159, False, 0, False, 29);
    oSegment.Fields.Add(160, False, 0, False, 30);
    oSegment.Fields.Add(161, False, 0, False, 31);
    oSegment.Fields.Add(162, False, 0, False, 32);
    oSegment.Fields.Add(163, False, 0, False, 33);
    oSegment.Fields.Add(164, False, 0, False, 34);
    oSegment.Fields.Add(165, False, 0, False, 35);
    oSegment.Fields.Add(166, False, 0, False, 36);
    oSegment.Fields.Add(167, False, 0, False, 37);
    oSegment.Fields.Add(168, False, 0, False, 38);
    oSegment.Fields.Add(169, False, 0, False, 39);
    oSegment.Fields.Add(170, False, 0, False, 40);
    oSegment.Fields.Add(171, False, 0, False, 41);
    oSegment.Fields.Add(172, False, 0, False, 42);
    oSegment.Fields.Add(173, False, 0, False, 43);
    oSegment.Fields.Add(174, False, 0, False, 44);
    oSegment.Fields.Add(175, False, 0, False, 45);
    oSegment.Fields.Add(176, False, 0, False, 46);
    oSegment.Fields.Add(177, False, 0, False, 47);
    oSegment.Fields.Add(178, False, 0, False, 48);
    oSegment.Fields.Add(179, False, 0, False, 49);
    oSegment.Fields.Add(180, False, 0, False, 50);
    oSegment.Fields.Add(1226, False, 0, False, 51);
    oSegment.Fields.Add(1274, True, 0, False, 52);
  oSegment := oSegments.Add('PV2', 'Patient Visit - Additional Information');
    oSegment.Fields.Add(181, False, 0, False, 1);
    oSegment.Fields.Add(182, False, 0, False, 2);
    oSegment.Fields.Add(183, False, 0, False, 3);
    oSegment.Fields.Add(184, False, 0, False, 4);
    oSegment.Fields.Add(185, True, 0, False, 5);
    oSegment.Fields.Add(186, False, 0, False, 6);
    oSegment.Fields.Add(187, True, 0, False, 7);
    oSegment.Fields.Add(188, False, 0, False, 8);
    oSegment.Fields.Add(189, False, 0, False, 9);
    oSegment.Fields.Add(711, False, 0, False, 10);
    oSegment.Fields.Add(712, False, 0, False, 11);
    oSegment.Fields.Add(713, False, 0, False, 12);
    oSegment.Fields.Add(714, True, 0, False, 13);
    oSegment.Fields.Add(715, False, 0, False, 14);
    oSegment.Fields.Add(716, False, 0, False, 15);
    oSegment.Fields.Add(717, False, 0, False, 16);
    oSegment.Fields.Add(718, False, 0, False, 17);
    oSegment.Fields.Add(719, False, 0, False, 18);
    oSegment.Fields.Add(720, False, 0, False, 19);
    oSegment.Fields.Add(721, False, 0, False, 20);
    oSegment.Fields.Add(722, False, 0, False, 21);
    oSegment.Fields.Add(723, False, 0, False, 22);
    oSegment.Fields.Add(724, True, 0, False, 23);
    oSegment.Fields.Add(725, False, 0, False, 24);
    oSegment.Fields.Add(726, False, 0, False, 25);
    oSegment.Fields.Add(727, False, 0, False, 26);
    oSegment.Fields.Add(728, False, 0, False, 27);
    oSegment.Fields.Add(729, False, 0, False, 28);
    oSegment.Fields.Add(730, False, 0, False, 29);
    oSegment.Fields.Add(731, False, 0, False, 30);
    oSegment.Fields.Add(732, False, 0, False, 31);
    oSegment.Fields.Add(733, False, 0, False, 32);
    oSegment.Fields.Add(734, False, 0, False, 33);
    oSegment.Fields.Add(735, False, 0, False, 34);
    oSegment.Fields.Add(736, False, 0, False, 35);
    oSegment.Fields.Add(737, False, 0, False, 36);
    oSegment.Fields.Add(738, False, 0, False, 37);
    oSegment.Fields.Add(1543, False, 0, False, 38);
    oSegment.Fields.Add(1544, True, 0, False, 39);
    oSegment.Fields.Add(1545, False, 0, False, 40);
    oSegment.Fields.Add(1546, True, 0, False, 41);
    oSegment.Fields.Add(1547, False, 0, False, 42);
    oSegment.Fields.Add(759, False, 0, False, 43);
    oSegment.Fields.Add(760, False, 0, False, 44);
    oSegment.Fields.Add(1548, True, 0, False, 45);
    oSegment.Fields.Add(1549, False, 0, False, 46);
    oSegment.Fields.Add(1550, False, 0, False, 47);
    oSegment.Fields.Add(1841, False, 0, False, 48);
    oSegment.Fields.Add(1842, True, 0, False, 49);
    oSegment.Fields.Add(2141, False, 0, False, 50);
  oSegment := oSegments.Add('PYE', 'Payee Information');
    oSegment.Fields.Add(1939, False, 0, True, 1);
    oSegment.Fields.Add(1940, False, 0, True, 2);
    oSegment.Fields.Add(1941, False, 0, False, 3);
    oSegment.Fields.Add(1942, False, 0, False, 4);
    oSegment.Fields.Add(1943, False, 0, False, 5);
    oSegment.Fields.Add(1944, False, 0, False, 6);
    oSegment.Fields.Add(1945, False, 0, False, 7);
  oSegment := oSegments.Add('QAK', 'Query Acknowledgment');
    oSegment.Fields.Add(696, False, 0, False, 1);
    oSegment.Fields.Add(708, False, 0, False, 2);
    oSegment.Fields.Add(1375, False, 0, False, 3);
    oSegment.Fields.Add(1434, False, 0, False, 4);
    oSegment.Fields.Add(1622, False, 0, False, 5);
    oSegment.Fields.Add(1623, False, 0, False, 6);
  oSegment := oSegments.Add('QID', 'Query Identification');
    oSegment.Fields.Add(696, False, 0, True, 1);
    oSegment.Fields.Add(1375, False, 0, True, 2);
  oSegment := oSegments.Add('QPD', 'Query Parameter Definition');
    oSegment.Fields.Add(1375, False, 0, True, 1);
    oSegment.Fields.Add(696, False, 0, False, 2);
    oSegment.Fields.Add(1435, False, 0, False, 3);
  oSegment := oSegments.Add('QRD', 'Original-Style Query Definition');
    oSegment.Fields.Add(25, False, 0, True, 1);
    oSegment.Fields.Add(26, False, 0, True, 2);
    oSegment.Fields.Add(27, False, 0, True, 3);
    oSegment.Fields.Add(28, False, 0, True, 4);
    oSegment.Fields.Add(29, False, 0, False, 5);
    oSegment.Fields.Add(30, False, 0, False, 6);
    oSegment.Fields.Add(31, False, 0, True, 7);
    oSegment.Fields.Add(32, True, 0, True, 8);
    oSegment.Fields.Add(33, True, 0, True, 9);
    oSegment.Fields.Add(34, True, 0, True, 10);
    oSegment.Fields.Add(35, True, 0, False, 11);
    oSegment.Fields.Add(36, False, 0, False, 12);
  oSegment := oSegments.Add('QRF', 'Original style query filter');
    oSegment.Fields.Add(37, True, 0, True, 1);
    oSegment.Fields.Add(38, False, 0, False, 2);
    oSegment.Fields.Add(39, False, 0, False, 3);
    oSegment.Fields.Add(40, True, 0, False, 4);
    oSegment.Fields.Add(41, True, 0, False, 5);
    oSegment.Fields.Add(42, True, 0, False, 6);
    oSegment.Fields.Add(43, True, 0, False, 7);
    oSegment.Fields.Add(44, True, 0, False, 8);
    oSegment.Fields.Add(694, False, 0, False, 9);
    oSegment.Fields.Add(1442, False, 0, False, 10);
  oSegment := oSegments.Add('QRI', 'Query Response Instance');
    oSegment.Fields.Add(1436, False, 0, False, 1);
    oSegment.Fields.Add(1437, True, 0, False, 2);
    oSegment.Fields.Add(1438, False, 0, False, 3);
  oSegment := oSegments.Add('RCP', 'Response Control Parameter');
    oSegment.Fields.Add(27, False, 0, False, 1);
    oSegment.Fields.Add(31, False, 0, False, 2);
    oSegment.Fields.Add(1440, False, 0, False, 3);
    oSegment.Fields.Add(1441, False, 0, False, 4);
    oSegment.Fields.Add(1443, False, 0, False, 5);
    oSegment.Fields.Add(1624, True, 0, False, 6);
    oSegment.Fields.Add(1594, True, 0, False, 7);
  oSegment := oSegments.Add('RDF', 'Table Row Definition');
    oSegment.Fields.Add(701, False, 0, True, 1);
    oSegment.Fields.Add(702, True, 0, True, 2);
  oSegment := oSegments.Add('RDT', 'Table Row Data');
    oSegment.Fields.Add(703, False, 0, True, 1);
  oSegment := oSegments.Add('REL', 'Clinical Relationship Segment');
    oSegment.Fields.Add(2240, False, 0, False, 1);
    oSegment.Fields.Add(2241, False, 0, True, 2);
    oSegment.Fields.Add(2242, False, 0, True, 3);
    oSegment.Fields.Add(2243, False, 0, True, 4);
    oSegment.Fields.Add(2244, False, 0, True, 5);
    oSegment.Fields.Add(2245, False, 0, False, 6);
    oSegment.Fields.Add(2246, False, 0, False, 7);
    oSegment.Fields.Add(2247, False, 0, False, 8);
    oSegment.Fields.Add(2248, False, 0, False, 9);
    oSegment.Fields.Add(2249, False, 0, False, 10);
    oSegment.Fields.Add(2250, False, 0, False, 11);
    oSegment.Fields.Add(2251, False, 0, False, 12);
    oSegment.Fields.Add(2252, False, 0, False, 13);
    oSegment.Fields.Add(2253, False, 0, False, 14);
    oSegment.Fields.Add(2254, False, 0, False, 15);
    oSegment.Fields.Add(2255, False, 0, False, 16);
  oSegment := oSegments.Add('RF1', 'Referral Information');
    oSegment.Fields.Add(1137, False, 0, False, 1);
    oSegment.Fields.Add(1138, False, 0, False, 2);
    oSegment.Fields.Add(1139, False, 0, False, 3);
    oSegment.Fields.Add(1140, True, 0, False, 4);
    oSegment.Fields.Add(1141, False, 0, False, 5);
    oSegment.Fields.Add(1142, False, 0, True, 6);
    oSegment.Fields.Add(1143, False, 0, False, 7);
    oSegment.Fields.Add(1144, False, 0, False, 8);
    oSegment.Fields.Add(1145, False, 0, False, 9);
    oSegment.Fields.Add(1228, True, 0, False, 10);
    oSegment.Fields.Add(1300, True, 0, False, 11);
    oSegment.Fields.Add(2262, False, 0, False, 12);
  oSegment := oSegments.Add('RFI', 'Request for Information');
    oSegment.Fields.Add(1910, False, 0, True, 1);
    oSegment.Fields.Add(1911, False, 0, True, 2);
    oSegment.Fields.Add(1912, False, 0, False, 3);
    oSegment.Fields.Add(1913, False, 0, False, 4);
  oSegment := oSegments.Add('RGS', 'Resource Group');
    oSegment.Fields.Add(1203, False, 0, True, 1);
    oSegment.Fields.Add(763, False, 0, False, 2);
    oSegment.Fields.Add(1204, False, 0, False, 3);
  oSegment := oSegments.Add('RMI', 'Risk Management Incident');
    oSegment.Fields.Add(1530, False, 0, False, 1);
    oSegment.Fields.Add(1531, False, 0, False, 2);
    oSegment.Fields.Add(1533, False, 0, False, 3);
  oSegment := oSegments.Add('ROL', 'Role');
    oSegment.Fields.Add(1206, False, 0, False, 1);
    oSegment.Fields.Add(816, False, 0, True, 2);
    oSegment.Fields.Add(1197, False, 0, True, 3);
    oSegment.Fields.Add(1198, True, 0, True, 4);
    oSegment.Fields.Add(1199, False, 0, False, 5);
    oSegment.Fields.Add(1200, False, 0, False, 6);
    oSegment.Fields.Add(1201, False, 0, False, 7);
    oSegment.Fields.Add(1205, False, 0, False, 8);
    oSegment.Fields.Add(1510, True, 0, False, 9);
    oSegment.Fields.Add(1461, False, 0, False, 10);
    oSegment.Fields.Add(679, True, 0, False, 11);
    oSegment.Fields.Add(678, True, 0, False, 12);
    oSegment.Fields.Add(2183, False, 0, False, 13);
  oSegment := oSegments.Add('RQ1', 'Requisition Detail-1');
    oSegment.Fields.Add(285, False, 0, False, 1);
    oSegment.Fields.Add(286, False, 0, False, 2);
    oSegment.Fields.Add(287, False, 0, False, 3);
    oSegment.Fields.Add(288, False, 0, False, 4);
    oSegment.Fields.Add(289, False, 0, False, 5);
    oSegment.Fields.Add(290, False, 0, False, 6);
    oSegment.Fields.Add(291, False, 0, False, 7);
  oSegment := oSegments.Add('RQD', 'Requisition Detail');
    oSegment.Fields.Add(275, False, 0, False, 1);
    oSegment.Fields.Add(276, False, 0, False, 2);
    oSegment.Fields.Add(277, False, 0, False, 3);
    oSegment.Fields.Add(278, False, 0, False, 4);
    oSegment.Fields.Add(279, False, 0, False, 5);
    oSegment.Fields.Add(280, False, 0, False, 6);
    oSegment.Fields.Add(281, False, 0, False, 7);
    oSegment.Fields.Add(282, False, 0, False, 8);
    oSegment.Fields.Add(283, False, 0, False, 9);
    oSegment.Fields.Add(284, False, 0, False, 10);
  oSegment := oSegments.Add('RXA', 'Pharmacy/Treatment Administration');
    oSegment.Fields.Add(342, False, 0, True, 1);
    oSegment.Fields.Add(344, False, 0, True, 2);
    oSegment.Fields.Add(345, False, 0, True, 3);
    oSegment.Fields.Add(346, False, 0, True, 4);
    oSegment.Fields.Add(347, False, 0, True, 5);
    oSegment.Fields.Add(348, False, 0, True, 6);
    oSegment.Fields.Add(349, False, 0, False, 7);
    oSegment.Fields.Add(350, False, 0, False, 8);
    oSegment.Fields.Add(351, True, 0, False, 9);
    oSegment.Fields.Add(352, True, 0, False, 10);
    oSegment.Fields.Add(353, False, 0, False, 11);
    oSegment.Fields.Add(354, False, 0, False, 12);
    oSegment.Fields.Add(1134, False, 0, False, 13);
    oSegment.Fields.Add(1135, False, 0, False, 14);
    oSegment.Fields.Add(1129, True, 0, False, 15);
    oSegment.Fields.Add(1130, True, 0, False, 16);
    oSegment.Fields.Add(1131, True, 0, False, 17);
    oSegment.Fields.Add(1136, True, 0, False, 18);
    oSegment.Fields.Add(1123, True, 0, False, 19);
    oSegment.Fields.Add(1223, False, 0, False, 20);
    oSegment.Fields.Add(1224, False, 0, False, 21);
    oSegment.Fields.Add(1225, False, 0, False, 22);
    oSegment.Fields.Add(1696, False, 0, False, 23);
    oSegment.Fields.Add(1697, False, 0, False, 24);
    oSegment.Fields.Add(1698, False, 0, False, 25);
    oSegment.Fields.Add(1699, False, 0, False, 26);
    oSegment.Fields.Add(2264, False, 0, False, 27);
    oSegment.Fields.Add(2265, False, 0, False, 28);
  oSegment := oSegments.Add('RXC', 'Pharmacy/Treatment Component Order');
    oSegment.Fields.Add(313, False, 0, True, 1);
    oSegment.Fields.Add(314, False, 0, True, 2);
    oSegment.Fields.Add(315, False, 0, True, 3);
    oSegment.Fields.Add(316, False, 0, True, 4);
    oSegment.Fields.Add(1124, False, 0, False, 5);
    oSegment.Fields.Add(1125, False, 0, False, 6);
    oSegment.Fields.Add(1476, True, 0, False, 7);
    oSegment.Fields.Add(1671, False, 0, False, 8);
    oSegment.Fields.Add(1672, False, 0, False, 9);
  oSegment := oSegments.Add('RXD', 'Pharmacy/Treatment Dispense');
    oSegment.Fields.Add(334, False, 0, True, 1);
    oSegment.Fields.Add(335, False, 0, True, 2);
    oSegment.Fields.Add(336, False, 0, True, 3);
    oSegment.Fields.Add(337, False, 0, True, 4);
    oSegment.Fields.Add(338, False, 0, False, 5);
    oSegment.Fields.Add(339, False, 0, False, 6);
    oSegment.Fields.Add(325, False, 0, True, 7);
    oSegment.Fields.Add(326, False, 0, False, 8);
    oSegment.Fields.Add(340, True, 0, False, 9);
    oSegment.Fields.Add(341, True, 0, False, 10);
    oSegment.Fields.Add(322, False, 0, False, 11);
    oSegment.Fields.Add(329, False, 0, False, 12);
    oSegment.Fields.Add(1303, False, 0, False, 13);
    oSegment.Fields.Add(307, False, 0, False, 14);
    oSegment.Fields.Add(330, True, 0, False, 15);
    oSegment.Fields.Add(1132, False, 0, False, 16);
    oSegment.Fields.Add(1133, False, 0, False, 17);
    oSegment.Fields.Add(1129, True, 0, False, 18);
    oSegment.Fields.Add(1130, True, 0, False, 19);
    oSegment.Fields.Add(1131, True, 0, False, 20);
    oSegment.Fields.Add(1123, True, 0, False, 21);
    oSegment.Fields.Add(1220, False, 0, False, 22);
    oSegment.Fields.Add(1221, False, 0, False, 23);
    oSegment.Fields.Add(1222, False, 0, False, 24);
    oSegment.Fields.Add(1476, True, 0, False, 25);
    oSegment.Fields.Add(1477, False, 0, False, 26);
    oSegment.Fields.Add(1478, False, 0, False, 27);
    oSegment.Fields.Add(1686, False, 0, False, 28);
    oSegment.Fields.Add(1687, False, 0, False, 29);
    oSegment.Fields.Add(1688, False, 0, False, 30);
    oSegment.Fields.Add(1689, False, 0, False, 31);
    oSegment.Fields.Add(1690, False, 0, False, 32);
    oSegment.Fields.Add(1691, False, 0, False, 33);
  oSegment := oSegments.Add('RXE', 'Pharmacy/Treatment Encoded Order');
    oSegment.Fields.Add(221, False, 0, False, 1);
    oSegment.Fields.Add(317, False, 0, True, 2);
    oSegment.Fields.Add(318, False, 0, True, 3);
    oSegment.Fields.Add(319, False, 0, False, 4);
    oSegment.Fields.Add(320, False, 0, True, 5);
    oSegment.Fields.Add(321, False, 0, False, 6);
    oSegment.Fields.Add(298, True, 0, False, 7);
    oSegment.Fields.Add(299, False, 0, False, 8);
    oSegment.Fields.Add(322, False, 0, False, 9);
    oSegment.Fields.Add(323, False, 0, False, 10);
    oSegment.Fields.Add(324, False, 0, False, 11);
    oSegment.Fields.Add(304, False, 0, False, 12);
    oSegment.Fields.Add(305, True, 0, False, 13);
    oSegment.Fields.Add(306, True, 0, False, 14);
    oSegment.Fields.Add(325, False, 0, False, 15);
    oSegment.Fields.Add(326, False, 0, False, 16);
    oSegment.Fields.Add(327, False, 0, False, 17);
    oSegment.Fields.Add(328, False, 0, False, 18);
    oSegment.Fields.Add(329, False, 0, False, 19);
    oSegment.Fields.Add(307, False, 0, False, 20);
    oSegment.Fields.Add(330, True, 0, False, 21);
    oSegment.Fields.Add(331, False, 0, False, 22);
    oSegment.Fields.Add(332, False, 0, False, 23);
    oSegment.Fields.Add(333, False, 0, False, 24);
    oSegment.Fields.Add(1126, False, 0, False, 25);
    oSegment.Fields.Add(1127, False, 0, False, 26);
    oSegment.Fields.Add(1128, True, 0, False, 27);
    oSegment.Fields.Add(1220, False, 0, False, 28);
    oSegment.Fields.Add(1221, False, 0, False, 29);
    oSegment.Fields.Add(1222, False, 0, False, 30);
    oSegment.Fields.Add(1476, True, 0, False, 31);
    oSegment.Fields.Add(1673, False, 0, False, 32);
    oSegment.Fields.Add(1674, False, 0, False, 33);
    oSegment.Fields.Add(1675, False, 0, False, 34);
    oSegment.Fields.Add(1676, False, 0, False, 35);
    oSegment.Fields.Add(1677, False, 0, False, 36);
    oSegment.Fields.Add(1678, True, 0, False, 37);
    oSegment.Fields.Add(1679, False, 0, False, 38);
    oSegment.Fields.Add(1680, False, 0, False, 39);
    oSegment.Fields.Add(1681, False, 0, False, 40);
    oSegment.Fields.Add(1682, False, 0, False, 41);
    oSegment.Fields.Add(1683, False, 0, False, 42);
    oSegment.Fields.Add(1684, False, 0, False, 43);
    oSegment.Fields.Add(1685, False, 0, False, 44);
  oSegment := oSegments.Add('RXG', 'Pharmacy/Treatment Give');
    oSegment.Fields.Add(342, False, 0, True, 1);
    oSegment.Fields.Add(334, False, 0, False, 2);
    oSegment.Fields.Add(221, False, 0, False, 3);
    oSegment.Fields.Add(317, False, 0, True, 4);
    oSegment.Fields.Add(318, False, 0, True, 5);
    oSegment.Fields.Add(319, False, 0, False, 6);
    oSegment.Fields.Add(320, False, 0, True, 7);
    oSegment.Fields.Add(321, False, 0, False, 8);
    oSegment.Fields.Add(351, True, 0, False, 9);
    oSegment.Fields.Add(322, False, 0, False, 10);
    oSegment.Fields.Add(1303, False, 0, False, 11);
    oSegment.Fields.Add(307, False, 0, False, 12);
    oSegment.Fields.Add(343, True, 0, False, 13);
    oSegment.Fields.Add(331, False, 0, False, 14);
    oSegment.Fields.Add(332, False, 0, False, 15);
    oSegment.Fields.Add(333, False, 0, False, 16);
    oSegment.Fields.Add(1126, False, 0, False, 17);
    oSegment.Fields.Add(1127, False, 0, False, 18);
    oSegment.Fields.Add(1129, True, 0, False, 19);
    oSegment.Fields.Add(1130, True, 0, False, 20);
    oSegment.Fields.Add(1131, True, 0, False, 21);
    oSegment.Fields.Add(1123, True, 0, False, 22);
    oSegment.Fields.Add(1692, False, 0, False, 23);
    oSegment.Fields.Add(1693, False, 0, False, 24);
    oSegment.Fields.Add(1694, False, 0, False, 25);
    oSegment.Fields.Add(1695, False, 0, False, 26);
    oSegment.Fields.Add(1688, False, 0, False, 27);
    oSegment.Fields.Add(1689, False, 0, False, 28);
    oSegment.Fields.Add(1683, False, 0, False, 29);
    oSegment.Fields.Add(1684, False, 0, False, 30);
  oSegment := oSegments.Add('RXO', 'Pharmacy/Treatment Order');
    oSegment.Fields.Add(292, False, 0, False, 1);
    oSegment.Fields.Add(293, False, 0, False, 2);
    oSegment.Fields.Add(294, False, 0, False, 3);
    oSegment.Fields.Add(295, False, 0, False, 4);
    oSegment.Fields.Add(296, False, 0, False, 5);
    oSegment.Fields.Add(297, True, 0, False, 6);
    oSegment.Fields.Add(298, True, 0, False, 7);
    oSegment.Fields.Add(299, False, 0, False, 8);
    oSegment.Fields.Add(300, False, 0, False, 9);
    oSegment.Fields.Add(301, False, 0, False, 10);
    oSegment.Fields.Add(302, False, 0, False, 11);
    oSegment.Fields.Add(303, False, 0, False, 12);
    oSegment.Fields.Add(304, False, 0, False, 13);
    oSegment.Fields.Add(305, True, 0, False, 14);
    oSegment.Fields.Add(306, True, 0, False, 15);
    oSegment.Fields.Add(307, False, 0, False, 16);
    oSegment.Fields.Add(308, False, 0, False, 17);
    oSegment.Fields.Add(1121, False, 0, False, 18);
    oSegment.Fields.Add(1122, False, 0, False, 19);
    oSegment.Fields.Add(1123, True, 0, False, 20);
    oSegment.Fields.Add(1218, False, 0, False, 21);
    oSegment.Fields.Add(1219, False, 0, False, 22);
    oSegment.Fields.Add(329, False, 0, False, 23);
    oSegment.Fields.Add(1476, True, 0, False, 24);
    oSegment.Fields.Add(1666, False, 0, False, 25);
    oSegment.Fields.Add(1667, False, 0, False, 26);
    oSegment.Fields.Add(1668, False, 0, False, 27);
    oSegment.Fields.Add(1669, False, 0, False, 28);
    oSegment.Fields.Add(2149, False, 0, False, 29);
    oSegment.Fields.Add(2150, False, 0, False, 30);
    oSegment.Fields.Add(2151, False, 0, False, 31);
    oSegment.Fields.Add(1681, False, 0, False, 32);
    oSegment.Fields.Add(1682, False, 0, False, 33);
    oSegment.Fields.Add(1683, False, 0, False, 34);
    oSegment.Fields.Add(1684, False, 0, False, 35);
  oSegment := oSegments.Add('RXR', 'Pharmacy/Treatment Route');
    oSegment.Fields.Add(309, False, 0, True, 1);
    oSegment.Fields.Add(310, False, 0, False, 2);
    oSegment.Fields.Add(311, False, 0, False, 3);
    oSegment.Fields.Add(312, False, 0, False, 4);
    oSegment.Fields.Add(1315, False, 0, False, 5);
    oSegment.Fields.Add(1670, False, 0, False, 6);
  oSegment := oSegments.Add('SAC', 'Specimen Container detail');
    oSegment.Fields.Add(1329, False, 0, False, 1);
    oSegment.Fields.Add(1330, False, 0, False, 2);
    oSegment.Fields.Add(1331, False, 0, False, 3);
    oSegment.Fields.Add(1332, False, 0, False, 4);
    oSegment.Fields.Add(1333, False, 0, False, 5);
    oSegment.Fields.Add(249, False, 0, False, 6);
    oSegment.Fields.Add(1334, False, 0, False, 7);
    oSegment.Fields.Add(1335, False, 0, False, 8);
    oSegment.Fields.Add(1336, False, 0, False, 9);
    oSegment.Fields.Add(1337, False, 0, False, 10);
    oSegment.Fields.Add(1338, False, 0, False, 11);
    oSegment.Fields.Add(1339, False, 0, False, 12);
    oSegment.Fields.Add(1340, False, 0, False, 13);
    oSegment.Fields.Add(1341, False, 0, False, 14);
    oSegment.Fields.Add(1342, True, 0, False, 15);
    oSegment.Fields.Add(1343, False, 0, False, 16);
    oSegment.Fields.Add(1344, False, 0, False, 17);
    oSegment.Fields.Add(1345, False, 0, False, 18);
    oSegment.Fields.Add(1346, False, 0, False, 19);
    oSegment.Fields.Add(1347, False, 0, False, 20);
    oSegment.Fields.Add(644, False, 0, False, 21);
    oSegment.Fields.Add(1349, False, 0, False, 22);
    oSegment.Fields.Add(1350, False, 0, False, 23);
    oSegment.Fields.Add(1351, False, 0, False, 24);
    oSegment.Fields.Add(1352, False, 0, False, 25);
    oSegment.Fields.Add(1353, False, 0, False, 26);
    oSegment.Fields.Add(647, True, 0, False, 27);
    oSegment.Fields.Add(1355, False, 0, False, 28);
    oSegment.Fields.Add(1356, False, 0, False, 29);
    oSegment.Fields.Add(1357, False, 0, False, 30);
    oSegment.Fields.Add(1358, False, 0, False, 31);
    oSegment.Fields.Add(1359, False, 0, False, 32);
    oSegment.Fields.Add(1360, False, 0, False, 33);
    oSegment.Fields.Add(1361, False, 0, False, 34);
    oSegment.Fields.Add(1362, False, 0, False, 35);
    oSegment.Fields.Add(1363, False, 0, False, 36);
    oSegment.Fields.Add(1364, False, 0, False, 37);
    oSegment.Fields.Add(1365, False, 0, False, 38);
    oSegment.Fields.Add(1366, False, 0, False, 39);
    oSegment.Fields.Add(1367, True, 0, False, 40);
    oSegment.Fields.Add(1368, True, 0, False, 41);
    oSegment.Fields.Add(1369, False, 0, False, 42);
    oSegment.Fields.Add(1370, True, 0, False, 43);
    oSegment.Fields.Add(1371, True, 0, False, 44);
  oSegment := oSegments.Add('SCD', 'Anti-Microbial Cycle Data');
    oSegment.Fields.Add(2104, False, 0, False, 1);
    oSegment.Fields.Add(2105, False, 0, False, 2);
    oSegment.Fields.Add(2106, False, 0, False, 3);
    oSegment.Fields.Add(2107, False, 0, False, 4);
    oSegment.Fields.Add(2108, False, 0, False, 5);
    oSegment.Fields.Add(2109, False, 0, False, 6);
    oSegment.Fields.Add(2110, False, 0, False, 7);
    oSegment.Fields.Add(2111, False, 0, False, 8);
    oSegment.Fields.Add(2112, False, 0, False, 9);
    oSegment.Fields.Add(2113, False, 0, False, 10);
    oSegment.Fields.Add(2114, False, 0, False, 11);
    oSegment.Fields.Add(2115, False, 0, False, 12);
    oSegment.Fields.Add(2116, False, 0, False, 13);
    oSegment.Fields.Add(2117, False, 0, False, 14);
    oSegment.Fields.Add(2118, False, 0, False, 15);
    oSegment.Fields.Add(2119, False, 0, False, 16);
    oSegment.Fields.Add(2120, False, 0, False, 17);
    oSegment.Fields.Add(2121, False, 0, False, 18);
    oSegment.Fields.Add(2122, False, 0, False, 19);
    oSegment.Fields.Add(2123, False, 0, False, 20);
    oSegment.Fields.Add(2124, False, 0, False, 21);
    oSegment.Fields.Add(2125, False, 0, False, 22);
    oSegment.Fields.Add(2126, False, 0, False, 23);
    oSegment.Fields.Add(2127, False, 0, False, 24);
    oSegment.Fields.Add(2128, False, 0, False, 25);
    oSegment.Fields.Add(2129, False, 0, False, 26);
    oSegment.Fields.Add(2130, False, 0, False, 27);
    oSegment.Fields.Add(2131, False, 0, False, 28);
    oSegment.Fields.Add(2132, False, 0, False, 29);
    oSegment.Fields.Add(2133, False, 0, False, 30);
    oSegment.Fields.Add(2134, False, 0, False, 31);
    oSegment.Fields.Add(393, False, 0, False, 32);
    oSegment.Fields.Add(106, True, 0, False, 33);
    oSegment.Fields.Add(137, False, 0, False, 34);
    oSegment.Fields.Add(1356, False, 0, False, 35);
    oSegment.Fields.Add(2139, False, 0, False, 36);
    oSegment.Fields.Add(2140, False, 0, False, 37);
  oSegment := oSegments.Add('SCH', 'Scheduling Activity Information');
    oSegment.Fields.Add(860, False, 0, False, 1);
    oSegment.Fields.Add(861, False, 0, False, 2);
    oSegment.Fields.Add(862, False, 0, False, 3);
    oSegment.Fields.Add(218, False, 0, False, 4);
    oSegment.Fields.Add(864, False, 0, False, 5);
    oSegment.Fields.Add(883, False, 0, True, 6);
    oSegment.Fields.Add(866, False, 0, False, 7);
    oSegment.Fields.Add(867, False, 0, False, 8);
    oSegment.Fields.Add(868, False, 0, False, 9);
    oSegment.Fields.Add(869, False, 0, False, 10);
    oSegment.Fields.Add(884, True, 0, False, 11);
    oSegment.Fields.Add(874, True, 0, False, 12);
    oSegment.Fields.Add(875, False, 0, False, 13);
    oSegment.Fields.Add(876, True, 0, False, 14);
    oSegment.Fields.Add(877, False, 0, False, 15);
    oSegment.Fields.Add(885, True, 0, True, 16);
    oSegment.Fields.Add(886, False, 0, False, 17);
    oSegment.Fields.Add(887, True, 0, False, 18);
    oSegment.Fields.Add(888, False, 0, False, 19);
    oSegment.Fields.Add(878, True, 0, True, 20);
    oSegment.Fields.Add(879, True, 0, False, 21);
    oSegment.Fields.Add(880, False, 0, False, 22);
    oSegment.Fields.Add(881, False, 0, False, 23);
    oSegment.Fields.Add(882, False, 0, False, 24);
    oSegment.Fields.Add(889, False, 0, False, 25);
    oSegment.Fields.Add(216, True, 0, False, 26);
    oSegment.Fields.Add(217, True, 0, False, 27);
  oSegment := oSegments.Add('SCP', 'Sterilizer Configuration Segment');
    oSegment.Fields.Add(2087, False, 0, False, 1);
    oSegment.Fields.Add(2088, False, 0, False, 2);
    oSegment.Fields.Add(2089, False, 0, False, 3);
    oSegment.Fields.Add(2090, False, 0, False, 4);
    oSegment.Fields.Add(2279, False, 0, False, 5);
    oSegment.Fields.Add(2091, False, 0, False, 6);
    oSegment.Fields.Add(2092, False, 0, False, 7);
    oSegment.Fields.Add(2093, False, 0, False, 8);
  oSegment := oSegments.Add('SDD', 'Sterilization Device Data');
    oSegment.Fields.Add(2098, False, 0, False, 1);
    oSegment.Fields.Add(2099, False, 0, False, 2);
    oSegment.Fields.Add(2281, False, 0, False, 3);
    oSegment.Fields.Add(2100, False, 0, False, 4);
    oSegment.Fields.Add(2101, False, 0, False, 5);
    oSegment.Fields.Add(2102, False, 0, False, 6);
    oSegment.Fields.Add(2103, False, 0, False, 7);
  oSegment := oSegments.Add('SFT', 'Software Segment');
    oSegment.Fields.Add(1834, False, 0, True, 1);
    oSegment.Fields.Add(1835, False, 0, True, 2);
    oSegment.Fields.Add(1836, False, 0, True, 3);
    oSegment.Fields.Add(1837, False, 0, True, 4);
    oSegment.Fields.Add(1838, False, 0, False, 5);
    oSegment.Fields.Add(1839, False, 0, False, 6);
  oSegment := oSegments.Add('SID', 'Substance Identifier');
    oSegment.Fields.Add(1426, False, 0, False, 1);
    oSegment.Fields.Add(1129, False, 0, False, 2);
    oSegment.Fields.Add(1428, False, 0, False, 3);
    oSegment.Fields.Add(1429, False, 0, False, 4);
  oSegment := oSegments.Add('SLT', 'Sterilization Lot');
    oSegment.Fields.Add(2094, False, 0, False, 1);
    oSegment.Fields.Add(2280, False, 0, False, 2);
    oSegment.Fields.Add(2095, False, 0, False, 3);
    oSegment.Fields.Add(2096, False, 0, False, 4);
    oSegment.Fields.Add(2097, False, 0, False, 5);
  oSegment := oSegments.Add('SPM', 'Specimen');
    oSegment.Fields.Add(1754, False, 0, False, 1);
    oSegment.Fields.Add(1755, False, 0, False, 2);
    oSegment.Fields.Add(1756, True, 0, False, 3);
    oSegment.Fields.Add(1900, False, 0, True, 4);
    oSegment.Fields.Add(1757, True, 0, False, 5);
    oSegment.Fields.Add(1758, True, 0, False, 6);
    oSegment.Fields.Add(1759, False, 0, False, 7);
    oSegment.Fields.Add(1901, False, 0, False, 8);
    oSegment.Fields.Add(1760, True, 0, False, 9);
    oSegment.Fields.Add(1761, False, 0, False, 10);
    oSegment.Fields.Add(1762, True, 0, False, 11);
    oSegment.Fields.Add(1902, False, 0, False, 12);
    oSegment.Fields.Add(1763, False, 0, False, 13);
    oSegment.Fields.Add(1764, True, 0, False, 14);
    oSegment.Fields.Add(1908, True, 0, False, 15);
    oSegment.Fields.Add(1903, True, 0, False, 16);
    oSegment.Fields.Add(1765, False, 0, False, 17);
    oSegment.Fields.Add(248, False, 0, False, 18);
    oSegment.Fields.Add(1904, False, 0, False, 19);
    oSegment.Fields.Add(1766, False, 0, False, 20);
    oSegment.Fields.Add(1767, True, 0, False, 21);
    oSegment.Fields.Add(1768, False, 0, False, 22);
    oSegment.Fields.Add(1769, False, 0, False, 23);
    oSegment.Fields.Add(1770, True, 0, False, 24);
    oSegment.Fields.Add(1771, False, 0, False, 25);
    oSegment.Fields.Add(1772, False, 0, False, 26);
    oSegment.Fields.Add(1773, False, 0, False, 27);
    oSegment.Fields.Add(1774, False, 0, False, 28);
    oSegment.Fields.Add(1775, False, 0, False, 29);
  oSegment := oSegments.Add('STF', 'Staff Identification');
    oSegment.Fields.Add(671, False, 0, False, 1);
    oSegment.Fields.Add(672, True, 0, False, 2);
    oSegment.Fields.Add(673, True, 0, False, 3);
    oSegment.Fields.Add(674, True, 0, False, 4);
    oSegment.Fields.Add(111, False, 0, False, 5);
    oSegment.Fields.Add(110, False, 0, False, 6);
    oSegment.Fields.Add(675, False, 0, False, 7);
    oSegment.Fields.Add(676, True, 0, False, 8);
    oSegment.Fields.Add(677, True, 0, False, 9);
    oSegment.Fields.Add(678, True, 0, False, 10);
    oSegment.Fields.Add(679, True, 0, False, 11);
    oSegment.Fields.Add(680, True, 0, False, 12);
    oSegment.Fields.Add(681, True, 0, False, 13);
    oSegment.Fields.Add(682, True, 0, False, 14);
    oSegment.Fields.Add(683, True, 0, False, 15);
    oSegment.Fields.Add(684, False, 0, False, 16);
    oSegment.Fields.Add(119, False, 0, False, 17);
    oSegment.Fields.Add(785, False, 0, False, 18);
    oSegment.Fields.Add(786, False, 0, False, 19);
    oSegment.Fields.Add(1276, False, 0, False, 20);
    oSegment.Fields.Add(1275, False, 0, False, 21);
    oSegment.Fields.Add(1302, False, 0, False, 22);
    oSegment.Fields.Add(1229, False, 0, False, 23);
    oSegment.Fields.Add(1232, False, 0, False, 24);
    oSegment.Fields.Add(1298, False, 0, False, 25);
    oSegment.Fields.Add(1234, False, 0, False, 26);
    oSegment.Fields.Add(113, False, 0, False, 27);
    oSegment.Fields.Add(125, False, 0, False, 28);
    oSegment.Fields.Add(1596, False, 0, False, 29);
    oSegment.Fields.Add(129, True, 0, False, 30);
    oSegment.Fields.Add(1886, False, 0, False, 31);
    oSegment.Fields.Add(1887, False, 0, False, 32);
    oSegment.Fields.Add(1888, False, 0, False, 33);
    oSegment.Fields.Add(1889, False, 0, False, 34);
    oSegment.Fields.Add(1890, False, 0, False, 35);
    oSegment.Fields.Add(1891, True, 0, False, 36);
    oSegment.Fields.Add(1892, False, 0, False, 37);
    oSegment.Fields.Add(1893, False, 0, False, 38);
    oSegment.Fields.Add(2184, True, 0, False, 39);
  oSegment := oSegments.Add('STZ', 'Sterilization Parameter');
    oSegment.Fields.Add(2213, False, 0, False, 1);
    oSegment.Fields.Add(2214, False, 0, False, 2);
    oSegment.Fields.Add(2215, False, 0, False, 3);
    oSegment.Fields.Add(2216, False, 0, False, 4);
  oSegment := oSegments.Add('TCC', 'Test Code Configuration');
    oSegment.Fields.Add(238, False, 0, True, 1);
    oSegment.Fields.Add(1408, False, 0, True, 2);
    oSegment.Fields.Add(249, False, 0, False, 3);
    oSegment.Fields.Add(1410, False, 0, False, 4);
    oSegment.Fields.Add(1411, False, 0, False, 5);
    oSegment.Fields.Add(1412, False, 0, False, 6);
    oSegment.Fields.Add(1413, False, 0, False, 7);
    oSegment.Fields.Add(1414, False, 0, False, 8);
    oSegment.Fields.Add(1415, False, 0, False, 9);
    oSegment.Fields.Add(1416, False, 0, False, 10);
    oSegment.Fields.Add(1417, False, 0, False, 11);
    oSegment.Fields.Add(1418, False, 0, False, 12);
    oSegment.Fields.Add(574, False, 0, False, 13);
    oSegment.Fields.Add(1419, False, 0, False, 14);
  oSegment := oSegments.Add('TCD', 'Test Code Detail');
    oSegment.Fields.Add(238, False, 0, True, 1);
    oSegment.Fields.Add(1420, False, 0, False, 2);
    oSegment.Fields.Add(1421, False, 0, False, 3);
    oSegment.Fields.Add(1422, False, 0, False, 4);
    oSegment.Fields.Add(1413, False, 0, False, 5);
    oSegment.Fields.Add(1416, False, 0, False, 6);
    oSegment.Fields.Add(1424, False, 0, False, 7);
    oSegment.Fields.Add(1425, False, 0, False, 8);
  oSegment := oSegments.Add('TQ1', 'Timing/Quantity');
    oSegment.Fields.Add(1627, False, 0, False, 1);
    oSegment.Fields.Add(1628, False, 0, False, 2);
    oSegment.Fields.Add(1629, True, 0, False, 3);
    oSegment.Fields.Add(1630, True, 0, False, 4);
    oSegment.Fields.Add(1631, True, 0, False, 5);
    oSegment.Fields.Add(1632, False, 0, False, 6);
    oSegment.Fields.Add(1633, False, 0, False, 7);
    oSegment.Fields.Add(1634, False, 0, False, 8);
    oSegment.Fields.Add(1635, True, 0, False, 9);
    oSegment.Fields.Add(1636, False, 0, False, 10);
    oSegment.Fields.Add(1637, False, 0, False, 11);
    oSegment.Fields.Add(1638, False, 0, False, 12);
    oSegment.Fields.Add(1639, False, 0, False, 13);
    oSegment.Fields.Add(1640, False, 0, False, 14);
  oSegment := oSegments.Add('TQ2', 'Timing/Quantity Relationship');
    oSegment.Fields.Add(1648, False, 0, False, 1);
    oSegment.Fields.Add(1649, False, 0, False, 2);
    oSegment.Fields.Add(1650, True, 0, False, 3);
    oSegment.Fields.Add(1651, True, 0, False, 4);
    oSegment.Fields.Add(1652, True, 0, False, 5);
    oSegment.Fields.Add(1653, False, 0, False, 6);
    oSegment.Fields.Add(1654, False, 0, False, 7);
    oSegment.Fields.Add(1655, False, 0, False, 8);
    oSegment.Fields.Add(1656, False, 0, False, 9);
    oSegment.Fields.Add(1657, False, 0, False, 10);
  oSegment := oSegments.Add('TXA', 'Transcription Document Header');
    oSegment.Fields.Add(914, False, 0, True, 1);
    oSegment.Fields.Add(915, False, 0, True, 2);
    oSegment.Fields.Add(916, False, 0, False, 3);
    oSegment.Fields.Add(917, False, 0, False, 4);
    oSegment.Fields.Add(918, True, 0, False, 5);
    oSegment.Fields.Add(919, False, 0, False, 6);
    oSegment.Fields.Add(920, False, 0, False, 7);
    oSegment.Fields.Add(921, True, 0, False, 8);
    oSegment.Fields.Add(922, True, 0, False, 9);
    oSegment.Fields.Add(923, True, 0, False, 10);
    oSegment.Fields.Add(924, True, 0, False, 11);
    oSegment.Fields.Add(925, False, 0, True, 12);
    oSegment.Fields.Add(926, False, 0, False, 13);
    oSegment.Fields.Add(216, True, 0, False, 14);
    oSegment.Fields.Add(217, False, 0, False, 15);
    oSegment.Fields.Add(927, False, 0, False, 16);
    oSegment.Fields.Add(928, False, 0, True, 17);
    oSegment.Fields.Add(929, False, 0, False, 18);
    oSegment.Fields.Add(930, False, 0, False, 19);
    oSegment.Fields.Add(932, False, 0, False, 20);
    oSegment.Fields.Add(933, False, 0, False, 21);
    oSegment.Fields.Add(934, True, 0, False, 22);
    oSegment.Fields.Add(935, True, 0, False, 23);
  oSegment := oSegments.Add('UAC', 'User Authentication Credential Segment');
    oSegment.Fields.Add(2267, False, 0, True, 1);
    oSegment.Fields.Add(2268, False, 0, True, 2);
  oSegment := oSegments.Add('UB1', 'UB82');
    oSegment.Fields.Add(530, False, 0, False, 1);
    oSegment.Fields.Add(531, False, 0, False, 2);
    oSegment.Fields.Add(532, False, 0, False, 3);
    oSegment.Fields.Add(533, False, 0, False, 4);
    oSegment.Fields.Add(534, False, 0, False, 5);
    oSegment.Fields.Add(535, False, 0, False, 6);
    oSegment.Fields.Add(536, True, 5, False, 7);
    oSegment.Fields.Add(537, False, 0, False, 8);
    oSegment.Fields.Add(538, False, 0, False, 9);
    oSegment.Fields.Add(539, True, 8, False, 10);
    oSegment.Fields.Add(540, False, 0, False, 11);
    oSegment.Fields.Add(541, False, 0, False, 12);
    oSegment.Fields.Add(542, False, 0, False, 13);
    oSegment.Fields.Add(543, False, 0, False, 14);
    oSegment.Fields.Add(544, False, 0, False, 15);
    oSegment.Fields.Add(545, True, 5, False, 16);
    oSegment.Fields.Add(546, False, 0, False, 17);
    oSegment.Fields.Add(547, False, 0, False, 18);
    oSegment.Fields.Add(548, False, 0, False, 19);
    oSegment.Fields.Add(549, False, 0, False, 20);
    oSegment.Fields.Add(550, False, 0, False, 21);
    oSegment.Fields.Add(551, False, 0, False, 22);
    oSegment.Fields.Add(552, False, 0, False, 23);
  oSegment := oSegments.Add('UB2', 'UB92 Data');
    oSegment.Fields.Add(553, False, 0, False, 1);
    oSegment.Fields.Add(554, False, 0, False, 2);
    oSegment.Fields.Add(555, True, 7, False, 3);
    oSegment.Fields.Add(556, False, 0, False, 4);
    oSegment.Fields.Add(557, False, 0, False, 5);
    oSegment.Fields.Add(558, True, 12, False, 6);
    oSegment.Fields.Add(559, True, 8, False, 7);
    oSegment.Fields.Add(560, True, 2, False, 8);
    oSegment.Fields.Add(561, True, 2, False, 9);
    oSegment.Fields.Add(562, True, 2, False, 10);
    oSegment.Fields.Add(563, False, 0, False, 11);
    oSegment.Fields.Add(564, True, 3, False, 12);
    oSegment.Fields.Add(565, True, 23, False, 13);
    oSegment.Fields.Add(566, True, 5, False, 14);
    oSegment.Fields.Add(567, False, 0, False, 15);
    oSegment.Fields.Add(568, True, 2, False, 16);
    oSegment.Fields.Add(815, False, 0, False, 17);
  oSegment := oSegments.Add('URD', 'Results/update Definition');
    oSegment.Fields.Add(45, False, 0, False, 1);
    oSegment.Fields.Add(46, False, 0, False, 2);
    oSegment.Fields.Add(47, True, 0, True, 3);
    oSegment.Fields.Add(48, True, 0, False, 4);
    oSegment.Fields.Add(49, True, 0, False, 5);
    oSegment.Fields.Add(50, True, 0, False, 6);
    oSegment.Fields.Add(51, False, 0, False, 7);
  oSegment := oSegments.Add('URS', 'Unsolicited Selection');
    oSegment.Fields.Add(52, True, 0, True, 1);
    oSegment.Fields.Add(53, False, 0, False, 2);
    oSegment.Fields.Add(54, False, 0, False, 3);
    oSegment.Fields.Add(55, True, 0, False, 4);
    oSegment.Fields.Add(56, True, 0, False, 5);
    oSegment.Fields.Add(57, True, 0, False, 6);
    oSegment.Fields.Add(58, True, 0, False, 7);
    oSegment.Fields.Add(59, True, 0, False, 8);
    oSegment.Fields.Add(695, False, 0, False, 9);
  oSegment := oSegments.Add('VAR', 'Variance');
    oSegment.Fields.Add(1212, False, 0, True, 1);
    oSegment.Fields.Add(1213, False, 0, True, 2);
    oSegment.Fields.Add(1214, False, 0, False, 3);
    oSegment.Fields.Add(1215, True, 0, False, 4);
    oSegment.Fields.Add(1216, False, 0, False, 5);
    oSegment.Fields.Add(1217, True, 0, False, 6);
  oSegment := oSegments.Add('VND', 'Purchasing Vendor');
    oSegment.Fields.Add(2217, False, 0, True, 1);
    oSegment.Fields.Add(2218, False, 0, True, 2);
    oSegment.Fields.Add(2276, False, 0, False, 3);
    oSegment.Fields.Add(2219, False, 0, False, 4);
    oSegment.Fields.Add(2220, False, 0, False, 5);
  oSegments.Add('ZL7', '(proposed example only)');
  oSegments.Add('Zxx', 'any Z segment');
  oSegments.Add('[', 'begin optional');
  oSegments.Add('[{', 'begin optional + repeating');
  oSegments.Add(']', 'end optional');
  oSegments.Add('{', 'begin repetition');
  oSegments.Add('|', 'next choice');
  oSegments.Add('}', 'end repetition');
  oSegments.Add('}]', 'end optional + repeating');
End;

procedure Definitions26LoadMessageStructures1(oStructures : THL7V2ModelMessageStructures);
Var
  oStructure : THL7V2ModelMessageStructure;
  oGrp1 : THL7V2ModelSegmentGroup;
  oGrp2 : THL7V2ModelSegmentGroup;
  oGrp3 : THL7V2ModelSegmentGroup;
  oGrp4 : THL7V2ModelSegmentGroup;
  oGrp5 : THL7V2ModelSegmentGroup;
Begin
  oStructure := oStructures.Add('ACK', 'Standard Acknowlegdement', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, True, gtSingle);
  oStructure := oStructures.Add('ADR_A19', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADR_A19', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QAK', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRF', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('QUERY_RESPONSE', False, True, gtGroup);
      oGrp1.Children.Add('EVN', True, False, gtSingle);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp1.Children.Add('PD1', True, False, gtSingle);
      oGrp1.Children.Add('ARV', True, True, gtSingle);
      oGrp1.Children.Add('ROL', True, True, gtSingle);
      oGrp1.Children.Add('NK1', True, True, gtSingle);
      oGrp1.Children.Add('PV1', False, False, gtSingle);
      oGrp1.Children.Add('PV2', True, False, gtSingle);
      oGrp1.Children.Add('ARV', True, True, gtSingle);
      oGrp1.Children.Add('ROL', True, True, gtSingle);
      oGrp1.Children.Add('DB1', True, True, gtSingle);
      oGrp1.Children.Add('OBX', True, True, gtSingle);
      oGrp1.Children.Add('AL1', True, True, gtSingle);
      oGrp1.Children.Add('DG1', True, True, gtSingle);
      oGrp1.Children.Add('DRG', True, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('PROCEDURE', True, True, gtGroup);
        oGrp2.Children.Add('PR1', False, False, gtSingle);
        oGrp2.Children.Add('ROL', True, True, gtSingle);
      oGrp1.Children.Add('GT1', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('INSURANCE', True, True, gtGroup);
        oGrp2.Children.Add('IN1', False, False, gtSingle);
        oGrp2.Children.Add('IN2', True, False, gtSingle);
        oGrp2.Children.Add('IN3', True, True, gtSingle);
        oGrp2.Children.Add('ROL', True, True, gtSingle);
      oGrp1.Children.Add('ACC', True, False, gtSingle);
      oGrp1.Children.Add('UB1', True, False, gtSingle);
      oGrp1.Children.Add('UB2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('ADT_A01', 'General', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A01', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ARV', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('ROL', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('NK1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ARV', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('ROL', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DB1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('OBX', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('AL1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DG1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DRG', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROCEDURE', True, True, gtGroup);
      oGrp1.Children.Add('PR1', False, False, gtSingle);
      oGrp1.Children.Add('ROL', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('GT1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('INSURANCE', True, True, gtGroup);
      oGrp1.Children.Add('IN1', False, False, gtSingle);
      oGrp1.Children.Add('IN2', True, False, gtSingle);
      oGrp1.Children.Add('IN3', True, True, gtSingle);
      oGrp1.Children.Add('ROL', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('ACC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('UB1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('UB2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PDA', True, False, gtSingle);
  oStructure := oStructures.Add('ADT_A02', 'Transfer', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A02', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ARV', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('ROL', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ARV', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('ROL', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DB1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('OBX', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PDA', True, False, gtSingle);
  oStructure := oStructures.Add('ADT_A03', 'Discharge', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A03', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ARV', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('ROL', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('NK1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ARV', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('ROL', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DB1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('AL1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DG1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DRG', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROCEDURE', True, True, gtGroup);
      oGrp1.Children.Add('PR1', False, False, gtSingle);
      oGrp1.Children.Add('ROL', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('OBX', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('GT1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('INSURANCE', True, True, gtGroup);
      oGrp1.Children.Add('IN1', False, False, gtSingle);
      oGrp1.Children.Add('IN2', True, False, gtSingle);
      oGrp1.Children.Add('IN3', True, True, gtSingle);
      oGrp1.Children.Add('ROL', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('ACC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PDA', True, False, gtSingle);
  oStructure := oStructures.Add('ADT_A05', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A05', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ARV', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('ROL', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('NK1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ARV', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('ROL', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DB1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('OBX', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('AL1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DG1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DRG', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROCEDURE', True, True, gtGroup);
      oGrp1.Children.Add('PR1', False, False, gtSingle);
      oGrp1.Children.Add('ROL', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('GT1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('INSURANCE', True, True, gtGroup);
      oGrp1.Children.Add('IN1', False, False, gtSingle);
      oGrp1.Children.Add('IN2', True, False, gtSingle);
      oGrp1.Children.Add('IN3', True, True, gtSingle);
      oGrp1.Children.Add('ROL', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('ACC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('UB1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('UB2', True, False, gtSingle);
  oStructure := oStructures.Add('ADT_A06', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A06', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ARV', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('ROL', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('MRG', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NK1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ARV', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('ROL', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DB1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('OBX', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('AL1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DG1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DRG', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROCEDURE', True, True, gtGroup);
      oGrp1.Children.Add('PR1', False, False, gtSingle);
      oGrp1.Children.Add('ROL', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('GT1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('INSURANCE', True, True, gtGroup);
      oGrp1.Children.Add('IN1', False, False, gtSingle);
      oGrp1.Children.Add('IN2', True, False, gtSingle);
      oGrp1.Children.Add('IN3', True, True, gtSingle);
      oGrp1.Children.Add('ROL', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('ACC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('UB1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('UB2', True, False, gtSingle);
  oStructure := oStructures.Add('ADT_A09', 'Track/Cancel', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A09', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DB1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('OBX', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DG1', True, True, gtSingle);
  oStructure := oStructures.Add('ADT_A12', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A12', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DB1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('OBX', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DG1', True, False, gtSingle);
  oStructure := oStructures.Add('ADT_A15', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A15', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ARV', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('ROL', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ARV', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('ROL', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DB1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('OBX', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DG1', True, True, gtSingle);
  oStructure := oStructures.Add('ADT_A16', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A16', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ARV', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('ROL', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('NK1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ARV', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('ROL', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DB1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('OBX', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('AL1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DG1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DRG', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROCEDURE', True, True, gtGroup);
      oGrp1.Children.Add('PR1', False, False, gtSingle);
      oGrp1.Children.Add('ROL', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('GT1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('INSURANCE', True, True, gtGroup);
      oGrp1.Children.Add('IN1', False, False, gtSingle);
      oGrp1.Children.Add('IN2', True, False, gtSingle);
      oGrp1.Children.Add('IN3', True, True, gtSingle);
      oGrp1.Children.Add('ROL', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('ACC', True, False, gtSingle);
  oStructure := oStructures.Add('ADT_A17', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A17', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DB1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('OBX', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DB1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('OBX', True, True, gtSingle);
  oStructure := oStructures.Add('ADT_A18', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A18', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MRG', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
  oStructure := oStructures.Add('ADT_A20', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A20', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NPU', False, False, gtSingle);
  oStructure := oStructures.Add('ADT_A21', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A21', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DB1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('OBX', True, True, gtSingle);
  oStructure := oStructures.Add('ADT_A24', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A24', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DB1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DB1', True, True, gtSingle);
  oStructure := oStructures.Add('ADT_A30', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A30', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ARV', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('MRG', False, False, gtSingle);
  oStructure := oStructures.Add('ADT_A37', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A37', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DB1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DB1', True, True, gtSingle);
  oStructure := oStructures.Add('ADT_A38', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A38', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DB1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('OBX', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DG1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DRG', True, False, gtSingle);
  oStructure := oStructures.Add('ADT_A39', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A39', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', False, True, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp1.Children.Add('PD1', True, False, gtSingle);
      oGrp1.Children.Add('MRG', False, False, gtSingle);
      oGrp1.Children.Add('PV1', True, False, gtSingle);
  oStructure := oStructures.Add('ADT_A43', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A43', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', False, True, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp1.Children.Add('PD1', True, False, gtSingle);
      oGrp1.Children.Add('ARV', True, True, gtSingle);
      oGrp1.Children.Add('MRG', False, False, gtSingle);
  oStructure := oStructures.Add('ADT_A45', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A45', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('MERGE_INFO', False, True, gtGroup);
      oGrp1.Children.Add('MRG', False, False, gtSingle);
      oGrp1.Children.Add('PV1', False, False, gtSingle);
  oStructure := oStructures.Add('ADT_A50', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A50', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MRG', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
  oStructure := oStructures.Add('ADT_A52', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A52', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV2', True, False, gtSingle);
  oStructure := oStructures.Add('ADT_A54', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A54', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ROL', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ROL', True, True, gtSingle);
  oStructure := oStructures.Add('ADT_A60', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A60', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ARV', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ARV', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('IAM', True, True, gtSingle);
  oStructure := oStructures.Add('ADT_A61', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A61', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ROL', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ROL', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PV2', True, False, gtSingle);
  oStructure := oStructures.Add('BAR_P01', 'open account', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('BAR_P01', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ROL', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('VISIT', False, True, gtGroup);
      oGrp1.Children.Add('PV1', True, False, gtSingle);
      oGrp1.Children.Add('PV2', True, False, gtSingle);
      oGrp1.Children.Add('ROL', True, True, gtSingle);
      oGrp1.Children.Add('DB1', True, True, gtSingle);
      oGrp1.Children.Add('OBX', True, True, gtSingle);
      oGrp1.Children.Add('AL1', True, True, gtSingle);
      oGrp1.Children.Add('DG1', True, True, gtSingle);
      oGrp1.Children.Add('DRG', True, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('PROCEDURE', True, True, gtGroup);
        oGrp2.Children.Add('PR1', False, False, gtSingle);
        oGrp2.Children.Add('ROL', True, True, gtSingle);
      oGrp1.Children.Add('GT1', True, True, gtSingle);
      oGrp1.Children.Add('NK1', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('INSURANCE', True, True, gtGroup);
        oGrp2.Children.Add('IN1', False, False, gtSingle);
        oGrp2.Children.Add('IN2', True, False, gtSingle);
        oGrp2.Children.Add('IN3', True, True, gtSingle);
        oGrp2.Children.Add('ROL', True, True, gtSingle);
      oGrp1.Children.Add('ACC', True, False, gtSingle);
      oGrp1.Children.Add('UB1', True, False, gtSingle);
      oGrp1.Children.Add('UB2', True, False, gtSingle);
  oStructure := oStructures.Add('BAR_P02', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('BAR_P02', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', False, True, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp1.Children.Add('PD1', True, False, gtSingle);
      oGrp1.Children.Add('PV1', True, False, gtSingle);
      oGrp1.Children.Add('DB1', True, True, gtSingle);
  oStructure := oStructures.Add('BAR_P05', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('BAR_P05', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ROL', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('VISIT', False, True, gtGroup);
      oGrp1.Children.Add('PV1', True, False, gtSingle);
      oGrp1.Children.Add('PV2', True, False, gtSingle);
      oGrp1.Children.Add('ROL', True, True, gtSingle);
      oGrp1.Children.Add('DB1', True, True, gtSingle);
      oGrp1.Children.Add('OBX', True, True, gtSingle);
      oGrp1.Children.Add('AL1', True, True, gtSingle);
      oGrp1.Children.Add('DG1', True, True, gtSingle);
      oGrp1.Children.Add('DRG', True, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('PROCEDURE', True, True, gtGroup);
        oGrp2.Children.Add('PR1', False, False, gtSingle);
        oGrp2.Children.Add('ROL', True, True, gtSingle);
      oGrp1.Children.Add('GT1', True, True, gtSingle);
      oGrp1.Children.Add('NK1', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('INSURANCE', True, True, gtGroup);
        oGrp2.Children.Add('IN1', False, False, gtSingle);
        oGrp2.Children.Add('IN2', True, False, gtSingle);
        oGrp2.Children.Add('IN3', True, True, gtSingle);
        oGrp2.Children.Add('ROL', True, True, gtSingle);
      oGrp1.Children.Add('ACC', True, False, gtSingle);
      oGrp1.Children.Add('UB1', True, False, gtSingle);
      oGrp1.Children.Add('UB2', True, False, gtSingle);
      oGrp1.Children.Add('ABS', True, False, gtSingle);
      oGrp1.Children.Add('BLC', True, True, gtSingle);
      oGrp1.Children.Add('RMI', True, False, gtSingle);
  oStructure := oStructures.Add('BAR_P06', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('BAR_P06', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', False, True, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp1.Children.Add('PV1', True, False, gtSingle);
  oStructure := oStructures.Add('BAR_P10', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('BAR_P10', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DG1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('GP1', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROCEDURE', True, True, gtGroup);
      oGrp1.Children.Add('PR1', False, False, gtSingle);
      oGrp1.Children.Add('GP2', True, False, gtSingle);
  oStructure := oStructures.Add('BAR_P12', 'Update Diagnosis/Procedure', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('BAR_P12', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DG1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DRG', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROCEDURE', True, True, gtGroup);
      oGrp1.Children.Add('PR1', False, False, gtSingle);
      oGrp1.Children.Add('ROL', True, True, gtSingle);
  oStructure := oStructures.Add('BPS_O29', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('BPS_O29', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', True, False, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp1.Children.Add('PD1', True, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATIENT_VISIT', True, False, gtGroup);
        oGrp2.Children.Add('PV1', False, False, gtSingle);
        oGrp2.Children.Add('PV2', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('ORDER', False, True, gtGroup);
      oGrp1.Children.Add('ORC', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('TIMING', True, True, gtGroup);
        oGrp2.Children.Add('TQ1', False, False, gtSingle);
        oGrp2.Children.Add('TQ2', True, True, gtSingle);
      oGrp1.Children.Add('BPO', False, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PRODUCT', True, True, gtGroup);
        oGrp2.Children.Add('BPX', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('BRP_O30', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('BRP_O30', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('RESPONSE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('PATIENT', True, False, gtGroup);
        oGrp2.Children.Add('PID', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('ORDER', True, True, gtGroup);
          oGrp3.Children.Add('ORC', False, False, gtSingle);
          oGrp4 := oGrp3.Children.Add('TIMING', True, True, gtGroup);
            oGrp4.Children.Add('TQ1', False, False, gtSingle);
            oGrp4.Children.Add('TQ2', True, True, gtSingle);
          oGrp3.Children.Add('BPO', True, False, gtSingle);
          oGrp3.Children.Add('BPX', True, True, gtSingle);
  oStructure := oStructures.Add('BRT_O32', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('BRT_O32', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('RESPONSE', True, False, gtGroup);
      oGrp1.Children.Add('PID', True, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER', True, True, gtGroup);
        oGrp2.Children.Add('ORC', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('TIMING', True, True, gtGroup);
          oGrp3.Children.Add('TQ1', False, False, gtSingle);
          oGrp3.Children.Add('TQ2', True, True, gtSingle);
        oGrp2.Children.Add('BPO', True, False, gtSingle);
        oGrp2.Children.Add('BTX', True, True, gtSingle);
  oStructure := oStructures.Add('BTS_O31', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('BTS_O31', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', True, False, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp1.Children.Add('PD1', True, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATIENT_VISIT', True, False, gtGroup);
        oGrp2.Children.Add('PV1', False, False, gtSingle);
        oGrp2.Children.Add('PV2', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('ORDER', False, True, gtGroup);
      oGrp1.Children.Add('ORC', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('TIMING', True, True, gtGroup);
        oGrp2.Children.Add('TQ1', False, False, gtSingle);
        oGrp2.Children.Add('TQ2', True, True, gtSingle);
      oGrp1.Children.Add('BPO', False, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PRODUCT_STATUS', True, True, gtGroup);
        oGrp2.Children.Add('BTX', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('CRM_C01', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('CRM_C01', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', False, True, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp1.Children.Add('PV1', True, False, gtSingle);
      oGrp1.Children.Add('CSR', False, False, gtSingle);
      oGrp1.Children.Add('CSP', True, True, gtSingle);
  oStructure := oStructures.Add('CSU_C09', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('CSU_C09', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', False, True, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp1.Children.Add('PD1', True, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('VISIT', True, False, gtGroup);
        oGrp2.Children.Add('PV1', False, False, gtSingle);
        oGrp2.Children.Add('PV2', True, False, gtSingle);
      oGrp1.Children.Add('CSR', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('STUDY_PHASE', False, True, gtGroup);
        oGrp2.Children.Add('CSP', True, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('STUDY_SCHEDULE', False, True, gtGroup);
          oGrp3.Children.Add('CSS', True, False, gtSingle);
          oGrp4 := oGrp3.Children.Add('STUDY_OBSERVATION', False, True, gtGroup);
            oGrp4.Children.Add('ORC', True, False, gtSingle);
            oGrp4.Children.Add('OBR', False, False, gtSingle);
            oGrp4.Children.Add('ROL', True, True, gtSingle);
            oGrp5 := oGrp4.Children.Add('TIMING_QTY', True, True, gtGroup);
              oGrp5.Children.Add('TQ1', False, False, gtSingle);
              oGrp5.Children.Add('TQ2', True, True, gtSingle);
            oGrp4.Children.Add('OBX', False, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('STUDY_PHARM', False, True, gtGroup);
            oGrp4.Children.Add('ORC', True, False, gtSingle);
            oGrp5 := oGrp4.Children.Add('RX_ADMIN', False, True, gtGroup);
              oGrp5.Children.Add('RXA', False, False, gtSingle);
              oGrp5.Children.Add('RXR', False, False, gtSingle);
  oStructure := oStructures.Add('DFT_P03', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('DFT_P03', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, True, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ROL', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ROL', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DB1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('COMMON_ORDER', True, True, gtGroup);
      oGrp1.Children.Add('ORC', True, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('TIMING_QUANTITY', True, True, gtGroup);
        oGrp2.Children.Add('TQ1', False, False, gtSingle);
        oGrp2.Children.Add('TQ2', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER', True, False, gtGroup);
        oGrp2.Children.Add('OBR', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('OBSERVATION', True, True, gtGroup);
        oGrp2.Children.Add('OBX', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('FINANCIAL', False, True, gtGroup);
      oGrp1.Children.Add('FT1', False, False, gtSingle);
      oGrp1.Children.Add('NTE', True, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('FINANCIAL_PROCEDURE', True, True, gtGroup);
        oGrp2.Children.Add('PR1', False, False, gtSingle);
        oGrp2.Children.Add('ROL', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('FINANCIAL_COMMON_ORDER', True, True, gtGroup);
        oGrp2.Children.Add('ORC', True, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('FINANCIAL_TIMING_QUANTITY', True, True, gtGroup);
          oGrp3.Children.Add('TQ1', False, False, gtSingle);
          oGrp3.Children.Add('TQ2', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('FINANCIAL_ORDER', True, False, gtGroup);
          oGrp3.Children.Add('OBR', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('FINANCIAL_OBSERVATION', True, True, gtGroup);
          oGrp3.Children.Add('OBX', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DG1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DRG', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('GT1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('INSURANCE', True, True, gtGroup);
      oGrp1.Children.Add('IN1', False, False, gtSingle);
      oGrp1.Children.Add('IN2', True, False, gtSingle);
      oGrp1.Children.Add('IN3', True, True, gtSingle);
      oGrp1.Children.Add('ROL', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('ACC', True, False, gtSingle);
  oStructure := oStructures.Add('DFT_P11', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('DFT_P11', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ROL', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ROL', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DB1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('COMMON_ORDER', True, True, gtGroup);
      oGrp1.Children.Add('ORC', True, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('TIMING_QUANTITY', True, True, gtGroup);
        oGrp2.Children.Add('TQ1', False, False, gtSingle);
        oGrp2.Children.Add('TQ2', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER', True, False, gtGroup);
        oGrp2.Children.Add('OBR', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('OBSERVATION', True, True, gtGroup);
        oGrp2.Children.Add('OBX', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DG1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DRG', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('GT1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('INSURANCE', True, True, gtGroup);
      oGrp1.Children.Add('IN1', False, False, gtSingle);
      oGrp1.Children.Add('IN2', True, False, gtSingle);
      oGrp1.Children.Add('IN3', True, True, gtSingle);
      oGrp1.Children.Add('ROL', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('ACC', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('FINANCIAL', False, True, gtGroup);
      oGrp1.Children.Add('FT1', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('FINANCIAL_PROCEDURE', True, True, gtGroup);
        oGrp2.Children.Add('PR1', False, False, gtSingle);
        oGrp2.Children.Add('ROL', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('FINANCIAL_COMMON_ORDER', True, True, gtGroup);
        oGrp2.Children.Add('ORC', True, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('FINANCIAL_TIMING_QUANTITY', True, True, gtGroup);
          oGrp3.Children.Add('TQ1', False, False, gtSingle);
          oGrp3.Children.Add('TQ2', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('FINANCIAL_ORDER', True, False, gtGroup);
          oGrp3.Children.Add('OBR', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('FINANCIAL_OBSERVATION', True, True, gtGroup);
          oGrp3.Children.Add('OBX', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp1.Children.Add('DG1', True, True, gtSingle);
      oGrp1.Children.Add('DRG', True, False, gtSingle);
      oGrp1.Children.Add('GT1', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('FINANCIAL_INSURANCE', True, True, gtGroup);
        oGrp2.Children.Add('IN1', False, False, gtSingle);
        oGrp2.Children.Add('IN2', True, False, gtSingle);
        oGrp2.Children.Add('IN3', True, True, gtSingle);
        oGrp2.Children.Add('ROL', True, True, gtSingle);
  oStructure := oStructures.Add('DOC_T12', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('DOC_T12', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QAK', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('RESULT', False, True, gtGroup);
      oGrp1.Children.Add('EVN', True, False, gtSingle);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp1.Children.Add('PV1', False, False, gtSingle);
      oGrp1.Children.Add('TXA', False, False, gtSingle);
      oGrp1.Children.Add('OBX', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('DSR_Q01', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('DSR_Q01', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QAK', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRF', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DSP', False, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('DSR_Q03', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('DSR_Q03', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QAK', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRF', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DSP', False, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('EAC_U07', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('EAC_U07', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EQU', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('COMMAND', False, True, gtGroup);
      oGrp1.Children.Add('ECD', False, False, gtSingle);
      oGrp1.Children.Add('TQ1', True, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('SPECIMEN_CONTAINER', True, False, gtGroup);
        oGrp2.Children.Add('SAC', False, False, gtSingle);
        oGrp2.Children.Add('SPM', True, True, gtSingle);
      oGrp1.Children.Add('CNS', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ROL', True, False, gtSingle);
  oStructure := oStructures.Add('EAN_U09', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('EAN_U09', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EQU', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('NOTIFICATION', False, True, gtGroup);
      oGrp1.Children.Add('NDS', False, False, gtSingle);
      oGrp1.Children.Add('NTE', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ROL', True, False, gtSingle);
  oStructure := oStructures.Add('EAR_U08', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('EAR_U08', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EQU', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('COMMAND_RESPONSE', False, True, gtGroup);
      oGrp1.Children.Add('ECD', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('SPECIMEN_CONTAINER', True, False, gtGroup);
        oGrp2.Children.Add('SAC', False, False, gtSingle);
        oGrp2.Children.Add('SPM', True, True, gtSingle);
      oGrp1.Children.Add('ECR', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ROL', True, False, gtSingle);
  oStructure := oStructures.Add('EHC_E01', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('EHC_E01', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('INVOICE_INFORMATION', False, True, gtChoice);
      oGrp1.Children.Add('IVC', False, False, gtSingle);
      oGrp1.Children.Add('PYE', True, False, gtSingle);
      oGrp1.Children.Add('CTD', True, True, gtSingle);
      oGrp1.Children.Add('AUT', True, False, gtSingle);
      oGrp1.Children.Add('LOC', True, True, gtSingle);
      oGrp1.Children.Add('ROL', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PRODUCT_SERVICE_SECTION', False, True, gtGroup);
        oGrp2.Children.Add('PSS', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('PRODUCT_SERVICE_GROUP', False, True, gtGroup);
          oGrp3.Children.Add('PSG', False, False, gtSingle);
          oGrp3.Children.Add('LOC', True, True, gtSingle);
          oGrp3.Children.Add('ROL', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('PATIENT_INFO', True, True, gtGroup);
            oGrp4.Children.Add('PID', False, False, gtSingle);
            oGrp4.Children.Add('PV1', True, False, gtSingle);
            oGrp4.Children.Add('PV2', True, False, gtSingle);
            oGrp4.Children.Add('ACC', True, True, gtSingle);
            oGrp5 := oGrp4.Children.Add('INSURANCE', False, True, gtGroup);
              oGrp5.Children.Add('IN1', False, False, gtSingle);
              oGrp5.Children.Add('IN2', True, False, gtSingle);
            oGrp5 := oGrp4.Children.Add('DIAGNOSIS', True, True, gtGroup);
              oGrp5.Children.Add('DG1', False, False, gtSingle);
              oGrp5.Children.Add('NTE', True, True, gtSingle);
            oGrp4.Children.Add('OBX', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('PRODUCT_SERVICE_LINE_ITEM', False, True, gtGroup);
            oGrp4.Children.Add('PSL', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
            oGrp4.Children.Add('ADJ', True, True, gtSingle);
            oGrp4.Children.Add('AUT', True, False, gtSingle);
            oGrp4.Children.Add('LOC', True, True, gtSingle);
            oGrp4.Children.Add('ROL', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('PROCEDURE', True, True, gtGroup);
            oGrp4.Children.Add('PR1', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
            oGrp4.Children.Add('ROL', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('INVOICE_PROCESSING', True, True, gtGroup);
            oGrp4.Children.Add('IPR', False, False, gtSingle);
  oStructure := oStructures.Add('EHC_E02', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('EHC_E02', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('INVOICE_INFORMATION', False, True, gtChoice);
      oGrp1.Children.Add('IVC', False, False, gtSingle);
      oGrp1.Children.Add('PYE', False, False, gtSingle);
      oGrp1.Children.Add('CTD', True, True, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PRODUCT_SERVICE_SECTION', True, True, gtGroup);
        oGrp2.Children.Add('PSS', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('PSG', True, True, gtGroup);
          oGrp3.Children.Add('PSG', False, False, gtSingle);
          oGrp3.Children.Add('PSL', True, True, gtSingle);
  oStructure := oStructures.Add('EHC_E04', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('EHC_E04', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('REASSESSMENT_REQUEST_INFO', False, True, gtChoice);
      oGrp1.Children.Add('IVC', False, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PRODUCT_SERVICE_SECTION', True, True, gtGroup);
        oGrp2.Children.Add('PSS', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('PRODUCT_SERVICE_GROUP', True, True, gtGroup);
          oGrp3.Children.Add('PSG', False, False, gtSingle);
          oGrp3.Children.Add('PSL', True, True, gtSingle);
  oStructure := oStructures.Add('EHC_E10', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('EHC_E10', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('INVOICE_PROCESSING_RESULTS_INFO', False, True, gtGroup);
      oGrp1.Children.Add('IPR', False, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp1.Children.Add('PYE', False, False, gtSingle);
      oGrp1.Children.Add('IN1', False, False, gtSingle);
      oGrp1.Children.Add('IN2', True, False, gtSingle);
      oGrp1.Children.Add('IVC', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('PRODUCT_SERVICE_SECTION', False, True, gtGroup);
        oGrp2.Children.Add('PSS', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('PRODUCT_SERVICE_GROUP', False, True, gtGroup);
          oGrp3.Children.Add('PSG', False, False, gtSingle);
          oGrp4 := oGrp3.Children.Add('PRODUCT_SERVICE_LINE_INFO', False, True, gtGroup);
            oGrp4.Children.Add('PSL', False, False, gtSingle);
            oGrp4.Children.Add('ADJ', True, True, gtSingle);
  oStructure := oStructures.Add('EHC_E12', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('EHC_E12', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('RFI', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('CTD', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('IVC', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PSS', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PSG', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PSL', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('REQUEST', False, True, gtGroup);
      oGrp1.Children.Add('CTD', True, False, gtSingle);
      oGrp1.Children.Add('OBR', False, False, gtSingle);
      oGrp1.Children.Add('NTE', True, False, gtSingle);
      oGrp1.Children.Add('OBX', True, True, gtSingle);
  oStructure := oStructures.Add('EHC_E13', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('EHC_E13', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('RFI', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('CTD', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('IVC', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PSS', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PSG', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PSL', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('REQUEST', False, True, gtGroup);
      oGrp1.Children.Add('CTD', True, False, gtSingle);
      oGrp1.Children.Add('OBR', False, False, gtSingle);
      oGrp1.Children.Add('NTE', True, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('RESPONSE', False, True, gtGroup);
        oGrp2.Children.Add('OBX', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, False, gtSingle);
        oGrp2.Children.Add('TXA', True, False, gtSingle);
  oStructure := oStructures.Add('EHC_E15', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('EHC_E15', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PAYMENT_REMITTANCE_HEADER_INFO', False, True, gtChoice);
      oGrp1.Children.Add('PMT', False, False, gtSingle);
      oGrp1.Children.Add('PYE', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PAYMENT_REMITTANCE_DETAIL_INFO', True, True, gtGroup);
      oGrp1.Children.Add('IPR', False, False, gtSingle);
      oGrp1.Children.Add('IVC', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('PRODUCT_SERVICE_SECTION', False, True, gtGroup);
        oGrp2.Children.Add('PSS', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('PRODUCT_SERVICE_GROUP', False, True, gtGroup);
          oGrp3.Children.Add('PSG', False, False, gtSingle);
          oGrp4 := oGrp3.Children.Add('PSL_ITEM_INFO', False, True, gtGroup);
            oGrp4.Children.Add('PSL', False, False, gtSingle);
            oGrp4.Children.Add('ADJ', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('ADJUSTMENT_PAYEE', True, True, gtGroup);
      oGrp1.Children.Add('ADJ', False, False, gtSingle);
      oGrp1.Children.Add('ROL', True, False, gtSingle);
  oStructure := oStructures.Add('EHC_E20', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('EHC_E20', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('AUTHORIZATION_REQUEST', False, True, gtChoice);
      oGrp1.Children.Add('IVC', False, False, gtSingle);
      oGrp1.Children.Add('CTD', False, True, gtSingle);
      oGrp1.Children.Add('LOC', True, True, gtSingle);
      oGrp1.Children.Add('ROL', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PAT_INFO', False, True, gtGroup);
        oGrp2.Children.Add('PID', False, False, gtSingle);
        oGrp2.Children.Add('ACC', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('INSURANCE', False, True, gtGroup);
          oGrp3.Children.Add('IN1', False, False, gtSingle);
          oGrp3.Children.Add('IN2', True, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('DIAGNOSIS', True, True, gtGroup);
          oGrp3.Children.Add('DG1', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
        oGrp2.Children.Add('OBX', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PSL_ITEM_INFO', False, True, gtGroup);
        oGrp2.Children.Add('PSL', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
        oGrp2.Children.Add('ADJ', True, True, gtSingle);
        oGrp2.Children.Add('LOC', True, True, gtSingle);
        oGrp2.Children.Add('ROL', True, True, gtSingle);
  oStructure := oStructures.Add('EHC_E21', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('EHC_E21', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('AUTHORIZATION_REQUEST', False, True, gtChoice);
      oGrp1.Children.Add('IVC', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('PSL_ITEM_INFO', False, True, gtGroup);
        oGrp2.Children.Add('PSL', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
        oGrp2.Children.Add('AUT', True, False, gtSingle);
  oStructure := oStructures.Add('EHC_E24', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('EHC_E24', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('AUTHORIZATION_RESPONSE_INFO', False, True, gtChoice);
      oGrp1.Children.Add('IVC', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('PSL_ITEM_INFO', False, True, gtGroup);
        oGrp2.Children.Add('PSL', False, False, gtSingle);
        oGrp2.Children.Add('AUT', True, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('PAYER_ADJUSTMENT', True, True, gtGroup);
          oGrp3.Children.Add('ADJ', False, False, gtSingle);
  oStructure := oStructures.Add('ESR_U02', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ESR_U02', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EQU', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ROL', True, False, gtSingle);
End;

procedure Definitions26LoadMessageStructures2(oStructures : THL7V2ModelMessageStructures);
Var
  oStructure : THL7V2ModelMessageStructure;
  oGrp1 : THL7V2ModelSegmentGroup;
  oGrp2 : THL7V2ModelSegmentGroup;
  oGrp3 : THL7V2ModelSegmentGroup;
  oGrp4 : THL7V2ModelSegmentGroup;
  oGrp5 : THL7V2ModelSegmentGroup;
  oGrp6 : THL7V2ModelSegmentGroup;
  oGrp7 : THL7V2ModelSegmentGroup;
Begin
  oStructure := oStructures.Add('ESU_U01', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ESU_U01', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EQU', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ISD', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('ROL', True, False, gtSingle);
  oStructure := oStructures.Add('INR_U06', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('INR_U06', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EQU', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('INV', False, True, gtSingle);
    oStructure.SegmentMap.Children.Add('ROL', True, False, gtSingle);
  oStructure := oStructures.Add('INU_U05', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('INU_U05', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EQU', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('INV', False, True, gtSingle);
    oStructure.SegmentMap.Children.Add('ROL', True, False, gtSingle);
  oStructure := oStructures.Add('LSU_U12', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('LSU_U12', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EQU', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EQP', False, True, gtSingle);
    oStructure.SegmentMap.Children.Add('ROL', True, False, gtSingle);
  oStructure := oStructures.Add('MDM_T01', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('MDM_T01', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('COMMON_ORDER', True, True, gtGroup);
      oGrp1.Children.Add('ORC', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('TIMING', True, True, gtGroup);
        oGrp2.Children.Add('TQ1', False, False, gtSingle);
        oGrp2.Children.Add('TQ2', True, True, gtSingle);
      oGrp1.Children.Add('OBR', False, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('TXA', False, False, gtSingle);
  oStructure := oStructures.Add('MDM_T02', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('MDM_T02', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('COMMON_ORDER', True, True, gtGroup);
      oGrp1.Children.Add('ORC', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('TIMING', True, True, gtGroup);
        oGrp2.Children.Add('TQ1', False, False, gtSingle);
        oGrp2.Children.Add('TQ2', True, True, gtSingle);
      oGrp1.Children.Add('OBR', False, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('TXA', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('OBSERVATION', False, True, gtGroup);
      oGrp1.Children.Add('OBX', False, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('MFK_M01', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('MFK_M01', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('MFI', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MFA', True, True, gtSingle);
  oStructure := oStructures.Add('MFN_M01', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('MFN_M01', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('MFI', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('MF', False, True, gtGroup);
      oGrp1.Children.Add('MFE', False, False, gtSingle);
      oGrp1.Children.Add('Hxx', True, False, gtSingle);
  oStructure := oStructures.Add('MFN_M02', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('MFN_M02', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MFI', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('MF_STAFF', False, True, gtGroup);
      oGrp1.Children.Add('MFE', False, False, gtSingle);
      oGrp1.Children.Add('STF', False, False, gtSingle);
      oGrp1.Children.Add('PRA', True, True, gtSingle);
      oGrp1.Children.Add('ORG', True, True, gtSingle);
      oGrp1.Children.Add('AFF', True, True, gtSingle);
      oGrp1.Children.Add('LAN', True, True, gtSingle);
      oGrp1.Children.Add('EDU', True, True, gtSingle);
      oGrp1.Children.Add('CER', True, True, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('MFN_M03', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('MFN_M03', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('MFI', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('MF_TEST', False, True, gtGroup);
      oGrp1.Children.Add('MFE', False, False, gtSingle);
      oGrp1.Children.Add('OM1', False, False, gtSingle);
      oGrp1.Children.Add('Hxx', False, False, gtSingle);
  oStructure := oStructures.Add('MFN_M04', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('MFN_M04', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MFI', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('MF_CDM', False, True, gtGroup);
      oGrp1.Children.Add('MFE', False, False, gtSingle);
      oGrp1.Children.Add('CDM', False, False, gtSingle);
      oGrp1.Children.Add('PRC', True, True, gtSingle);
  oStructure := oStructures.Add('MFN_M05', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('MFN_M05', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MFI', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('MF_LOCATION', False, True, gtGroup);
      oGrp1.Children.Add('MFE', False, False, gtSingle);
      oGrp1.Children.Add('LOC', False, False, gtSingle);
      oGrp1.Children.Add('LCH', True, True, gtSingle);
      oGrp1.Children.Add('LRL', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('MF_LOC_DEPT', False, True, gtGroup);
        oGrp2.Children.Add('LDP', False, False, gtSingle);
        oGrp2.Children.Add('LCH', True, True, gtSingle);
        oGrp2.Children.Add('LCC', True, True, gtSingle);
  oStructure := oStructures.Add('MFN_M06', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('MFN_M06', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MFI', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('MF_CLIN_STUDY', False, True, gtGroup);
      oGrp1.Children.Add('MFE', False, False, gtSingle);
      oGrp1.Children.Add('CM0', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('MF_PHASE_SCHED_DETAIL', True, True, gtGroup);
        oGrp2.Children.Add('CM1', False, False, gtSingle);
        oGrp2.Children.Add('CM2', True, True, gtSingle);
  oStructure := oStructures.Add('MFN_M07', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('MFN_M07', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MFI', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('MF_CLIN_STUDY_SCHED', False, True, gtGroup);
      oGrp1.Children.Add('MFE', False, False, gtSingle);
      oGrp1.Children.Add('CM0', False, False, gtSingle);
      oGrp1.Children.Add('CM2', True, True, gtSingle);
  oStructure := oStructures.Add('MFN_M08', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('MFN_M08', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MFI', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('MF_TEST_NUMERIC', False, True, gtGroup);
      oGrp1.Children.Add('MFE', False, False, gtSingle);
      oGrp1.Children.Add('OM1', False, False, gtSingle);
      oGrp1.Children.Add('OM2', True, False, gtSingle);
      oGrp1.Children.Add('OM3', True, False, gtSingle);
      oGrp1.Children.Add('OM4', True, False, gtSingle);
  oStructure := oStructures.Add('MFN_M09', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('MFN_M09', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MFI', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('MF_TEST_CATEGORICAL', False, True, gtGroup);
      oGrp1.Children.Add('MFE', False, False, gtSingle);
      oGrp1.Children.Add('OM1', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('MF_TEST_CAT_DETAIL', True, False, gtGroup);
        oGrp2.Children.Add('OM3', False, False, gtSingle);
        oGrp2.Children.Add('OM4', True, True, gtSingle);
  oStructure := oStructures.Add('MFN_M10', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('MFN_M10', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MFI', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('MF_TEST_BATTERIES', False, True, gtGroup);
      oGrp1.Children.Add('MFE', False, False, gtSingle);
      oGrp1.Children.Add('OM1', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('MF_TEST_BATT_DETAIL', True, False, gtGroup);
        oGrp2.Children.Add('OM5', False, False, gtSingle);
        oGrp2.Children.Add('OM4', True, True, gtSingle);
  oStructure := oStructures.Add('MFN_M11', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('MFN_M11', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MFI', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('MF_TEST_CALCULATED', False, True, gtGroup);
      oGrp1.Children.Add('MFE', False, False, gtSingle);
      oGrp1.Children.Add('OM1', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('MF_TEST_CALC_DETAIL', True, False, gtGroup);
        oGrp2.Children.Add('OM6', False, False, gtSingle);
        oGrp2.Children.Add('OM2', False, False, gtSingle);
  oStructure := oStructures.Add('MFN_M12', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('MFN_M12', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MFI', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('MF_OBS_ATTRIBUTES', False, True, gtGroup);
      oGrp1.Children.Add('MFE', False, False, gtSingle);
      oGrp1.Children.Add('OM1', False, False, gtSingle);
      oGrp1.Children.Add('OM7', True, False, gtSingle);
  oStructure := oStructures.Add('MFN_M13', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('MFN_M13', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MFI', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MFE', False, True, gtSingle);
  oStructure := oStructures.Add('MFN_M15', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('MFN_M15', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MFI', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('MF_INV_ITEM', False, True, gtGroup);
      oGrp1.Children.Add('MFE', False, False, gtSingle);
      oGrp1.Children.Add('IIM', False, False, gtSingle);
  oStructure := oStructures.Add('MFN_M16', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('MFN_M16', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MFI', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('MATERIAL_ITEM_RECORD', False, True, gtGroup);
      oGrp1.Children.Add('MFE', False, False, gtSingle);
      oGrp1.Children.Add('ITM', False, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('STERILIZATION', True, True, gtGroup);
        oGrp2.Children.Add('STZ', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PURCHASING_VENDOR', True, True, gtGroup);
        oGrp2.Children.Add('VND', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('PACKAGING', True, True, gtGroup);
          oGrp3.Children.Add('PKG', False, False, gtSingle);
          oGrp3.Children.Add('PCE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('MATERIAL_LOCATION', True, True, gtGroup);
        oGrp2.Children.Add('IVT', False, False, gtSingle);
        oGrp2.Children.Add('ILT', True, True, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('MFN_M17', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('MFN_M17', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MFI', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('MF_DRG', False, True, gtGroup);
      oGrp1.Children.Add('MFE', False, False, gtSingle);
      oGrp1.Children.Add('DMI', False, False, gtSingle);
  oStructure := oStructures.Add('MFN_Znn', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('MFN_Znn', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MFI', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('MF_SITE_DEFINED', False, True, gtGroup);
      oGrp1.Children.Add('MFE', False, False, gtSingle);
      oGrp1.Children.Add('Hxx', False, False, gtSingle);
  oStructure := oStructures.Add('MFQ_M01', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('MFQ_M01', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRF', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('MFR_M01', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('MFR_M01', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('QAK', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRF', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MFI', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('MF_QUERY', False, True, gtGroup);
      oGrp1.Children.Add('MFE', False, False, gtSingle);
      oGrp1.Children.Add('Hxx', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('MFR_M04', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('MFR_M04', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('QAK', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRF', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MFI', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('MF_QUERY', False, True, gtGroup);
      oGrp1.Children.Add('MFE', False, False, gtSingle);
      oGrp1.Children.Add('CDM', False, False, gtSingle);
      oGrp1.Children.Add('PRC', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('MFR_M05', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('MFR_M05', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('QAK', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRF', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MFI', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('MF_QUERY', False, True, gtGroup);
      oGrp1.Children.Add('MFE', False, False, gtSingle);
      oGrp1.Children.Add('LOC', False, False, gtSingle);
      oGrp1.Children.Add('LCH', True, True, gtSingle);
      oGrp1.Children.Add('LRL', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('MF_LOC_DEPT', False, True, gtGroup);
        oGrp2.Children.Add('LDP', False, False, gtSingle);
        oGrp2.Children.Add('LCH', True, True, gtSingle);
        oGrp2.Children.Add('LCC', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('MFR_M06', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('MFR_M06', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('QAK', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRF', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MFI', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('MF_QUERY', False, True, gtGroup);
      oGrp1.Children.Add('MFE', False, False, gtSingle);
      oGrp1.Children.Add('CM0', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('MF_PHASE_SCHED_DETAIL', True, True, gtGroup);
        oGrp2.Children.Add('CM1', False, False, gtSingle);
        oGrp2.Children.Add('CM2', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('MFR_M07', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('MFR_M07', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('QAK', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRF', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MFI', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('MF_QUERY', False, True, gtGroup);
      oGrp1.Children.Add('MFE', False, False, gtSingle);
      oGrp1.Children.Add('CM0', False, False, gtSingle);
      oGrp1.Children.Add('CM2', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('NMD_N02', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('NMD_N02', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('CLOCK_AND_STATS_WITH_NOTES', False, True, gtGroup);
      oGrp2 := oGrp1.Children.Add('CLOCK', True, False, gtGroup);
        oGrp2.Children.Add('NCK', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('APP_STATS', True, False, gtGroup);
        oGrp2.Children.Add('NST', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('APP_STATUS', True, False, gtGroup);
        oGrp2.Children.Add('NSC', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('NMQ_N01', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('NMQ_N01', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('QRY_WITH_DETAIL', True, False, gtGroup);
      oGrp1.Children.Add('QRD', False, False, gtSingle);
      oGrp1.Children.Add('QRF', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('CLOCK_AND_STATISTICS', False, True, gtGroup);
      oGrp1.Children.Add('NCK', True, False, gtSingle);
      oGrp1.Children.Add('NST', True, False, gtSingle);
      oGrp1.Children.Add('NSC', True, False, gtSingle);
  oStructure := oStructures.Add('NMR_N01', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('NMR_N01', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('CLOCK_AND_STATS_WITH_NOTES_ALT', False, True, gtGroup);
      oGrp1.Children.Add('NCK', True, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp1.Children.Add('NST', True, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp1.Children.Add('NSC', True, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
  oStructures.Add('NUL', '', '', '', '');
  oStructure := oStructures.Add('OMB_O27', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('OMB_O27', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', True, False, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp1.Children.Add('PD1', True, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATIENT_VISIT', True, False, gtGroup);
        oGrp2.Children.Add('PV1', False, False, gtSingle);
        oGrp2.Children.Add('PV2', True, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('INSURANCE', True, True, gtGroup);
        oGrp2.Children.Add('IN1', False, False, gtSingle);
        oGrp2.Children.Add('IN2', True, False, gtSingle);
        oGrp2.Children.Add('IN3', True, False, gtSingle);
      oGrp1.Children.Add('GT1', True, False, gtSingle);
      oGrp1.Children.Add('AL1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('ORDER', False, True, gtGroup);
      oGrp1.Children.Add('ORC', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('TIMING', True, True, gtGroup);
        oGrp2.Children.Add('TQ1', False, False, gtSingle);
        oGrp2.Children.Add('TQ2', True, True, gtSingle);
      oGrp1.Children.Add('BPO', False, False, gtSingle);
      oGrp1.Children.Add('SPM', True, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp1.Children.Add('DG1', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('OBSERVATION', True, True, gtGroup);
        oGrp2.Children.Add('OBX', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
      oGrp1.Children.Add('FT1', True, True, gtSingle);
      oGrp1.Children.Add('BLG', True, False, gtSingle);
  oStructure := oStructures.Add('OMD_O03', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('OMD_O03', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', True, False, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp1.Children.Add('PD1', True, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATIENT_VISIT', True, False, gtGroup);
        oGrp2.Children.Add('PV1', False, False, gtSingle);
        oGrp2.Children.Add('PV2', True, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('INSURANCE', True, True, gtGroup);
        oGrp2.Children.Add('IN1', False, False, gtSingle);
        oGrp2.Children.Add('IN2', True, False, gtSingle);
        oGrp2.Children.Add('IN3', True, False, gtSingle);
      oGrp1.Children.Add('GT1', True, False, gtSingle);
      oGrp1.Children.Add('AL1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('ORDER_DIET', False, True, gtGroup);
      oGrp1.Children.Add('ORC', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('TIMING_DIET', True, True, gtGroup);
        oGrp2.Children.Add('TQ1', False, False, gtSingle);
        oGrp2.Children.Add('TQ2', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('DIET', True, False, gtGroup);
        oGrp2.Children.Add('ODS', False, True, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('OBSERVATION', True, True, gtGroup);
          oGrp3.Children.Add('OBX', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('ORDER_TRAY', True, True, gtGroup);
      oGrp1.Children.Add('ORC', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('TIMING_TRAY', True, True, gtGroup);
        oGrp2.Children.Add('TQ1', False, False, gtSingle);
        oGrp2.Children.Add('TQ2', True, True, gtSingle);
      oGrp1.Children.Add('ODT', False, True, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('OMG_O19', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('OMG_O19', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', True, False, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp1.Children.Add('PD1', True, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp1.Children.Add('NK1', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATIENT_VISIT', True, False, gtGroup);
        oGrp2.Children.Add('PV1', False, False, gtSingle);
        oGrp2.Children.Add('PV2', True, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('INSURANCE', True, True, gtGroup);
        oGrp2.Children.Add('IN1', False, False, gtSingle);
        oGrp2.Children.Add('IN2', True, False, gtSingle);
        oGrp2.Children.Add('IN3', True, False, gtSingle);
      oGrp1.Children.Add('GT1', True, False, gtSingle);
      oGrp1.Children.Add('AL1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('ORDER', False, True, gtGroup);
      oGrp1.Children.Add('ORC', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('TIMING', True, True, gtGroup);
        oGrp2.Children.Add('TQ1', False, False, gtSingle);
        oGrp2.Children.Add('TQ2', True, True, gtSingle);
      oGrp1.Children.Add('OBR', False, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp1.Children.Add('ROL', True, True, gtSingle);
      oGrp1.Children.Add('CTD', True, False, gtSingle);
      oGrp1.Children.Add('DG1', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('OBSERVATION', True, True, gtGroup);
        oGrp2.Children.Add('OBX', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('SPECIMEN', True, True, gtGroup);
        oGrp2.Children.Add('SPM', False, False, gtSingle);
        oGrp2.Children.Add('OBX', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('CONTAINER', True, True, gtGroup);
          oGrp3.Children.Add('SAC', False, False, gtSingle);
          oGrp3.Children.Add('OBX', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PRIOR_RESULT', True, True, gtGroup);
        oGrp3 := oGrp2.Children.Add('PATIENT_PRIOR', True, False, gtGroup);
          oGrp3.Children.Add('PID', False, False, gtSingle);
          oGrp3.Children.Add('PD1', True, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('PATIENT_VISIT_PRIOR', True, False, gtGroup);
          oGrp3.Children.Add('PV1', False, False, gtSingle);
          oGrp3.Children.Add('PV2', True, False, gtSingle);
        oGrp2.Children.Add('AL1', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('ORDER_PRIOR', False, True, gtGroup);
          oGrp3.Children.Add('ORC', True, False, gtSingle);
          oGrp3.Children.Add('OBR', False, False, gtSingle);
          oGrp4 := oGrp3.Children.Add('TIMING_PRIOR', True, True, gtGroup);
            oGrp4.Children.Add('TQ1', False, False, gtSingle);
            oGrp4.Children.Add('TQ2', True, True, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
          oGrp3.Children.Add('ROL', True, True, gtSingle);
          oGrp3.Children.Add('CTD', True, False, gtSingle);
          oGrp4 := oGrp3.Children.Add('OBSERVATION_PRIOR', False, True, gtGroup);
            oGrp4.Children.Add('OBX', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
      oGrp1.Children.Add('FT1', True, True, gtSingle);
      oGrp1.Children.Add('CTI', True, True, gtSingle);
      oGrp1.Children.Add('BLG', True, False, gtSingle);
  oStructure := oStructures.Add('OMI_O23', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('OMI_O23', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', True, False, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp1.Children.Add('PD1', True, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATIENT_VISIT', True, False, gtGroup);
        oGrp2.Children.Add('PV1', False, False, gtSingle);
        oGrp2.Children.Add('PV2', True, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('INSURANCE', True, True, gtGroup);
        oGrp2.Children.Add('IN1', False, False, gtSingle);
        oGrp2.Children.Add('IN2', True, False, gtSingle);
        oGrp2.Children.Add('IN3', True, False, gtSingle);
      oGrp1.Children.Add('GT1', True, False, gtSingle);
      oGrp1.Children.Add('AL1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('ORDER', False, True, gtGroup);
      oGrp1.Children.Add('ORC', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('TIMING', True, True, gtGroup);
        oGrp2.Children.Add('TQ1', False, False, gtSingle);
        oGrp2.Children.Add('TQ2', True, True, gtSingle);
      oGrp1.Children.Add('OBR', False, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp1.Children.Add('ROL', True, True, gtSingle);
      oGrp1.Children.Add('CTD', True, False, gtSingle);
      oGrp1.Children.Add('DG1', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('OBSERVATION', True, True, gtGroup);
        oGrp2.Children.Add('OBX', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
      oGrp1.Children.Add('IPC', False, True, gtSingle);
  oStructure := oStructures.Add('OML_O21', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('OML_O21', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', True, False, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp1.Children.Add('PD1', True, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp1.Children.Add('NK1', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATIENT_VISIT', True, False, gtGroup);
        oGrp2.Children.Add('PV1', False, False, gtSingle);
        oGrp2.Children.Add('PV2', True, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('INSURANCE', True, True, gtGroup);
        oGrp2.Children.Add('IN1', False, False, gtSingle);
        oGrp2.Children.Add('IN2', True, False, gtSingle);
        oGrp2.Children.Add('IN3', True, False, gtSingle);
      oGrp1.Children.Add('GT1', True, False, gtSingle);
      oGrp1.Children.Add('AL1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('ORDER', False, True, gtGroup);
      oGrp1.Children.Add('ORC', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('TIMING', True, True, gtGroup);
        oGrp2.Children.Add('TQ1', False, False, gtSingle);
        oGrp2.Children.Add('TQ2', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('OBSERVATION_REQUEST', True, False, gtGroup);
        oGrp2.Children.Add('OBR', False, False, gtSingle);
        oGrp2.Children.Add('TCD', True, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
        oGrp2.Children.Add('ROL', True, True, gtSingle);
        oGrp2.Children.Add('CTD', True, False, gtSingle);
        oGrp2.Children.Add('DG1', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('OBSERVATION', True, True, gtGroup);
          oGrp3.Children.Add('OBX', False, False, gtSingle);
          oGrp3.Children.Add('TCD', True, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('SPECIMEN', True, True, gtGroup);
          oGrp3.Children.Add('SPM', False, False, gtSingle);
          oGrp3.Children.Add('OBX', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('CONTAINER', True, True, gtGroup);
            oGrp4.Children.Add('SAC', False, False, gtSingle);
            oGrp4.Children.Add('OBX', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('PRIOR_RESULT', True, True, gtGroup);
          oGrp4 := oGrp3.Children.Add('PATIENT_PRIOR', True, False, gtGroup);
            oGrp4.Children.Add('PID', False, False, gtSingle);
            oGrp4.Children.Add('PD1', True, False, gtSingle);
          oGrp4 := oGrp3.Children.Add('PATIENT_VISIT_PRIOR', True, False, gtGroup);
            oGrp4.Children.Add('PV1', False, False, gtSingle);
            oGrp4.Children.Add('PV2', True, False, gtSingle);
          oGrp3.Children.Add('AL1', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('ORDER_PRIOR', False, True, gtGroup);
            oGrp4.Children.Add('ORC', True, False, gtSingle);
            oGrp4.Children.Add('OBR', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
            oGrp4.Children.Add('ROL', True, True, gtSingle);
            oGrp5 := oGrp4.Children.Add('TIMING_PRIOR', True, True, gtGroup);
              oGrp5.Children.Add('TQ1', False, False, gtSingle);
              oGrp5.Children.Add('TQ2', True, True, gtSingle);
            oGrp5 := oGrp4.Children.Add('OBSERVATION_PRIOR', False, True, gtGroup);
              oGrp5.Children.Add('OBX', False, False, gtSingle);
              oGrp5.Children.Add('NTE', True, True, gtSingle);
      oGrp1.Children.Add('FT1', True, True, gtSingle);
      oGrp1.Children.Add('CTI', True, True, gtSingle);
      oGrp1.Children.Add('BLG', True, False, gtSingle);
  oStructure := oStructures.Add('OML_O33', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('OML_O33', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', True, False, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp1.Children.Add('PD1', True, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp1.Children.Add('NK1', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATIENT_VISIT', True, False, gtGroup);
        oGrp2.Children.Add('PV1', False, False, gtSingle);
        oGrp2.Children.Add('PV2', True, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('INSURANCE', True, True, gtGroup);
        oGrp2.Children.Add('IN1', False, False, gtSingle);
        oGrp2.Children.Add('IN2', True, False, gtSingle);
        oGrp2.Children.Add('IN3', True, False, gtSingle);
      oGrp1.Children.Add('GT1', True, False, gtSingle);
      oGrp1.Children.Add('AL1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('SPECIMEN', False, True, gtGroup);
      oGrp1.Children.Add('SPM', False, False, gtSingle);
      oGrp1.Children.Add('OBX', True, True, gtSingle);
      oGrp1.Children.Add('SAC', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER', False, True, gtGroup);
        oGrp2.Children.Add('ORC', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('TIMING', True, True, gtGroup);
          oGrp3.Children.Add('TQ1', False, False, gtSingle);
          oGrp3.Children.Add('TQ2', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('OBSERVATION_REQUEST', True, False, gtGroup);
          oGrp3.Children.Add('OBR', False, False, gtSingle);
          oGrp3.Children.Add('TCD', True, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
          oGrp3.Children.Add('ROL', True, True, gtSingle);
          oGrp3.Children.Add('DG1', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('OBSERVATION', True, True, gtGroup);
            oGrp4.Children.Add('OBX', False, False, gtSingle);
            oGrp4.Children.Add('TCD', True, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('PRIOR_RESULT', True, True, gtGroup);
            oGrp5 := oGrp4.Children.Add('PATIENT_PRIOR', True, False, gtGroup);
              oGrp5.Children.Add('PID', False, False, gtSingle);
              oGrp5.Children.Add('PD1', True, False, gtSingle);
            oGrp5 := oGrp4.Children.Add('PATIENT_VISIT_PRIOR', True, False, gtGroup);
              oGrp5.Children.Add('PV1', False, False, gtSingle);
              oGrp5.Children.Add('PV2', True, False, gtSingle);
            oGrp4.Children.Add('AL1', True, True, gtSingle);
            oGrp5 := oGrp4.Children.Add('ORDER_PRIOR', False, True, gtGroup);
              oGrp5.Children.Add('ORC', True, False, gtSingle);
              oGrp5.Children.Add('OBR', False, False, gtSingle);
              oGrp5.Children.Add('NTE', True, True, gtSingle);
              oGrp5.Children.Add('ROL', True, True, gtSingle);
              oGrp6 := oGrp5.Children.Add('TIMING_PRIOR', True, True, gtGroup);
                oGrp6.Children.Add('TQ1', False, False, gtSingle);
                oGrp6.Children.Add('TQ2', True, True, gtSingle);
              oGrp6 := oGrp5.Children.Add('OBSERVATION_PRIOR', False, True, gtGroup);
                oGrp6.Children.Add('OBX', False, False, gtSingle);
                oGrp6.Children.Add('NTE', True, True, gtSingle);
        oGrp2.Children.Add('FT1', True, True, gtSingle);
        oGrp2.Children.Add('CTI', True, True, gtSingle);
        oGrp2.Children.Add('BLG', True, False, gtSingle);
  oStructure := oStructures.Add('OML_O35', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('OML_O35', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', True, False, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp1.Children.Add('PD1', True, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp1.Children.Add('NK1', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATIENT_VISIT', True, False, gtGroup);
        oGrp2.Children.Add('PV1', False, False, gtSingle);
        oGrp2.Children.Add('PV2', True, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('INSURANCE', True, True, gtGroup);
        oGrp2.Children.Add('IN1', False, False, gtSingle);
        oGrp2.Children.Add('IN2', True, False, gtSingle);
        oGrp2.Children.Add('IN3', True, False, gtSingle);
      oGrp1.Children.Add('GT1', True, False, gtSingle);
      oGrp1.Children.Add('AL1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('SPECIMEN', False, True, gtGroup);
      oGrp1.Children.Add('SPM', False, False, gtSingle);
      oGrp1.Children.Add('OBX', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('SPECIMEN_CONTAINER', False, True, gtGroup);
        oGrp2.Children.Add('SAC', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('ORDER', False, True, gtGroup);
          oGrp3.Children.Add('ORC', False, False, gtSingle);
          oGrp4 := oGrp3.Children.Add('TIMING', True, True, gtGroup);
            oGrp4.Children.Add('TQ1', False, False, gtSingle);
            oGrp4.Children.Add('TQ2', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('OBSERVATION_REQUEST', True, False, gtGroup);
            oGrp4.Children.Add('OBR', False, False, gtSingle);
            oGrp4.Children.Add('TCD', True, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
            oGrp4.Children.Add('ROL', True, True, gtSingle);
            oGrp4.Children.Add('DG1', True, True, gtSingle);
            oGrp5 := oGrp4.Children.Add('OBSERVATION', True, True, gtGroup);
              oGrp5.Children.Add('OBX', False, False, gtSingle);
              oGrp5.Children.Add('TCD', True, False, gtSingle);
              oGrp5.Children.Add('NTE', True, True, gtSingle);
            oGrp5 := oGrp4.Children.Add('PRIOR_RESULT', True, True, gtGroup);
              oGrp6 := oGrp5.Children.Add('PATIENT_PRIOR', True, False, gtGroup);
                oGrp6.Children.Add('PID', False, False, gtSingle);
                oGrp6.Children.Add('PD1', True, False, gtSingle);
              oGrp6 := oGrp5.Children.Add('PATIENT_VISIT_PRIOR', True, False, gtGroup);
                oGrp6.Children.Add('PV1', False, False, gtSingle);
                oGrp6.Children.Add('PV2', True, False, gtSingle);
              oGrp5.Children.Add('AL1', True, True, gtSingle);
              oGrp6 := oGrp5.Children.Add('ORDER_PRIOR', False, True, gtGroup);
                oGrp6.Children.Add('ORC', True, False, gtSingle);
                oGrp6.Children.Add('OBR', False, False, gtSingle);
                oGrp6.Children.Add('NTE', True, True, gtSingle);
                oGrp6.Children.Add('ROL', True, True, gtSingle);
                oGrp7 := oGrp6.Children.Add('TIMING_PRIOR', True, True, gtGroup);
                  oGrp7.Children.Add('TQ1', False, False, gtSingle);
                  oGrp7.Children.Add('TQ2', True, True, gtSingle);
                oGrp7 := oGrp6.Children.Add('OBSERVATION_PRIOR', False, True, gtGroup);
                  oGrp7.Children.Add('OBX', False, False, gtSingle);
                  oGrp7.Children.Add('NTE', True, True, gtSingle);
          oGrp3.Children.Add('FT1', True, True, gtSingle);
          oGrp3.Children.Add('CTI', True, True, gtSingle);
          oGrp3.Children.Add('BLG', True, False, gtSingle);
  oStructure := oStructures.Add('OMN_O07', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('OMN_O07', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', True, False, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp1.Children.Add('PD1', True, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATIENT_VISIT', True, False, gtGroup);
        oGrp2.Children.Add('PV1', False, False, gtSingle);
        oGrp2.Children.Add('PV2', True, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('INSURANCE', True, True, gtGroup);
        oGrp2.Children.Add('IN1', False, False, gtSingle);
        oGrp2.Children.Add('IN2', True, False, gtSingle);
        oGrp2.Children.Add('IN3', True, False, gtSingle);
      oGrp1.Children.Add('GT1', True, False, gtSingle);
      oGrp1.Children.Add('AL1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('ORDER', False, True, gtGroup);
      oGrp1.Children.Add('ORC', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('TIMING', True, True, gtGroup);
        oGrp2.Children.Add('TQ1', False, False, gtSingle);
        oGrp2.Children.Add('TQ2', True, True, gtSingle);
      oGrp1.Children.Add('RQD', False, False, gtSingle);
      oGrp1.Children.Add('RQ1', True, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('OBSERVATION', True, True, gtGroup);
        oGrp2.Children.Add('OBX', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
      oGrp1.Children.Add('BLG', True, False, gtSingle);
  oStructure := oStructures.Add('OMP_O09', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('OMP_O09', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', True, False, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp1.Children.Add('PD1', True, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATIENT_VISIT', True, False, gtGroup);
        oGrp2.Children.Add('PV1', False, False, gtSingle);
        oGrp2.Children.Add('PV2', True, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('INSURANCE', True, True, gtGroup);
        oGrp2.Children.Add('IN1', False, False, gtSingle);
        oGrp2.Children.Add('IN2', True, False, gtSingle);
        oGrp2.Children.Add('IN3', True, False, gtSingle);
      oGrp1.Children.Add('GT1', True, False, gtSingle);
      oGrp1.Children.Add('AL1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('ORDER', False, True, gtGroup);
      oGrp1.Children.Add('ORC', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('TIMING', True, True, gtGroup);
        oGrp2.Children.Add('TQ1', False, False, gtSingle);
        oGrp2.Children.Add('TQ2', True, True, gtSingle);
      oGrp1.Children.Add('RXO', False, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp1.Children.Add('RXR', False, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('COMPONENT', True, True, gtGroup);
        oGrp2.Children.Add('RXC', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('OBSERVATION', True, True, gtGroup);
        oGrp2.Children.Add('OBX', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
      oGrp1.Children.Add('FT1', True, True, gtSingle);
      oGrp1.Children.Add('BLG', True, False, gtSingle);
  oStructure := oStructures.Add('OMS_O05', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('OMS_O05', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', True, False, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp1.Children.Add('PD1', True, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATIENT_VISIT', True, False, gtGroup);
        oGrp2.Children.Add('PV1', False, False, gtSingle);
        oGrp2.Children.Add('PV2', True, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('INSURANCE', True, True, gtGroup);
        oGrp2.Children.Add('IN1', False, False, gtSingle);
        oGrp2.Children.Add('IN2', True, False, gtSingle);
        oGrp2.Children.Add('IN3', True, False, gtSingle);
      oGrp1.Children.Add('GT1', True, False, gtSingle);
      oGrp1.Children.Add('AL1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('ORDER', False, True, gtGroup);
      oGrp1.Children.Add('ORC', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('TIMING', True, True, gtGroup);
        oGrp2.Children.Add('TQ1', False, False, gtSingle);
        oGrp2.Children.Add('TQ2', True, True, gtSingle);
      oGrp1.Children.Add('RQD', False, False, gtSingle);
      oGrp1.Children.Add('RQ1', True, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('OBSERVATION', True, True, gtGroup);
        oGrp2.Children.Add('OBX', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
      oGrp1.Children.Add('BLG', True, False, gtSingle);
  oStructure := oStructures.Add('OPL_O37', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('OPL_O37', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('ROL', False, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('GUARANTOR', True, False, gtGroup);
      oGrp1.Children.Add('GT1', False, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('ORDER', False, True, gtGroup);
      oGrp1.Children.Add('NK1', False, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATIENT', True, False, gtGroup);
        oGrp2.Children.Add('PID', False, False, gtSingle);
        oGrp2.Children.Add('PD1', True, False, gtSingle);
        oGrp2.Children.Add('OBX', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('INSURANCE', True, True, gtGroup);
          oGrp3.Children.Add('IN1', False, False, gtSingle);
          oGrp3.Children.Add('IN2', True, False, gtSingle);
          oGrp3.Children.Add('IN3', True, False, gtSingle);
        oGrp2.Children.Add('AL1', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('SPECIMEN', False, True, gtGroup);
        oGrp2.Children.Add('SPM', False, False, gtSingle);
        oGrp2.Children.Add('OBX', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('CONTAINER', True, True, gtGroup);
          oGrp3.Children.Add('SAC', False, False, gtSingle);
          oGrp3.Children.Add('OBX', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('OBSERVATION_REQUEST', False, True, gtGroup);
          oGrp3.Children.Add('ORC', False, False, gtSingle);
          oGrp3.Children.Add('OBR', False, False, gtSingle);
          oGrp3.Children.Add('ROL', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('TIMING', True, True, gtGroup);
            oGrp4.Children.Add('TQ1', False, False, gtSingle);
            oGrp4.Children.Add('TQ2', True, True, gtSingle);
          oGrp3.Children.Add('TCD', True, False, gtSingle);
          oGrp3.Children.Add('DG1', True, True, gtSingle);
          oGrp3.Children.Add('OBX', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PRIOR_RESULT', True, False, gtGroup);
        oGrp2.Children.Add('NK1', False, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('PATIENT_PRIOR', True, False, gtGroup);
          oGrp3.Children.Add('PID', False, False, gtSingle);
          oGrp3.Children.Add('PD1', True, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('PATIENT_VISIT_PRIOR', True, False, gtGroup);
          oGrp3.Children.Add('PV1', False, False, gtSingle);
          oGrp3.Children.Add('PV2', True, False, gtSingle);
        oGrp2.Children.Add('AL1', True, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('ORDER_PRIOR', False, True, gtGroup);
          oGrp3.Children.Add('OBR', False, False, gtSingle);
          oGrp3.Children.Add('ORC', True, False, gtSingle);
          oGrp3.Children.Add('ROL', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('TIMING', True, False, gtGroup);
            oGrp4.Children.Add('TQ1', False, False, gtSingle);
            oGrp4.Children.Add('TQ2', True, True, gtSingle);
          oGrp3.Children.Add('OBX', False, True, gtSingle);
      oGrp1.Children.Add('FT1', True, True, gtSingle);
      oGrp1.Children.Add('CTI', True, True, gtSingle);
      oGrp1.Children.Add('BLG', True, False, gtSingle);
  oStructure := oStructures.Add('OPR_O38', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('OPR_O38', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('RESPONSE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('ORDER', False, True, gtGroup);
        oGrp2.Children.Add('NK1', False, True, gtSingle);
        oGrp2.Children.Add('PID', True, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('SPECIMEN', True, True, gtGroup);
          oGrp3.Children.Add('SPM', False, False, gtSingle);
          oGrp3.Children.Add('OBX', True, True, gtSingle);
          oGrp3.Children.Add('SAC', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('OBSERVATION_REQUEST', True, True, gtGroup);
            oGrp4.Children.Add('ORC', False, False, gtSingle);
            oGrp4.Children.Add('OBR', False, False, gtSingle);
            oGrp4.Children.Add('ROL', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('TIMING', True, True, gtGroup);
            oGrp4.Children.Add('TQ1', False, False, gtSingle);
            oGrp4.Children.Add('TQ2', True, True, gtSingle);
  oStructure := oStructures.Add('OPU_R25', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('OPU_R25', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('OBX', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('ROL', False, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('ACCESSION_DETAIL', False, True, gtGroup);
      oGrp1.Children.Add('NK1', False, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATIENT', True, False, gtGroup);
        oGrp2.Children.Add('PID', False, False, gtSingle);
        oGrp2.Children.Add('PD1', True, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('PATIENT_OBSERVATION', True, True, gtGroup);
          oGrp3.Children.Add('OBX', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('SPECIMEN', False, True, gtGroup);
        oGrp2.Children.Add('SPM', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('SPECIMEN_OBSERVATION', True, True, gtGroup);
          oGrp3.Children.Add('OBX', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('CONTAINER', True, True, gtGroup);
          oGrp3.Children.Add('SAC', False, False, gtSingle);
          oGrp3.Children.Add('INV', True, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('ORDER', False, True, gtGroup);
          oGrp3.Children.Add('OBR', False, False, gtSingle);
          oGrp3.Children.Add('ORC', True, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
          oGrp3.Children.Add('ROL', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('TIMING_QTY', True, True, gtGroup);
            oGrp4.Children.Add('TQ1', False, False, gtSingle);
            oGrp4.Children.Add('TQ2', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('RESULT', False, True, gtGroup);
            oGrp4.Children.Add('OBX', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('ORB_O28', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ORB_O28', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('RESPONSE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('PATIENT', True, False, gtGroup);
        oGrp2.Children.Add('PID', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('ORDER', True, True, gtGroup);
          oGrp3.Children.Add('ORC', False, False, gtSingle);
          oGrp4 := oGrp3.Children.Add('TIMING', True, True, gtGroup);
            oGrp4.Children.Add('TQ1', False, False, gtSingle);
            oGrp4.Children.Add('TQ2', True, True, gtSingle);
          oGrp3.Children.Add('BPO', True, False, gtSingle);
  oStructure := oStructures.Add('ORD_O04', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ORD_O04', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('RESPONSE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('PATIENT', True, False, gtGroup);
        oGrp2.Children.Add('PID', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER_DIET', False, True, gtGroup);
        oGrp2.Children.Add('ORC', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('TIMING_DIET', True, True, gtGroup);
          oGrp3.Children.Add('TQ1', False, False, gtSingle);
          oGrp3.Children.Add('TQ2', True, True, gtSingle);
        oGrp2.Children.Add('ODS', True, True, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER_TRAY', True, True, gtGroup);
        oGrp2.Children.Add('ORC', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('TIMING_TRAY', True, True, gtGroup);
          oGrp3.Children.Add('TQ1', False, False, gtSingle);
          oGrp3.Children.Add('TQ2', True, True, gtSingle);
        oGrp2.Children.Add('ODT', True, True, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('ORF_R04', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ORF_R04', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRF', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('QUERY_RESPONSE', False, True, gtGroup);
      oGrp2 := oGrp1.Children.Add('PATIENT', True, False, gtGroup);
        oGrp2.Children.Add('PID', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
        oGrp2.Children.Add('OBX', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER', False, True, gtGroup);
        oGrp2.Children.Add('ORC', True, False, gtSingle);
        oGrp2.Children.Add('OBR', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
        oGrp2.Children.Add('ROL', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('TIMING_QTY', True, True, gtGroup);
          oGrp3.Children.Add('TQ1', False, False, gtSingle);
          oGrp3.Children.Add('TQ2', True, True, gtSingle);
        oGrp2.Children.Add('CTD', True, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('OBSERVATION', False, True, gtGroup);
          oGrp3.Children.Add('OBX', True, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
        oGrp2.Children.Add('CTI', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('QAK', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('ORG_O20', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ORG_O20', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('RESPONSE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('PATIENT', True, False, gtGroup);
        oGrp2.Children.Add('PID', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER', False, True, gtGroup);
        oGrp2.Children.Add('ORC', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('TIMING', True, True, gtGroup);
          oGrp3.Children.Add('TQ1', False, False, gtSingle);
          oGrp3.Children.Add('TQ2', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('OBSERVATION_GROUP', True, False, gtGroup);
          oGrp3.Children.Add('OBR', False, False, gtSingle);
          oGrp3.Children.Add('ROL', True, True, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
        oGrp2.Children.Add('CTI', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('SPECIMEN', True, True, gtGroup);
          oGrp3.Children.Add('SPM', False, False, gtSingle);
          oGrp3.Children.Add('SAC', True, True, gtSingle);
  oStructure := oStructures.Add('ORI_O24', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ORI_O24', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('RESPONSE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('PATIENT', True, False, gtGroup);
        oGrp2.Children.Add('PID', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER', False, True, gtGroup);
        oGrp2.Children.Add('ORC', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('TIMING', True, True, gtGroup);
          oGrp3.Children.Add('TQ1', False, False, gtSingle);
          oGrp3.Children.Add('TQ2', True, True, gtSingle);
        oGrp2.Children.Add('OBR', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
        oGrp2.Children.Add('ROL', True, True, gtSingle);
        oGrp2.Children.Add('IPC', False, True, gtSingle);
  oStructure := oStructures.Add('ORL_O22', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ORL_O22', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('RESPONSE', True, False, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER', True, True, gtGroup);
        oGrp2.Children.Add('ORC', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('TIMING', True, True, gtGroup);
          oGrp3.Children.Add('TQ1', False, False, gtSingle);
          oGrp3.Children.Add('TQ2', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('OBSERVATION_REQUEST', True, False, gtGroup);
          oGrp3.Children.Add('OBR', False, False, gtSingle);
          oGrp3.Children.Add('ROL', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('SPECIMEN', True, True, gtGroup);
            oGrp4.Children.Add('SPM', False, False, gtSingle);
            oGrp4.Children.Add('SAC', True, True, gtSingle);
  oStructure := oStructures.Add('ORL_O34', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ORL_O34', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('RESPONSE', True, False, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('SPECIMEN', False, True, gtGroup);
        oGrp2.Children.Add('SPM', False, False, gtSingle);
        oGrp2.Children.Add('OBX', True, True, gtSingle);
        oGrp2.Children.Add('SAC', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('ORDER', True, True, gtGroup);
          oGrp3.Children.Add('ORC', False, False, gtSingle);
          oGrp4 := oGrp3.Children.Add('TIMING', True, True, gtGroup);
            oGrp4.Children.Add('TQ1', False, False, gtSingle);
            oGrp4.Children.Add('TQ2', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('OBSERVATION_REQUEST', True, False, gtGroup);
            oGrp4.Children.Add('OBR', False, False, gtSingle);
            oGrp4.Children.Add('ROL', True, True, gtSingle);
  oStructure := oStructures.Add('ORL_O36', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ORL_O36', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('RESPONSE', True, False, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('SPECIMEN', False, True, gtGroup);
        oGrp2.Children.Add('SPM', False, False, gtSingle);
        oGrp2.Children.Add('OBX', True, True, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('SPECIMEN_CONTAINER', False, True, gtGroup);
          oGrp3.Children.Add('SAC', False, False, gtSingle);
          oGrp4 := oGrp3.Children.Add('ORDER', True, True, gtGroup);
            oGrp4.Children.Add('ORC', False, False, gtSingle);
            oGrp5 := oGrp4.Children.Add('TIMING', True, True, gtGroup);
              oGrp5.Children.Add('TQ1', False, False, gtSingle);
              oGrp5.Children.Add('TQ2', True, True, gtSingle);
            oGrp5 := oGrp4.Children.Add('OBSERVATION_REQUEST', True, False, gtGroup);
              oGrp5.Children.Add('OBR', False, False, gtSingle);
              oGrp5.Children.Add('ROL', True, True, gtSingle);
  oStructure := oStructures.Add('ORM_O01', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ORM_O01', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', True, False, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp1.Children.Add('PD1', True, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATIENT_VISIT', True, False, gtGroup);
        oGrp2.Children.Add('PV1', False, False, gtSingle);
        oGrp2.Children.Add('PV2', True, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('INSURANCE', True, True, gtGroup);
        oGrp2.Children.Add('IN1', False, False, gtSingle);
        oGrp2.Children.Add('IN2', True, False, gtSingle);
        oGrp2.Children.Add('IN3', True, False, gtSingle);
      oGrp1.Children.Add('GT1', True, False, gtSingle);
      oGrp1.Children.Add('AL1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('ORDER', False, True, gtGroup);
      oGrp1.Children.Add('ORC', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER_DETAIL', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('CHOICE', False, True, gtChoice);
          oGrp3.Children.Add('OBR', False, False, gtSingle);
          oGrp3.Children.Add('RQD', False, False, gtSingle);
          oGrp3.Children.Add('RQ1', False, False, gtSingle);
          oGrp3.Children.Add('RXO', False, False, gtSingle);
          oGrp3.Children.Add('ODS', False, False, gtSingle);
          oGrp3.Children.Add('ODT', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
        oGrp2.Children.Add('CTD', True, False, gtSingle);
        oGrp2.Children.Add('DG1', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('OBSERVATION', True, True, gtGroup);
          oGrp3.Children.Add('OBX', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp1.Children.Add('FT1', True, True, gtSingle);
      oGrp1.Children.Add('CTI', True, True, gtSingle);
      oGrp1.Children.Add('BLG', True, False, gtSingle);
  oStructure := oStructures.Add('ORN_O08', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ORN_O08', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('RESPONSE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('PATIENT', True, False, gtGroup);
        oGrp2.Children.Add('PID', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER', False, True, gtGroup);
        oGrp2.Children.Add('ORC', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('TIMING', True, True, gtGroup);
          oGrp3.Children.Add('TQ1', False, False, gtSingle);
          oGrp3.Children.Add('TQ2', True, True, gtSingle);
        oGrp2.Children.Add('RQD', False, False, gtSingle);
        oGrp2.Children.Add('RQ1', True, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('ORP_O10', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ORP_O10', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('RESPONSE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('PATIENT', True, False, gtGroup);
        oGrp2.Children.Add('PID', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER', False, True, gtGroup);
        oGrp2.Children.Add('ORC', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('TIMING', True, True, gtGroup);
          oGrp3.Children.Add('TQ1', False, False, gtSingle);
          oGrp3.Children.Add('TQ2', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('ORDER_DETAIL', True, False, gtGroup);
          oGrp3.Children.Add('RXO', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
          oGrp3.Children.Add('RXR', False, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('COMPONENT', True, True, gtGroup);
            oGrp4.Children.Add('RXC', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('ORR_O02', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ORR_O02', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('RESPONSE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('PATIENT', True, False, gtGroup);
        oGrp2.Children.Add('PID', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER', False, True, gtGroup);
        oGrp2.Children.Add('ORC', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('CHOICE', False, True, gtChoice);
          oGrp3.Children.Add('OBR', False, False, gtSingle);
          oGrp3.Children.Add('RQD', False, False, gtSingle);
          oGrp3.Children.Add('RQ1', False, False, gtSingle);
          oGrp3.Children.Add('RXO', False, False, gtSingle);
          oGrp3.Children.Add('ODS', False, False, gtSingle);
          oGrp3.Children.Add('ODT', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
        oGrp2.Children.Add('CTI', True, True, gtSingle);
  oStructure := oStructures.Add('ORS_O06', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ORS_O06', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('RESPONSE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('PATIENT', True, False, gtGroup);
        oGrp2.Children.Add('PID', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER', False, True, gtGroup);
        oGrp2.Children.Add('ORC', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('TIMING', True, True, gtGroup);
          oGrp3.Children.Add('TQ1', False, False, gtSingle);
          oGrp3.Children.Add('TQ2', True, True, gtSingle);
        oGrp2.Children.Add('RQD', False, False, gtSingle);
        oGrp2.Children.Add('RQ1', True, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('ORU_R01', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ORU_R01', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT_RESULT', False, True, gtGroup);
      oGrp2 := oGrp1.Children.Add('PATIENT', True, False, gtGroup);
        oGrp2.Children.Add('PID', False, False, gtSingle);
        oGrp2.Children.Add('PD1', True, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
        oGrp2.Children.Add('NK1', True, True, gtSingle);
        oGrp2.Children.Add('OBX', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('VISIT', True, False, gtGroup);
          oGrp3.Children.Add('PV1', False, False, gtSingle);
          oGrp3.Children.Add('PV2', True, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER_OBSERVATION', False, True, gtGroup);
        oGrp2.Children.Add('ORC', True, False, gtSingle);
        oGrp2.Children.Add('OBR', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
        oGrp2.Children.Add('ROL', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('TIMING_QTY', True, True, gtGroup);
          oGrp3.Children.Add('TQ1', False, False, gtSingle);
          oGrp3.Children.Add('TQ2', True, True, gtSingle);
        oGrp2.Children.Add('CTD', True, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('OBSERVATION', True, True, gtGroup);
          oGrp3.Children.Add('OBX', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
        oGrp2.Children.Add('FT1', True, True, gtSingle);
        oGrp2.Children.Add('CTI', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('SPECIMEN', True, True, gtGroup);
          oGrp3.Children.Add('SPM', False, False, gtSingle);
          oGrp3.Children.Add('OBX', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('ORU_R30', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ORU_R30', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('OBX', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('VISIT', True, False, gtGroup);
      oGrp1.Children.Add('PV1', False, False, gtSingle);
      oGrp1.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ORC', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('OBR', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('ROL', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('TIMING_QTY', True, True, gtGroup);
      oGrp1.Children.Add('TQ1', False, False, gtSingle);
      oGrp1.Children.Add('TQ2', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('OBSERVATION', False, True, gtGroup);
      oGrp1.Children.Add('OBX', False, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('OSQ_Q06', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('OSQ_Q06', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRF', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('OSR_Q06', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('OSR_Q06', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRF', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('RESPONSE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('PATIENT', True, False, gtGroup);
        oGrp2.Children.Add('PID', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER', False, True, gtGroup);
        oGrp2.Children.Add('ORC', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('TIMING', True, True, gtGroup);
          oGrp3.Children.Add('TQ1', False, False, gtSingle);
          oGrp3.Children.Add('TQ2', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('CHOICE', False, True, gtChoice);
          oGrp3.Children.Add('OBR', False, False, gtSingle);
          oGrp3.Children.Add('RQD', False, False, gtSingle);
          oGrp3.Children.Add('RQ1', False, False, gtSingle);
          oGrp3.Children.Add('RXO', False, False, gtSingle);
          oGrp3.Children.Add('ODS', False, False, gtSingle);
          oGrp3.Children.Add('ODT', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
        oGrp2.Children.Add('CTI', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('OUL_R21', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('OUL_R21', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', True, False, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp1.Children.Add('PD1', True, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('VISIT', True, False, gtGroup);
        oGrp2.Children.Add('PV1', False, False, gtSingle);
        oGrp2.Children.Add('PV2', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('ORDER_OBSERVATION', False, True, gtGroup);
      oGrp2 := oGrp1.Children.Add('CONTAINER', True, False, gtGroup);
        oGrp2.Children.Add('SAC', False, False, gtSingle);
        oGrp2.Children.Add('SID', True, False, gtSingle);
      oGrp1.Children.Add('ORC', True, False, gtSingle);
      oGrp1.Children.Add('OBR', False, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('TIMING_QTY', True, True, gtGroup);
        oGrp2.Children.Add('TQ1', False, False, gtSingle);
        oGrp2.Children.Add('TQ2', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('OBSERVATION', False, True, gtGroup);
        oGrp2.Children.Add('OBX', True, False, gtSingle);
        oGrp2.Children.Add('TCD', True, False, gtSingle);
        oGrp2.Children.Add('SID', True, True, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
      oGrp1.Children.Add('CTI', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('OUL_R22', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('OUL_R22', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', True, False, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp1.Children.Add('PD1', True, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp1.Children.Add('OBX', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('VISIT', True, False, gtGroup);
        oGrp2.Children.Add('PV1', False, False, gtSingle);
        oGrp2.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NK1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('SPECIMEN', False, True, gtGroup);
      oGrp1.Children.Add('SPM', False, False, gtSingle);
      oGrp1.Children.Add('OBX', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('CONTAINER', True, True, gtGroup);
        oGrp2.Children.Add('SAC', False, False, gtSingle);
        oGrp2.Children.Add('INV', True, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER', False, True, gtGroup);
        oGrp2.Children.Add('OBR', False, False, gtSingle);
        oGrp2.Children.Add('ORC', True, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
        oGrp2.Children.Add('ROL', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('TIMING_QTY', True, True, gtGroup);
          oGrp3.Children.Add('TQ1', False, False, gtSingle);
          oGrp3.Children.Add('TQ2', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('RESULT', True, True, gtGroup);
          oGrp3.Children.Add('OBX', False, False, gtSingle);
          oGrp3.Children.Add('TCD', True, False, gtSingle);
          oGrp3.Children.Add('SID', True, True, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
        oGrp2.Children.Add('CTI', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('OUL_R23', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('OUL_R23', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', True, False, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp1.Children.Add('PD1', True, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp1.Children.Add('OBX', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('VISIT', True, False, gtGroup);
        oGrp2.Children.Add('PV1', False, False, gtSingle);
        oGrp2.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NK1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('SPECIMEN', False, True, gtGroup);
      oGrp1.Children.Add('SPM', False, False, gtSingle);
      oGrp1.Children.Add('OBX', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('CONTAINER', False, True, gtGroup);
        oGrp2.Children.Add('SAC', False, False, gtSingle);
        oGrp2.Children.Add('INV', True, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('ORDER', False, True, gtGroup);
          oGrp3.Children.Add('OBR', False, False, gtSingle);
          oGrp3.Children.Add('ORC', True, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
          oGrp3.Children.Add('ROL', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('TIMING_QTY', True, True, gtGroup);
            oGrp4.Children.Add('TQ1', False, False, gtSingle);
            oGrp4.Children.Add('TQ2', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('RESULT', True, True, gtGroup);
            oGrp4.Children.Add('OBX', False, False, gtSingle);
            oGrp4.Children.Add('TCD', True, False, gtSingle);
            oGrp4.Children.Add('SID', True, True, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
          oGrp3.Children.Add('CTI', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('OUL_R24', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('OUL_R24', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', True, False, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp1.Children.Add('PD1', True, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp1.Children.Add('OBX', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('VISIT', True, False, gtGroup);
        oGrp2.Children.Add('PV1', False, False, gtSingle);
        oGrp2.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NK1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('ORDER', False, True, gtGroup);
      oGrp1.Children.Add('OBR', False, False, gtSingle);
      oGrp1.Children.Add('ORC', True, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp1.Children.Add('ROL', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('TIMING_QTY', True, True, gtGroup);
        oGrp2.Children.Add('TQ1', False, False, gtSingle);
        oGrp2.Children.Add('TQ2', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('SPECIMEN', True, True, gtGroup);
        oGrp2.Children.Add('SPM', False, False, gtSingle);
        oGrp2.Children.Add('OBX', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('CONTAINER', True, True, gtGroup);
          oGrp3.Children.Add('SAC', False, False, gtSingle);
          oGrp3.Children.Add('INV', True, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('RESULT', True, True, gtGroup);
        oGrp2.Children.Add('OBX', False, False, gtSingle);
        oGrp2.Children.Add('TCD', True, False, gtSingle);
        oGrp2.Children.Add('SID', True, True, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
      oGrp1.Children.Add('CTI', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('PEX_P07', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('PEX_P07', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('VISIT', True, False, gtGroup);
      oGrp1.Children.Add('PV1', False, False, gtSingle);
      oGrp1.Children.Add('PV2', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('EXPERIENCE', False, True, gtGroup);
      oGrp1.Children.Add('PES', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('PEX_OBSERVATION', False, True, gtGroup);
        oGrp2.Children.Add('PEO', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('PEX_CAUSE', False, True, gtGroup);
          oGrp3.Children.Add('PCR', False, False, gtSingle);
          oGrp4 := oGrp3.Children.Add('RX_ORDER', True, False, gtGroup);
            oGrp4.Children.Add('RXE', False, False, gtSingle);
            oGrp5 := oGrp4.Children.Add('TIMING_QTY', False, True, gtGroup);
              oGrp5.Children.Add('TQ1', False, False, gtSingle);
              oGrp5.Children.Add('TQ2', True, True, gtSingle);
            oGrp4.Children.Add('RXR', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('RX_ADMINISTRATION', True, True, gtGroup);
            oGrp4.Children.Add('RXA', False, False, gtSingle);
            oGrp4.Children.Add('RXR', True, False, gtSingle);
          oGrp3.Children.Add('PRB', True, True, gtSingle);
          oGrp3.Children.Add('OBX', True, True, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('ASSOCIATED_PERSON', True, False, gtGroup);
            oGrp4.Children.Add('NK1', False, False, gtSingle);
            oGrp5 := oGrp4.Children.Add('ASSOCIATED_RX_ORDER', True, False, gtGroup);
              oGrp5.Children.Add('RXE', False, False, gtSingle);
              oGrp6 := oGrp5.Children.Add('NK1_TIMING_QTY', False, True, gtGroup);
                oGrp6.Children.Add('TQ1', False, False, gtSingle);
                oGrp6.Children.Add('TQ2', True, True, gtSingle);
              oGrp5.Children.Add('RXR', True, True, gtSingle);
            oGrp5 := oGrp4.Children.Add('ASSOCIATED_RX_ADMIN', True, True, gtGroup);
              oGrp5.Children.Add('RXA', False, False, gtSingle);
              oGrp5.Children.Add('RXR', True, False, gtSingle);
            oGrp4.Children.Add('PRB', True, True, gtSingle);
            oGrp4.Children.Add('OBX', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('STUDY', True, True, gtGroup);
            oGrp4.Children.Add('CSR', False, False, gtSingle);
            oGrp4.Children.Add('CSP', True, True, gtSingle);
  oStructure := oStructures.Add('PGL_PC6', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('PGL_PC6', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT_VISIT', True, False, gtGroup);
      oGrp1.Children.Add('PV1', False, False, gtSingle);
      oGrp1.Children.Add('PV2', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('GOAL', False, True, gtGroup);
      oGrp1.Children.Add('GOL', False, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp1.Children.Add('VAR', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('GOAL_ROLE', True, True, gtGroup);
        oGrp2.Children.Add('ROL', False, False, gtSingle);
        oGrp2.Children.Add('VAR', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATHWAY', True, True, gtGroup);
        oGrp2.Children.Add('PTH', False, False, gtSingle);
        oGrp2.Children.Add('VAR', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('OBSERVATION', True, True, gtGroup);
        oGrp2.Children.Add('OBX', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PROBLEM', True, True, gtGroup);
        oGrp2.Children.Add('PRB', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
        oGrp2.Children.Add('VAR', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('PROBLEM_ROLE', True, True, gtGroup);
          oGrp3.Children.Add('ROL', False, False, gtSingle);
          oGrp3.Children.Add('VAR', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('PROBLEM_OBSERVATION', True, True, gtGroup);
          oGrp3.Children.Add('OBX', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER', True, True, gtGroup);
        oGrp2.Children.Add('ORC', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('ORDER_DETAIL', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('CHOICE', False, True, gtChoice);
            oGrp4.Children.Add('OBR', False, False, gtSingle);
            oGrp4.Children.Add('Hxx', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
          oGrp3.Children.Add('VAR', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('ORDER_OBSERVATION', True, True, gtGroup);
            oGrp4.Children.Add('OBX', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
            oGrp4.Children.Add('VAR', True, True, gtSingle);
  oStructure := oStructures.Add('PMU_B01', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('PMU_B01', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('STF', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PRA', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('ORG', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('AFF', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('LAN', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('EDU', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('CER', True, True, gtSingle);
  oStructure := oStructures.Add('PMU_B03', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('PMU_B03', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('STF', False, False, gtSingle);
  oStructure := oStructures.Add('PMU_B04', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('PMU_B04', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('STF', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PRA', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('ORG', True, True, gtSingle);
  oStructure := oStructures.Add('PMU_B07', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('PMU_B07', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('STF', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PRA', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('CERTIFICATE', True, True, gtGroup);
      oGrp1.Children.Add('CER', False, False, gtSingle);
      oGrp1.Children.Add('ROL', True, True, gtSingle);
  oStructure := oStructures.Add('PMU_B08', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('PMU_B08', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('STF', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PRA', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('CER', True, True, gtSingle);
  oStructure := oStructures.Add('PPG_PCG', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('PPG_PCG', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT_VISIT', True, False, gtGroup);
      oGrp1.Children.Add('PV1', False, False, gtSingle);
      oGrp1.Children.Add('PV2', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATHWAY', False, True, gtGroup);
      oGrp1.Children.Add('PTH', False, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp1.Children.Add('VAR', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATHWAY_ROLE', True, True, gtGroup);
        oGrp2.Children.Add('ROL', False, False, gtSingle);
        oGrp2.Children.Add('VAR', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('GOAL', True, True, gtGroup);
        oGrp2.Children.Add('GOL', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
        oGrp2.Children.Add('VAR', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('GOAL_ROLE', True, True, gtGroup);
          oGrp3.Children.Add('ROL', False, False, gtSingle);
          oGrp3.Children.Add('VAR', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('GOAL_OBSERVATION', True, True, gtGroup);
          oGrp3.Children.Add('OBX', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('PROBLEM', True, True, gtGroup);
          oGrp3.Children.Add('PRB', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
          oGrp3.Children.Add('VAR', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('PROBLEM_ROLE', True, True, gtGroup);
            oGrp4.Children.Add('ROL', False, False, gtSingle);
            oGrp4.Children.Add('VAR', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('PROBLEM_OBSERVATION', True, True, gtGroup);
            oGrp4.Children.Add('OBX', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('ORDER', True, True, gtGroup);
          oGrp3.Children.Add('ORC', False, False, gtSingle);
          oGrp4 := oGrp3.Children.Add('ORDER_DETAIL', True, False, gtGroup);
            oGrp5 := oGrp4.Children.Add('CHOICE', False, True, gtChoice);
              oGrp5.Children.Add('OBR', False, False, gtSingle);
              oGrp5.Children.Add('Hxx', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
            oGrp4.Children.Add('VAR', True, True, gtSingle);
            oGrp5 := oGrp4.Children.Add('ORDER_OBSERVATION', True, True, gtGroup);
              oGrp5.Children.Add('OBX', False, False, gtSingle);
              oGrp5.Children.Add('NTE', True, True, gtSingle);
              oGrp5.Children.Add('VAR', True, True, gtSingle);
  oStructure := oStructures.Add('PPP_PCB', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('PPP_PCB', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT_VISIT', True, False, gtGroup);
      oGrp1.Children.Add('PV1', False, False, gtSingle);
      oGrp1.Children.Add('PV2', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATHWAY', False, True, gtGroup);
      oGrp1.Children.Add('PTH', False, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp1.Children.Add('VAR', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATHWAY_ROLE', True, True, gtGroup);
        oGrp2.Children.Add('ROL', False, False, gtSingle);
        oGrp2.Children.Add('VAR', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PROBLEM', True, True, gtGroup);
        oGrp2.Children.Add('PRB', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
        oGrp2.Children.Add('VAR', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('PROBLEM_ROLE', True, True, gtGroup);
          oGrp3.Children.Add('ROL', False, False, gtSingle);
          oGrp3.Children.Add('VAR', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('PROBLEM_OBSERVATION', True, True, gtGroup);
          oGrp3.Children.Add('OBX', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('GOAL', True, True, gtGroup);
          oGrp3.Children.Add('GOL', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
          oGrp3.Children.Add('VAR', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('GOAL_ROLE', True, True, gtGroup);
            oGrp4.Children.Add('ROL', False, False, gtSingle);
            oGrp4.Children.Add('VAR', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('GOAL_OBSERVATION', True, True, gtGroup);
            oGrp4.Children.Add('OBX', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('ORDER', True, True, gtGroup);
          oGrp3.Children.Add('ORC', False, False, gtSingle);
          oGrp4 := oGrp3.Children.Add('ORDER_DETAIL', True, False, gtGroup);
            oGrp5 := oGrp4.Children.Add('CHOICE', False, True, gtChoice);
              oGrp5.Children.Add('OBR', False, False, gtSingle);
              oGrp5.Children.Add('Hxx', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
            oGrp4.Children.Add('VAR', True, True, gtSingle);
            oGrp5 := oGrp4.Children.Add('ORDER_OBSERVATION', True, True, gtGroup);
              oGrp5.Children.Add('OBX', False, False, gtSingle);
              oGrp5.Children.Add('NTE', True, True, gtSingle);
              oGrp5.Children.Add('VAR', True, True, gtSingle);
  oStructure := oStructures.Add('PPR_PC1', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('PPR_PC1', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT_VISIT', True, False, gtGroup);
      oGrp1.Children.Add('PV1', False, False, gtSingle);
      oGrp1.Children.Add('PV2', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROBLEM', False, True, gtGroup);
      oGrp1.Children.Add('PRB', False, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp1.Children.Add('VAR', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PROBLEM_ROLE', True, True, gtGroup);
        oGrp2.Children.Add('ROL', False, False, gtSingle);
        oGrp2.Children.Add('VAR', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATHWAY', True, True, gtGroup);
        oGrp2.Children.Add('PTH', False, False, gtSingle);
        oGrp2.Children.Add('VAR', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PROBLEM_OBSERVATION', True, True, gtGroup);
        oGrp2.Children.Add('OBX', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('GOAL', True, True, gtGroup);
        oGrp2.Children.Add('GOL', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
        oGrp2.Children.Add('VAR', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('GOAL_ROLE', True, True, gtGroup);
          oGrp3.Children.Add('ROL', False, False, gtSingle);
          oGrp3.Children.Add('VAR', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('GOAL_OBSERVATION', True, True, gtGroup);
          oGrp3.Children.Add('OBX', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER', True, True, gtGroup);
        oGrp2.Children.Add('ORC', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('ORDER_DETAIL', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('CHOICE', False, True, gtChoice);
            oGrp4.Children.Add('OBR', False, False, gtSingle);
            oGrp4.Children.Add('Hxx', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
          oGrp3.Children.Add('VAR', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('ORDER_OBSERVATION', True, True, gtGroup);
            oGrp4.Children.Add('OBX', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
            oGrp4.Children.Add('VAR', True, True, gtSingle);
  oStructure := oStructures.Add('PPT_PCL', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('PPT_PCL', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('QAK', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', False, True, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATIENT_VISIT', True, False, gtGroup);
        oGrp2.Children.Add('PV1', False, False, gtSingle);
        oGrp2.Children.Add('PV2', True, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATHWAY', False, True, gtGroup);
        oGrp2.Children.Add('PTH', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
        oGrp2.Children.Add('VAR', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('PATHWAY_ROLE', True, True, gtGroup);
          oGrp3.Children.Add('ROL', False, False, gtSingle);
          oGrp3.Children.Add('VAR', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('GOAL', True, True, gtGroup);
          oGrp3.Children.Add('GOL', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
          oGrp3.Children.Add('VAR', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('GOAL_ROLE', True, True, gtGroup);
            oGrp4.Children.Add('ROL', False, False, gtSingle);
            oGrp4.Children.Add('VAR', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('GOAL_OBSERVATION', True, True, gtGroup);
            oGrp4.Children.Add('OBX', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('PROBLEM', True, True, gtGroup);
            oGrp4.Children.Add('PRB', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
            oGrp4.Children.Add('VAR', True, True, gtSingle);
            oGrp5 := oGrp4.Children.Add('PROBLEM_ROLE', True, True, gtGroup);
              oGrp5.Children.Add('ROL', False, False, gtSingle);
              oGrp5.Children.Add('VAR', True, True, gtSingle);
            oGrp5 := oGrp4.Children.Add('PROBLEM_OBSERVATION', True, True, gtGroup);
              oGrp5.Children.Add('OBX', False, False, gtSingle);
              oGrp5.Children.Add('NTE', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('ORDER', True, True, gtGroup);
            oGrp4.Children.Add('ORC', False, False, gtSingle);
            oGrp5 := oGrp4.Children.Add('ORDER_DETAIL', True, False, gtGroup);
              oGrp6 := oGrp5.Children.Add('CHOICE', False, True, gtChoice);
                oGrp6.Children.Add('OBR', False, False, gtSingle);
                oGrp6.Children.Add('Hxx', False, False, gtSingle);
              oGrp5.Children.Add('NTE', True, True, gtSingle);
              oGrp5.Children.Add('VAR', True, True, gtSingle);
              oGrp6 := oGrp5.Children.Add('ORDER_OBSERVATION', True, True, gtGroup);
                oGrp6.Children.Add('OBX', False, False, gtSingle);
                oGrp6.Children.Add('NTE', True, True, gtSingle);
                oGrp6.Children.Add('VAR', True, True, gtSingle);
  oStructure := oStructures.Add('PPV_PCA', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('PPV_PCA', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('QAK', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', False, True, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATIENT_VISIT', True, False, gtGroup);
        oGrp2.Children.Add('PV1', False, False, gtSingle);
        oGrp2.Children.Add('PV2', True, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('GOAL', False, True, gtGroup);
        oGrp2.Children.Add('GOL', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
        oGrp2.Children.Add('VAR', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('GOAL_ROLE', True, True, gtGroup);
          oGrp3.Children.Add('ROL', False, False, gtSingle);
          oGrp3.Children.Add('VAR', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('GOAL_PATHWAY', True, True, gtGroup);
          oGrp3.Children.Add('PTH', False, False, gtSingle);
          oGrp3.Children.Add('VAR', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('GOAL_OBSERVATION', True, True, gtGroup);
          oGrp3.Children.Add('OBX', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('PROBLEM', True, True, gtGroup);
          oGrp3.Children.Add('PRB', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
          oGrp3.Children.Add('VAR', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('PROBLEM_ROLE', True, True, gtGroup);
            oGrp4.Children.Add('ROL', False, False, gtSingle);
            oGrp4.Children.Add('VAR', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('PROBLEM_OBSERVATION', True, True, gtGroup);
            oGrp4.Children.Add('OBX', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('ORDER', True, True, gtGroup);
          oGrp3.Children.Add('ORC', False, False, gtSingle);
          oGrp4 := oGrp3.Children.Add('ORDER_DETAIL', True, False, gtGroup);
            oGrp5 := oGrp4.Children.Add('CHOICE', False, True, gtChoice);
              oGrp5.Children.Add('OBR', False, False, gtSingle);
              oGrp5.Children.Add('Hxx', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
            oGrp4.Children.Add('VAR', True, True, gtSingle);
            oGrp5 := oGrp4.Children.Add('ORDER_OBSERVATION', True, True, gtGroup);
              oGrp5.Children.Add('OBX', False, False, gtSingle);
              oGrp5.Children.Add('NTE', True, True, gtSingle);
              oGrp5.Children.Add('VAR', True, True, gtSingle);
  oStructure := oStructures.Add('PRR_PC5', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('PRR_PC5', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('QAK', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', False, True, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATIENT_VISIT', True, False, gtGroup);
        oGrp2.Children.Add('PV1', False, False, gtSingle);
        oGrp2.Children.Add('PV2', True, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('PROBLEM', False, True, gtGroup);
        oGrp2.Children.Add('PRB', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
        oGrp2.Children.Add('VAR', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('PROBLEM_ROLE', True, True, gtGroup);
          oGrp3.Children.Add('ROL', False, False, gtSingle);
          oGrp3.Children.Add('VAR', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('PROBLEM_PATHWAY', True, True, gtGroup);
          oGrp3.Children.Add('PTH', False, False, gtSingle);
          oGrp3.Children.Add('VAR', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('PROBLEM_OBSERVATION', True, True, gtGroup);
          oGrp3.Children.Add('OBX', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('GOAL', True, True, gtGroup);
          oGrp3.Children.Add('GOL', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
          oGrp3.Children.Add('VAR', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('GOAL_ROLE', True, True, gtGroup);
            oGrp4.Children.Add('ROL', False, False, gtSingle);
            oGrp4.Children.Add('VAR', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('GOAL_OBSERVATION', True, True, gtGroup);
            oGrp4.Children.Add('OBX', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('ORDER', True, True, gtGroup);
          oGrp3.Children.Add('ORC', False, False, gtSingle);
          oGrp4 := oGrp3.Children.Add('ORDER_DETAIL', True, False, gtGroup);
            oGrp5 := oGrp4.Children.Add('CHOICE', False, True, gtChoice);
              oGrp5.Children.Add('OBR', False, False, gtSingle);
              oGrp5.Children.Add('Hxx', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
            oGrp4.Children.Add('VAR', True, True, gtSingle);
            oGrp5 := oGrp4.Children.Add('ORDER_OBSERVATION', True, True, gtGroup);
              oGrp5.Children.Add('OBX', False, False, gtSingle);
              oGrp5.Children.Add('NTE', True, True, gtSingle);
              oGrp5.Children.Add('VAR', True, True, gtSingle);
  oStructure := oStructures.Add('PTR_PCF', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('PTR_PCF', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('QAK', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', False, True, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATIENT_VISIT', True, False, gtGroup);
        oGrp2.Children.Add('PV1', False, False, gtSingle);
        oGrp2.Children.Add('PV2', True, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATHWAY', False, True, gtGroup);
        oGrp2.Children.Add('PTH', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
        oGrp2.Children.Add('VAR', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('PATHWAY_ROLE', True, True, gtGroup);
          oGrp3.Children.Add('ROL', False, False, gtSingle);
          oGrp3.Children.Add('VAR', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('PROBLEM', True, True, gtGroup);
          oGrp3.Children.Add('PRB', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
          oGrp3.Children.Add('VAR', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('PROBLEM_ROLE', True, True, gtGroup);
            oGrp4.Children.Add('ROL', False, False, gtSingle);
            oGrp4.Children.Add('VAR', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('PROBLEM_OBSERVATION', True, True, gtGroup);
            oGrp4.Children.Add('OBX', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('GOAL', True, True, gtGroup);
            oGrp4.Children.Add('GOL', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
            oGrp4.Children.Add('VAR', True, True, gtSingle);
            oGrp5 := oGrp4.Children.Add('GOAL_ROLE', True, True, gtGroup);
              oGrp5.Children.Add('ROL', False, False, gtSingle);
              oGrp5.Children.Add('VAR', True, True, gtSingle);
            oGrp5 := oGrp4.Children.Add('GOAL_OBSERVATION', True, True, gtGroup);
              oGrp5.Children.Add('OBX', False, False, gtSingle);
              oGrp5.Children.Add('NTE', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('ORDER', True, True, gtGroup);
            oGrp4.Children.Add('ORC', False, False, gtSingle);
            oGrp5 := oGrp4.Children.Add('ORDER_DETAIL', True, False, gtGroup);
              oGrp6 := oGrp5.Children.Add('CHOICE', False, True, gtChoice);
                oGrp6.Children.Add('OBR', False, False, gtSingle);
                oGrp6.Children.Add('Hxx', False, False, gtSingle);
              oGrp5.Children.Add('NTE', True, True, gtSingle);
              oGrp5.Children.Add('VAR', True, True, gtSingle);
              oGrp6 := oGrp5.Children.Add('ORDER_OBSERVATION', True, True, gtGroup);
                oGrp6.Children.Add('OBX', False, False, gtSingle);
                oGrp6.Children.Add('NTE', True, True, gtSingle);
                oGrp6.Children.Add('VAR', True, True, gtSingle);
  oStructure := oStructures.Add('QBP_E03', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('QBP_E03', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('QUERY_INFORMATION', False, True, gtChoice);
      oGrp1.Children.Add('QPD', False, False, gtSingle);
      oGrp1.Children.Add('RCP', False, False, gtSingle);
  oStructure := oStructures.Add('QBP_E22', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('QBP_E22', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('QUERY', False, True, gtChoice);
      oGrp1.Children.Add('QPD', False, False, gtSingle);
      oGrp1.Children.Add('RCP', False, False, gtSingle);
  oStructure := oStructures.Add('QBP_Q11', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('QBP_Q11', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QPD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('RCP', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('QBP_Q13', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('QBP_Q13', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QPD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('RDF', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('RCP', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('QBP_Q15', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('QBP_Q15', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QPD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('RCP', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('QBP_Q21', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('QBP_Q21', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QPD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('RCP', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('QBP_Qnn', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('QBP_Qnn', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QPD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('RDF', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('RCP', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QAK', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QPD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('Hxx', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('QBP_Z73', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('QBP_Z73', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QPD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('RCP', False, False, gtSingle);
  oStructure := oStructures.Add('QCK_Q02', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('QCK_Q02', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QAK', True, False, gtSingle);
  oStructure := oStructures.Add('QCN_J01', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('QCN_J01', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QID', False, False, gtSingle);
  oStructure := oStructures.Add('QRY_A19', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('QRY_A19', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRF', True, False, gtSingle);
  oStructure := oStructures.Add('QRY_PC4', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('QRY_PC4', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRF', True, False, gtSingle);
  oStructure := oStructures.Add('QRY_Q01', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('QRY_Q01', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRF', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('QRY_Q02', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('QRY_Q02', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRF', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('QRY_R02', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('QRY_R02', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRF', False, False, gtSingle);
  oStructure := oStructures.Add('QRY_T12', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('QRY_T12', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRF', True, False, gtSingle);
  oStructure := oStructures.Add('QSB_Q16', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('QSB_Q16', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QPD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('RCP', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('QVR_Q17', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('QVR_Q17', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QPD', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('QBP', True, False, gtGroup);
      oGrp1.Children.Add('Hxx', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('RCP', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('RAR_RAR', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RAR_RAR', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('DEFINITION', False, True, gtGroup);
      oGrp1.Children.Add('QRD', False, False, gtSingle);
      oGrp1.Children.Add('QRF', True, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATIENT', True, False, gtGroup);
        oGrp2.Children.Add('PID', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER', False, True, gtGroup);
        oGrp2.Children.Add('ORC', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('ENCODING', True, False, gtGroup);
          oGrp3.Children.Add('RXE', False, False, gtSingle);
          oGrp3.Children.Add('RXR', False, True, gtSingle);
          oGrp3.Children.Add('RXC', True, True, gtSingle);
        oGrp2.Children.Add('RXA', False, True, gtSingle);
        oGrp2.Children.Add('RXR', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('RAS_O17', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RAS_O17', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', True, False, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp1.Children.Add('PD1', True, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp1.Children.Add('AL1', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATIENT_VISIT', True, False, gtGroup);
        oGrp2.Children.Add('PV1', False, False, gtSingle);
        oGrp2.Children.Add('PV2', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('ORDER', False, True, gtGroup);
      oGrp1.Children.Add('ORC', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('TIMING', True, True, gtGroup);
        oGrp2.Children.Add('TQ1', False, False, gtSingle);
        oGrp2.Children.Add('TQ2', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER_DETAIL', True, False, gtGroup);
        oGrp2.Children.Add('RXO', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('ORDER_DETAIL_SUPPLEMENT', True, False, gtGroup);
          oGrp3.Children.Add('NTE', False, True, gtSingle);
          oGrp3.Children.Add('RXR', False, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('COMPONENTS', True, True, gtGroup);
            oGrp4.Children.Add('RXC', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('ENCODING', True, False, gtGroup);
        oGrp2.Children.Add('RXE', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('TIMING_ENCODED', False, True, gtGroup);
          oGrp3.Children.Add('TQ1', False, False, gtSingle);
          oGrp3.Children.Add('TQ2', True, True, gtSingle);
        oGrp2.Children.Add('RXR', False, True, gtSingle);
        oGrp2.Children.Add('RXC', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('ADMINISTRATION', False, True, gtGroup);
        oGrp2.Children.Add('RXA', False, True, gtSingle);
        oGrp2.Children.Add('RXR', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('OBSERVATION', True, True, gtGroup);
          oGrp3.Children.Add('OBX', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp1.Children.Add('CTI', True, True, gtSingle);
  oStructure := oStructures.Add('RCI_I05', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RCI_I05', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRF', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROVIDER', False, True, gtGroup);
      oGrp1.Children.Add('PRD', False, False, gtSingle);
      oGrp1.Children.Add('CTD', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DG1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DRG', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('AL1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('OBSERVATION', True, True, gtGroup);
      oGrp1.Children.Add('OBR', False, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('RESULTS', True, True, gtGroup);
        oGrp2.Children.Add('OBX', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('RCL_I06', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RCL_I06', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRF', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROVIDER', False, True, gtGroup);
      oGrp1.Children.Add('PRD', False, False, gtSingle);
      oGrp1.Children.Add('CTD', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DG1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DRG', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('AL1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DSP', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('RDE_O11', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RDE_O11', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', True, False, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp1.Children.Add('PD1', True, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATIENT_VISIT', True, False, gtGroup);
        oGrp2.Children.Add('PV1', False, False, gtSingle);
        oGrp2.Children.Add('PV2', True, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('INSURANCE', True, True, gtGroup);
        oGrp2.Children.Add('IN1', False, False, gtSingle);
        oGrp2.Children.Add('IN2', True, False, gtSingle);
        oGrp2.Children.Add('IN3', True, False, gtSingle);
      oGrp1.Children.Add('GT1', True, False, gtSingle);
      oGrp1.Children.Add('AL1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('ORDER', False, True, gtGroup);
      oGrp1.Children.Add('ORC', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('TIMING', True, True, gtGroup);
        oGrp2.Children.Add('TQ1', False, False, gtSingle);
        oGrp2.Children.Add('TQ2', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER_DETAIL', True, False, gtGroup);
        oGrp2.Children.Add('RXO', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
        oGrp2.Children.Add('RXR', False, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('COMPONENT', True, True, gtGroup);
          oGrp3.Children.Add('RXC', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp1.Children.Add('RXE', False, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('TIMING_ENCODED', False, True, gtGroup);
        oGrp2.Children.Add('TQ1', False, False, gtSingle);
        oGrp2.Children.Add('TQ2', True, True, gtSingle);
      oGrp1.Children.Add('RXR', False, True, gtSingle);
      oGrp1.Children.Add('RXC', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('OBSERVATION', True, True, gtGroup);
        oGrp2.Children.Add('OBX', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
      oGrp1.Children.Add('FT1', True, True, gtSingle);
      oGrp1.Children.Add('BLG', True, False, gtSingle);
      oGrp1.Children.Add('CTI', True, True, gtSingle);
  oStructure := oStructures.Add('RDR_RDR', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RDR_RDR', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRF', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('ORC', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('TQ1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('TQ2', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('RXE', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('TQ1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('TQ2', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('RXR', False, True, gtSingle);
    oStructure.SegmentMap.Children.Add('RXC', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('RXD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('RXR', False, True, gtSingle);
    oStructure.SegmentMap.Children.Add('RXC', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('RDS_O13', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RDS_O13', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', True, False, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp1.Children.Add('PD1', True, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp1.Children.Add('AL1', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATIENT_VISIT', True, False, gtGroup);
        oGrp2.Children.Add('PV1', False, False, gtSingle);
        oGrp2.Children.Add('PV2', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('ORDER', False, True, gtGroup);
      oGrp1.Children.Add('ORC', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('TIMING', True, True, gtGroup);
        oGrp2.Children.Add('TQ1', False, False, gtSingle);
        oGrp2.Children.Add('TQ2', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER_DETAIL', True, False, gtGroup);
        oGrp2.Children.Add('RXO', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('ORDER_DETAIL_SUPPLEMENT', True, False, gtGroup);
          oGrp3.Children.Add('NTE', False, True, gtSingle);
          oGrp3.Children.Add('RXR', False, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('COMPONENT', True, True, gtGroup);
            oGrp4.Children.Add('RXC', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('ENCODING', True, False, gtGroup);
        oGrp2.Children.Add('RXE', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('TIMING_ENCODED', False, True, gtGroup);
          oGrp3.Children.Add('TQ1', False, False, gtSingle);
          oGrp3.Children.Add('TQ2', True, True, gtSingle);
        oGrp2.Children.Add('RXR', False, True, gtSingle);
        oGrp2.Children.Add('RXC', True, True, gtSingle);
      oGrp1.Children.Add('RXD', False, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp1.Children.Add('RXR', False, True, gtSingle);
      oGrp1.Children.Add('RXC', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('OBSERVATION', True, True, gtGroup);
        oGrp2.Children.Add('OBX', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
      oGrp1.Children.Add('FT1', True, True, gtSingle);
  oStructure := oStructures.Add('RDY_K15', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RDY_K15', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QAK', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QPD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DSP', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('REF_I12', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('REF_I12', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('RF1', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('AUTHORIZATION_CONTACT', True, False, gtGroup);
      oGrp1.Children.Add('AUT', False, False, gtSingle);
      oGrp1.Children.Add('CTD', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROVIDER_CONTACT', False, True, gtGroup);
      oGrp1.Children.Add('PRD', False, False, gtSingle);
      oGrp1.Children.Add('CTD', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NK1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('GT1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('INSURANCE', True, True, gtGroup);
      oGrp1.Children.Add('IN1', False, False, gtSingle);
      oGrp1.Children.Add('IN2', True, False, gtSingle);
      oGrp1.Children.Add('IN3', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ACC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DG1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DRG', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('AL1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROCEDURE', True, True, gtGroup);
      oGrp1.Children.Add('PR1', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('AUTHORIZATION_CONTACT', True, False, gtGroup);
        oGrp2.Children.Add('AUT', False, False, gtSingle);
        oGrp2.Children.Add('CTD', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('OBSERVATION', True, True, gtGroup);
      oGrp1.Children.Add('OBR', False, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('RESULTS_NOTES', True, True, gtGroup);
        oGrp2.Children.Add('OBX', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT_VISIT', True, False, gtGroup);
      oGrp1.Children.Add('PV1', False, False, gtSingle);
      oGrp1.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('RER_RER', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RER_RER', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('DEFINITION', False, True, gtGroup);
      oGrp1.Children.Add('QRD', False, False, gtSingle);
      oGrp1.Children.Add('QRF', True, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATIENT', True, False, gtGroup);
        oGrp2.Children.Add('PID', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER', False, True, gtGroup);
        oGrp2.Children.Add('ORC', False, False, gtSingle);
        oGrp2.Children.Add('RXE', False, False, gtSingle);
        oGrp2.Children.Add('RXR', False, True, gtSingle);
        oGrp2.Children.Add('RXC', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('RGR_RGR', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RGR_RGR', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('DEFINITION', False, True, gtGroup);
      oGrp1.Children.Add('QRD', False, False, gtSingle);
      oGrp1.Children.Add('QRF', True, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATIENT', True, False, gtGroup);
        oGrp2.Children.Add('PID', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER', False, True, gtGroup);
        oGrp2.Children.Add('ORC', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('ENCODING', True, False, gtGroup);
          oGrp3.Children.Add('RXE', False, False, gtSingle);
          oGrp3.Children.Add('RXR', False, True, gtSingle);
          oGrp3.Children.Add('RXC', True, True, gtSingle);
        oGrp2.Children.Add('RXG', False, True, gtSingle);
        oGrp2.Children.Add('RXR', False, True, gtSingle);
        oGrp2.Children.Add('RXC', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('RGV_O15', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RGV_O15', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', True, False, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp1.Children.Add('AL1', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATIENT_VISIT', True, False, gtGroup);
        oGrp2.Children.Add('PV1', False, False, gtSingle);
        oGrp2.Children.Add('PV2', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('ORDER', False, True, gtGroup);
      oGrp1.Children.Add('ORC', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('TIMING', True, True, gtGroup);
        oGrp2.Children.Add('TQ1', False, False, gtSingle);
        oGrp2.Children.Add('TQ2', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER_DETAIL', True, False, gtGroup);
        oGrp2.Children.Add('RXO', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('ORDER_DETAIL_SUPPLEMENT', True, False, gtGroup);
          oGrp3.Children.Add('NTE', False, True, gtSingle);
          oGrp3.Children.Add('RXR', False, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('COMPONENTS', True, True, gtGroup);
            oGrp4.Children.Add('RXC', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('ENCODING', True, False, gtGroup);
        oGrp2.Children.Add('RXE', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('TIMING_ENCODED', False, True, gtGroup);
          oGrp3.Children.Add('TQ1', False, False, gtSingle);
          oGrp3.Children.Add('TQ2', True, True, gtSingle);
        oGrp2.Children.Add('RXR', False, True, gtSingle);
        oGrp2.Children.Add('RXC', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('GIVE', False, True, gtGroup);
        oGrp2.Children.Add('RXG', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('TIMING_GIVE', False, True, gtGroup);
          oGrp3.Children.Add('TQ1', False, False, gtSingle);
          oGrp3.Children.Add('TQ2', True, True, gtSingle);
        oGrp2.Children.Add('RXR', False, True, gtSingle);
        oGrp2.Children.Add('RXC', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('OBSERVATION', False, True, gtGroup);
          oGrp3.Children.Add('OBX', True, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('ROR_ROR', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ROR_ROR', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('DEFINITION', False, True, gtGroup);
      oGrp1.Children.Add('QRD', False, False, gtSingle);
      oGrp1.Children.Add('QRF', True, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATIENT', True, False, gtGroup);
        oGrp2.Children.Add('PID', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER', False, True, gtGroup);
        oGrp2.Children.Add('ORC', False, False, gtSingle);
        oGrp2.Children.Add('RXO', False, False, gtSingle);
        oGrp2.Children.Add('RXR', False, True, gtSingle);
        oGrp2.Children.Add('RXC', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('RPA_I08', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RPA_I08', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('RF1', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('AUTHORIZATION', True, False, gtGroup);
      oGrp1.Children.Add('AUT', False, False, gtSingle);
      oGrp1.Children.Add('CTD', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROVIDER', False, True, gtGroup);
      oGrp1.Children.Add('PRD', False, False, gtSingle);
      oGrp1.Children.Add('CTD', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NK1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('GT1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('INSURANCE', True, True, gtGroup);
      oGrp1.Children.Add('IN1', False, False, gtSingle);
      oGrp1.Children.Add('IN2', True, False, gtSingle);
      oGrp1.Children.Add('IN3', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ACC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DG1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DRG', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('AL1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROCEDURE', False, True, gtGroup);
      oGrp1.Children.Add('PR1', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('AUTHORIZATION', True, False, gtGroup);
        oGrp2.Children.Add('AUT', False, False, gtSingle);
        oGrp2.Children.Add('CTD', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('OBSERVATION', True, True, gtGroup);
      oGrp1.Children.Add('OBR', False, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('RESULTS', True, True, gtGroup);
        oGrp2.Children.Add('OBX', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('VISIT', True, False, gtGroup);
      oGrp1.Children.Add('PV1', False, False, gtSingle);
      oGrp1.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('RPI_I01', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RPI_I01', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROVIDER', False, True, gtGroup);
      oGrp1.Children.Add('PRD', False, False, gtSingle);
      oGrp1.Children.Add('CTD', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NK1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('GUARANTOR_INSURANCE', True, False, gtGroup);
      oGrp1.Children.Add('GT1', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('INSURANCE', False, True, gtGroup);
        oGrp2.Children.Add('IN1', False, False, gtSingle);
        oGrp2.Children.Add('IN2', True, False, gtSingle);
        oGrp2.Children.Add('IN3', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('RPI_I04', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RPI_I04', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROVIDER', False, True, gtGroup);
      oGrp1.Children.Add('PRD', False, False, gtSingle);
      oGrp1.Children.Add('CTD', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NK1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('GUARANTOR_INSURANCE', True, False, gtGroup);
      oGrp1.Children.Add('GT1', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('INSURANCE', False, True, gtGroup);
        oGrp2.Children.Add('IN1', False, False, gtSingle);
        oGrp2.Children.Add('IN2', True, False, gtSingle);
        oGrp2.Children.Add('IN3', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('RPL_I02', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RPL_I02', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROVIDER', False, True, gtGroup);
      oGrp1.Children.Add('PRD', False, False, gtSingle);
      oGrp1.Children.Add('CTD', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DSP', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
End;

procedure Definitions26LoadMessageStructures3(oStructures : THL7V2ModelMessageStructures);
Var
  oStructure : THL7V2ModelMessageStructure;
  oGrp1 : THL7V2ModelSegmentGroup;
  oGrp2 : THL7V2ModelSegmentGroup;
  oGrp3 : THL7V2ModelSegmentGroup;
  oGrp4 : THL7V2ModelSegmentGroup;
Begin
  oStructure := oStructures.Add('RPR_I03', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RPR_I03', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROVIDER', False, True, gtGroup);
      oGrp1.Children.Add('PRD', False, False, gtSingle);
      oGrp1.Children.Add('CTD', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('RQA_I08', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RQA_I08', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('RF1', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('AUTHORIZATION', True, False, gtGroup);
      oGrp1.Children.Add('AUT', False, False, gtSingle);
      oGrp1.Children.Add('CTD', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROVIDER', False, True, gtGroup);
      oGrp1.Children.Add('PRD', False, False, gtSingle);
      oGrp1.Children.Add('CTD', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NK1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('GUARANTOR_INSURANCE', True, False, gtGroup);
      oGrp1.Children.Add('GT1', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('INSURANCE', False, True, gtGroup);
        oGrp2.Children.Add('IN1', False, False, gtSingle);
        oGrp2.Children.Add('IN2', True, False, gtSingle);
        oGrp2.Children.Add('IN3', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ACC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DG1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DRG', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('AL1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROCEDURE', True, True, gtGroup);
      oGrp1.Children.Add('PR1', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('AUTHORIZATION', True, False, gtGroup);
        oGrp2.Children.Add('AUT', False, False, gtSingle);
        oGrp2.Children.Add('CTD', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('OBSERVATION', True, True, gtGroup);
      oGrp1.Children.Add('OBR', False, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('RESULTS', True, True, gtGroup);
        oGrp2.Children.Add('OBX', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('VISIT', True, False, gtGroup);
      oGrp1.Children.Add('PV1', False, False, gtSingle);
      oGrp1.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('RQC_I05', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RQC_I05', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRF', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROVIDER', False, True, gtGroup);
      oGrp1.Children.Add('PRD', False, False, gtSingle);
      oGrp1.Children.Add('CTD', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NK1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('GT1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('RQI_I01', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RQI_I01', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROVIDER', False, True, gtGroup);
      oGrp1.Children.Add('PRD', False, False, gtSingle);
      oGrp1.Children.Add('CTD', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NK1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('GUARANTOR_INSURANCE', True, False, gtGroup);
      oGrp1.Children.Add('GT1', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('INSURANCE', False, True, gtGroup);
        oGrp2.Children.Add('IN1', False, False, gtSingle);
        oGrp2.Children.Add('IN2', True, False, gtSingle);
        oGrp2.Children.Add('IN3', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('RQP_I04', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RQP_I04', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROVIDER', False, True, gtGroup);
      oGrp1.Children.Add('PRD', False, False, gtSingle);
      oGrp1.Children.Add('CTD', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NK1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('GT1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('RRA_O18', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RRA_O18', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('RESPONSE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('PATIENT', True, False, gtGroup);
        oGrp2.Children.Add('PID', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER', False, True, gtGroup);
        oGrp2.Children.Add('ORC', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('TIMING', True, True, gtGroup);
          oGrp3.Children.Add('TQ1', False, False, gtSingle);
          oGrp3.Children.Add('TQ2', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('ADMINISTRATION', True, False, gtGroup);
          oGrp3.Children.Add('RXA', False, True, gtSingle);
          oGrp3.Children.Add('RXR', False, False, gtSingle);
  oStructure := oStructures.Add('RRD_O14', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RRD_O14', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('RESPONSE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('PATIENT', True, False, gtGroup);
        oGrp2.Children.Add('PID', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER', False, True, gtGroup);
        oGrp2.Children.Add('ORC', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('TIMING', True, True, gtGroup);
          oGrp3.Children.Add('TQ1', False, False, gtSingle);
          oGrp3.Children.Add('TQ2', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('DISPENSE', True, False, gtGroup);
          oGrp3.Children.Add('RXD', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
          oGrp3.Children.Add('RXR', False, True, gtSingle);
          oGrp3.Children.Add('RXC', True, True, gtSingle);
  oStructure := oStructures.Add('RRE_O12', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RRE_O12', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('RESPONSE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('PATIENT', True, False, gtGroup);
        oGrp2.Children.Add('PID', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER', False, True, gtGroup);
        oGrp2.Children.Add('ORC', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('TIMING', True, True, gtGroup);
          oGrp3.Children.Add('TQ1', False, False, gtSingle);
          oGrp3.Children.Add('TQ2', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('ENCODING', True, False, gtGroup);
          oGrp3.Children.Add('RXE', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('TIMING_ENCODED', False, True, gtGroup);
            oGrp4.Children.Add('TQ1', False, False, gtSingle);
            oGrp4.Children.Add('TQ2', True, True, gtSingle);
          oGrp3.Children.Add('RXR', False, True, gtSingle);
          oGrp3.Children.Add('RXC', True, True, gtSingle);
  oStructure := oStructures.Add('RRG_O16', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RRG_O16', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('RESPONSE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('PATIENT', True, False, gtGroup);
        oGrp2.Children.Add('PID', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER', False, True, gtGroup);
        oGrp2.Children.Add('ORC', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('TIMING', True, True, gtGroup);
          oGrp3.Children.Add('TQ1', False, False, gtSingle);
          oGrp3.Children.Add('TQ2', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('GIVE', True, False, gtGroup);
          oGrp3.Children.Add('RXG', False, False, gtSingle);
          oGrp4 := oGrp3.Children.Add('TIMING_GIVE', False, True, gtGroup);
            oGrp4.Children.Add('TQ1', False, False, gtSingle);
            oGrp4.Children.Add('TQ2', True, True, gtSingle);
          oGrp3.Children.Add('RXR', False, True, gtSingle);
          oGrp3.Children.Add('RXC', True, True, gtSingle);
  oStructure := oStructures.Add('RRI_I12', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RRI_I12', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('RF1', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('AUTHORIZATION_CONTACT', True, False, gtGroup);
      oGrp1.Children.Add('AUT', False, False, gtSingle);
      oGrp1.Children.Add('CTD', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROVIDER_CONTACT', False, True, gtGroup);
      oGrp1.Children.Add('PRD', False, False, gtSingle);
      oGrp1.Children.Add('CTD', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ACC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DG1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DRG', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('AL1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROCEDURE', True, True, gtGroup);
      oGrp1.Children.Add('PR1', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('AUTHORIZATION_CONTACT', True, False, gtGroup);
        oGrp2.Children.Add('AUT', False, False, gtSingle);
        oGrp2.Children.Add('CTD', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('OBSERVATION', True, True, gtGroup);
      oGrp1.Children.Add('OBR', False, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('RESULTS_NOTES', True, True, gtGroup);
        oGrp2.Children.Add('OBX', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT_VISIT', True, False, gtGroup);
      oGrp1.Children.Add('PV1', False, False, gtSingle);
      oGrp1.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('RSP_E03', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RSP_E03', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('QUERY_ACK', False, True, gtChoice);
      oGrp1.Children.Add('QAK', False, False, gtSingle);
      oGrp1.Children.Add('QPD', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('INVOICE_PROCESSING_RESULTS_INFO', True, True, gtGroup);
        oGrp2.Children.Add('IPR', False, False, gtSingle);
  oStructure := oStructures.Add('RSP_E22', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RSP_E22', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('QUERY_ACK', False, True, gtChoice);
      oGrp1.Children.Add('QAK', False, False, gtSingle);
      oGrp1.Children.Add('QPD', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('AUTHORIZATION_INFO', True, False, gtGroup);
        oGrp2.Children.Add('IVC', False, False, gtSingle);
        oGrp2.Children.Add('PSG', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('PSL_ITEM_INFO', False, True, gtGroup);
          oGrp3.Children.Add('PSL', False, False, gtSingle);
  oStructure := oStructures.Add('RSP_K11', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RSP_K11', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QAK', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QPD', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('ROW_DEFINITION', True, False, gtGroup);
      oGrp1.Children.Add('RDF', False, False, gtSingle);
      oGrp1.Children.Add('RDT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('RSP_K21', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RSP_K21', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QAK', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QPD', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('QUERY_RESPONSE', True, False, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp1.Children.Add('PD1', True, False, gtSingle);
      oGrp1.Children.Add('ARV', True, True, gtSingle);
      oGrp1.Children.Add('NK1', True, True, gtSingle);
      oGrp1.Children.Add('QRI', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('RSP_K23', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RSP_K23', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QAK', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QPD', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('QUERY_RESPONSE', True, False, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('RSP_K25', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RSP_K25', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('QAK', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QPD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('RCP', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('STAFF', False, True, gtGroup);
      oGrp1.Children.Add('STF', False, False, gtSingle);
      oGrp1.Children.Add('PRA', True, True, gtSingle);
      oGrp1.Children.Add('ORG', True, True, gtSingle);
      oGrp1.Children.Add('AFF', True, True, gtSingle);
      oGrp1.Children.Add('LAN', True, True, gtSingle);
      oGrp1.Children.Add('EDU', True, True, gtSingle);
      oGrp1.Children.Add('CER', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('RSP_K31', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RSP_K31', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QAK', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QPD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('RCP', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('RESPONSE', False, True, gtGroup);
      oGrp2 := oGrp1.Children.Add('PATIENT', True, False, gtGroup);
        oGrp2.Children.Add('PID', False, False, gtSingle);
        oGrp2.Children.Add('PD1', True, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
        oGrp2.Children.Add('AL1', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('PATIENT_VISIT', True, False, gtGroup);
          oGrp3.Children.Add('PV1', False, False, gtSingle);
          oGrp3.Children.Add('PV2', True, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER', False, True, gtGroup);
        oGrp2.Children.Add('ORC', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('TIMING', True, True, gtGroup);
          oGrp3.Children.Add('TQ1', False, False, gtSingle);
          oGrp3.Children.Add('TQ2', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('ORDER_DETAIL', True, False, gtGroup);
          oGrp3.Children.Add('RXO', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
          oGrp3.Children.Add('RXR', False, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('COMPONENTS', True, True, gtGroup);
            oGrp4.Children.Add('RXC', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('ENCODING', True, False, gtGroup);
          oGrp3.Children.Add('RXE', False, False, gtSingle);
          oGrp4 := oGrp3.Children.Add('TIMING_ENCODED', False, True, gtGroup);
            oGrp4.Children.Add('TQ1', False, False, gtSingle);
            oGrp4.Children.Add('TQ2', True, True, gtSingle);
          oGrp3.Children.Add('RXR', False, True, gtSingle);
          oGrp3.Children.Add('RXC', True, True, gtSingle);
        oGrp2.Children.Add('RXD', False, False, gtSingle);
        oGrp2.Children.Add('RXR', False, True, gtSingle);
        oGrp2.Children.Add('RXC', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('OBSERVATION', False, True, gtGroup);
          oGrp3.Children.Add('OBX', True, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('RSP_Q11', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RSP_Q11', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('QAK', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QPD', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('QUERY_RESULT_CLUSTER', True, False, gtGroup);
      oGrp1.Children.Add('MFE', False, False, gtSingle);
      oGrp1.Children.Add('LOC', False, False, gtSingle);
      oGrp1.Children.Add('LCH', True, True, gtSingle);
      oGrp1.Children.Add('LRL', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('MF_LOC_DEPT', False, True, gtGroup);
        oGrp2.Children.Add('LDP', False, False, gtSingle);
        oGrp2.Children.Add('LCH', True, True, gtSingle);
        oGrp2.Children.Add('LCC', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('RSP_Z82', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RSP_Z82', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QAK', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QPD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('RCP', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('QUERY_RESPONSE', False, True, gtGroup);
      oGrp2 := oGrp1.Children.Add('PATIENT', True, False, gtGroup);
        oGrp2.Children.Add('PID', False, False, gtSingle);
        oGrp2.Children.Add('PD1', True, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('VISIT', True, False, gtGroup);
          oGrp3.Children.Add('AL1', False, True, gtSingle);
          oGrp3.Children.Add('PV1', False, False, gtSingle);
          oGrp3.Children.Add('PV2', True, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('COMMON_ORDER', False, True, gtGroup);
        oGrp2.Children.Add('ORC', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('TIMING', True, True, gtGroup);
          oGrp3.Children.Add('TQ1', False, False, gtSingle);
          oGrp3.Children.Add('TQ2', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('ORDER_DETAIL', True, False, gtGroup);
          oGrp3.Children.Add('RXO', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
          oGrp3.Children.Add('RXR', False, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('TREATMENT', True, False, gtGroup);
            oGrp4.Children.Add('RXC', False, True, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('ENCODED_ORDER', True, False, gtGroup);
          oGrp3.Children.Add('RXE', False, False, gtSingle);
          oGrp4 := oGrp3.Children.Add('TIMING_ENCODED', True, True, gtGroup);
            oGrp4.Children.Add('TQ1', False, False, gtSingle);
            oGrp4.Children.Add('TQ2', True, True, gtSingle);
          oGrp3.Children.Add('RXR', False, True, gtSingle);
          oGrp3.Children.Add('RXC', True, True, gtSingle);
        oGrp2.Children.Add('RXD', False, False, gtSingle);
        oGrp2.Children.Add('RXR', False, True, gtSingle);
        oGrp2.Children.Add('RXC', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('OBSERVATION', False, True, gtGroup);
          oGrp3.Children.Add('OBX', True, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('RSP_Z86', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RSP_Z86', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QAK', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QPD', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('QUERY_RESPONSE', False, True, gtGroup);
      oGrp2 := oGrp1.Children.Add('PATIENT', True, False, gtGroup);
        oGrp2.Children.Add('PID', False, False, gtSingle);
        oGrp2.Children.Add('PD1', True, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
        oGrp2.Children.Add('AL1', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('COMMON_ORDER', False, True, gtGroup);
        oGrp2.Children.Add('ORC', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('TIMING', True, True, gtGroup);
          oGrp3.Children.Add('TQ1', False, False, gtSingle);
          oGrp3.Children.Add('TQ2', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('ORDER_DETAIL', True, False, gtGroup);
          oGrp3.Children.Add('RXO', False, False, gtSingle);
          oGrp3.Children.Add('RXR', False, True, gtSingle);
          oGrp3.Children.Add('RXC', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('ENCODED_ORDER', True, False, gtGroup);
          oGrp3.Children.Add('RXE', False, False, gtSingle);
          oGrp4 := oGrp3.Children.Add('TIMING_ENCODED', True, True, gtGroup);
            oGrp4.Children.Add('TQ1', False, False, gtSingle);
            oGrp4.Children.Add('TQ2', True, True, gtSingle);
          oGrp3.Children.Add('RXR', False, True, gtSingle);
          oGrp3.Children.Add('RXC', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('DISPENSE', True, False, gtGroup);
          oGrp3.Children.Add('RXD', False, False, gtSingle);
          oGrp3.Children.Add('RXR', False, True, gtSingle);
          oGrp3.Children.Add('RXC', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('GIVE', True, False, gtGroup);
          oGrp3.Children.Add('RXG', False, False, gtSingle);
          oGrp3.Children.Add('RXR', False, True, gtSingle);
          oGrp3.Children.Add('RXC', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('ADMINISTRATION', True, False, gtGroup);
          oGrp3.Children.Add('RXA', False, False, gtSingle);
          oGrp3.Children.Add('RXR', False, True, gtSingle);
          oGrp3.Children.Add('RXC', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('OBSERVATION', False, True, gtGroup);
          oGrp3.Children.Add('OBX', True, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('RSP_Z88', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RSP_Z88', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QAK', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QPD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('RCP', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('QUERY_RESPONSE', False, True, gtGroup);
      oGrp2 := oGrp1.Children.Add('PATIENT', True, False, gtGroup);
        oGrp2.Children.Add('PID', False, False, gtSingle);
        oGrp2.Children.Add('PD1', True, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('ALLERGY', True, False, gtGroup);
          oGrp3.Children.Add('AL1', False, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('VISIT', True, False, gtGroup);
            oGrp4.Children.Add('PV1', False, False, gtSingle);
            oGrp4.Children.Add('PV2', True, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('COMMON_ORDER', False, True, gtGroup);
        oGrp2.Children.Add('ORC', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('TIMING', True, True, gtGroup);
          oGrp3.Children.Add('TQ1', False, False, gtSingle);
          oGrp3.Children.Add('TQ2', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('ORDER_DETAIL', True, False, gtGroup);
          oGrp3.Children.Add('RXO', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
          oGrp3.Children.Add('RXR', False, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('COMPONENT', True, False, gtGroup);
            oGrp4.Children.Add('RXC', False, True, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('ORDER_ENCODED', True, False, gtGroup);
          oGrp3.Children.Add('RXE', False, False, gtSingle);
          oGrp4 := oGrp3.Children.Add('TIMING_ENCODED', True, True, gtGroup);
            oGrp4.Children.Add('TQ1', False, False, gtSingle);
            oGrp4.Children.Add('TQ2', True, True, gtSingle);
          oGrp3.Children.Add('RXR', False, True, gtSingle);
          oGrp3.Children.Add('RXC', True, True, gtSingle);
        oGrp2.Children.Add('RXD', False, False, gtSingle);
        oGrp2.Children.Add('RXR', False, True, gtSingle);
        oGrp2.Children.Add('RXC', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('OBSERVATION', False, True, gtGroup);
          oGrp3.Children.Add('OBX', True, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', False, False, gtSingle);
  oStructure := oStructures.Add('RSP_Z90', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RSP_Z90', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QAK', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QPD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('RCP', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('QUERY_RESPONSE', False, True, gtGroup);
      oGrp2 := oGrp1.Children.Add('PATIENT', True, False, gtGroup);
        oGrp2.Children.Add('PID', False, False, gtSingle);
        oGrp2.Children.Add('PD1', True, False, gtSingle);
        oGrp2.Children.Add('NK1', True, True, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('VISIT', True, False, gtGroup);
          oGrp3.Children.Add('PV1', False, False, gtSingle);
          oGrp3.Children.Add('PV2', True, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('COMMON_ORDER', False, True, gtGroup);
        oGrp2.Children.Add('ORC', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('TIMING', True, True, gtGroup);
          oGrp3.Children.Add('TQ1', False, False, gtSingle);
          oGrp3.Children.Add('TQ2', True, True, gtSingle);
        oGrp2.Children.Add('OBR', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
        oGrp2.Children.Add('CTD', True, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('OBSERVATION', False, True, gtGroup);
          oGrp3.Children.Add('OBX', True, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('SPECIMEN', True, True, gtGroup);
        oGrp2.Children.Add('SPM', False, False, gtSingle);
        oGrp2.Children.Add('OBX', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', False, False, gtSingle);
  oStructure := oStructures.Add('RTB_K13', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RTB_K13', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QAK', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QPD', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('ROW_DEFINITION', True, False, gtGroup);
      oGrp1.Children.Add('RDF', False, False, gtSingle);
      oGrp1.Children.Add('RDT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('RTB_Z74', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RTB_Z74', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QAK', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QPD', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('ROW_DEFINITION', True, False, gtGroup);
      oGrp1.Children.Add('RDF', False, False, gtSingle);
      oGrp1.Children.Add('RDT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('SDR_S31', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('SDR_S31', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('ANTIMICROBIAL_DEVICE_DATA', False, True, gtChoice);
      oGrp1.Children.Add('SDD', False, False, gtSingle);
      oGrp1.Children.Add('SCD', True, True, gtSingle);
  oStructure := oStructures.Add('SDR_S32', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('SDR_S32', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('ANTIMICROBIAL_DEVICE_CYCLE_DATA', False, True, gtChoice);
      oGrp1.Children.Add('SDD', False, False, gtSingle);
      oGrp1.Children.Add('SCD', True, True, gtSingle);
  oStructure := oStructures.Add('SIU_S12', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('SIU_S12', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SCH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('TQ1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', True, True, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp1.Children.Add('PD1', True, False, gtSingle);
      oGrp1.Children.Add('PV1', True, False, gtSingle);
      oGrp1.Children.Add('PV2', True, False, gtSingle);
      oGrp1.Children.Add('OBX', True, True, gtSingle);
      oGrp1.Children.Add('DG1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('RESOURCES', False, True, gtGroup);
      oGrp1.Children.Add('RGS', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('SERVICE', True, True, gtGroup);
        oGrp2.Children.Add('AIS', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('GENERAL_RESOURCE', True, True, gtGroup);
        oGrp2.Children.Add('AIG', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('LOCATION_RESOURCE', True, True, gtGroup);
        oGrp2.Children.Add('AIL', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PERSONNEL_RESOURCE', True, True, gtGroup);
        oGrp2.Children.Add('AIP', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('SLR_S28', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('SLR_S28', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SLT', False, True, gtSingle);
  oStructure := oStructures.Add('SQM_S25', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('SQM_S25', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRF', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('REQUEST', True, False, gtGroup);
      oGrp1.Children.Add('ARQ', False, False, gtSingle);
      oGrp1.Children.Add('APR', True, False, gtSingle);
      oGrp1.Children.Add('PID', True, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('RESOURCES', False, True, gtGroup);
        oGrp2.Children.Add('RGS', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('SERVICE', True, True, gtGroup);
          oGrp3.Children.Add('AIS', False, False, gtSingle);
          oGrp3.Children.Add('APR', True, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('GENERAL_RESOURCE', True, True, gtGroup);
          oGrp3.Children.Add('AIG', False, False, gtSingle);
          oGrp3.Children.Add('APR', True, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('PERSONNEL_RESOURCE', True, True, gtGroup);
          oGrp3.Children.Add('AIP', False, False, gtSingle);
          oGrp3.Children.Add('APR', True, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('LOCATION_RESOURCE', True, True, gtGroup);
          oGrp3.Children.Add('AIL', False, False, gtSingle);
          oGrp3.Children.Add('APR', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('SQR_S25', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('SQR_S25', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('QAK', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('SCHEDULE', True, True, gtGroup);
      oGrp1.Children.Add('SCH', False, False, gtSingle);
      oGrp1.Children.Add('TQ1', True, True, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATIENT', True, False, gtGroup);
        oGrp2.Children.Add('PID', False, False, gtSingle);
        oGrp2.Children.Add('PV1', True, False, gtSingle);
        oGrp2.Children.Add('PV2', True, False, gtSingle);
        oGrp2.Children.Add('DG1', True, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('RESOURCES', False, True, gtGroup);
        oGrp2.Children.Add('RGS', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('SERVICE', True, True, gtGroup);
          oGrp3.Children.Add('AIS', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('GENERAL_RESOURCE', True, True, gtGroup);
          oGrp3.Children.Add('AIG', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('PERSONNEL_RESOURCE', True, True, gtGroup);
          oGrp3.Children.Add('AIP', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('LOCATION_RESOURCE', True, True, gtGroup);
          oGrp3.Children.Add('AIL', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('SRM_S01', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('SRM_S01', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ARQ', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('APR', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', True, True, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp1.Children.Add('PV1', True, False, gtSingle);
      oGrp1.Children.Add('PV2', True, False, gtSingle);
      oGrp1.Children.Add('OBX', True, True, gtSingle);
      oGrp1.Children.Add('DG1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('RESOURCES', False, True, gtGroup);
      oGrp1.Children.Add('RGS', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('SERVICE', True, True, gtGroup);
        oGrp2.Children.Add('AIS', False, False, gtSingle);
        oGrp2.Children.Add('APR', True, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('GENERAL_RESOURCE', True, True, gtGroup);
        oGrp2.Children.Add('AIG', False, False, gtSingle);
        oGrp2.Children.Add('APR', True, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('LOCATION_RESOURCE', True, True, gtGroup);
        oGrp2.Children.Add('AIL', False, False, gtSingle);
        oGrp2.Children.Add('APR', True, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PERSONNEL_RESOURCE', True, True, gtGroup);
        oGrp2.Children.Add('AIP', False, False, gtSingle);
        oGrp2.Children.Add('APR', True, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('SRR_S01', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('SRR_S01', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('SCHEDULE', True, False, gtGroup);
      oGrp1.Children.Add('SCH', False, False, gtSingle);
      oGrp1.Children.Add('TQ1', True, True, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATIENT', True, True, gtGroup);
        oGrp2.Children.Add('PID', False, False, gtSingle);
        oGrp2.Children.Add('PV1', True, False, gtSingle);
        oGrp2.Children.Add('PV2', True, False, gtSingle);
        oGrp2.Children.Add('DG1', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('RESOURCES', False, True, gtGroup);
        oGrp2.Children.Add('RGS', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('SERVICE', True, True, gtGroup);
          oGrp3.Children.Add('AIS', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('GENERAL_RESOURCE', True, True, gtGroup);
          oGrp3.Children.Add('AIG', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('LOCATION_RESOURCE', True, True, gtGroup);
          oGrp3.Children.Add('AIL', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('PERSONNEL_RESOURCE', True, True, gtGroup);
          oGrp3.Children.Add('AIP', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('SSR_U04', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('SSR_U04', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EQU', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('SPECIMEN_CONTAINER', False, True, gtGroup);
      oGrp1.Children.Add('SAC', False, False, gtSingle);
      oGrp1.Children.Add('SPM', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('ROL', True, False, gtSingle);
  oStructure := oStructures.Add('SSU_U03', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('SSU_U03', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EQU', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('SPECIMEN_CONTAINER', False, True, gtGroup);
      oGrp1.Children.Add('SAC', False, False, gtSingle);
      oGrp1.Children.Add('OBX', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('SPECIMEN', True, True, gtGroup);
        oGrp2.Children.Add('SPM', False, False, gtSingle);
        oGrp2.Children.Add('OBX', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('ROL', True, False, gtSingle);
  oStructure := oStructures.Add('STC_S33', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('STC_S33', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SCP', False, True, gtSingle);
  oStructure := oStructures.Add('SUR_P09', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('SUR_P09', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('FACILITY', False, True, gtGroup);
      oGrp1.Children.Add('FAC', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('PRODUCT', False, True, gtGroup);
        oGrp2.Children.Add('PSH', False, False, gtSingle);
        oGrp2.Children.Add('PDC', False, False, gtSingle);
      oGrp1.Children.Add('PSH', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('FACILITY_DETAIL', False, True, gtGroup);
        oGrp2.Children.Add('FAC', False, False, gtSingle);
        oGrp2.Children.Add('PDC', False, False, gtSingle);
        oGrp2.Children.Add('NTE', False, False, gtSingle);
      oGrp1.Children.Add('ED', False, False, gtSingle);
  oStructure := oStructures.Add('TCU_U10', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('TCU_U10', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EQU', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('TEST_CONFIGURATION', False, True, gtGroup);
      oGrp1.Children.Add('SPM', True, False, gtSingle);
      oGrp1.Children.Add('TCC', False, True, gtSingle);
    oStructure.SegmentMap.Children.Add('ROL', True, False, gtSingle);
  oStructure := oStructures.Add('UDM_Q05', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('UDM_Q05', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('URD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('URS', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DSP', False, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('VXQ_V01', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('VXQ_V01', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRF', True, False, gtSingle);
  oStructure := oStructures.Add('VXR_V03', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('VXR_V03', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRF', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NK1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT_VISIT', True, False, gtGroup);
      oGrp1.Children.Add('PV1', False, False, gtSingle);
      oGrp1.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('GT1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('INSURANCE', True, True, gtGroup);
      oGrp1.Children.Add('IN1', False, False, gtSingle);
      oGrp1.Children.Add('IN2', True, False, gtSingle);
      oGrp1.Children.Add('IN3', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('ORDER', True, True, gtGroup);
      oGrp1.Children.Add('ORC', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('TIMING', True, True, gtGroup);
        oGrp2.Children.Add('TQ1', False, False, gtSingle);
        oGrp2.Children.Add('TQ2', True, True, gtSingle);
      oGrp1.Children.Add('RXA', False, False, gtSingle);
      oGrp1.Children.Add('RXR', True, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('OBSERVATION', True, True, gtGroup);
        oGrp2.Children.Add('OBX', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('VXU_V04', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('VXU_V04', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NK1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', True, False, gtGroup);
      oGrp1.Children.Add('PV1', False, False, gtSingle);
      oGrp1.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('GT1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('INSURANCE', True, True, gtGroup);
      oGrp1.Children.Add('IN1', False, False, gtSingle);
      oGrp1.Children.Add('IN2', True, False, gtSingle);
      oGrp1.Children.Add('IN3', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('ORDER', True, True, gtGroup);
      oGrp1.Children.Add('ORC', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('TIMING', True, True, gtGroup);
        oGrp2.Children.Add('TQ1', False, False, gtSingle);
        oGrp2.Children.Add('TQ2', True, True, gtSingle);
      oGrp1.Children.Add('RXA', False, False, gtSingle);
      oGrp1.Children.Add('RXR', True, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('OBSERVATION', True, True, gtGroup);
        oGrp2.Children.Add('OBX', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('VXX_V02', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('VXX_V02', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SFT', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('UAC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRF', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', False, True, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp1.Children.Add('NK1', True, True, gtSingle);
End;

procedure Definitions26LoadEvents(oEvents : THL7V2ModelEvents);
Var
  oEvent : THL7V2ModelEvent;
Begin
  oEvent := oEvents.Add('A01', 'ADT/ACK - Admit/visit notification');
    oEvent.Messages.Add('ADT', 'ADT_A01', 'ACK', 'ACK');
  oEvent := oEvents.Add('A02', 'ADT/ACK - Transfer a patient');
    oEvent.Messages.Add('ADT', 'ADT_A02', 'ACK', 'ACK');
  oEvent := oEvents.Add('A03', 'ADT/ACK -  Discharge/end visit');
    oEvent.Messages.Add('ADT', 'ADT_A03', 'ACK', 'ACK');
  oEvent := oEvents.Add('A04', 'ADT/ACK -  Register a patient');
    oEvent.Messages.Add('ADT', 'ADT_A01', 'ACK', 'ACK');
  oEvent := oEvents.Add('A05', 'ADT/ACK -  Pre-admit a patient');
    oEvent.Messages.Add('ADT', 'ADT_A05', 'ACK', 'ACK');
  oEvent := oEvents.Add('A06', 'ADT/ACK -  Change an outpatient to an inpatient');
    oEvent.Messages.Add('ADT', 'ADT_A06', 'ACK', 'ACK');
  oEvent := oEvents.Add('A07', 'ADT/ACK -  Change an inpatient to an outpatient');
    oEvent.Messages.Add('ADT', 'ADT_A06', 'ACK', 'ACK');
  oEvent := oEvents.Add('A08', 'ADT/ACK -  Update patient information');
    oEvent.Messages.Add('ADT', 'ADT_A01', 'ACK', 'ACK');
  oEvent := oEvents.Add('A09', 'ADT/ACK -  Patient departing - tracking');
    oEvent.Messages.Add('ADT', 'ADT_A09', 'ACK', 'ACK');
  oEvent := oEvents.Add('A10', 'ADT/ACK -  Patient arriving - tracking');
    oEvent.Messages.Add('ADT', 'ADT_A09', 'ACK', 'ACK');
  oEvent := oEvents.Add('A11', 'ADT/ACK -  Cancel admit/visit notification');
    oEvent.Messages.Add('ADT', 'ADT_A09', 'ACK', 'ACK');
  oEvent := oEvents.Add('A12', 'ADT/ACK -  Cancel transfer');
    oEvent.Messages.Add('ADT', 'ADT_A12', 'ACK', 'ACK');
  oEvent := oEvents.Add('A13', 'ADT/ACK -  Cancel discharge/end visit');
    oEvent.Messages.Add('ADT', 'ADT_A01', 'ACK', 'ACK');
  oEvent := oEvents.Add('A14', 'ADT/ACK -  Pending admit');
    oEvent.Messages.Add('ADT', 'ADT_A05', 'ACK', 'ACK');
  oEvent := oEvents.Add('A15', 'ADT/ACK -  Pending transfer');
    oEvent.Messages.Add('ADT', 'ADT_A15', 'ACK', 'ACK');
  oEvent := oEvents.Add('A16', 'ADT/ACK -  Pending discharge');
    oEvent.Messages.Add('ADT', 'ADT_A16', 'ACK', 'ACK');
  oEvent := oEvents.Add('A17', 'ADT/ACK -  Swap patients');
    oEvent.Messages.Add('ADT', 'ADT_A17', 'ACK', 'ACK');
  oEvent := oEvents.Add('A18', 'ADT/ACK -  Merge patient information (for backward compatibility only)');
    oEvent.Messages.Add('ADT', 'ADT_A18', 'ACK', 'ACK');
  oEvent := oEvents.Add('A19', 'QRY/ADR -  Patient query');
    oEvent.Messages.Add('QRY', 'QRY_A19', 'ADR', 'ADR_A19');
  oEvent := oEvents.Add('A20', 'ADT/ACK -  Bed status update');
    oEvent.Messages.Add('ADT', 'ADT_A20', 'ACK', 'ACK');
  oEvent := oEvents.Add('A21', 'ADT/ACK -  Patient goes on a "leave of absence"');
    oEvent.Messages.Add('ADT', 'ADT_A21', 'ACK', 'ACK');
  oEvent := oEvents.Add('A22', 'ADT/ACK -  Patient returns from a "leave of absence"');
    oEvent.Messages.Add('ADT', 'ADT_A21', 'ACK', 'ACK');
  oEvent := oEvents.Add('A23', 'ADT/ACK -  Delete a patient record');
    oEvent.Messages.Add('ADT', 'ADT_A21', 'ACK', 'ACK');
  oEvent := oEvents.Add('A24', 'ADT/ACK -  Link patient information');
    oEvent.Messages.Add('ADT', 'ADT_A24', 'ACK', 'ACK');
  oEvent := oEvents.Add('A25', 'ADT/ACK -  Cancel pending discharge');
    oEvent.Messages.Add('ADT', 'ADT_A21', 'ACK', 'ACK');
  oEvent := oEvents.Add('A26', 'ADT/ACK -  Cancel pending transfer');
    oEvent.Messages.Add('ADT', 'ADT_A21', 'ACK', 'ACK');
  oEvent := oEvents.Add('A27', 'ADT/ACK -  Cancel pending admit');
    oEvent.Messages.Add('ADT', 'ADT_A21', 'ACK', 'ACK');
  oEvent := oEvents.Add('A28', 'ADT/ACK -  Add person information');
    oEvent.Messages.Add('ADT', 'ADT_A05', 'ACK', 'ACK');
  oEvent := oEvents.Add('A29', 'ADT/ACK -  Delete person information');
    oEvent.Messages.Add('ADT', 'ADT_A21', 'ACK', 'ACK');
  oEvent := oEvents.Add('A30', 'ADT/ACK -  Merge person information (for backward compatibility only)');
    oEvent.Messages.Add('ADT', 'ADT_A30', 'ACK', 'ACK');
  oEvent := oEvents.Add('A31', 'ADT/ACK -  Update person information');
    oEvent.Messages.Add('ADT', 'ADT_A05', 'ACK', 'ACK');
  oEvent := oEvents.Add('A32', 'ADT/ACK -  Cancel patient arriving - tracking');
    oEvent.Messages.Add('ADT', 'ADT_A21', 'ACK', 'ACK');
  oEvent := oEvents.Add('A33', 'ADT/ACK -  Cancel patient departing - tracking');
    oEvent.Messages.Add('ADT', 'ADT_A21', 'ACK', 'ACK');
  oEvent := oEvents.Add('A34', 'ADT/ACK -  Merge patient information - patient ID only (for backward compatibili');
    oEvent.Messages.Add('ADT', 'ADT_A30', 'ACK', 'ACK');
  oEvent := oEvents.Add('A35', 'ADT/ACK -  Merge patient information - account number only (for backward compati');
    oEvent.Messages.Add('ADT', 'ADT_A30', 'ACK', 'ACK');
  oEvent := oEvents.Add('A36', 'ADT/ACK -  Merge patient information - patient ID and account number (for backwa');
    oEvent.Messages.Add('ADT', 'ADT_A30', 'ACK', 'ACK');
  oEvent := oEvents.Add('A37', 'ADT/ACK -  Unlink patient information');
    oEvent.Messages.Add('ADT', 'ADT_A37', 'ACK', 'ACK');
  oEvent := oEvents.Add('A38', 'ADT/ACK - Cancel pre-admit');
    oEvent.Messages.Add('ADT', 'ADT_A38', 'ACK', 'ACK');
  oEvent := oEvents.Add('A39', 'ADT/ACK - Merge person - patient ID (for backward compatibility only)');
    oEvent.Messages.Add('ADT', 'ADT_A39', 'ACK', 'ACK');
  oEvent := oEvents.Add('A40', 'ADT/ACK - Merge patient - patient identifier list');
    oEvent.Messages.Add('ADT', 'ADT_A39', 'ACK', 'ACK');
  oEvent := oEvents.Add('A41', 'ADT/ACK - Merge account - patient account number');
    oEvent.Messages.Add('ADT', 'ADT_A39', 'ACK', 'ACK');
  oEvent := oEvents.Add('A42', 'ADT/ACK - Merge visit - visit number');
    oEvent.Messages.Add('ADT', 'ADT_A39', 'ACK', 'ACK');
  oEvent := oEvents.Add('A43', 'ADT/ACK - Move patient information - patient identifier list');
    oEvent.Messages.Add('ADT', 'ADT_A43', 'ACK', 'ACK');
  oEvent := oEvents.Add('A44', 'ADT/ACK - Move account information - patient account number');
    oEvent.Messages.Add('ADT', 'ADT_A43', 'ACK', 'ACK');
  oEvent := oEvents.Add('A45', 'ADT/ACK - Move visit information - visit number');
    oEvent.Messages.Add('ADT', 'ADT_A45', 'ACK', 'ACK');
  oEvent := oEvents.Add('A46', 'ADT/ACK - Change patient ID (for backward compatibility only)');
    oEvent.Messages.Add('ADT', 'ADT_A30', 'ACK', 'ACK');
  oEvent := oEvents.Add('A47', 'ADT/ACK - Change patient identifier list');
    oEvent.Messages.Add('ADT', 'ADT_A30', 'ACK', 'ACK');
  oEvent := oEvents.Add('A48', 'ADT/ACK - Change alternate patient ID (for backward compatibility only)');
    oEvent.Messages.Add('ADT', 'ADT_A30', 'ACK', 'ACK');
  oEvent := oEvents.Add('A49', 'ADT/ACK - Change patient account number');
    oEvent.Messages.Add('ADT', 'ADT_A30', 'ACK', 'ACK');
  oEvent := oEvents.Add('A50', 'ADT/ACK - Change visit number');
    oEvent.Messages.Add('ADT', 'ADT_A50', 'ACK', 'ACK');
  oEvent := oEvents.Add('A51', 'ADT/ACK - Change alternate visit ID');
    oEvent.Messages.Add('ADT', 'ADT_A50', 'ACK', 'ACK');
  oEvent := oEvents.Add('A52', 'ADT/ACK - Cancel leave of absence for a patient');
    oEvent.Messages.Add('ADT', 'ADT_A52', 'ACK', 'ACK');
  oEvent := oEvents.Add('A53', 'ADT/ACK - Cancel patient returns from a leave of absence');
    oEvent.Messages.Add('ADT', 'ADT_A52', 'ACK', 'ACK');
  oEvent := oEvents.Add('A54', 'ADT/ACK - Change attending doctor');
    oEvent.Messages.Add('ADT', 'ADT_A54', 'ACK', 'ACK');
  oEvent := oEvents.Add('A55', 'ADT/ACK - Cancel change attending doctor');
    oEvent.Messages.Add('ADT', 'ADT_A54', 'ACK', 'ACK');
  oEvent := oEvents.Add('A60', 'ADT/ACK - Update allergy information');
    oEvent.Messages.Add('ADT', 'ADT_A60', 'ACK', 'ACK');
  oEvent := oEvents.Add('A61', 'ADT/ACK - Change consulting doctor');
    oEvent.Messages.Add('ADT', 'ADT_A61', 'ACK', 'ACK');
  oEvent := oEvents.Add('A62', 'ADT/ACK - Cancel change consulting doctor');
    oEvent.Messages.Add('ADT', 'ADT_A61', 'ACK', 'ACK');
  oEvent := oEvents.Add('B01', 'PMU/ACK - Add personnel record');
    oEvent.Messages.Add('PMU', 'PMU_B01', 'ACK', 'ACK');
  oEvent := oEvents.Add('B02', 'PMU/ACK - Update personnel record');
    oEvent.Messages.Add('PMU', 'PMU_B01', 'ACK', 'ACK');
  oEvent := oEvents.Add('B03', 'PMU/ACK - Delete personnel re cord');
    oEvent.Messages.Add('PMU', 'PMU_B03', 'ACK', 'ACK');
  oEvent := oEvents.Add('B04', 'PMU/ACK - Active practicing person');
    oEvent.Messages.Add('PMU', 'PMU_B04', 'ACK', 'ACK');
  oEvent := oEvents.Add('B05', 'PMU/ACK - Deactivate practicing person');
    oEvent.Messages.Add('PMU', 'PMU_B04', 'ACK', 'ACK');
  oEvent := oEvents.Add('B06', 'PMU/ACK - Terminate practicing person');
    oEvent.Messages.Add('PMU', 'PMU_B04', 'ACK', 'ACK');
  oEvent := oEvents.Add('B07', 'PMU/ACK - Grant Certificate/Permission');
    oEvent.Messages.Add('PMU', 'PMU_B07', 'ACK', 'ACK');
  oEvent := oEvents.Add('B08', 'PMU/ACK - Revoke Certificate/Permission');
    oEvent.Messages.Add('PMU', 'PMU_B08', 'ACK', 'ACK');
  oEvent := oEvents.Add('C01', 'CRM - Register a patient on a clinical trial');
    oEvent.Messages.Add('CRM', 'CRM_C01', 'NUL', 'NUL');
  oEvent := oEvents.Add('C02', 'CRM - Cancel a patient registration on clinical trial (for clerical mistakes onl');
    oEvent.Messages.Add('CRM', 'CRM_C01', 'NUL', 'NUL');
  oEvent := oEvents.Add('C03', 'CRM - Correct/update registration information');
    oEvent.Messages.Add('CRM', 'CRM_C01', 'NUL', 'NUL');
  oEvent := oEvents.Add('C04', 'CRM - Patient has gone off a clinical trial');
    oEvent.Messages.Add('CRM', 'CRM_C01', 'NUL', 'NUL');
  oEvent := oEvents.Add('C05', 'CRM - Patient enters phase of clinical trial');
    oEvent.Messages.Add('CRM', 'CRM_C01', 'NUL', 'NUL');
  oEvent := oEvents.Add('C06', 'CRM - Cancel patient entering a phase (clerical mistake)');
    oEvent.Messages.Add('CRM', 'CRM_C01', 'NUL', 'NUL');
  oEvent := oEvents.Add('C07', 'CRM - Correct/update phase information');
    oEvent.Messages.Add('CRM', 'CRM_C01', 'NUL', 'NUL');
  oEvent := oEvents.Add('C08', 'CRM - Patient has gone off phase of clinical trial');
    oEvent.Messages.Add('CRM', 'CRM_C01', 'NUL', 'NUL');
  oEvent := oEvents.Add('C09', 'CSU - Automated time intervals for reporting, like monthly');
    oEvent.Messages.Add('CSU', 'CSU_C09', 'NUL', 'NUL');
  oEvent := oEvents.Add('C10', 'CSU - Patient completes the clinical trial');
    oEvent.Messages.Add('CSU', 'CSU_C09', 'NUL', 'NUL');
  oEvent := oEvents.Add('C11', 'CSU - Patient completes a phase of the clinical trial');
    oEvent.Messages.Add('CSU', 'CSU_C09', 'NUL', 'NUL');
  oEvent := oEvents.Add('C12', 'CSU - Update/correction of patient order/result information');
    oEvent.Messages.Add('CSU', 'CSU_C09', 'NUL', 'NUL');
  oEvent := oEvents.Add('E01', 'Submit HealthCare Services Invoice');
    oEvent.Messages.Add('EHC', 'EHC_E01', 'NUL', 'NUL');
  oEvent := oEvents.Add('E02', 'Cancel HealthCare Services Invoice');
    oEvent.Messages.Add('EHC', 'EHC_E02', 'NUL', 'NUL');
  oEvent := oEvents.Add('E03', 'HealthCare Services Invoice Status');
    oEvent.Messages.Add('QBP', 'QBP_E03', 'RSP', 'RSP_E03');
  oEvent := oEvents.Add('E04', 'Re-Assess HealthCare Services Invoice Request');
    oEvent.Messages.Add('EHC', 'EHC_E04', 'NUL', 'NUL');
  oEvent := oEvents.Add('E10', 'Edit/Adjudication Results');
    oEvent.Messages.Add('EHC', 'EHC_E10', 'NUL', 'NUL');
  oEvent := oEvents.Add('E12', 'Request Additional Information');
    oEvent.Messages.Add('EHC', 'EHC_E12', 'NUL', 'NUL');
  oEvent := oEvents.Add('E13', 'Additional Information Response');
    oEvent.Messages.Add('EHC', 'EHC_E13', 'NUL', 'NUL');
  oEvent := oEvents.Add('E15', 'Payment/Remittance Advice');
    oEvent.Messages.Add('EHC', 'EHC_E15', 'NUL', 'NUL');
  oEvent := oEvents.Add('E20', 'Submit Authorization Request');
    oEvent.Messages.Add('EHC', 'EHC_E20', 'NUL', 'NUL');
  oEvent := oEvents.Add('E21', 'Cancel Authorization Request');
    oEvent.Messages.Add('EHC', 'EHC_E21', 'NUL', 'NUL');
  oEvent := oEvents.Add('E22', 'Authorization Request Status');
    oEvent.Messages.Add('QBP', 'QBP_E22', 'RSP', 'RSP_E22');
  oEvent := oEvents.Add('E24', 'Authorization Response');
    oEvent.Messages.Add('EHC', 'EHC_E24', 'NUL', 'NUL');
  oEvent := oEvents.Add('I01', 'RQI/RPI - Request for insurance information');
    oEvent.Messages.Add('RQI', 'RQI_I01', 'RPI', 'RPI_I01');
  oEvent := oEvents.Add('I02', 'RQI/RPL - Request/receipt of patient selection display list');
    oEvent.Messages.Add('RQI', 'RQI_I01', 'RPL', 'RPL_I02');
  oEvent := oEvents.Add('I03', 'RQI/RPR - Request/receipt of patient selection list');
    oEvent.Messages.Add('RQI', 'RQI_I01', 'RPR', 'RPR_I03');
  oEvent := oEvents.Add('I04', 'RQD/RPI - Request for patient demographic data');
    oEvent.Messages.Add('RQP', 'RQP_I04', 'RPI', 'RPI_I04');
  oEvent := oEvents.Add('I05', 'RQC/RCI - Request for patient clinical information');
    oEvent.Messages.Add('RQC', 'RQC_I05', 'RCI', 'RCI_I05');
  oEvent := oEvents.Add('I06', 'RQC/RCL - Request/receipt of clinical data listing');
    oEvent.Messages.Add('RQC', 'RQC_I05', 'RCL', 'RCL_I06');
  oEvent := oEvents.Add('I07', 'PIN/ACK - Unsolicited insurance information');
    oEvent.Messages.Add('PIN', 'RQI_I01', 'ACK', 'ACK');
  oEvent := oEvents.Add('I08', 'RQA/RPA - Request for treatment authorization information');
    oEvent.Messages.Add('RQA', 'RQA_I08', 'RPA', 'RPA_I08');
  oEvent := oEvents.Add('I09', 'RQA/RPA - Request for modification to an authorization');
    oEvent.Messages.Add('RQA', 'RQA_I08', 'RPA', 'RPA_I08');
  oEvent := oEvents.Add('I10', 'RQA/RPA - Request for resubmission of an authorization');
    oEvent.Messages.Add('RQA', 'RQA_I08', 'RPA', 'RPA_I08');
  oEvent := oEvents.Add('I11', 'RQA/RPA - Request for cancellation of an authorization');
    oEvent.Messages.Add('RQA', 'RQA_I08', 'RPA', 'RPA_I08');
  oEvent := oEvents.Add('I12', 'REF/RRI - Patient referral');
    oEvent.Messages.Add('REF', 'REF_I12', 'RRI', 'RRI_I12');
  oEvents.Add('I13', 'REF/RRI - Modify patient referral');
  oEvents.Add('I14', 'REF/RRI - Cancel patient referral');
  oEvents.Add('I15', 'REF/RRI - Request patient referral status');
  oEvent := oEvents.Add('J01', 'QCN/ACK - Cancel query/acknowledge message');
    oEvent.Messages.Add('QCN', 'QCN_J01', 'ACK', 'ACK');
  oEvent := oEvents.Add('J02', 'QSX/ACK - Cancel subscription/acknowledge message');
    oEvent.Messages.Add('QSX', 'QCN_J01', 'ACK', 'ACK');
  oEvent := oEvents.Add('K11', 'RSP - Segment pattern response in response to QBP^Q11');
    oEvent.Messages.Add('RSP', 'RSP_K11', 'NUL', 'NUL');
  oEvent := oEvents.Add('K13', 'RTB - Tabular response in response to QBP^Q13');
    oEvent.Messages.Add('RTB', 'RTB_K13', 'NUL', 'NUL');
  oEvent := oEvents.Add('K15', 'RDY - Display response in response to QBP^Q15');
    oEvent.Messages.Add('RDY', 'RDY_K15', 'NUL', 'NUL');
  oEvent := oEvents.Add('K21', 'RSP - Get person demographics response');
    oEvent.Messages.Add('RSP', 'RSP_K21', 'NUL', 'NUL');
  oEvent := oEvents.Add('K22', 'RSP - Find candidates response');
    oEvent.Messages.Add('RSP', 'RSP_K21', 'NUL', 'NUL');
  oEvent := oEvents.Add('K23', 'RSP - Get corresponding identifiers response');
    oEvent.Messages.Add('RSP', 'RSP_K23', 'NUL', 'NUL');
  oEvent := oEvents.Add('K24', 'RSP - Allocate identifiers response');
    oEvent.Messages.Add('RSP', 'RSP_K23', 'NUL', 'NUL');
  oEvent := oEvents.Add('K25', 'RSP - Personnel Information by Segment Response');
    oEvent.Messages.Add('RSP', 'RSP_K25', 'NUL', 'NUL');
  oEvent := oEvents.Add('K31', 'RSP -Dispense History Response');
    oEvent.Messages.Add('RSP', 'RSP_K31', 'NUL', 'NUL');
  oEvent := oEvents.Add('M01', 'MFN/MFK - Master file not otherwise specified (for backward compatibility only)');
    oEvent.Messages.Add('MFN', 'MFN_M01', 'MFK', 'MFK_M01');
  oEvent := oEvents.Add('M02', 'MFN/MFK - Master file - staff practitioner');
    oEvent.Messages.Add('MFN', 'MFN_M02', 'MFK', 'MFK_M01');
  oEvent := oEvents.Add('M03', 'MFN/MFK - Master file - test/observation (for backward compatibility only)');
    oEvent.Messages.Add('MFN', 'MFN_M03', 'MFK', 'MFK_M01');
  oEvent := oEvents.Add('M04', 'MFN/MFK - Master files charge description');
    oEvent.Messages.Add('MFN', 'MFN_M04', 'MFK', 'MFK_M01');
  oEvent := oEvents.Add('M05', 'MFN/MFK - Patient location master file');
    oEvent.Messages.Add('MFN', 'MFN_M05', 'MFK', 'MFK_M01');
  oEvent := oEvents.Add('M06', 'MFN/MFK - Clinical study with phases and schedules master file');
    oEvent.Messages.Add('MFN', 'MFN_M06', 'MFK', 'MFK_M01');
  oEvent := oEvents.Add('M07', 'MFN/MFK - Clinical study without phases but with schedules master file');
    oEvent.Messages.Add('MFN', 'MFN_M07', 'MFK', 'MFK_M01');
  oEvent := oEvents.Add('M08', 'MFN/MFK - Test/observation (numeric) master file');
    oEvent.Messages.Add('MFN', 'MFN_M08', 'MFK', 'MFK_M01');
  oEvent := oEvents.Add('M09', 'MFN/MFK - Test/observation (categorical) master file');
    oEvent.Messages.Add('MFN', 'MFN_M09', 'MFK', 'MFK_M01');
  oEvent := oEvents.Add('M10', 'MFN/MFK - Test /observation batteries master file');
    oEvent.Messages.Add('MFN', 'MFN_M10', 'MFK', 'MFK_M01');
  oEvent := oEvents.Add('M11', 'MFN/MFK - Test/calculated observations master file');
    oEvent.Messages.Add('MFN', 'MFN_M11', 'MFK', 'MFK_M01');
  oEvent := oEvents.Add('M12', 'MFN/MFK - Master file notification message');
    oEvent.Messages.Add('MFN', 'MFN_M12', 'MFK', 'MFK_M01');
  oEvent := oEvents.Add('M13', 'MFN/MFK - Master file notification - general');
    oEvent.Messages.Add('MFN', 'MFN_M13', 'MFK', 'MFK_M01');
  oEvent := oEvents.Add('M14', 'MFN/MFK - Master file notification - site defined');
    oEvent.Messages.Add('MFN', 'MFN_Znn', 'MFK', 'MFK_M01');
  oEvent := oEvents.Add('M15', 'MFN/MFK - Inventory item master file notification');
    oEvent.Messages.Add('MFN', 'MFN_M15', 'MFK', 'MFK_M01');
  oEvent := oEvents.Add('M16', 'MFN/MFK - Master File Notification Inventory Item Enhanced');
    oEvent.Messages.Add('MFN', 'MFN_M16', 'MFK', 'MFK_M01');
  oEvent := oEvents.Add('M17', 'DRG Master File Message');
    oEvent.Messages.Add('MFN', 'MFN_M17', 'MFK', 'MFK_M01');
  oEvent := oEvents.Add('N01', 'NMQ/NMR - Application management query message');
    oEvent.Messages.Add('NMQ', 'NMQ_N01', 'NMR', 'NMR_N01');
  oEvent := oEvents.Add('N02', 'NMD/ACK - Application management data message (unsolicited)');
    oEvent.Messages.Add('NMD', 'NMD_N02', 'ACK', 'ACK');
  oEvent := oEvents.Add('O01', 'ORM - Order message (also RDE, RDS, RGV, RAS)');
    oEvent.Messages.Add('ORM', 'ORM_O01', 'NUL', 'NUL');
  oEvent := oEvents.Add('O02', 'ORR - Order response (also RRE, RRD, RRG, RRA)');
    oEvent.Messages.Add('ORR', 'ORR_O02', 'NUL', 'NUL');
  oEvent := oEvents.Add('O03', 'OMD - Diet order');
    oEvent.Messages.Add('OMD', 'OMD_O03', 'NUL', 'NUL');
  oEvent := oEvents.Add('O04', 'ORD - Diet order acknowledgment');
    oEvent.Messages.Add('ORD', 'ORD_O04', 'NUL', 'NUL');
  oEvent := oEvents.Add('O05', 'OMS - Stock requisition order');
    oEvent.Messages.Add('OMS', 'OMS_O05', 'NUL', 'NUL');
  oEvent := oEvents.Add('O06', 'ORS - Stock requisition acknowledgment');
    oEvent.Messages.Add('ORS', 'ORS_O06', 'NUL', 'NUL');
  oEvent := oEvents.Add('O07', 'OMN - Non-stock requisition order');
    oEvent.Messages.Add('OMN', 'OMN_O07', 'NUL', 'NUL');
  oEvent := oEvents.Add('O08', 'ORN - Non-stock requisition acknowledgment');
    oEvent.Messages.Add('ORN', 'ORN_O08', 'NUL', 'NUL');
  oEvent := oEvents.Add('O09', 'OMP - Pharmacy/treatment order');
    oEvent.Messages.Add('OMP', 'OMP_O09', 'NUL', 'NUL');
  oEvent := oEvents.Add('O10', 'ORP - Pharmacy/treatment order acknowledgment');
    oEvent.Messages.Add('ORP', 'ORP_O10', 'NUL', 'NUL');
  oEvent := oEvents.Add('O11', 'RDE - Pharmacy/treatment encoded order');
    oEvent.Messages.Add('RDE', 'RDE_O11', 'NUL', 'NUL');
  oEvent := oEvents.Add('O12', 'RRE - Pharmacy/treatment encoded order acknowledgment');
    oEvent.Messages.Add('RRE', 'RRE_O12', 'NUL', 'NUL');
  oEvent := oEvents.Add('O13', 'RDS - Pharmacy/treatment dispense');
    oEvent.Messages.Add('RDS', 'RDS_O13', 'NUL', 'NUL');
  oEvent := oEvents.Add('O14', 'RRD - Pharmacy/treatment dispense acknowledgment');
    oEvent.Messages.Add('RRD', 'RRD_O14', 'NUL', 'NUL');
  oEvent := oEvents.Add('O15', 'RGV - Pharmacy/treatment give');
    oEvent.Messages.Add('RGV', 'RGV_O15', 'NUL', 'NUL');
  oEvent := oEvents.Add('O16', 'RRG - Pharmacy/treatment give acknowledgment');
    oEvent.Messages.Add('RRG', 'RRG_O16', 'NUL', 'NUL');
  oEvent := oEvents.Add('O17', 'RAS - Pharmacy/treatment administration');
    oEvent.Messages.Add('RAS', 'RAS_O17', 'NUL', 'NUL');
  oEvent := oEvents.Add('O18', 'RRA - Pharmacy/treatment administration acknowledgment');
    oEvent.Messages.Add('RRA', 'RRA_O18', 'NUL', 'NUL');
  oEvent := oEvents.Add('O19', 'OMG - General clinical order');
    oEvent.Messages.Add('OMG', 'OMG_O19', 'NUL', 'NUL');
  oEvent := oEvents.Add('O20', 'ORG/ORL - General clinical order response');
    oEvent.Messages.Add('ORG', 'ORG_O20', 'NUL', 'NUL');
  oEvent := oEvents.Add('O21', 'OML - Laboratory order');
    oEvent.Messages.Add('OML', 'OML_O21', 'NUL', 'NUL');
  oEvent := oEvents.Add('O22', 'ORL - General laboratory order response message to any OML');
    oEvent.Messages.Add('ORL', 'ORL_O22', 'NUL', 'NUL');
  oEvent := oEvents.Add('O23', 'OMI - Imaging order');
    oEvent.Messages.Add('OMI', 'OMI_O23', 'NUL', 'NUL');
  oEvent := oEvents.Add('O24', 'ORI - Imaging order response message to any OMI');
    oEvent.Messages.Add('ORI', 'ORI_O24', 'NUL', 'NUL');
  oEvent := oEvents.Add('O25', 'RDE - Pharmacy/treatment refill authorization request');
    oEvent.Messages.Add('RDE', 'RDE_O11', 'NUL', 'NUL');
  oEvent := oEvents.Add('O26', 'RRE - Pharmacy/Treatment Refill Authorization Acknowledgement');
    oEvent.Messages.Add('RRE', 'RRE_O12', 'NUL', 'NUL');
  oEvent := oEvents.Add('O27', 'OMB - Blood product order');
    oEvent.Messages.Add('OMB', 'OMB_O27', 'NUL', 'NUL');
  oEvent := oEvents.Add('O28', 'ORB - Blood product order acknowledgment');
    oEvent.Messages.Add('ORB', 'ORB_O28', 'NUL', 'NUL');
  oEvent := oEvents.Add('O29', 'BPS - Blood product dispense status');
    oEvent.Messages.Add('BPS', 'BPS_O29', 'NUL', 'NUL');
  oEvent := oEvents.Add('O30', 'BRP - Blood product dispense status acknowledgment');
    oEvent.Messages.Add('BRP', 'BRP_O30', 'NUL', 'NUL');
  oEvent := oEvents.Add('O31', 'BTS - Blood product transfusion/disposition');
    oEvent.Messages.Add('BTS', 'BTS_O31', 'NUL', 'NUL');
  oEvent := oEvents.Add('O32', 'BRT - Blood product transfusion/disposition acknowledgment');
    oEvent.Messages.Add('BRT', 'BRT_O32', 'NUL', 'NUL');
  oEvent := oEvents.Add('O33', 'OML - Laboratory order for multiple orders related to a single specimen');
    oEvent.Messages.Add('OML', 'OML_O33', 'NUL', 'NUL');
  oEvent := oEvents.Add('O34', 'ORL - Laboratory order response message to a multiple order related to single sp');
    oEvent.Messages.Add('ORL', 'ORL_O34', 'NUL', 'NUL');
  oEvent := oEvents.Add('O35', 'OML - Laboratory order for multiple orders related to a single container of a sp');
    oEvent.Messages.Add('OML', 'OML_O35', 'NUL', 'NUL');
  oEvent := oEvents.Add('O36', 'ORL - Laboratory order response message to a single container of a specimen OML');
    oEvent.Messages.Add('ORL', 'ORL_O36', 'NUL', 'NUL');
  oEvent := oEvents.Add('O37', 'OPL - Population/Location-Based Laboratory Order Message');
    oEvent.Messages.Add('OPL', 'OPL_O37', 'NUL', 'NUL');
  oEvent := oEvents.Add('O38', 'OPR - Population/Location-Based Laboratory Order Acknowledgment Message');
    oEvent.Messages.Add('OPR', 'OPR_O38', 'NUL', 'NUL');
  oEvent := oEvents.Add('P01', 'BAR/ACK - Add patient accounts');
    oEvent.Messages.Add('BAR', 'BAR_P01', 'ACK', 'ACK');
  oEvent := oEvents.Add('P02', 'BAR/ACK - Purge patient accounts');
    oEvent.Messages.Add('BAR', 'BAR_P02', 'ACK', 'ACK');
  oEvent := oEvents.Add('P03', 'DFT/ACK - Post detail financial transaction');
    oEvent.Messages.Add('DFT', 'DFT_P03', 'ACK', 'ACK');
  oEvent := oEvents.Add('P05', 'BAR/ACK - Update account');
    oEvent.Messages.Add('BAR', 'BAR_P05', 'ACK', 'ACK');
  oEvent := oEvents.Add('P06', 'BAR/ACK - End account');
    oEvent.Messages.Add('BAR', 'BAR_P06', 'ACK', 'ACK');
  oEvent := oEvents.Add('P07', 'PEX - Unsolicited initial individual product experience report');
    oEvent.Messages.Add('PEX', 'PEX_P07', 'NUL', 'NUL');
  oEvent := oEvents.Add('P08', 'PEX - Unsolicited update individual product experience report');
    oEvent.Messages.Add('PEX', 'PEX_P07', 'NUL', 'NUL');
  oEvent := oEvents.Add('P09', 'SUR - Summary product experience report');
    oEvent.Messages.Add('SUR', 'SUR_P09', 'NUL', 'NUL');
  oEvent := oEvents.Add('P10', 'BAR/ACK -Transmit Ambulatory Payment  Classification(APC)');
    oEvent.Messages.Add('BAR', 'BAR_P10', 'ACK', 'ACK');
  oEvent := oEvents.Add('P11', 'DFT/ACK - Post Detail Financial Transactions - New');
    oEvent.Messages.Add('DFT', 'DFT_P11', 'ACK', 'ACK');
  oEvent := oEvents.Add('P12', 'BAR/ACK - Update Diagnosis/Procedure');
    oEvent.Messages.Add('BAR', 'BAR_P12', 'ACK', 'ACK');
  oEvent := oEvents.Add('PC1', 'PPR - PC/ problem add');
    oEvent.Messages.Add('PPR', 'PPR_PC1', 'ACK', 'ACK');
  oEvent := oEvents.Add('PC2', 'PPR - PC/ problem update');
    oEvent.Messages.Add('PPR', 'PPR_PC1', 'ACK', 'ACK');
  oEvent := oEvents.Add('PC3', 'PPR - PC/ problem delete');
    oEvent.Messages.Add('PPR', 'PPR_PC1', 'ACK', 'ACK');
  oEvent := oEvents.Add('PC4', 'QRY - PC/ problem query');
    oEvent.Messages.Add('QRY', 'QRY_PC4', 'NUL', 'NUL');
  oEvent := oEvents.Add('PC5', 'PRR - PC/ problem response');
    oEvent.Messages.Add('PRR', 'PRR_PC5', 'NUL', 'NUL');
  oEvent := oEvents.Add('PC6', 'PGL - PC/ goal add');
    oEvent.Messages.Add('PGL', 'PGL_PC6', 'ACK', 'ACK');
  oEvent := oEvents.Add('PC7', 'PGL - PC/ goal update');
    oEvent.Messages.Add('PGL', 'PGL_PC6', 'ACK', 'ACK');
  oEvent := oEvents.Add('PC8', 'PGL - PC/ goal delete');
    oEvent.Messages.Add('PGL', 'PGL_PC6', 'ACK', 'ACK');
  oEvent := oEvents.Add('PC9', 'QRY - PC/ goal query');
    oEvent.Messages.Add('QRY', 'QRY_PC4', 'NUL', 'NUL');
  oEvent := oEvents.Add('PCA', 'PPV - PC/ goal response');
    oEvent.Messages.Add('PPV', 'PPV_PCA', 'NUL', 'NUL');
  oEvent := oEvents.Add('PCB', 'PPP - PC/ pathway (problem-oriented) add');
    oEvent.Messages.Add('PPP', 'PPP_PCB', 'ACK', 'ACK');
  oEvent := oEvents.Add('PCC', 'PPP - PC/ pathway (problem-oriented) update');
    oEvent.Messages.Add('PPP', 'PPP_PCB', 'ACK', 'ACK');
  oEvent := oEvents.Add('PCD', 'PPP - PC/ pathway (problem-oriented) delete');
    oEvent.Messages.Add('PPP', 'PPP_PCB', 'ACK', 'ACK');
  oEvent := oEvents.Add('PCE', 'QRY - PC/ pathway (problem-oriented) query');
    oEvent.Messages.Add('QRY', 'QRY_PC4', 'NUL', 'NUL');
  oEvent := oEvents.Add('PCF', 'PTR - PC/ pathway (problem-oriented) query response');
    oEvent.Messages.Add('PTR', 'PTR_PCF', 'NUL', 'NUL');
  oEvent := oEvents.Add('PCG', 'PPG - PC/ pathway (goal-oriented) add');
    oEvent.Messages.Add('PPG', 'PPG_PCG', 'ACK', 'ACK');
  oEvent := oEvents.Add('PCH', 'PPG - PC/ pathway (goal-oriented) update');
    oEvent.Messages.Add('PPG', 'PPG_PCG', 'ACK', 'ACK');
  oEvent := oEvents.Add('PCJ', 'PPG - PC/ pathway (goal-oriented) delete');
    oEvent.Messages.Add('PPG', 'PPG_PCG', 'ACK', 'ACK');
  oEvent := oEvents.Add('PCK', 'QRY - PC/ pathway (goal-oriented) query');
    oEvent.Messages.Add('QRY', 'QRY_PC4', 'NUL', 'NUL');
  oEvent := oEvents.Add('PCL', 'PPT - PC/ pathway (goal-oriented) query response');
    oEvent.Messages.Add('PPT', 'PPT_PCL', 'NUL', 'NUL');
  oEvents.Add('Q01', 'QRY/DSR - Query sent for immediate response');
  oEvents.Add('Q02', 'QRY/QCK - Query sent for deferred response');
  oEvents.Add('Q03', 'DSR/ACK - Deferred response to a query');
  oEvents.Add('Q05', 'UDM/ACK - Unsolicited display update message');
  oEvent := oEvents.Add('Q06', 'OSQ/OSR - Query for order status');
    oEvent.Messages.Add('OSQ', 'OSQ_Q06', 'OSR', 'OSR_Q06');
  oEvent := oEvents.Add('Q11', 'QBP - Query by parameter requesting an RSP segment pattern response');
    oEvent.Messages.Add('QBP', 'QBP_Q11', 'NUL', 'NUL');
  oEvent := oEvents.Add('Q13', 'QBP - Query by parameter requesting an  RTB - tabular response');
    oEvent.Messages.Add('QBP', 'QBP_Q13', 'NUL', 'NUL');
  oEvent := oEvents.Add('Q15', 'QBP - Query by parameter requesting an RDY display response');
    oEvent.Messages.Add('QBP', 'QBP_Q15', 'NUL', 'NUL');
  oEvent := oEvents.Add('Q16', 'QSB - Create subscription');
    oEvent.Messages.Add('QSB', 'QSB_Q16', 'ACK', 'ACK');
  oEvent := oEvents.Add('Q17', 'QVR - Query for previous events');
    oEvent.Messages.Add('QVR', 'QVR_Q17', 'ACK', 'ACK');
  oEvent := oEvents.Add('Q21', 'QBP - Get person demographics');
    oEvent.Messages.Add('QBP', 'QBP_Q21', 'NUL', 'NUL');
  oEvent := oEvents.Add('Q22', 'QBP - Find candidates');
    oEvent.Messages.Add('QBP', 'QBP_Q21', 'NUL', 'NUL');
  oEvent := oEvents.Add('Q23', 'QBP - Get corresponding identifiers');
    oEvent.Messages.Add('QBP', 'QBP_Q21', 'NUL', 'NUL');
  oEvent := oEvents.Add('Q24', 'QBP - Allocate identifiers');
    oEvent.Messages.Add('QBP', 'QBP_Q21', 'NUL', 'NUL');
  oEvent := oEvents.Add('Q25', 'QBP - Personnel Information by Segment Query');
    oEvent.Messages.Add('QBP', 'QBP_Q21', 'NUL', 'NUL');
  oEvent := oEvents.Add('Q26', 'ROR - Pharmacy/treatment order response');
    oEvent.Messages.Add('QRY', 'QRY_Q01', 'NUL', 'NUL');
  oEvent := oEvents.Add('Q27', 'RAR - Pharmacy/treatment administration information');
    oEvent.Messages.Add('QRY', 'QRY_Q01', 'NUL', 'NUL');
  oEvent := oEvents.Add('Q28', 'RDR - Pharmacy/treatment dispense information');
    oEvent.Messages.Add('QRY', 'QRY_Q01', 'NUL', 'NUL');
  oEvent := oEvents.Add('Q29', 'RER - Pharmacy/treatment encoded order information');
    oEvent.Messages.Add('QRY', 'QRY_Q01', 'NUL', 'NUL');
  oEvent := oEvents.Add('Q30', 'RGR - Pharmacy/treatment dose information');
    oEvent.Messages.Add('QRY', 'QRY_Q01', 'NUL', 'NUL');
  oEvent := oEvents.Add('Q31', 'QBP Query Dispense history');
    oEvent.Messages.Add('QBP', 'QBP_Q11', 'NUL', 'NUL');
  oEvent := oEvents.Add('R01', 'ORU/ACK - Unsolicited transmission of an observation message');
    oEvent.Messages.Add('ORU', 'ORU_R01', 'ACK', 'ACK');
  oEvent := oEvents.Add('R02', 'QRY - Query for results of observation');
    oEvent.Messages.Add('QRY', 'QRY_R02', 'NUL', 'NUL');
  oEvent := oEvents.Add('R04', 'ORF - Response to query; transmission of requested observation');
    oEvent.Messages.Add('ORF', 'ORF_R04', 'NUL', 'NUL');
  oEvent := oEvents.Add('R21', 'OUL - Unsolicited laboratory observation');
    oEvent.Messages.Add('OUL', 'OUL_R21', 'NUL', 'NUL');
  oEvent := oEvents.Add('R22', 'OUL - Unsolicited Specimen Oriented Observation Message');
    oEvent.Messages.Add('OUL', 'OUL_R22', 'NUL', 'NUL');
  oEvent := oEvents.Add('R23', 'OUL - Unsolicited Specimen Container Oriented Observation Message');
    oEvent.Messages.Add('OUL', 'OUL_R23', 'NUL', 'NUL');
  oEvent := oEvents.Add('R24', 'OUL - Unsolicited Order Oriented Observation Message');
    oEvent.Messages.Add('OUL', 'OUL_R24', 'NUL', 'NUL');
  oEvent := oEvents.Add('R25', 'OPU - Unsolicited Population/Location-Based Laboratory Observation Message');
    oEvent.Messages.Add('OPU', 'OPU_R25', 'NUL', 'NUL');
  oEvent := oEvents.Add('R30', 'ORU - Unsolicited Point-Of-Care Observation Message Without Existing Order - Pla');
    oEvent.Messages.Add('ORU', 'ORU_R30', 'ACK', 'ACK');
  oEvent := oEvents.Add('R31', 'ORU - Unsolicited New Point-Of-Care Observation Message - Search For An Order');
    oEvent.Messages.Add('ORU', 'ORU_R30', 'ACK', 'ACK');
  oEvent := oEvents.Add('R32', 'ORU - Unsolicited Pre-Ordered Point-Of-Care Observation');
    oEvent.Messages.Add('ORU', 'ORU_R30', 'ACK', 'ACK');
  oEvent := oEvents.Add('RAR', 'Pharmacy/Treatment Administration Information');
    oEvent.Messages.Add('RAR', 'RAR_RAR', 'NUL', 'NUL');
  oEvents.Add('RDR', 'Pharmacy/treatment Dispense Information');
  oEvent := oEvents.Add('RER', 'Pharmacy/Treatment Encoded Order Information');
    oEvent.Messages.Add('RER', 'RER_RER', 'NUL', 'NUL');
  oEvent := oEvents.Add('RGR', 'Pharmacy/Treatment Dose Information');
    oEvent.Messages.Add('RGR', 'RGR_RGR', 'NUL', 'NUL');
  oEvent := oEvents.Add('ROR', 'ROR - Pharmacy prescription order query response');
    oEvent.Messages.Add('ROR', 'ROR_ROR', 'NUL', 'NUL');
  oEvent := oEvents.Add('S01', 'SRM/SRR - Request new appointment booking');
    oEvent.Messages.Add('SRM', 'SRM_S01', 'SRR', 'SRR_S01');
  oEvent := oEvents.Add('S02', 'SRM/SRR - Request appointment rescheduling');
    oEvent.Messages.Add('SRM', 'SRM_S01', 'SRR', 'SRR_S01');
  oEvent := oEvents.Add('S03', 'SRM/SRR - Request appointment modification');
    oEvent.Messages.Add('SRM', 'SRM_S01', 'SRR', 'SRR_S01');
  oEvent := oEvents.Add('S04', 'SRM/SRR - Request appointment cancellation');
    oEvent.Messages.Add('SRM', 'SRM_S01', 'SRR', 'SRR_S01');
  oEvent := oEvents.Add('S05', 'SRM/SRR - Request appointment discontinuation');
    oEvent.Messages.Add('SRM', 'SRM_S01', 'SRR', 'SRR_S01');
  oEvent := oEvents.Add('S06', 'SRM/SRR - Request appointment deletion');
    oEvent.Messages.Add('SRM', 'SRM_S01', 'SRR', 'SRR_S01');
  oEvent := oEvents.Add('S07', 'SRM/SRR - Request addition of service/resource on appointment');
    oEvent.Messages.Add('SRM', 'SRM_S01', 'SRR', 'SRR_S01');
  oEvent := oEvents.Add('S08', 'SRM/SRR - Request modification of service/resource on appointment');
    oEvent.Messages.Add('SRM', 'SRM_S01', 'SRR', 'SRR_S01');
  oEvent := oEvents.Add('S09', 'SRM/SRR - Request cancellation of service/resource on appointment');
    oEvent.Messages.Add('SRM', 'SRM_S01', 'SRR', 'SRR_S01');
  oEvent := oEvents.Add('S10', 'SRM/SRR - Request discontinuation of service/resource on appointment');
    oEvent.Messages.Add('SRM', 'SRM_S01', 'SRR', 'SRR_S01');
  oEvent := oEvents.Add('S11', 'SRM/SRR - Request deletion of service/resource on appointment');
    oEvent.Messages.Add('SRM', 'SRM_S01', 'SRR', 'SRR_S01');
  oEvent := oEvents.Add('S12', 'SIU/ACK - Notification of new appointment booking');
    oEvent.Messages.Add('SIU', 'SIU_S12', 'ACK', 'ACK');
  oEvent := oEvents.Add('S13', 'SIU/ACK - Notification of appointment rescheduling');
    oEvent.Messages.Add('SIU', 'SIU_S12', 'ACK', 'ACK');
  oEvent := oEvents.Add('S14', 'SIU/ACK - Notification of appointment modification');
    oEvent.Messages.Add('SIU', 'SIU_S12', 'ACK', 'ACK');
  oEvent := oEvents.Add('S15', 'SIU/ACK - Notification of appointment cancellation');
    oEvent.Messages.Add('SIU', 'SIU_S12', 'ACK', 'ACK');
  oEvent := oEvents.Add('S16', 'SIU/ACK - Notification of appointment discontinuation');
    oEvent.Messages.Add('SIU', 'SIU_S12', 'ACK', 'ACK');
  oEvent := oEvents.Add('S17', 'SIU/ACK - Notification of appointment deletion');
    oEvent.Messages.Add('SIU', 'SIU_S12', 'ACK', 'ACK');
  oEvent := oEvents.Add('S18', 'SIU/ACK - Notification of addition of service/resource on appointment');
    oEvent.Messages.Add('SIU', 'SIU_S12', 'ACK', 'ACK');
  oEvent := oEvents.Add('S19', 'SIU/ACK - Notification of modification of service/resource on appointment');
    oEvent.Messages.Add('SIU', 'SIU_S12', 'ACK', 'ACK');
  oEvent := oEvents.Add('S20', 'SIU/ACK - Notification of cancellation of service/resource on appointment');
    oEvent.Messages.Add('SIU', 'SIU_S12', 'ACK', 'ACK');
  oEvent := oEvents.Add('S21', 'SIU/ACK - Notification of discontinuation of service/resource on appointment');
    oEvent.Messages.Add('SIU', 'SIU_S12', 'ACK', 'ACK');
  oEvent := oEvents.Add('S22', 'SIU/ACK - Notification of deletion of service/resource on appointment');
    oEvent.Messages.Add('SIU', 'SIU_S12', 'ACK', 'ACK');
  oEvent := oEvents.Add('S23', 'SIU/ACK - Notification of blocked schedule time slot(s)');
    oEvent.Messages.Add('SIU', 'SIU_S12', 'ACK', 'ACK');
  oEvent := oEvents.Add('S24', 'SIU/ACK - Notification of opened ("unblocked") schedule time slot(s)');
    oEvent.Messages.Add('SIU', 'SIU_S12', 'ACK', 'ACK');
  oEvent := oEvents.Add('S25', 'SQM/SQR - Schedule query message and response');
    oEvent.Messages.Add('SQM', 'SQM_S25', 'SQR', 'SQR_S25');
  oEvent := oEvents.Add('S26', 'SIU/ACK Notification that patient did not show up for schedule appointment');
    oEvent.Messages.Add('SIU', 'SIU_S12', 'ACK', 'ACK');
  oEvent := oEvents.Add('S28', 'SLR/SLS - Request new sterilization lot');
    oEvent.Messages.Add('SLR', 'SLR_S28', 'ACK', 'ACK');
  oEvent := oEvents.Add('S29', 'SLR/SLS - Request Sterilization lot deletion');
    oEvent.Messages.Add('SLR', 'SLR_S28', 'ACK', 'ACK');
  oEvent := oEvents.Add('S30', 'STI/STS - Request item');
    oEvent.Messages.Add('STI', 'SLR_S28', 'ACK', 'ACK');
  oEvent := oEvents.Add('S31', 'SDR/SDS - Request anti-microbial device data');
    oEvent.Messages.Add('SDR', 'SDR_S31', 'ACK', 'ACK');
  oEvent := oEvents.Add('S32', 'SMD/SMS - Request anti-microbial device cycle data');
    oEvent.Messages.Add('SMD', 'SDR_S32', 'ACK', 'ACK');
  oEvent := oEvents.Add('S33', 'STC/ACK - Notification of sterilization configuration');
    oEvent.Messages.Add('STC', 'STC_S33', 'ACK', 'ACK');
  oEvent := oEvents.Add('S34', 'SLN/ACK - Notification of sterilization lot');
    oEvent.Messages.Add('SLN', 'SLR_S28', 'ACK', 'ACK');
  oEvent := oEvents.Add('S35', 'SLN/ACK - Notification of sterilization lot deletion');
    oEvent.Messages.Add('SLN', 'SLR_S28', 'ACK', 'ACK');
  oEvent := oEvents.Add('S36', 'SDN/ACK - Notification of anti-microbial device data');
    oEvent.Messages.Add('SDN', 'SDR_S31', 'ACK', 'ACK');
  oEvent := oEvents.Add('S37', 'SCN/ACK - Notification of anti-microbial device cycle data');
    oEvent.Messages.Add('SCN', 'SDR_S32', 'ACK', 'ACK');
  oEvent := oEvents.Add('T01', 'MDM/ACK - Original document notification');
    oEvent.Messages.Add('MDM', 'MDM_T01', 'ACK', 'ACK');
  oEvent := oEvents.Add('T02', 'MDM/ACK - Original document notification and content');
    oEvent.Messages.Add('MDM', 'MDM_T02', 'ACK', 'ACK');
  oEvent := oEvents.Add('T03', 'MDM/ACK - Document status change notification');
    oEvent.Messages.Add('MDM', 'MDM_T01', 'ACK', 'ACK');
  oEvent := oEvents.Add('T04', 'MDM/ACK - Document status change notification and content');
    oEvent.Messages.Add('MDM', 'MDM_T02', 'ACK', 'ACK');
  oEvent := oEvents.Add('T05', 'MDM/ACK - Document addendum notification');
    oEvent.Messages.Add('MDM', 'MDM_T01', 'ACK', 'ACK');
  oEvent := oEvents.Add('T06', 'MDM/ACK - Document addendum notification and content');
    oEvent.Messages.Add('MDM', 'MDM_T02', 'ACK', 'ACK');
  oEvent := oEvents.Add('T07', 'MDM/ACK - Document edit notification');
    oEvent.Messages.Add('MDM', 'MDM_T01', 'ACK', 'ACK');
  oEvent := oEvents.Add('T08', 'MDM/ACK - Document edit notification and content');
    oEvent.Messages.Add('MDM', 'MDM_T02', 'ACK', 'ACK');
  oEvent := oEvents.Add('T09', 'MDM/ACK - Document replacement notification');
    oEvent.Messages.Add('MDM', 'MDM_T01', 'ACK', 'ACK');
  oEvent := oEvents.Add('T10', 'MDM/ACK - Document replacement notification and content');
    oEvent.Messages.Add('MDM', 'MDM_T02', 'ACK', 'ACK');
  oEvent := oEvents.Add('T11', 'MDM/ACK - Document cancel notification');
    oEvent.Messages.Add('MDM', 'MDM_T01', 'ACK', 'ACK');
  oEvent := oEvents.Add('T12', 'QRY/DOC - Document query');
    oEvent.Messages.Add('QRY', 'QRY_T12', 'DOC', 'DOC_T12');
  oEvent := oEvents.Add('U01', 'ESU/ACK - Automated equipment status update');
    oEvent.Messages.Add('ESU', 'ESU_U01', 'ACK', 'ACK');
  oEvent := oEvents.Add('U02', 'ESR/ACK - Automated equipment status request');
    oEvent.Messages.Add('ESR', 'ESR_U02', 'ACK', 'ACK');
  oEvent := oEvents.Add('U03', 'SSU/ACK - Specimen status update');
    oEvent.Messages.Add('SSU', 'SSU_U03', 'ACK', 'ACK');
  oEvent := oEvents.Add('U04', 'SSR/ACK - specimen status request');
    oEvent.Messages.Add('SSR', 'SSR_U04', 'ACK', 'ACK');
  oEvent := oEvents.Add('U05', 'INU/ACK  - Automated equipment inventory update');
    oEvent.Messages.Add('INU', 'INU_U05', 'ACK', 'ACK');
  oEvent := oEvents.Add('U06', 'INR/ACK - Automated equipment inventory request');
    oEvent.Messages.Add('INR', 'INR_U06', 'ACK', 'ACK');
  oEvent := oEvents.Add('U07', 'EAC/ACK - Automated equipment command');
    oEvent.Messages.Add('EAC', 'EAC_U07', 'ACK', 'ACK');
  oEvent := oEvents.Add('U08', 'EAR/ACK - Automated equipment response');
    oEvent.Messages.Add('EAR', 'EAR_U08', 'ACK', 'ACK');
  oEvent := oEvents.Add('U09', 'EAN/ACK - Automated equipment notification');
    oEvent.Messages.Add('EAN', 'EAN_U09', 'ACK', 'ACK');
  oEvent := oEvents.Add('U10', 'TCU/ACK - Automated equipment test code settings update');
    oEvent.Messages.Add('TCU', 'TCU_U10', 'ACK', 'ACK');
  oEvent := oEvents.Add('U11', 'TCR/ACK - Automated equipment test code settings request');
    oEvent.Messages.Add('TCR', 'TCU_U10', 'ACK', 'ACK');
  oEvent := oEvents.Add('U12', 'LSU/ACK - Automated equipment log/service update');
    oEvent.Messages.Add('LSU', 'LSU_U12', 'ACK', 'ACK');
  oEvent := oEvents.Add('U13', 'LSR/ACK - Automated equipment log/service request');
    oEvent.Messages.Add('LSR', 'LSU_U12', 'ACK', 'ACK');
  oEvent := oEvents.Add('V01', 'VXQ - Query for vaccination record');
    oEvent.Messages.Add('VXQ', 'VXQ_V01', 'NUL', 'NUL');
  oEvent := oEvents.Add('V02', 'VXX - Response to vaccination query returning multiple PID matches');
    oEvent.Messages.Add('VXX', 'VXX_V02', 'NUL', 'NUL');
  oEvent := oEvents.Add('V03', 'VXR - Vaccination record response');
    oEvent.Messages.Add('VXR', 'VXR_V03', 'NUL', 'NUL');
  oEvent := oEvents.Add('V04', 'VXU - Unsolicited vaccination record update');
    oEvent.Messages.Add('VXU', 'VXU_V04', 'NUL', 'NUL');
  oEvent := oEvents.Add('var', '');
    oEvent.Messages.Add('ACK', 'ACK', 'NUL', 'NUL');
  oEvent := oEvents.Add('Z73', 'Information about Phone Calls');
    oEvent.Messages.Add('QBP', 'QBP_Z73', 'NUL', 'NUL');
  oEvent := oEvents.Add('Z74', 'Information about Phone Calls (Response)');
    oEvent.Messages.Add('RTB', 'RTB_Z74', 'NUL', 'NUL');
  oEvent := oEvents.Add('Z75', 'Tabular Patient List');
    oEvent.Messages.Add('QBP', 'QBP_Q13', 'NUL', 'NUL');
  oEvent := oEvents.Add('Z76', 'Tabular Patient List (Response)');
    oEvent.Messages.Add('RTB', 'RTB_K13', 'NUL', 'NUL');
  oEvent := oEvents.Add('Z77', 'Tabular Patient List');
    oEvent.Messages.Add('QBP', 'QBP_Q13', 'NUL', 'NUL');
  oEvent := oEvents.Add('Z78', 'Tabular Patient List (Response)');
    oEvent.Messages.Add('RTB', 'RTB_K13', 'NUL', 'NUL');
  oEvent := oEvents.Add('Z79', 'Dispense Information');
    oEvent.Messages.Add('QBP', 'QBP_Q15', 'NUL', 'NUL');
  oEvent := oEvents.Add('Z80', 'Dispense Information (Response)');
    oEvent.Messages.Add('RDY', 'RSP_K11', 'NUL', 'NUL');
  oEvent := oEvents.Add('Z81', 'Dispense History');
    oEvent.Messages.Add('QBP', 'QBP_Q11', 'NUL', 'NUL');
  oEvent := oEvents.Add('Z82', 'Dispense History (Response)');
    oEvent.Messages.Add('RSP', 'RSP_Z82', 'NUL', 'NUL');
  oEvent := oEvents.Add('Z83', 'ORU Subscription');
    oEvent.Messages.Add('QSB', 'QSB_Q16', 'NUL', 'NUL');
  oEvent := oEvents.Add('Z84', 'Who Am I (Response)');
    oEvent.Messages.Add('RSP', 'RSP_K11', 'NUL', 'NUL');
  oEvent := oEvents.Add('Z85', 'Pharmacy Information Comprehensive');
    oEvent.Messages.Add('QBP', 'QBP_Q11', 'NUL', 'NUL');
  oEvent := oEvents.Add('Z86', 'Pharmacy Information Comprehensive (Response)');
    oEvent.Messages.Add('RSP', 'RSP_Z86', 'NUL', 'NUL');
  oEvent := oEvents.Add('Z87', 'Dispense Information');
    oEvent.Messages.Add('QBP', 'QBP_Q11', 'NUL', 'NUL');
  oEvent := oEvents.Add('Z88', 'Dispense Information (Response)');
    oEvent.Messages.Add('RSP', 'RSP_Z88', 'NUL', 'NUL');
  oEvent := oEvents.Add('Z89', 'Lab Results History');
    oEvent.Messages.Add('QBP', 'QBP_Q11', 'NUL', 'NUL');
  oEvent := oEvents.Add('Z90', 'Lab Results History (Response)');
    oEvent.Messages.Add('RSP', 'RSP_Z90', 'NUL', 'NUL');
  oEvent := oEvents.Add('Z91', 'Who Am I');
    oEvent.Messages.Add('QBP', 'QBP_Q13', 'NUL', 'NUL');
  oEvent := oEvents.Add('Z92', 'Who Am I (Response)');
    oEvent.Messages.Add('RTB', 'RTB_K13', 'NUL', 'NUL');
  oEvent := oEvents.Add('Z93', 'Tabular Dispense History');
    oEvent.Messages.Add('QBP', 'QBP_Q13', 'NUL', 'NUL');
  oEvent := oEvents.Add('Z94', 'Tabular Dispense History (Response)');
    oEvent.Messages.Add('RTB', 'RTB_K13', 'NUL', 'NUL');
  oEvent := oEvents.Add('Z95', 'Tabular Dispense History');
    oEvent.Messages.Add('QBP', 'QBP_Q13', 'NUL', 'NUL');
  oEvent := oEvents.Add('Z96', 'Tabular Dispense History (Response)');
    oEvent.Messages.Add('RTB', 'RTB_K13', 'NUL', 'NUL');
  oEvent := oEvents.Add('Z97', 'Dispense History');
    oEvent.Messages.Add('QBP', 'QBP_Q15', 'NUL', 'NUL');
  oEvent := oEvents.Add('Z98', 'Dispense History (Response)');
    oEvent.Messages.Add('RDY', 'RDY_K15', 'NUL', 'NUL');
  oEvent := oEvents.Add('Z99', 'Who Am I');
    oEvent.Messages.Add('QBP', 'QBP_Q13', 'NUL', 'NUL');
  oEvent := oEvents.Add('Znn', '');
    oEvent.Messages.Add('QBP', 'QBP_Q11', 'RSP', 'RSP_Q11');
End;

procedure Definitions26LoadMessageStructures(oStructures : THL7V2ModelMessageStructures);
Begin
  Definitions26LoadMessageStructures1(oStructures);
  Definitions26LoadMessageStructures2(oStructures);
  Definitions26LoadMessageStructures3(oStructures);
end;

End.

