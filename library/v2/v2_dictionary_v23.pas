Unit v2_dictionary_v23;

{
Copyright (c) 2011+, HL7 and Health Intersections Pty Ltd (http://www.healthintersections.com.au)
All rights reserved.

Redistribution and use in source and binary forms, with or without modification,
are permitted provided that the following conditions are met:

 * Redistributions of source code must retain the above copyright notice, this
   list of conditions and the following disclaimer.
 * Redistributions in binary form must reproduce the above copyright notice,
   this list of conditions and the following disclaimer in the documentation
   and/or other materials provided with the distribution.
 * Neither the name of HL7 nor the names of its contributors may be used to
   endorse or promote products derived from this software without specific
   prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS' AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
POSSIBILITY OF SUCH DAMAGE.
}

{ WARNING: This is generated code. Do not make any changes here }
{$I fhir.inc}

Interface

Uses
  v2_dictionary;

procedure Definitions23LoadTables(oTables : THL7V2ModelTables);
procedure Definitions23LoadComponents(oComponents : THL7V2ModelComponents);
procedure Definitions23LoadDataElements(oDataElements : THL7V2ModelDataElements);
procedure Definitions23LoadDataTypes(oDataTypes : THL7V2ModelDataTypes);
procedure Definitions23LoadEvents(oEvents : THL7V2ModelEvents);
procedure Definitions23LoadStructures(oStructures : THL7V2ModelStructures; oComponents : THL7V2ModelComponents);
procedure Definitions23LoadSegments(oSegments : THL7V2ModelSegments);
procedure Definitions23LoadMessageStructures(oStructures : THL7V2ModelMessageStructures);

Implementation

procedure LoadTable0(oTables : THL7V2ModelTables);
Begin
  oTables.Add(0, 'no table');
End;

procedure LoadTable1(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(1, 'Sex');
    oTable.Items.Add(0, 'F', 'Female');
    oTable.Items.Add(0, 'M', 'Male');
    oTable.Items.Add(0, 'O', 'Other');
    oTable.Items.Add(0, 'U', 'Unknown');
End;

procedure LoadTable2(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(2, 'Marital Status');
    oTable.Items.Add(0, 'A', 'Separated');
    oTable.Items.Add(0, 'D', 'Divorced');
    oTable.Items.Add(0, 'M', 'Married');
    oTable.Items.Add(0, 'S', 'Single');
    oTable.Items.Add(0, 'W', 'Widowed');
End;

procedure LoadTable3(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(3, 'Event Type');
    oTable.Items.Add(0, 'A01', 'ADT/ACK - Admit a patient');
    oTable.Items.Add(0, 'A02', 'ADT/ACK -  Transfer a patient');
    oTable.Items.Add(0, 'A03', 'ADT/ACK -  Discharge a patient');
    oTable.Items.Add(0, 'A04', 'ADT/ACK -  Register a patient');
    oTable.Items.Add(0, 'A05', 'ADT/ACK -  Preadmit a patient');
    oTable.Items.Add(0, 'A06', 'ADT/ACK -  Transfer an outpatient to inpatient');
    oTable.Items.Add(0, 'A07', 'ADT/ACK -  Transfer an inpatient to outpatient');
    oTable.Items.Add(0, 'A08', 'ADT/ACK -  Update patient information');
    oTable.Items.Add(0, 'A09', 'ADT/ACK -  Patient departing');
    oTable.Items.Add(0, 'A10', 'ADT/ACK -  Patient arriving');
    oTable.Items.Add(0, 'A11', 'ADT/ACK -  Cancel admit');
    oTable.Items.Add(0, 'A12', 'ADT/ACK -  Cancel transfer');
    oTable.Items.Add(0, 'A13', 'ADT/ACK -  Cancel discharge');
    oTable.Items.Add(0, 'A14', 'ADT/ACK -  Pending admit');
    oTable.Items.Add(0, 'A15', 'ADT/ACK -  Pending transfer');
    oTable.Items.Add(0, 'A16', 'ADT/ACK -  Pending discharge');
    oTable.Items.Add(0, 'A17', 'ADT/ACK -  Swap patients');
    oTable.Items.Add(0, 'A18', 'ADT/ACK -  Merge patient information');
    oTable.Items.Add(0, 'A19', 'QRY/ACK -  Patient query');
    oTable.Items.Add(0, 'A20', 'ADT/ACK -  Nursing/Census application updates');
    oTable.Items.Add(0, 'A21', 'ADT/ACK -  Leave of absence - out (leaving)');
    oTable.Items.Add(0, 'A22', 'ADT/ACK -  Leave of absence - in (returning)');
    oTable.Items.Add(0, 'A23', 'ADT/ACK -  Delete a patient record');
    oTable.Items.Add(0, 'A24', 'ADT/ACK -  Link patient information');
    oTable.Items.Add(0, 'A25', 'ADT/ACK -  Cancel pending discharge');
    oTable.Items.Add(0, 'A26', 'ADT/ACK -  Cancel pending transfer');
    oTable.Items.Add(0, 'A27', 'ADT/ACK -  Cancel pending admit');
    oTable.Items.Add(0, 'A28', 'ADT/ACK -  Add person information');
    oTable.Items.Add(0, 'A29', 'ADT/ACK -  Delete person information');
    oTable.Items.Add(0, 'A30', 'ADT/ACK -  Merge person information');
    oTable.Items.Add(0, 'A31', 'ADT/ACK -  Update person information');
    oTable.Items.Add(0, 'A32', 'ADT/ACK -  Cancel patient arriving');
    oTable.Items.Add(0, 'A33', 'ADT/ACK -  Cancel patient departing');
    oTable.Items.Add(0, 'A34', 'ADT/ACK -  Merge patient information - patient ID only');
    oTable.Items.Add(0, 'A35', 'ADT/ACK -  Merge patient information - account number only');
    oTable.Items.Add(0, 'A36', 'ADT/ACK -  Merge patient information - patient ID and account number');
    oTable.Items.Add(0, 'A37', 'ADT/ACK -  Unlink patient information');
    oTable.Items.Add(0, 'A38', 'ADT/ACK - Cancel pre-admit');
    oTable.Items.Add(0, 'A39', 'ADT/ACK - Merge person - external ID');
    oTable.Items.Add(0, 'A40', 'ADT/ACK - Merge patient - internal ID');
    oTable.Items.Add(0, 'A41', 'ADT/ACK - Merge account - patient account number');
    oTable.Items.Add(0, 'A42', 'ADT/ACK - Merge visit - visit number');
    oTable.Items.Add(0, 'A43', 'ADT/ACK - Move patient information - internal ID');
    oTable.Items.Add(0, 'A44', 'ADT/ACK - Move account information - internal ID');
    oTable.Items.Add(0, 'A45', 'ADT/ACK - Move visit information - visit number');
    oTable.Items.Add(0, 'A46', 'ADT/ACK - Change external ID');
    oTable.Items.Add(0, 'A47', 'ADT/ACK - Change internal ID');
    oTable.Items.Add(0, 'A48', 'ADT/ACK - Change alternate patient ID');
    oTable.Items.Add(0, 'A49', 'ADT/ACK - Change patient account number');
    oTable.Items.Add(0, 'A50', 'ADT/ACK - Change visit number');
    oTable.Items.Add(0, 'A51', 'ADT/ACK - Change alternate visit ID');
    oTable.Items.Add(0, 'C01', 'SRM - Register a patient on a clinical trial');
    oTable.Items.Add(0, 'C02', 'SRM - Cancel a patient registration on clinical trial (for clerical mistakes only)');
    oTable.Items.Add(0, 'C03', 'SRM - Correct/update registration information');
    oTable.Items.Add(0, 'C04', 'SRM - Patient has gone off a clinical trial');
    oTable.Items.Add(0, 'C05', 'SRM - Patient enters phase of clinical trial');
    oTable.Items.Add(0, 'C06', 'SRM - Cancel patient entering a phase (clerical mistake)');
    oTable.Items.Add(0, 'C07', 'SRM - Correct/update phase information');
    oTable.Items.Add(0, 'C08', 'SRM - Patient has gone off phase of clinical trial');
    oTable.Items.Add(0, 'C09', 'CSU - Automated time intervals for reporting, like monthly');
    oTable.Items.Add(0, 'C10', 'CSU - Patient completes the clinical trial');
    oTable.Items.Add(0, 'C11', 'CSU - Patient completes a phase of the clinical trial');
    oTable.Items.Add(0, 'C12', 'CSU - Update/correction of patient order/result information');
    oTable.Items.Add(0, 'CNQ', 'QRY/EQQ/SPQ/VQQ/RQQ - Cancel query');
    oTable.Items.Add(0, 'I01', 'RQI/RPI - Request for insurance information');
    oTable.Items.Add(0, 'I02', 'RQI/RPL - Request/receipt of patient selection display list');
    oTable.Items.Add(0, 'I03', 'RQI/RPR - Request/receipt of patient selection list');
    oTable.Items.Add(0, 'I04', 'RQD/RPI - Request for patient demographic data');
    oTable.Items.Add(0, 'I05', 'RQC/RCI - Request for patient clinical information');
    oTable.Items.Add(0, 'I06', 'RQC/RCL - Request/receipt of clinical data listing');
    oTable.Items.Add(0, 'I07', 'PIN/ACK - Unsolicited insurance information');
    oTable.Items.Add(0, 'I08', 'RQA/RPA - Request for treatment authorization information');
    oTable.Items.Add(0, 'I09', 'RQA/RPA - Request for modification to an authorization');
    oTable.Items.Add(0, 'I10', 'RQA/RPA - Request for resubmission of an authorization');
    oTable.Items.Add(0, 'I11', 'RQA/RPA - Request for cancellation of an authorization');
    oTable.Items.Add(0, 'I12', 'REF/RRI - Patient referral');
    oTable.Items.Add(0, 'I13', 'REF/RRI - Modify patient referral');
    oTable.Items.Add(0, 'I14', 'REF/RRI - Cancel patient referral');
    oTable.Items.Add(0, 'I15', 'REF/RRI - Request patient referral status');
    oTable.Items.Add(0, 'M01', 'MFN/MFK - Master file not otherwise specified (for backward compatibility only)');
    oTable.Items.Add(0, 'M02', 'MFN/MFK - Master file - Staff Practioner');
    oTable.Items.Add(0, 'M03', 'MFN/MFK - Master file - Test/Observation');
    oTable.Items.Add(0, 'M04', 'MFD/ACK - Master files delayed application acknowledgement');
    oTable.Items.Add(0, 'M05', 'MFN/MFK - Patient location master file');
    oTable.Items.Add(0, 'M06', 'MFN/MFK - Charge description master file');
    oTable.Items.Add(0, 'M07', 'MFN/MFK - Clinical study without phases but with schedules master file');
    oTable.Items.Add(0, 'M08', 'MFN/MFK - Test/Observation (Nurmeric) master file');
    oTable.Items.Add(0, 'M09', 'MFN/MFK - Test/Observation (Categorical) master file');
    oTable.Items.Add(0, 'M10', 'MFN/MFK - Test/Observation batteries master file');
    oTable.Items.Add(0, 'M11', 'MFN/MFK - Test/calculated observation master file');
    oTable.Items.Add(0, 'O01', 'ORM - Order message (also RDE, RDS, RGV, RAS,');
    oTable.Items.Add(0, 'O02', 'ORR - Order response (also RRE, RRD, RRG, RRA,');
    oTable.Items.Add(0, 'P01', 'BAR/ACK - Add and update patient account');
    oTable.Items.Add(0, 'P02', 'BAR/ACK - Purge patient account');
    oTable.Items.Add(0, 'P03', 'DFT/ACK - Post detail financial transaction');
    oTable.Items.Add(0, 'P04', 'QRY/DSP - Generate bill and A/R statements');
    oTable.Items.Add(0, 'P05', 'BAR/ACK - Update account');
    oTable.Items.Add(0, 'P06', 'BAR/ACK - End account');
    oTable.Items.Add(0, 'P07', 'PEX - Unsolicited initial individual product experience report');
    oTable.Items.Add(0, 'P08', 'PEX - Unsolicited update individual product experience report');
    oTable.Items.Add(0, 'P09', 'SUR - Summary product experience report');
    oTable.Items.Add(0, 'PC1', 'PPR - PC/Problem Add');
    oTable.Items.Add(0, 'PC2', 'PPR - PC/Problem Update');
    oTable.Items.Add(0, 'PC3', 'PPR - PC/Problem Delete');
    oTable.Items.Add(0, 'PC4', 'PPR - PC/Problem Query');
    oTable.Items.Add(0, 'PC5', 'PPR - PC/Problem Reponse');
    oTable.Items.Add(0, 'PC6', 'PGL - PC/Goal Add');
    oTable.Items.Add(0, 'PC7', 'PGL - PC/Goal Update');
    oTable.Items.Add(0, 'PC8', 'PGL - PC/Goal Delete');
    oTable.Items.Add(0, 'PC9', 'PGL - PC/Goal Query');
    oTable.Items.Add(0, 'PCA', 'PGL - PC/Goal Response');
    oTable.Items.Add(0, 'PCB', 'PPP - PC/Pathway (Problem Oriented) Add');
    oTable.Items.Add(0, 'PCC', 'PPP - PC/Pathway (Problem Oriented) Update');
    oTable.Items.Add(0, 'PCD', 'PPP - PC/Pathway (Problem Oriented) Delete');
    oTable.Items.Add(0, 'PCE', 'PPP - PC/Pathway (Problem Oriented) Query');
    oTable.Items.Add(0, 'PCF', 'PPP - PC/Pathway (Problem Oriented) Query Response');
    oTable.Items.Add(0, 'PCG', 'PPP - PC/Pathway (Goal Oriented) Add');
    oTable.Items.Add(0, 'PCH', 'PPP - PC/Pathway (Goal Oriented) Update');
    oTable.Items.Add(0, 'PCJ', 'PPP - PC/Pathway (Goal Oriented) Delete');
    oTable.Items.Add(0, 'PCK', 'PPP - PC/Pathway (Goal Oriented) Query');
    oTable.Items.Add(0, 'PCL', 'PPP - PC/Pathway (Goal Oriented) Query Response');
    oTable.Items.Add(0, 'Q01', 'QRY/DSR - Query sent for immediate response');
    oTable.Items.Add(0, 'Q02', 'QRY/ACK - Query sent for deferred response');
    oTable.Items.Add(0, 'Q03', 'DSR/ACK - Deferred response to a query');
    oTable.Items.Add(0, 'Q05', 'UDM/ACK - Unsolicited display update');
    oTable.Items.Add(0, 'Q06', 'OSQ/OSR - Query for order status');
    oTable.Items.Add(0, 'R01', 'ORU/ACK - Unsolicited transmission of an observation');
    oTable.Items.Add(0, 'R02', 'QRY - Query for results of observation');
    oTable.Items.Add(0, 'R03', 'Display-oriented results, query/unsol. update (for backward compatibility only)');
    oTable.Items.Add(0, 'R04', 'ORF - Response to query; transmission of requested observation');
    oTable.Items.Add(0, 'R05', 'QRY/DSR- query f'#252'r display results');
    oTable.Items.Add(0, 'R06', 'UDM-unsolicited update/display results');
    oTable.Items.Add(0, 'RAR', 'RAR - Pharmacy administration information query response');
    oTable.Items.Add(0, 'RDR', 'RDR - Pharmacy dispense information query response');
    oTable.Items.Add(0, 'RER', 'RER - Pharmacy encoded order information query response');
    oTable.Items.Add(0, 'RGR', 'RGR - Pharmacy dose information query response');
    oTable.Items.Add(0, 'ROR', 'ROR - Pharmacy prescription order query response');
    oTable.Items.Add(0, 'S01', 'SRM/SRR - Request new appointment booking');
    oTable.Items.Add(0, 'S02', 'SRM/SRR - Request appointment rescheduling');
    oTable.Items.Add(0, 'S03', 'SRM/SRR - Request appointment modification');
    oTable.Items.Add(0, 'S04', 'SRM/SRR - Request appointment cancellation');
    oTable.Items.Add(0, 'S05', 'SRM/SRR - Request appointment discontinuation');
    oTable.Items.Add(0, 'S06', 'SRM/SRR - Request appointment deletion');
    oTable.Items.Add(0, 'S07', 'SRM/SRR - Request addition of service/resource on appointment');
    oTable.Items.Add(0, 'S08', 'SRM/SRR - Request modification of service/resource on appointment');
    oTable.Items.Add(0, 'S09', 'SRM/SRR - Request cancellation of servic/resource on appointment');
    oTable.Items.Add(0, 'S10', 'SRM/SRR - Request discontinuation of servic/resource on appointment');
    oTable.Items.Add(0, 'S11', 'SRM/SRR - Request deletion of servic/resource on appointment');
    oTable.Items.Add(0, 'S12', 'SIU/ACK - Notification of new appointment booking');
    oTable.Items.Add(0, 'S13', 'SIU/ACK - Notification of appointment rescheduling');
    oTable.Items.Add(0, 'S14', 'SIU/ACK - Notification of appointment modification');
    oTable.Items.Add(0, 'S15', 'SIU/ACK - Notification of appointment cancellation');
    oTable.Items.Add(0, 'S16', 'SIU/ACK - Notification of appointment discontinuation');
    oTable.Items.Add(0, 'S17', 'SIU/ACK - Notification of appointmentdeletion');
    oTable.Items.Add(0, 'S18', 'SIU/ACK - Notification of addition of service/resource on appointment');
    oTable.Items.Add(0, 'S19', 'SIU/ACK - Notification ofmodification of service/resource on appointment');
    oTable.Items.Add(0, 'S20', 'SIU/ACK - Notification of cancellation of service/resource on appointment');
    oTable.Items.Add(0, 'S21', 'SIU/ACK - Notification of discontinuation of service/resource on appointment');
    oTable.Items.Add(0, 'S22', 'SIU/ACK - Notification of deletion of service/resource on appointment');
    oTable.Items.Add(0, 'S23', 'SIU/ACK - Notification of blocked schedule time slot(s)');
    oTable.Items.Add(0, 'S24', 'SIU/ACK - Notification of open ('#147'unblocked'#148') schedule time slot(s)');
    oTable.Items.Add(0, 'S25', 'SQM/SQR - Query schedule information');
    oTable.Items.Add(0, 'S26', 'notification that patient did not show up for schedule appointment');
    oTable.Items.Add(0, 'T01', 'MDM/ACK - Original document notification');
    oTable.Items.Add(0, 'T02', 'MDM/ACK - Original document notification and content');
    oTable.Items.Add(0, 'T03', 'MDM/ACK - Document status change notification');
    oTable.Items.Add(0, 'T04', 'MDM/ACK - Document status change notification and content');
    oTable.Items.Add(0, 'T05', 'MDM/ACK - Document addendum notification');
    oTable.Items.Add(0, 'T06', 'MDM/ACK - Document addendum notification and content');
    oTable.Items.Add(0, 'T07', 'MDM/ACK - Document replace notification');
    oTable.Items.Add(0, 'T08', 'MDM/ACK - Document replace notification and content');
    oTable.Items.Add(0, 'T09', 'MDM/ACK - Document cancel notification');
    oTable.Items.Add(0, 'T10', 'MDM/ACK - Document replacement notification and content');
    oTable.Items.Add(0, 'T11', 'MDM/ACK - Document cancel notification');
    oTable.Items.Add(0, 'T12', 'QRY/DOC - Document query');
    oTable.Items.Add(0, 'V01', 'VXQ - Query for vaccination record');
    oTable.Items.Add(0, 'V02', 'VXX - Response to vaccination query returning multiple PID matches');
    oTable.Items.Add(0, 'V03', 'VXR - Vaccination record response');
    oTable.Items.Add(0, 'V04', 'VXU - Unsolicited vaccination record update');
    oTable.Items.Add(0, 'varies', 'MFQ/MFR - Master files query (use event same as asking for e.g., M05 - location)');
    oTable.Items.Add(0, 'W01', 'ORU - Waveform result, unsolicited transmission of requested information');
    oTable.Items.Add(0, 'W02', 'QRF - Waveform result, response to query');
    oTable.Items.Add(0, 'X01', 'PEX - Product experience');
End;

procedure LoadTable4(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(4, 'Patient Class');
    oTable.Items.Add(0, 'B', 'Obstetrics');
    oTable.Items.Add(0, 'E', 'Emergency');
    oTable.Items.Add(0, 'I', 'Inpatient');
    oTable.Items.Add(0, 'O', 'Outpatient');
    oTable.Items.Add(0, 'P', 'Preadmit');
    oTable.Items.Add(0, 'R', 'Recurring Patient');
End;

procedure LoadTable5(oTables : THL7V2ModelTables);
Begin
  oTables.Add(5, 'Race');
End;

procedure LoadTable6(oTables : THL7V2ModelTables);
Begin
  oTables.Add(6, 'Religion');
End;

procedure LoadTable7(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(7, 'Admission Type');
    oTable.Items.Add(0, 'A', 'Accident');
    oTable.Items.Add(2, 'E', 'Emergency');
    oTable.Items.Add(3, 'L', 'Labor and Delivery');
    oTable.Items.Add(4, 'R', 'Routine');
End;

procedure LoadTable8(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(8, 'Acknowledgement Code');
    oTable.Items.Add(1, 'AA', 'Original mode:  Application Accept / Enhanced mode:  Application acknowledgement:  Accept');
    oTable.Items.Add(2, 'AE', 'Original mode:  Application Error / Enhanced mode:  Application acknowledgement:  Error');
    oTable.Items.Add(3, 'AR', 'Original mode:  Application Reject / Enhanced mode:  Application acknowledgement:  Reject');
    oTable.Items.Add(4, 'CA', 'Enhanced mode:  Application acknowledgement:  Commit Accept');
    oTable.Items.Add(5, 'CE', 'Enhanced mode:  Application acknowledgement:  Commit Error');
    oTable.Items.Add(6, 'CR', 'Enhanced mode:  Application acknowledgement:  Commit Reject');
End;

procedure LoadTable9(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(9, 'Ambulatory Status');
    oTable.Items.Add(1, 'A0', 'No functional limitations');
    oTable.Items.Add(2, 'A1', 'Ambulates with assistive device');
    oTable.Items.Add(3, 'A2', 'Wheelchair/stretcher bound');
    oTable.Items.Add(4, 'A3', 'Comatose; non-responsive');
    oTable.Items.Add(5, 'A4', 'Disoriented');
    oTable.Items.Add(6, 'A5', 'Vision Impaired');
    oTable.Items.Add(7, 'A6', 'Hearing Impaired');
    oTable.Items.Add(8, 'A7', 'Speech Impaired');
    oTable.Items.Add(9, 'A8', 'Nonenglish Speaking');
    oTable.Items.Add(10, 'A9', 'Functional level unknown');
    oTable.Items.Add(11, 'B1', 'Oxygen Therapy');
    oTable.Items.Add(12, 'B2', 'Special Equipment (tubes, IV''s, catheters)');
    oTable.Items.Add(13, 'B3', 'Amputee');
    oTable.Items.Add(14, 'B4', 'Mastectomy');
    oTable.Items.Add(15, 'B5', 'Paraplegic');
    oTable.Items.Add(16, 'B6', 'Pregnant');
End;

procedure LoadTable10(oTables : THL7V2ModelTables);
Begin
  oTables.Add(10, 'Physician ID');
End;

procedure LoadTable17(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(17, 'Transaction Type');
    oTable.Items.Add(0, 'AJ', 'Adjustment');
    oTable.Items.Add(0, 'CD', 'Credit');
    oTable.Items.Add(0, 'CG', 'Charge');
    oTable.Items.Add(0, 'PY', 'Payment');
End;

procedure LoadTable18(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(18, 'Patient Type');
    oTable.Items.Add(8, 'B', '');
    oTable.Items.Add(1, 'E', '');
    oTable.Items.Add(2, 'F', '');
    oTable.Items.Add(7, 'G', '');
    oTable.Items.Add(6, 'J', '');
    oTable.Items.Add(5, 'K', '');
    oTable.Items.Add(3, 'N', '');
    oTable.Items.Add(9, 'P', '');
    oTable.Items.Add(4, 'S', '');
End;

procedure LoadTable19(oTables : THL7V2ModelTables);
Begin
  oTables.Add(19, 'Anesthesia Code');
End;

procedure LoadTable21(oTables : THL7V2ModelTables);
Begin
  oTables.Add(21, 'Bad Dept Agency Code');
End;

procedure LoadTable22(oTables : THL7V2ModelTables);
Begin
  oTables.Add(22, 'Billing Status');
End;

procedure LoadTable23(oTables : THL7V2ModelTables);
Begin
  oTables.Add(23, 'Admit Source');
End;

procedure LoadTable24(oTables : THL7V2ModelTables);
Begin
  oTables.Add(24, 'Fee Schedule');
End;

procedure LoadTable27(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(27, 'Priority');
    oTable.Items.Add(0, 'A', 'As soon as possible (a priority lower than stat)');
    oTable.Items.Add(0, 'P', 'Preoperative (to be done prior to surgery)');
    oTable.Items.Add(0, 'R', 'Routine');
    oTable.Items.Add(0, 'S', 'Stat (do immediately)');
    oTable.Items.Add(0, 'T', 'Timing critical (do as near as possible to requested time)');
End;

procedure LoadTable32(oTables : THL7V2ModelTables);
Begin
  oTables.Add(32, 'Charge/Price Indicator');
End;

procedure LoadTable33(oTables : THL7V2ModelTables);
Begin
  oTables.Add(33, '');
End;

procedure LoadTable38(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(38, 'Order Status');
    oTable.Items.Add(0, 'A', 'Some, but not all, results available');
    oTable.Items.Add(0, 'CA', 'Order was canceled');
    oTable.Items.Add(0, 'CM', 'Order is completed');
    oTable.Items.Add(0, 'DC', 'Order was discontinued');
    oTable.Items.Add(0, 'ER', 'Error, order not found');
    oTable.Items.Add(0, 'HD', 'Order is on hold');
    oTable.Items.Add(0, 'IP', 'In process, unspecified');
    oTable.Items.Add(0, 'RP', 'Order has been replaced');
    oTable.Items.Add(0, 'SC', 'In process, scheduled');
End;

procedure LoadTable42(oTables : THL7V2ModelTables);
Begin
  oTables.Add(42, 'Company Plan Code');
End;

procedure LoadTable43(oTables : THL7V2ModelTables);
Begin
  oTables.Add(43, 'Condition Code');
End;

procedure LoadTable44(oTables : THL7V2ModelTables);
Begin
  oTables.Add(44, 'Contract Code');
End;

procedure LoadTable45(oTables : THL7V2ModelTables);
Begin
  oTables.Add(45, 'Courtesy Code');
End;

procedure LoadTable46(oTables : THL7V2ModelTables);
Begin
  oTables.Add(46, 'Credit Rating');
End;

procedure LoadTable48(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(48, 'What Subject Filter');
    oTable.Items.Add(0, 'ADV', 'Advice/diagnosis');
    oTable.Items.Add(0, 'ANU', 'Nursing unit lookup (returns patients in beds, excluding empty beds)');
    oTable.Items.Add(0, 'APA', 'Account number query, return matching visit');
    oTable.Items.Add(0, 'APM', 'Medical record number query, returns visits for a medical record number');
    oTable.Items.Add(0, 'APN', 'Patient name lookup');
    oTable.Items.Add(0, 'APP', 'Physician lookup');
    oTable.Items.Add(0, 'ARN', 'Nursing unit lookup (returns patients in beds, including empty beds)');
    oTable.Items.Add(0, 'CAN', 'Cancel.  Used to cancel a query');
    oTable.Items.Add(0, 'DEM', 'Demographics');
    oTable.Items.Add(0, 'FIN', 'Financial');
    oTable.Items.Add(0, 'GOL', 'Goals');
    oTable.Items.Add(0, 'MRI', 'Most recent inpatient');
    oTable.Items.Add(0, 'MRO', 'Most recent outpatient');
    oTable.Items.Add(0, 'NCK', 'Network clock');
    oTable.Items.Add(0, 'NSC', 'Network status change');
    oTable.Items.Add(0, 'NST', 'Network statistic');
    oTable.Items.Add(0, 'ORD', 'Order');
    oTable.Items.Add(0, 'OTH', 'Other');
    oTable.Items.Add(0, 'PRB', 'Problems');
    oTable.Items.Add(0, 'PRO', 'Procedure');
    oTable.Items.Add(0, 'RAR', 'Pharmacy administration information');
    oTable.Items.Add(0, 'RDR', 'Pharmacy dispense information');
    oTable.Items.Add(0, 'RER', 'Pharmacy encoded order information');
    oTable.Items.Add(0, 'RES', 'Result');
    oTable.Items.Add(0, 'RGR', 'Pharmacy give information');
    oTable.Items.Add(0, 'ROR', 'Pharmacy prescription information');
    oTable.Items.Add(0, 'STA', 'Status');
    oTable.Items.Add(0, 'VXI', 'Vaccine Information');
End;

procedure LoadTable49(oTables : THL7V2ModelTables);
Begin
  oTables.Add(49, 'Department Code');
End;

procedure LoadTable50(oTables : THL7V2ModelTables);
Begin
  oTables.Add(50, 'Accident Code');
End;

procedure LoadTable51(oTables : THL7V2ModelTables);
Begin
  oTables.Add(51, 'Diagnosis Code');
End;

procedure LoadTable52(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(52, 'Diagnosis Type');
    oTable.Items.Add(0, 'A', 'Admitting');
    oTable.Items.Add(0, 'F', 'Final');
    oTable.Items.Add(0, 'W', 'Working');
End;

procedure LoadTable53(oTables : THL7V2ModelTables);
Begin
  oTables.Add(53, 'Diagnosis Coding Methed');
End;

procedure LoadTable55(oTables : THL7V2ModelTables);
Begin
  oTables.Add(55, 'DRG Code');
End;

procedure LoadTable56(oTables : THL7V2ModelTables);
Begin
  oTables.Add(56, 'DRG Grouper Review Code');
End;

procedure LoadTable59(oTables : THL7V2ModelTables);
Begin
  oTables.Add(59, 'Consent Code');
End;

procedure LoadTable60(oTables : THL7V2ModelTables);
Begin
  oTables.Add(60, '???');
End;

procedure LoadTable61(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(61, 'Check Digit Scheme');
    oTable.Items.Add(0, 'M10', 'Mod 10 algorithm');
    oTable.Items.Add(0, 'M11', 'Mod 11 algorithm');
End;

procedure LoadTable62(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(62, 'Event Reason');
    oTable.Items.Add(0, '01', 'Patient request');
    oTable.Items.Add(0, '02', 'Physician order');
    oTable.Items.Add(0, '03', 'Census management');
End;

procedure LoadTable63(oTables : THL7V2ModelTables);
Begin
  oTables.Add(63, 'Relationship');
End;

procedure LoadTable64(oTables : THL7V2ModelTables);
Begin
  oTables.Add(64, 'Financial Class');
End;

procedure LoadTable65(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(65, 'Specimen Action Code');
    oTable.Items.Add(0, 'A', 'Add ordered tests to the existing specimen');
    oTable.Items.Add(0, 'G', 'Generated order; reflex order');
    oTable.Items.Add(0, 'L', 'Lab to obtain specimen from patient');
    oTable.Items.Add(0, 'O', 'Specimen obtained by service other than Lab');
    oTable.Items.Add(0, 'P', 'Pending specimen; Order sent prior to delivery');
    oTable.Items.Add(0, 'R', 'Revised order');
    oTable.Items.Add(0, 'S', 'Schedule the tests specified below');
End;

procedure LoadTable66(oTables : THL7V2ModelTables);
Begin
  oTables.Add(66, 'Employment Status');
End;

procedure LoadTable68(oTables : THL7V2ModelTables);
Begin
  oTables.Add(68, 'Guarantor Relationship');
End;

procedure LoadTable69(oTables : THL7V2ModelTables);
Begin
  oTables.Add(69, 'Hospital Service');
End;

procedure LoadTable70(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(70, 'Specimen Source Codes');
    oTable.Items.Add(0, 'ABS', 'Abcess');
    oTable.Items.Add(0, 'AMN', 'Amniotic fluid');
    oTable.Items.Add(0, 'ASP', 'Aspirate');
    oTable.Items.Add(0, 'BBL', 'Blood bag');
    oTable.Items.Add(0, 'BDY', 'Whole body');
    oTable.Items.Add(0, 'BIFL', 'Bile fluid');
    oTable.Items.Add(0, 'BLD', 'Whole blood');
    oTable.Items.Add(0, 'BLDA', 'Blood  arterial');
    oTable.Items.Add(0, 'BLDC', 'Blood  capillary');
    oTable.Items.Add(0, 'BLDV', 'Blood  venous');
    oTable.Items.Add(0, 'BON', 'Bone');
    oTable.Items.Add(0, 'BPH', 'Basophils');
    oTable.Items.Add(0, 'BPU', 'Blood product unit');
    oTable.Items.Add(0, 'BRN', 'Burn');
    oTable.Items.Add(0, 'BRO', 'Bronchial');
    oTable.Items.Add(0, 'BRTH', 'Breath (use EXHLD)');
    oTable.Items.Add(0, 'CALC', 'Calculus (=Stone)');
    oTable.Items.Add(0, 'CBLD', 'Cord blood');
    oTable.Items.Add(0, 'CDM', 'Cardiac muscle');
    oTable.Items.Add(0, 'CNJT', 'Conjunctiva');
    oTable.Items.Add(0, 'CNL', 'Cannula');
    oTable.Items.Add(0, 'COL', 'Colostrum');
    oTable.Items.Add(0, 'CSF', 'Cerebral spinal fluid');
    oTable.Items.Add(0, 'CTP', 'Catheter tip');
    oTable.Items.Add(0, 'CUR', 'Curettage');
    oTable.Items.Add(0, 'CVM', 'Cervical mucus');
    oTable.Items.Add(0, 'CVX', 'Cervix');
    oTable.Items.Add(0, 'CYST', 'Cyst');
    oTable.Items.Add(0, 'DIAF', 'Dialysis fluid');
    oTable.Items.Add(0, 'DOSE', 'Dose med or substance');
    oTable.Items.Add(0, 'DRN', 'Drain');
    oTable.Items.Add(0, 'DUFL', 'Duodenal fluid');
    oTable.Items.Add(0, 'EAR', 'Ear');
    oTable.Items.Add(0, 'EARW', 'Ear wax (cerumen)');
    oTable.Items.Add(0, 'ELT', 'Electrode');
    oTable.Items.Add(0, 'ENDC', 'Endocardium');
    oTable.Items.Add(0, 'ENDM', 'Endometrium');
    oTable.Items.Add(0, 'EOS', 'Eosinophils');
    oTable.Items.Add(0, 'EXHLD', 'Exhaled gas (=breath)');
    oTable.Items.Add(0, 'EYE', 'Eye');
    oTable.Items.Add(0, 'FIB', 'Fibroblasts');
    oTable.Items.Add(0, 'FIST', 'Fistula');
    oTable.Items.Add(0, 'FLT', 'Filter');
    oTable.Items.Add(0, 'FLU', 'Body fluid, unsp');
    oTable.Items.Add(0, 'GAS', 'Gas');
    oTable.Items.Add(0, 'GAST', 'Gastric fluid/contents');
    oTable.Items.Add(0, 'GEN', 'Genital');
    oTable.Items.Add(0, 'GENC', 'Genital cervix');
    oTable.Items.Add(0, 'GENL', 'Genital lochia');
    oTable.Items.Add(0, 'GENV', 'Genital vaginal');
    oTable.Items.Add(0, 'HAR', 'Hair');
    oTable.Items.Add(0, 'IHG', 'Inhaled Gas');
    oTable.Items.Add(0, 'ISLT', 'Isolate');
    oTable.Items.Add(0, 'IT', 'Intubation tube');
    oTable.Items.Add(0, 'LAM', 'Lamella');
    oTable.Items.Add(0, 'LIQ', 'Liquid NOS');
    oTable.Items.Add(0, 'LN', 'Line');
    oTable.Items.Add(0, 'LNA', 'Line arterial');
    oTable.Items.Add(0, 'LNV', 'Line venous');
    oTable.Items.Add(0, 'LYM', 'Lymphocytes');
    oTable.Items.Add(0, 'MAC', 'Macrophages');
    oTable.Items.Add(0, 'MAR', 'Marrow');
    oTable.Items.Add(0, 'MBLD', 'Menstrual blood');
    oTable.Items.Add(0, 'MEC', 'Meconium');
    oTable.Items.Add(0, 'MILK', 'Breast milk');
    oTable.Items.Add(0, 'MLK', 'Milk');
    oTable.Items.Add(0, 'NAIL', 'Nail');
    oTable.Items.Add(0, 'NOS', 'Nose (nasal passage)');
    oTable.Items.Add(0, 'ORH', 'Other');
    oTable.Items.Add(0, 'PAFL', 'Pancreatic fluid');
    oTable.Items.Add(0, 'PAT', 'Patient');
    oTable.Items.Add(0, 'PLAS', 'Plasma');
    oTable.Items.Add(0, 'PLB', 'Plasma bag');
    oTable.Items.Add(0, 'PLC', 'Placenta');
    oTable.Items.Add(0, 'PLR', 'Pleural fluid (thoracentesis fld)');
    oTable.Items.Add(0, 'PMN', 'Polymorphonuclear neutrophils');
    oTable.Items.Add(0, 'PPP', 'Patelet poor plasma');
    oTable.Items.Add(0, 'PRP', 'Platelet rich plasma');
    oTable.Items.Add(0, 'PRT', 'Peritoneal fluid /ascites');
    oTable.Items.Add(0, 'PUS', 'Pus');
    oTable.Items.Add(0, 'RBC', 'Erythrocytes');
    oTable.Items.Add(0, 'RT', 'Route of medicine');
    oTable.Items.Add(0, 'SAL', 'Saliva');
    oTable.Items.Add(0, 'SEM', 'Seminal fluid');
    oTable.Items.Add(0, 'SER', 'Serum');
    oTable.Items.Add(0, 'SKM', 'Skeletal muscle');
    oTable.Items.Add(0, 'SKN', 'Skin');
    oTable.Items.Add(0, 'SNV', 'Synovial fluid (Joint fluid)');
    oTable.Items.Add(0, 'SPRM', 'Spermatozoa');
    oTable.Items.Add(0, 'SPT', 'Sputum');
    oTable.Items.Add(0, 'SPTC', 'Sputum - coughed');
    oTable.Items.Add(0, 'SPTT', 'Sputum - tracheal aspirate');
    oTable.Items.Add(0, 'STL', 'Stool = Fecal');
    oTable.Items.Add(0, 'STON', 'Stone (use CALC)');
    oTable.Items.Add(0, 'SWT', 'Sweat');
    oTable.Items.Add(0, 'TEAR', 'Tears');
    oTable.Items.Add(0, 'THRB', 'Thrombocyte (platelet)');
    oTable.Items.Add(0, 'THRT', 'Throat');
    oTable.Items.Add(0, 'TISG', 'Tissue gall bladder');
    oTable.Items.Add(0, 'TISPL', 'Tissue placenta');
    oTable.Items.Add(0, 'TISS', 'Tissue');
    oTable.Items.Add(0, 'TISU', 'Tissue ulcer');
    oTable.Items.Add(0, 'TLGI', 'Tissue large intestine');
    oTable.Items.Add(0, 'TLNG', 'Tissue lung');
    oTable.Items.Add(0, 'TSMI', 'Tissue small intestine');
    oTable.Items.Add(0, 'TUB', 'Tube NOS');
    oTable.Items.Add(0, 'ULC', 'Ulcer');
    oTable.Items.Add(0, 'UMB', 'Umbilical blood');
    oTable.Items.Add(0, 'UMED', 'Unknown medicine');
    oTable.Items.Add(0, 'UR', 'Urine');
    oTable.Items.Add(0, 'URC', 'Urine clean catch');
    oTable.Items.Add(0, 'URNS', 'Urine sediment');
    oTable.Items.Add(0, 'URT', 'Urine catheter');
    oTable.Items.Add(0, 'URTH', 'Urethra');
    oTable.Items.Add(0, 'USUB', 'Unknown substance');
    oTable.Items.Add(0, 'VOM', 'Vomitus');
    oTable.Items.Add(0, 'WAT', 'Water');
    oTable.Items.Add(0, 'WBC', 'Leukocytes');
    oTable.Items.Add(0, 'WICK', 'Wick');
    oTable.Items.Add(0, 'WND', 'Wound');
    oTable.Items.Add(0, 'WNDA', 'Wound abscess');
    oTable.Items.Add(0, 'WNDD', 'Wound drainage');
    oTable.Items.Add(0, 'WNDE', 'Wound exudate');
    oTable.Items.Add(0, 'XXX', 'To be specified in another part of the message');
End;

procedure LoadTable72(oTables : THL7V2ModelTables);
Begin
  oTables.Add(72, 'Insurance Plan ID');
End;

procedure LoadTable73(oTables : THL7V2ModelTables);
Begin
  oTables.Add(73, 'Interest Rate Code');
End;

procedure LoadTable74(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(74, 'Diagnostic Service Section ID');
    oTable.Items.Add(0, 'AU', 'Audiology');
    oTable.Items.Add(0, 'BG', 'Blood gases');
    oTable.Items.Add(0, 'BLB', 'Blood bank');
    oTable.Items.Add(0, 'CH', 'Chemistry');
    oTable.Items.Add(0, 'CP', 'Cytopathology');
    oTable.Items.Add(0, 'CT', 'CAT scan');
    oTable.Items.Add(0, 'CTH', 'Cardiac catheterization');
    oTable.Items.Add(0, 'CUS', 'Cardiac Ultrasound');
    oTable.Items.Add(0, 'EC', 'Electrocardiac (e.g., EKG,  EEC, Holter)');
    oTable.Items.Add(0, 'EN', 'Electroneuro (EEG, EMG,EP,PSG)');
    oTable.Items.Add(0, 'HM', 'Hematology');
    oTable.Items.Add(0, 'ICU', 'Bedside ICU Monitoring');
    oTable.Items.Add(0, 'IMM', 'Immunology');
    oTable.Items.Add(0, 'LAB', 'Laboratory');
    oTable.Items.Add(0, 'MB', 'Microbiology');
    oTable.Items.Add(0, 'MCB', 'Mycobacteriology');
    oTable.Items.Add(0, 'MYC', 'Mycology');
    oTable.Items.Add(0, 'NMR', 'Nuclear magnetic resonance');
    oTable.Items.Add(0, 'NMS', 'Nuclear medicine scan');
    oTable.Items.Add(0, 'NRS', 'Nursing service measures');
    oTable.Items.Add(0, 'OSL', 'Outside Lab');
    oTable.Items.Add(0, 'OT', 'Occupational Therapy');
    oTable.Items.Add(0, 'OTH', 'Other');
    oTable.Items.Add(0, 'OUS', 'OB Ultrasound');
    oTable.Items.Add(0, 'PF', 'Pulmonary function');
    oTable.Items.Add(0, 'PHR', 'Pharmacy');
    oTable.Items.Add(0, 'PHY', 'Physician (Hx. Dx, admission note, etc.l)');
    oTable.Items.Add(0, 'PT', 'Physical Therapy');
    oTable.Items.Add(0, 'RAD', 'Radiology');
    oTable.Items.Add(0, 'RC', 'Respiratory Care (therapy)');
    oTable.Items.Add(0, 'RT', 'Radiation therapy');
    oTable.Items.Add(0, 'RUS', 'Radiology ultrasound');
    oTable.Items.Add(0, 'RX', 'Radiograph');
    oTable.Items.Add(0, 'SP', 'Surgidal Pathology');
    oTable.Items.Add(0, 'SR', 'Serology');
    oTable.Items.Add(0, 'TX', 'Toxicology');
    oTable.Items.Add(0, 'VR', 'Virology');
    oTable.Items.Add(0, 'VUS', 'Vascular Ultrasound');
    oTable.Items.Add(0, 'XRC', 'Cineradiograph');
End;

procedure LoadTable76(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(76, 'Message Type');
    oTable.Items.Add(0, 'ACK', 'General acknowledgment message');
    oTable.Items.Add(0, 'ADR', 'Patient query response');
    oTable.Items.Add(0, 'ADT', 'ADT message');
    oTable.Items.Add(0, 'ARD', 'Ancillary RPT (display)');
    oTable.Items.Add(0, 'BAR', 'Add/change billing account');
    oTable.Items.Add(0, 'CNQ', 'Cancel query');
    oTable.Items.Add(0, 'CSU', 'Unsolicited clinical study data');
    oTable.Items.Add(0, 'DFT', 'Detail financial transaction');
    oTable.Items.Add(0, 'DOC', 'Document Response');
    oTable.Items.Add(0, 'DSR', 'Display response');
    oTable.Items.Add(0, 'EDR', 'Enhanced display response');
    oTable.Items.Add(0, 'EQQ', 'Embedded query language query');
    oTable.Items.Add(0, 'ERP', 'Event replay response');
    oTable.Items.Add(0, 'ERQ', 'Event replay query');
    oTable.Items.Add(0, 'MCF', 'Delayed acknowledgment');
    oTable.Items.Add(0, 'MDM', 'Documentation message');
    oTable.Items.Add(0, 'MFD', 'Master files delayed application ack');
    oTable.Items.Add(0, 'MFK', 'Master files application ack');
    oTable.Items.Add(0, 'MFN', 'Master files notification');
    oTable.Items.Add(0, 'MFQ', 'Master files query');
    oTable.Items.Add(0, 'MFR', 'Master files query response');
    oTable.Items.Add(0, 'ORF', 'Observ. result/record response');
    oTable.Items.Add(0, 'ORM', 'Order message');
    oTable.Items.Add(0, 'ORR', 'Order acknowledgment message');
    oTable.Items.Add(0, 'ORU', 'Observ result/unsolicited');
    oTable.Items.Add(0, 'OSQ', 'Order status query');
    oTable.Items.Add(0, 'OSR', 'Order status response');
    oTable.Items.Add(0, 'PEX', 'Product experience');
    oTable.Items.Add(0, 'PGL', 'Patient goal');
    oTable.Items.Add(0, 'PIN', 'Patient information');
    oTable.Items.Add(0, 'PPG', 'Patient Pathway (goal-oriented) message');
    oTable.Items.Add(0, 'PPR', 'Patient problem');
    oTable.Items.Add(0, 'PPT', 'Patient Pathway (goal oriented) response');
    oTable.Items.Add(0, 'PPV', 'Patient Goal Response');
    oTable.Items.Add(0, 'PRR', 'Patient Problem Response');
    oTable.Items.Add(0, 'PTR', 'Patient Pathway (problem-oriented) response');
    oTable.Items.Add(0, 'QCK', 'Query General  Acknowledgment');
    oTable.Items.Add(0, 'QRY', 'Query, original Mode');
    oTable.Items.Add(0, 'RAR', 'Pharmacy administration information');
    oTable.Items.Add(0, 'RAS', 'Pharmacy administration message');
    oTable.Items.Add(0, 'RCI', 'Return clinical information');
    oTable.Items.Add(0, 'RCL', 'Return clinical list');
    oTable.Items.Add(0, 'RDE', 'Pharmacy encoded order message');
    oTable.Items.Add(0, 'RDR', 'Pharmacy dispense information');
    oTable.Items.Add(0, 'RDS', 'Pharmacy dispense message');
    oTable.Items.Add(0, 'REF', 'Patient referral');
    oTable.Items.Add(0, 'RER', 'Pharmacy encoded order information');
    oTable.Items.Add(0, 'RGR', 'Pharmacy dose information');
    oTable.Items.Add(0, 'RGV', 'Pharmacy give message');
    oTable.Items.Add(0, 'ROC', 'Request clinical information');
    oTable.Items.Add(0, 'ROD', 'Request pateint demographics');
    oTable.Items.Add(0, 'ROR', 'Pharmacy prescription order response');
    oTable.Items.Add(0, 'RPA', 'Return patient authorization');
    oTable.Items.Add(0, 'RPI', 'Return patient information');
    oTable.Items.Add(0, 'RPL', 'Return patient display list');
    oTable.Items.Add(0, 'RPR', 'Return patient list');
    oTable.Items.Add(0, 'RQA', 'Request patient authorization');
    oTable.Items.Add(0, 'RQC', 'Request Clinical Information');
    oTable.Items.Add(0, 'RQI', 'Request patient information');
    oTable.Items.Add(0, 'RQP', 'Request Patient Demographics');
    oTable.Items.Add(0, 'RQQ', '??? Page 2-68');
    oTable.Items.Add(0, 'RRA', 'Pharmacy administration acknowledgment');
    oTable.Items.Add(0, 'RRD', 'Pharmacy dispense acknowledgment');
    oTable.Items.Add(0, 'RRE', 'Pharmacy encoded order acknowledgment');
    oTable.Items.Add(0, 'RRG', 'Pharmacy give acknowledgment');
    oTable.Items.Add(0, 'RRI', 'Return patient referral');
    oTable.Items.Add(0, 'SIU', 'Schedule information unsolicited');
    oTable.Items.Add(0, 'SPQ', 'Stored procedure request');
    oTable.Items.Add(0, 'SQM', 'Schedule query');
    oTable.Items.Add(0, 'SQR', 'Schedule query response');
    oTable.Items.Add(0, 'SRM', 'Study registration');
    oTable.Items.Add(0, 'SRR', 'Scheduled request response');
    oTable.Items.Add(0, 'TBR', 'Tabular response');
    oTable.Items.Add(0, 'UDM', 'Unsolicited display message');
    oTable.Items.Add(0, 'VQQ', 'Virtual table query');
    oTable.Items.Add(0, 'VXQ', 'Query for vaccination record');
    oTable.Items.Add(0, 'VXR', 'Vaccination query record response');
    oTable.Items.Add(0, 'VXU', 'Unsolicited vaccinnation record update');
    oTable.Items.Add(0, 'VXX', 'Vaccination query response with multiple PID matches');
End;

procedure LoadTable78(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(78, 'Abnormal Flags');
    oTable.Items.Add(0, '<', 'Below absolute low-off instrument scale');
    oTable.Items.Add(0, '>', 'Above absolute high-off instrument scale');
    oTable.Items.Add(0, 'A', 'Abnormal (applies to non-numeric results)');
    oTable.Items.Add(0, 'AA', 'Very abnormal (applies to non-numeric units, analagous to panic limits for numeric units)');
    oTable.Items.Add(0, 'B', 'Better--use when direction not relevant');
    oTable.Items.Add(0, 'D', 'Significant change down');
    oTable.Items.Add(0, 'H', 'Above high normal');
    oTable.Items.Add(0, 'HH', 'Above upper panic limits');
    oTable.Items.Add(0, 'I', 'Intermediate (microbiology sensitivies only)');
    oTable.Items.Add(0, 'L', 'Below low normal');
    oTable.Items.Add(0, 'LL', 'Below lower panic limits');
    oTable.Items.Add(0, 'MS', 'Moderately sensitive (microbiology sensitivies only)');
    oTable.Items.Add(0, 'N', 'Normal (applies to non-numeric results)');
    oTable.Items.Add(0, 'null', 'No range defined, or normal ranges don''t apply');
    oTable.Items.Add(0, 'R', 'Resistant (microbiology sensitivies only)');
    oTable.Items.Add(0, 'S', 'Sensitive (microbiology sensitivies only)');
    oTable.Items.Add(0, 'U', 'Significant change up');
    oTable.Items.Add(0, 'VS', 'Very sensitive (microbiology sensitivies only)');
    oTable.Items.Add(0, 'W', 'Worse--use when direction not relevant');
End;

procedure LoadTable79(oTables : THL7V2ModelTables);
Begin
  oTables.Add(79, 'Location');
End;

procedure LoadTable80(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(80, 'Nature of Abnormal Testing');
    oTable.Items.Add(0, 'A', 'An age-based population');
    oTable.Items.Add(0, 'N', 'None - generic normal range');
    oTable.Items.Add(0, 'R', 'A race-based population');
    oTable.Items.Add(0, 'S', 'A sex-based population');
End;

procedure LoadTable83(oTables : THL7V2ModelTables);
Begin
  oTables.Add(83, 'Outlier Type');
End;

procedure LoadTable84(oTables : THL7V2ModelTables);
Begin
  oTables.Add(84, 'Performed By');
End;

procedure LoadTable85(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(85, 'Observation Result Status Codes Interpretation');
    oTable.Items.Add(0, 'C', 'Record coming over is a correction and thus replaces a final result');
    oTable.Items.Add(0, 'D', 'Deletes the OBX record');
    oTable.Items.Add(0, 'F', 'Final results;  Can only be changed with a corrected result.');
    oTable.Items.Add(0, 'I', 'Specimen in lab; results pending');
    oTable.Items.Add(0, 'P', 'Preliminary results');
    oTable.Items.Add(0, 'R', 'Results entered -- not verified');
    oTable.Items.Add(0, 'S', 'Partial results');
    oTable.Items.Add(0, 'U', 'Results status change to Final.  Results did not change (don''t transmit test).  E.g., radiology changes status from preliminary to final');
    oTable.Items.Add(0, 'X', 'Results cannot be obtained for this observation');
End;

procedure LoadTable86(oTables : THL7V2ModelTables);
Begin
  oTables.Add(86, 'Plan ID');
End;

procedure LoadTable87(oTables : THL7V2ModelTables);
Begin
  oTables.Add(87, 'Pre-admit Test Indicator');
End;

procedure LoadTable88(oTables : THL7V2ModelTables);
Begin
  oTables.Add(88, 'Procedure Code');
End;

procedure LoadTable89(oTables : THL7V2ModelTables);
Begin
  oTables.Add(89, 'Procedure Coding Method');
End;

procedure LoadTable91(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(91, 'Query Priority');
    oTable.Items.Add(0, 'D', 'Deferred');
    oTable.Items.Add(0, 'I', 'Immediate');
End;

procedure LoadTable92(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(92, 'Re-admission Indicator');
    oTable.Items.Add(0, 'R', 'Readmission');
End;

procedure LoadTable93(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(93, 'Release Information');
    oTable.Items.Add(0, 'N', 'No');
    oTable.Items.Add(0, 'Y', 'Yes');
End;

procedure LoadTable98(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(98, 'Type of Agreement');
    oTable.Items.Add(0, 'M', 'Maternity');
    oTable.Items.Add(0, 'S', 'Standard');
    oTable.Items.Add(0, 'U', 'unified');
End;

procedure LoadTable99(oTables : THL7V2ModelTables);
Begin
  oTables.Add(99, 'VIP Indicator');
End;

procedure LoadTable100(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(100, 'When to Charge');
    oTable.Items.Add(0, 'D', 'On discharge');
    oTable.Items.Add(0, 'O', 'On receipt of order');
    oTable.Items.Add(0, 'R', 'At time service is completed');
    oTable.Items.Add(0, 'S', 'At time service is started');
    oTable.Items.Add(0, 'T', 'At a designated date/time');
End;

procedure LoadTable102(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(102, 'Delayed Acknowledgement Type');
    oTable.Items.Add(0, 'D', 'Message received, stored for later processing');
    oTable.Items.Add(0, 'F', 'Acknowledgement after processing');
End;

procedure LoadTable103(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(103, 'Processing ID');
    oTable.Items.Add(0, 'D', 'Debugging');
    oTable.Items.Add(0, 'P', 'Production');
    oTable.Items.Add(0, 'T', 'Training');
End;

procedure LoadTable104(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(104, 'Version ID');
    oTable.Items.Add(0, '2.0', 'Release 2.0  September 1988');
    oTable.Items.Add(0, '2.0D', 'Demo 2.0  October 1988');
    oTable.Items.Add(0, '2.1', 'Release 2.1  March 1990');
    oTable.Items.Add(0, '2.2', 'Release 2.2  December 1994');
    oTable.Items.Add(0, '2.3', 'Release 2.3 ?? 1996');
End;

procedure LoadTable105(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(105, 'Source of Comment');
    oTable.Items.Add(0, 'L', 'Ancillary (filler) department is source of comment');
    oTable.Items.Add(0, 'O', 'Other system is source of comment');
    oTable.Items.Add(0, 'P', 'Orderer (placer) is source of comment');
End;

procedure LoadTable106(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(106, 'Query/Response Format Code');
    oTable.Items.Add(0, 'D', 'Response is in display format');
    oTable.Items.Add(0, 'R', 'Response is in record-oriented format');
    oTable.Items.Add(0, 'T', 'Response is in tabular format');
End;

procedure LoadTable107(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(107, 'Deferred Response Type');
    oTable.Items.Add(0, 'B', 'Before the date/time specified');
    oTable.Items.Add(0, 'L', 'Later than the date/time specified');
End;

procedure LoadTable108(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(108, 'Query Results Level');
    oTable.Items.Add(0, 'O', 'Order plus order status');
    oTable.Items.Add(0, 'R', 'Results without bulk text');
    oTable.Items.Add(0, 'S', 'Status only');
    oTable.Items.Add(0, 'T', 'Full results (default)');
End;

procedure LoadTable109(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(109, 'Report Priority');
    oTable.Items.Add(0, 'R', 'Routine');
    oTable.Items.Add(0, 'S', 'STAT');
End;

procedure LoadTable110(oTables : THL7V2ModelTables);
Begin
  oTables.Add(110, 'Transfer to Bad Debt Code');
End;

procedure LoadTable111(oTables : THL7V2ModelTables);
Begin
  oTables.Add(111, 'Delete Account Code');
End;

procedure LoadTable112(oTables : THL7V2ModelTables);
Begin
  oTables.Add(112, 'Discharged Disposition');
End;

procedure LoadTable113(oTables : THL7V2ModelTables);
Begin
  oTables.Add(113, 'Discharged to Location');
End;

procedure LoadTable114(oTables : THL7V2ModelTables);
Begin
  oTables.Add(114, 'Diet Type');
End;

procedure LoadTable115(oTables : THL7V2ModelTables);
Begin
  oTables.Add(115, 'Servicing Facility');
End;

procedure LoadTable116(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(116, 'Bed Status');
    oTable.Items.Add(0, 'C', 'Closed');
    oTable.Items.Add(0, 'H', 'Housekeeping');
    oTable.Items.Add(0, 'I', 'Isolated');
    oTable.Items.Add(0, 'K', 'Contaminated');
    oTable.Items.Add(0, 'O', 'Occupied');
    oTable.Items.Add(0, 'U', 'Unoccupied');
End;

procedure LoadTable117(oTables : THL7V2ModelTables);
Begin
  oTables.Add(117, 'Account Status');
End;

procedure LoadTable118(oTables : THL7V2ModelTables);
Begin
  oTables.Add(118, 'Major Diagnostic Category');
End;

procedure LoadTable119(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(119, 'Order Control Code');
    oTable.Items.Add(0, 'AF', 'Order refille request approval');
    oTable.Items.Add(0, 'CA', 'Cancel order request');
    oTable.Items.Add(0, 'CH', 'Child order');
    oTable.Items.Add(0, 'CN', 'Combined result');
    oTable.Items.Add(0, 'CR', 'Canceled as requested');
    oTable.Items.Add(0, 'DC', 'Discontinue order request');
    oTable.Items.Add(0, 'DE', 'Data Errors');
    oTable.Items.Add(0, 'DF', 'Order refill request denied');
    oTable.Items.Add(0, 'DR', 'Discontinued as requested');
    oTable.Items.Add(0, 'FU', 'Order refilled, unsolicited');
    oTable.Items.Add(0, 'HD', 'Hold order request');
    oTable.Items.Add(0, 'HR', 'On hold as requested');
    oTable.Items.Add(0, 'NA', 'Number assigned');
    oTable.Items.Add(0, 'NW', 'New Order');
    oTable.Items.Add(0, 'OC', 'Order canceled');
    oTable.Items.Add(0, 'OD', 'Order discontinued');
    oTable.Items.Add(0, 'OE', 'Order released');
    oTable.Items.Add(0, 'OF', 'Order refilled as requested');
    oTable.Items.Add(0, 'OH', 'Order held');
    oTable.Items.Add(0, 'OK', 'Order accepted and OK');
    oTable.Items.Add(0, 'OR', 'Released as requested');
    oTable.Items.Add(0, 'PA', 'Parent order');
    oTable.Items.Add(0, 'RE', 'Observations to follow');
    oTable.Items.Add(0, 'RF', 'Refill order request');
    oTable.Items.Add(0, 'RL', 'Release previous hold');
    oTable.Items.Add(0, 'RO', 'Replacement order');
    oTable.Items.Add(0, 'RP', 'Order replace request');
    oTable.Items.Add(0, 'RQ', 'Replaced as requested');
    oTable.Items.Add(0, 'RR', 'Request received');
    oTable.Items.Add(0, 'RU', 'Replaced unsolicited');
    oTable.Items.Add(0, 'SC', 'Status changed');
    oTable.Items.Add(0, 'SN', 'Send order number');
    oTable.Items.Add(0, 'SR', 'Response to send order status request');
    oTable.Items.Add(0, 'SS', 'Send order status request');
    oTable.Items.Add(0, 'UA', 'Unable to accept order');
    oTable.Items.Add(0, 'UC', 'Unable to cancel');
    oTable.Items.Add(0, 'UD', 'Unable to discontinue');
    oTable.Items.Add(0, 'UF', 'Unable to refill');
    oTable.Items.Add(0, 'UH', 'Unable to put on hold');
    oTable.Items.Add(0, 'UM', 'Unable to replace');
    oTable.Items.Add(0, 'UR', 'Unable to release');
    oTable.Items.Add(0, 'UX', 'Unable to change');
    oTable.Items.Add(0, 'XO', 'Change order request');
    oTable.Items.Add(0, 'XR', 'Changed as requested');
    oTable.Items.Add(0, 'XX', 'Order changed, unsolicited');
End;

procedure LoadTable121(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(121, 'Response Flag');
    oTable.Items.Add(0, 'D', 'Same as R, also other associated segments');
    oTable.Items.Add(0, 'E', 'Report exceptions only');
    oTable.Items.Add(0, 'F', 'Same as D, plus confirmations explicitly');
    oTable.Items.Add(0, 'N', 'Only the MSA segment is returned');
    oTable.Items.Add(0, 'R', 'Same as E, also Replacement and Parent-Child');
End;

procedure LoadTable122(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(122, 'Charge Type');
    oTable.Items.Add(0, 'CH', 'Charge');
    oTable.Items.Add(0, 'CO', 'Contract');
    oTable.Items.Add(0, 'CR', 'Credit');
    oTable.Items.Add(0, 'DP', 'Department');
    oTable.Items.Add(0, 'GR', 'Grant');
    oTable.Items.Add(0, 'NC', 'No Charge');
    oTable.Items.Add(0, 'PC', 'Professional');
    oTable.Items.Add(0, 'RS', 'Research');
End;

procedure LoadTable123(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(123, 'Result Status');
    oTable.Items.Add(0, 'A', 'Some, but not all, results available');
    oTable.Items.Add(0, 'C', 'Correction to results');
    oTable.Items.Add(0, 'F', 'Final results; results stored and verified.  Can only be changed with a corrected result.');
    oTable.Items.Add(0, 'I', 'No results available; specimen received, procedure incomplete');
    oTable.Items.Add(0, 'O', 'Order received; specimen not yet received');
    oTable.Items.Add(0, 'P', 'Preliminary: A verified early result is available, final results not yet obtained');
    oTable.Items.Add(0, 'R', 'Results stored; not yet verified');
    oTable.Items.Add(0, 'S', 'No results available; procedure scheduled, but not done');
    oTable.Items.Add(0, 'X', 'No results available; Order canceled.');
    oTable.Items.Add(0, 'Y', 'No order on record for this test.  (Used only on queries)');
    oTable.Items.Add(0, 'Z', 'No record of this patient. (Used only on queries)');
End;

procedure LoadTable124(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(124, 'Transportation Mode');
    oTable.Items.Add(0, 'CART', 'Cart - patient travels on cart or gurney');
    oTable.Items.Add(0, 'PORT', 'The examining device goes to patient''s location');
    oTable.Items.Add(0, 'WALK', 'Patient walks to diagnostic service');
    oTable.Items.Add(0, 'WHLC', 'Wheelchair');
End;

procedure LoadTable125(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(125, 'Value Type');
    oTable.Items.Add(0, 'AD', 'Address');
    oTable.Items.Add(0, 'CE', 'Coded Entry');
    oTable.Items.Add(0, 'CF', 'Coded Element With Formatted Values');
    oTable.Items.Add(0, 'CK', 'Composite ID With Check Digit');
    oTable.Items.Add(0, 'CN', 'Composite ID And Name');
    oTable.Items.Add(0, 'CP', 'Composite Price');
    oTable.Items.Add(0, 'CX', 'Extended Composite ID With Check Digit');
    oTable.Items.Add(0, 'DT', 'Date');
    oTable.Items.Add(0, 'ED', 'Encapsulated Data');
    oTable.Items.Add(0, 'FT', 'Formatted Text (Display)');
    oTable.Items.Add(0, 'ID', 'Coded Value');
    oTable.Items.Add(0, 'MO', 'Money');
    oTable.Items.Add(0, 'NM', 'Numeric');
    oTable.Items.Add(0, 'PN', 'Person Name');
    oTable.Items.Add(0, 'RP', 'Reference Pointer');
    oTable.Items.Add(0, 'SN', 'Structured Numeric');
    oTable.Items.Add(0, 'ST', 'String Data.');
    oTable.Items.Add(0, 'TM', 'Time');
    oTable.Items.Add(0, 'TN', 'Telephone Number');
    oTable.Items.Add(0, 'TS', 'Time Stamp (Date & Time)');
    oTable.Items.Add(0, 'TX', 'Text Data (Display)');
    oTable.Items.Add(0, 'XAD', 'Extended Address');
    oTable.Items.Add(0, 'XCN', 'Extended Composite Name And Number For Persons');
    oTable.Items.Add(0, 'XON', 'Extended Composite Name And Number For Organizations');
    oTable.Items.Add(0, 'XPN', 'Extended Person Name');
    oTable.Items.Add(0, 'XTN', 'Extended Telecommunications Number');
End;

procedure LoadTable126(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(126, 'Quantity Limited Request');
    oTable.Items.Add(0, 'CH', 'Characters');
    oTable.Items.Add(0, 'LI', 'Lines');
    oTable.Items.Add(0, 'PG', 'Pages');
    oTable.Items.Add(0, 'RD', 'Records');
    oTable.Items.Add(0, 'ZO', 'Locally defined');
End;

procedure LoadTable127(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(127, 'Allergy Type');
    oTable.Items.Add(0, 'DA', 'Drug Allergy');
    oTable.Items.Add(0, 'FA', 'Food Allergy');
    oTable.Items.Add(0, 'MA', 'Miscellaneous Allergy');
    oTable.Items.Add(0, 'MC', 'Miscellaneous Contraindication');
End;

procedure LoadTable128(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(128, 'Allergy Severity');
    oTable.Items.Add(0, 'MI', 'Mild');
    oTable.Items.Add(0, 'MO', 'Moderate');
    oTable.Items.Add(0, 'SV', 'Severe');
End;

procedure LoadTable129(oTables : THL7V2ModelTables);
Begin
  oTables.Add(129, 'Accommodation Code');
End;

procedure LoadTable130(oTables : THL7V2ModelTables);
Begin
  oTables.Add(130, 'Visit User Code');
End;

procedure LoadTable131(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(131, 'Contact Role');
    oTable.Items.Add(0, 'BP', 'Billing contact person');
    oTable.Items.Add(0, 'CP', 'Contact person');
    oTable.Items.Add(0, 'EP', 'Emergency contact person');
    oTable.Items.Add(0, 'PR', 'Person preparing referral');
End;

procedure LoadTable132(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(132, 'Transaction Code');
    oTable.Items.Add(0, '...', '...');
End;

procedure LoadTable133(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(133, 'Procedure Practitioner Identifier Code Type');
    oTable.Items.Add(0, 'AN', 'Anesthesiologist');
    oTable.Items.Add(0, 'AS', 'Assistant Surgeon');
    oTable.Items.Add(0, 'CM', 'Certified Nurse Midwife');
    oTable.Items.Add(0, 'NP', 'Nurse Practitioner');
    oTable.Items.Add(0, 'PR', 'Procedure MD (surgeon)');
    oTable.Items.Add(0, 'PS', 'Primary Surgeon');
    oTable.Items.Add(0, 'RD', 'Radiologist');
    oTable.Items.Add(0, 'RS', 'Resident');
    oTable.Items.Add(0, 'SN', 'Scrub Nurse');
End;

procedure LoadTable135(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(135, 'Assignment of Benefits');
    oTable.Items.Add(0, 'M', 'Modified assignment');
    oTable.Items.Add(0, 'N', 'No');
    oTable.Items.Add(0, 'Y', 'Yes');
End;

procedure LoadTable136(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(136, 'Yes/No Indicator');
    oTable.Items.Add(0, 'N', 'No');
    oTable.Items.Add(0, 'Y', 'Yes');
End;

procedure LoadTable137(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(137, 'Mail Claim Party');
    oTable.Items.Add(0, 'E', 'Employer');
    oTable.Items.Add(0, 'G', 'Guarantor');
    oTable.Items.Add(0, 'I', 'Insurance Company');
    oTable.Items.Add(0, 'O', 'Other');
    oTable.Items.Add(0, 'P', 'Patient');
End;

procedure LoadTable139(oTables : THL7V2ModelTables);
Begin
  oTables.Add(139, 'Employer Information Data');
End;

procedure LoadTable140(oTables : THL7V2ModelTables);
Begin
  oTables.Add(140, 'Champus Service');
End;

procedure LoadTable141(oTables : THL7V2ModelTables);
Begin
  oTables.Add(141, 'Champus Rank/Grade');
End;

procedure LoadTable142(oTables : THL7V2ModelTables);
Begin
  oTables.Add(142, 'Champus Status');
End;

procedure LoadTable143(oTables : THL7V2ModelTables);
Begin
  oTables.Add(143, 'Non-covered Insurance Code');
End;

procedure LoadTable144(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(144, 'Eligibility Source');
    oTable.Items.Add(0, '1', 'Insurance company');
    oTable.Items.Add(0, '2', 'Employer');
    oTable.Items.Add(0, '3', 'Insured presented policy');
    oTable.Items.Add(0, '4', 'Insured presented card');
    oTable.Items.Add(0, '5', 'Signed statement on file');
    oTable.Items.Add(0, '6', 'Verbal Information');
    oTable.Items.Add(0, '7', 'None');
End;

procedure LoadTable145(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(145, 'Room Type');
    oTable.Items.Add(0, '2ICU', 'Second intensive care unit');
    oTable.Items.Add(0, '2PRI', 'Second private room');
    oTable.Items.Add(0, '2SPR', 'Second semi-private room');
    oTable.Items.Add(0, 'ICU', 'Intensive care unit');
    oTable.Items.Add(0, 'PRI', 'Private room');
    oTable.Items.Add(0, 'SPR', 'Semi-private room');
End;

procedure LoadTable146(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(146, 'Amount Type');
    oTable.Items.Add(0, 'DF', 'Differential');
    oTable.Items.Add(0, 'LM', 'Limit');
    oTable.Items.Add(0, 'PC', 'Percentage');
    oTable.Items.Add(0, 'RT', 'Rate');
    oTable.Items.Add(0, 'UL', 'Unlimited');
End;

procedure LoadTable147(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(147, 'Policy Type');
    oTable.Items.Add(0, '2ANC', 'Second ancillary');
    oTable.Items.Add(0, '2MMD', 'Second major medical');
    oTable.Items.Add(0, '3MMD', 'Third major medical');
    oTable.Items.Add(0, 'ANC', 'Ancillary');
    oTable.Items.Add(0, 'MMD', 'Major medical');
End;

procedure LoadTable148(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(148, 'Penalty Type');
    oTable.Items.Add(0, 'AT', 'Currency Amount');
    oTable.Items.Add(0, 'PC', 'Percentage');
End;

procedure LoadTable149(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(149, 'Insurance Company Contact Reason');
    oTable.Items.Add(0, 'AP', 'Approved');
    oTable.Items.Add(0, 'DE', 'Denied');
    oTable.Items.Add(0, 'PE', 'Pending');
End;

procedure LoadTable150(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(150, 'Pre-certification Patient Type');
    oTable.Items.Add(0, 'ER', 'Emergency');
    oTable.Items.Add(0, 'IPE', 'Inpatient elective');
    oTable.Items.Add(0, 'OPE', 'Outpatient elective');
    oTable.Items.Add(0, 'UR', 'Urgent');
End;

procedure LoadTable151(oTables : THL7V2ModelTables);
Begin
  oTables.Add(151, 'Second Opinion Status');
End;

procedure LoadTable152(oTables : THL7V2ModelTables);
Begin
  oTables.Add(152, 'Second Opinion Documentation Received');
End;

procedure LoadTable153(oTables : THL7V2ModelTables);
Begin
  oTables.Add(153, 'Value Code');
End;

procedure LoadTable155(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(155, 'Accept/Application Acknowledgement Conditions');
    oTable.Items.Add(0, 'AL', 'Always');
    oTable.Items.Add(0, 'ER', 'Error/reject conditions only');
    oTable.Items.Add(0, 'NE', 'Never');
    oTable.Items.Add(0, 'SU', 'Successful completion only');
End;

procedure LoadTable156(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(156, 'Which Date/Time Qualifier');
    oTable.Items.Add(0, 'ANY', 'Any date/time within a range');
    oTable.Items.Add(0, 'CAN', 'Cancellation date/time');
    oTable.Items.Add(0, 'COL', 'Collection date/time, equivalent to film or sample collection date/time');
    oTable.Items.Add(0, 'ORD', 'Order date/time');
    oTable.Items.Add(0, 'RCT', 'Specimen receipt date/time, receipt of specimen in filling ancillary (Lab)');
    oTable.Items.Add(0, 'REP', 'Report date/time, report date/time at filiing ancillary (i.e., Lab)');
    oTable.Items.Add(0, 'SCHED', 'Schedule date/time');
End;

procedure LoadTable157(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(157, 'Which Date/Time Status Qualifier');
    oTable.Items.Add(0, 'ANY', 'Any status');
    oTable.Items.Add(0, 'CFN', 'Current final value, whether final or corrected');
    oTable.Items.Add(0, 'COR', 'Corrected only (no final with corrections)');
    oTable.Items.Add(0, 'FIN', 'Final only (no corrections)');
    oTable.Items.Add(0, 'PRE', 'Preliminary');
    oTable.Items.Add(0, 'REP', 'Report completion date/time');
End;

procedure LoadTable158(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(158, 'Date/Time Selection Qualifier');
    oTable.Items.Add(0, '1ST', 'First value within range');
    oTable.Items.Add(0, 'ALL', 'All values within the range');
    oTable.Items.Add(0, 'LST', 'Last value within the range');
    oTable.Items.Add(0, 'REV', 'All values within the range returned in reverse chronological order (Default if not otherwise specified.)');
End;

procedure LoadTable159(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(159, 'Diet Type');
    oTable.Items.Add(0, 'D', 'Diet');
    oTable.Items.Add(0, 'P', 'Preference');
    oTable.Items.Add(0, 'S', 'Supplement');
End;

procedure LoadTable160(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(160, 'Tray Type');
    oTable.Items.Add(0, 'EARLY', 'Early tray');
    oTable.Items.Add(0, 'GUEST', 'Guest tray');
    oTable.Items.Add(0, 'LATE', 'Late tray');
    oTable.Items.Add(0, 'MSG', 'Tray message only');
    oTable.Items.Add(0, 'NO', 'No tray');
End;

procedure LoadTable161(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(161, 'Allow Substitution');
    oTable.Items.Add(0, 'G', 'Allow generic substitutions');
    oTable.Items.Add(0, 'N', 'Substitutions are NOT authorized.  (This is the default - null.)');
    oTable.Items.Add(0, 'T', 'Allow therapeutic substitutions');
End;

procedure LoadTable162(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(162, 'Route of Administration');
    oTable.Items.Add(0, 'AP', 'Apply Externally');
    oTable.Items.Add(0, 'B', 'Buccal');
    oTable.Items.Add(0, 'DT', 'Dental');
    oTable.Items.Add(0, 'EP', 'Epidural');
    oTable.Items.Add(0, 'ET', 'Endotrachial Tube (Used primarily for respiratory therapy and anesthesia delivery)');
    oTable.Items.Add(0, 'GTT', 'Gastronomy Tube');
    oTable.Items.Add(0, 'GU', 'GU Irrigant');
    oTable.Items.Add(0, 'IA', 'Intra-arterial');
    oTable.Items.Add(0, 'IB', 'Intrabursal');
    oTable.Items.Add(0, 'IC', 'Intracardiac');
    oTable.Items.Add(0, 'ICV', 'Intracervical (uterus)');
    oTable.Items.Add(0, 'ID', 'Intradermal');
    oTable.Items.Add(0, 'IH', 'Inhalation');
    oTable.Items.Add(0, 'IMR', 'Immerse (Soak) Body Part');
    oTable.Items.Add(0, 'MM', 'Mucous Membrane');
    oTable.Items.Add(0, 'NG', 'Nasogastric');
    oTable.Items.Add(0, 'NP', 'Nasal Prongs (Used primarily for respiratory therapy and anesthesia delivery)');
    oTable.Items.Add(0, 'NS', 'Nasal');
    oTable.Items.Add(0, 'NT', 'Nasotrachial Tube');
    oTable.Items.Add(0, 'OP', 'Ophthalmic');
    oTable.Items.Add(0, 'OT', 'Otic');
    oTable.Items.Add(0, 'OTH', 'Other/Miscellaneous');
    oTable.Items.Add(0, 'PF', 'Perfusion');
    oTable.Items.Add(0, 'PO', 'Oral');
    oTable.Items.Add(0, 'PR', 'Rectal');
    oTable.Items.Add(0, 'RM', 'Rebreather Mask (Used primarily for respiratory therapy and anesthesia delivery)');
    oTable.Items.Add(0, 'SC', 'Subcutaneous');
    oTable.Items.Add(0, 'SD', 'Soaked Dressing');
    oTable.Items.Add(0, 'SL', 'Sublingual');
    oTable.Items.Add(0, 'TD', 'Transdermal');
    oTable.Items.Add(0, 'TL', 'Translingual');
    oTable.Items.Add(0, 'TP', 'Topical');
    oTable.Items.Add(0, 'TRA', 'Tracheostomy (Used primarily for respiratory therapy and anesthesia delivery)');
    oTable.Items.Add(0, 'UR', 'Urethral');
    oTable.Items.Add(0, 'VG', 'Vaginal');
    oTable.Items.Add(0, 'VM', 'Ventimask');
    oTable.Items.Add(0, 'WND', 'Wound');
End;

procedure LoadTable163(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(163, 'Administrative Site');
    oTable.Items.Add(0, 'BE', 'Bilateral Ears');
    oTable.Items.Add(0, 'BN', 'Bilateral Nares');
    oTable.Items.Add(0, 'BU', 'Buttock');
    oTable.Items.Add(0, 'CT', 'Chest Tube');
    oTable.Items.Add(0, 'LA', 'Left Arm');
    oTable.Items.Add(0, 'LAC', 'Left Anterior Chest');
    oTable.Items.Add(0, 'LACF', 'Left Antecubital Fossa');
    oTable.Items.Add(0, 'LD', 'Left Deltoid');
    oTable.Items.Add(0, 'LE', 'Left Ear');
    oTable.Items.Add(0, 'LEJ', 'Left External Jugular');
    oTable.Items.Add(0, 'LF', 'Left Foot');
    oTable.Items.Add(0, 'LG', 'Left Gluteus Medius');
    oTable.Items.Add(0, 'LH', 'Left Hand');
    oTable.Items.Add(0, 'LIJ', 'Left Internal Jugular');
    oTable.Items.Add(0, 'LLAQ', 'Left Lower Abd Quadrant');
    oTable.Items.Add(0, 'LLFA', 'Left Lower Forearm');
    oTable.Items.Add(0, 'LMFA', 'Left Mid Forearm');
    oTable.Items.Add(0, 'LN', 'Left Naris');
    oTable.Items.Add(0, 'LNB', 'Nebulized');
    oTable.Items.Add(0, 'LPC', 'Left Posterior Chest');
    oTable.Items.Add(0, 'LSC', 'Left Subclavian');
    oTable.Items.Add(0, 'LT', 'Left Thigh');
    oTable.Items.Add(0, 'LUA', 'Left Upper Arm');
    oTable.Items.Add(0, 'LUAQ', 'Left Upper Abd Quadrant');
    oTable.Items.Add(0, 'LUFA', 'Left Upper Forearm');
    oTable.Items.Add(0, 'LV', 'Left Vastus Lateralis');
    oTable.Items.Add(0, 'LVG', 'Left Ventragluteal');
    oTable.Items.Add(0, 'LVL', 'Left Vastus Lateralis');
    oTable.Items.Add(0, 'NB', 'Nebulized');
    oTable.Items.Add(0, 'OD', 'Right Eye');
    oTable.Items.Add(0, 'OS', 'Left Eye');
    oTable.Items.Add(0, 'OU', 'Bilateral Eyes');
    oTable.Items.Add(0, 'PA', 'Perianal');
    oTable.Items.Add(0, 'PERIN', 'Perineal');
    oTable.Items.Add(0, 'RA', 'Right Arm');
    oTable.Items.Add(0, 'RAC', 'Right Anterior Chest');
    oTable.Items.Add(0, 'RACF', 'Right Antecubital Fossa');
    oTable.Items.Add(0, 'RD', 'Right Deltoid');
    oTable.Items.Add(0, 'RE', 'Right Ear');
    oTable.Items.Add(0, 'REJ', 'Right External Jugular');
    oTable.Items.Add(0, 'RF', 'Right Foot');
    oTable.Items.Add(0, 'RG', 'Right Gluteus Medius');
    oTable.Items.Add(0, 'RH', 'Right Hand');
    oTable.Items.Add(0, 'RIJ', 'Right Internal Jugular');
    oTable.Items.Add(0, 'RLAQ', 'Rt Lower Abd Quadrant');
    oTable.Items.Add(0, 'RLFA', 'Right Lower Forearm');
    oTable.Items.Add(0, 'RMFA', 'Right Mid Forearm');
    oTable.Items.Add(0, 'RN', 'Right Naris');
    oTable.Items.Add(0, 'RPC', 'Right Posterior Chest');
    oTable.Items.Add(0, 'RSC', 'Right Subclavian');
    oTable.Items.Add(0, 'RT', 'Right Thigh');
    oTable.Items.Add(0, 'RUA', 'Right Upper Arm');
    oTable.Items.Add(0, 'RUAQ', 'Right Upper Abd Quadrant');
    oTable.Items.Add(0, 'RUFA', 'Right Upper Forearm');
    oTable.Items.Add(0, 'RVG', 'Right Ventragluteal');
    oTable.Items.Add(0, 'RVL', 'Right Vastus Lateralis');
End;

procedure LoadTable164(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(164, 'Adminstration Device');
    oTable.Items.Add(0, 'AP', 'Applicator');
    oTable.Items.Add(0, 'BT', 'Buretrol');
    oTable.Items.Add(0, 'HL', 'Heparin Lock');
    oTable.Items.Add(0, 'IPPB', 'IPPB');
    oTable.Items.Add(0, 'IVP', 'IV Pump');
    oTable.Items.Add(0, 'IVS', 'IV Soluset');
    oTable.Items.Add(0, 'MI', 'Metered Inhaler');
    oTable.Items.Add(0, 'NEB', 'Nebulizer');
    oTable.Items.Add(0, 'PCA', 'PCA Pump');
End;

procedure LoadTable165(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(165, 'Administration Method');
    oTable.Items.Add(0, 'CH', 'Chew');
    oTable.Items.Add(0, 'DI', 'Dissolve');
    oTable.Items.Add(0, 'DU', 'Dust');
    oTable.Items.Add(0, 'IF', 'Inflitrate');
    oTable.Items.Add(0, 'IR', 'Irrigate');
    oTable.Items.Add(0, 'IS', 'Insert');
    oTable.Items.Add(0, 'IVP', 'IV Push');
    oTable.Items.Add(0, 'IVPB', 'IV Piggyback');
    oTable.Items.Add(0, 'NB', 'Nebulized');
    oTable.Items.Add(0, 'PF', 'Perfuse');
    oTable.Items.Add(0, 'PT', 'Pain');
    oTable.Items.Add(0, 'SH', 'Shampoo');
    oTable.Items.Add(0, 'SO', 'Soak');
    oTable.Items.Add(0, 'WA', 'Wash');
    oTable.Items.Add(0, 'WI', 'Wipe');
End;

procedure LoadTable166(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(166, 'RX Component Type');
    oTable.Items.Add(0, 'A', 'Additive');
    oTable.Items.Add(0, 'B', 'Base');
End;

procedure LoadTable167(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(167, 'Substitution Status');
    oTable.Items.Add(0, 'G', 'A generic substitution was dispensed');
    oTable.Items.Add(0, 'N', 'No substitute was dispensed.  This is equivalent to the default (null) value.');
    oTable.Items.Add(0, 'T', 'A therapeutic substitution was dispensed');
End;

procedure LoadTable168(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(168, 'Processing Priority');
    oTable.Items.Add(0, 'A', 'As soon as possible (a priority lower than stat)');
    oTable.Items.Add(0, 'B', 'Do at bedside or portable (may be used with other codes)');
    oTable.Items.Add(0, 'C', 'Measure continuously (e.g., arterial line blood pressure)');
    oTable.Items.Add(0, 'P', 'Preoperative (to be done prior to surgery)');
    oTable.Items.Add(0, 'R', 'Routine');
    oTable.Items.Add(0, 'S', 'Stat (do immediately)');
    oTable.Items.Add(0, 'T', 'Timing critical (do as near as possible to requested time)');
End;

procedure LoadTable169(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(169, 'Reporting Priority');
    oTable.Items.Add(0, 'C', 'Call back results');
    oTable.Items.Add(0, 'R', 'Rush reporting');
End;

procedure LoadTable170(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(170, 'Derived Specimen');
    oTable.Items.Add(0, 'C', 'Child Observation');
    oTable.Items.Add(0, 'N', 'Not Applicable');
    oTable.Items.Add(0, 'P', 'Parent Observation');
End;

procedure LoadTable171(oTables : THL7V2ModelTables);
Begin
  oTables.Add(171, 'Country Code');
End;

procedure LoadTable172(oTables : THL7V2ModelTables);
Begin
  oTables.Add(172, 'Veterans Military Status');
End;

procedure LoadTable173(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(173, 'Coordination of Benefits');
    oTable.Items.Add(0, 'CO', 'Coordination');
    oTable.Items.Add(0, 'IN', 'Independent');
End;

procedure LoadTable174(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(174, 'Nature of Test/Observation');
    oTable.Items.Add(0, 'A', 'Atomic test/observation (test code or treatment code)');
    oTable.Items.Add(0, 'C', 'Single observation calculated via a rule or formula from other independent observations (e.g., Alveolar--arterial ratio, cardiac output)');
    oTable.Items.Add(0, 'F', 'Functional procedure that may consist of one or more interrelated measures (e.g., glucose tolerance test, creatine clearance), usually done at different times and/or on different specimens');
    oTable.Items.Add(0, 'P', 'Profile or battery consisting of many independent atomic observations (e.g., SMA12, electrolytes), usually done at one instrument on one specimen');
    oTable.Items.Add(0, 'S', 'Superset--a set of batteries or procedures ordered under a single code unit but processed as separate batteries (e.g., routines = CBC, UA, electrolytes)');
End;

procedure LoadTable175(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(175, 'Master File Identifier Code');
    oTable.Items.Add(0, 'CDM', 'Charge description master file (see Chapter 6, Appendix)');
    oTable.Items.Add(0, 'CM0', 'Clinical study master');
    oTable.Items.Add(0, 'CM1', 'Clinical study phase master');
    oTable.Items.Add(0, 'CM2', 'Clinical study Data Schedule Master');
    oTable.Items.Add(0, 'LOC', 'Location master file (see Chapter 3, Appendix)');
    oTable.Items.Add(0, 'OM1-OM6', 'Observation text master file segments (e.g., Lab) (see Chapter 87, Appendix B):');
    oTable.Items.Add(0, 'PRA', 'Practitioner master file (see Chapter 8, Appendix)');
    oTable.Items.Add(0, 'STF', 'Staff Master File (see Chapter 8, Appendix)');
End;

procedure LoadTable176(oTables : THL7V2ModelTables);
Begin
  oTables.Add(176, 'Master File Application Identifier');
End;

procedure LoadTable177(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(177, 'Confidentiality code');
    oTable.Items.Add(0, 'AID', 'AIDS patient');
    oTable.Items.Add(0, 'EMP', 'Employee');
    oTable.Items.Add(0, 'ETH', 'Alcohol/drug treatment patient');
    oTable.Items.Add(0, 'HIV', 'HIV(+) patient');
    oTable.Items.Add(0, 'PSY', 'Psychiatric patient');
    oTable.Items.Add(0, 'R', 'Restricted');
    oTable.Items.Add(0, 'U', 'Usual control');
    oTable.Items.Add(0, 'UWM', 'Unwed mother');
    oTable.Items.Add(0, 'V', 'Very restricted');
    oTable.Items.Add(0, 'VIP', 'Very important person or celebrity');
End;

procedure LoadTable178(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(178, 'File Level Event Code');
    oTable.Items.Add(0, 'REP', 'Replace current version of this master file with the version contained in this message');
    oTable.Items.Add(0, 'UPD', 'Change file records as defined in the record level event codes for each record that follows');
End;

procedure LoadTable179(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(179, 'Response Level');
    oTable.Items.Add(0, 'AL', 'Always.  All MFA segments (whether denoting errors or not) must be returned via the application level acknowledgement message');
    oTable.Items.Add(0, 'ER', 'Error/Reject conditions only.  Only MFA segments denoting errors must be returned via the application level acknowledgement for this message');
    oTable.Items.Add(0, 'NE', 'Never.  no application level response needed');
    oTable.Items.Add(0, 'SU', 'Success.  Only MFA segments denoting success must be returned via the application level acknowledgement for this message');
End;

procedure LoadTable180(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(180, 'Record Level Event Code');
    oTable.Items.Add(0, 'MAC', 'Reactivate deactivated record');
    oTable.Items.Add(0, 'MAD', 'Add record to master file');
    oTable.Items.Add(0, 'MDC', 'Deactivate: discontinue using record in master file, but do not delete from database');
    oTable.Items.Add(0, 'MDL', 'Delete record from master file');
    oTable.Items.Add(0, 'MUP', 'Update record for master file');
End;

procedure LoadTable181(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(181, 'MFN Record Level Error Return');
    oTable.Items.Add(0, 'S', 'Successful posting of the record defined by the MFE segment');
    oTable.Items.Add(0, 'U', 'Unsuccessful posting of the record defined by the MFE segment');
End;

procedure LoadTable182(oTables : THL7V2ModelTables);
Begin
  oTables.Add(182, 'Staff Type');
End;

procedure LoadTable183(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(183, 'Active/Inactive');
    oTable.Items.Add(0, 'A', 'Active staff');
    oTable.Items.Add(0, 'I', 'Inactive staff');
End;

procedure LoadTable184(oTables : THL7V2ModelTables);
Begin
  oTables.Add(184, 'Department');
End;

procedure LoadTable185(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(185, 'Preferred Method of Contact');
    oTable.Items.Add(0, 'B', 'Beeper Number');
    oTable.Items.Add(0, 'C', 'Cellular Phone Number');
    oTable.Items.Add(0, 'E', 'E-Mail Address (Not In TN Format)');
    oTable.Items.Add(0, 'F', 'FAX Number');
    oTable.Items.Add(0, 'H', 'Home Phone Number');
    oTable.Items.Add(0, 'M', 'Mail');
    oTable.Items.Add(0, 'O', 'Office Phone Number');
End;

procedure LoadTable186(oTables : THL7V2ModelTables);
Begin
  oTables.Add(186, 'Practioner Category');
End;

procedure LoadTable187(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(187, 'Provider Billing');
    oTable.Items.Add(0, 'I', 'Institution bills for provider');
    oTable.Items.Add(0, 'P', 'Provider does own billing');
End;

procedure LoadTable188(oTables : THL7V2ModelTables);
Begin
  oTables.Add(188, 'Operator ID');
End;

procedure LoadTable189(oTables : THL7V2ModelTables);
Begin
  oTables.Add(189, 'Ethnic Group');
End;

procedure LoadTable190(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(190, 'Address Type');
    oTable.Items.Add(0, 'B', 'Business');
    oTable.Items.Add(0, 'C', 'Current or Temporary');
    oTable.Items.Add(0, 'F', 'County of Origin');
    oTable.Items.Add(0, 'H', 'Home');
    oTable.Items.Add(0, 'M', 'Mailing');
    oTable.Items.Add(0, 'O', 'Office');
    oTable.Items.Add(0, 'P', 'Permanent');
End;

procedure LoadTable191(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(191, 'Main type of referenced Data');
    oTable.Items.Add(0, 'AP', 'Other application data, typically uninterpreted binary data');
    oTable.Items.Add(0, 'AU', 'Audio Data');
    oTable.Items.Add(0, 'FT', 'Formatted Text');
    oTable.Items.Add(0, 'IM', 'Image Data');
    oTable.Items.Add(0, 'NS', 'Non-scanned Image');
    oTable.Items.Add(0, 'SD', 'Scanned Document');
    oTable.Items.Add(0, 'SI', 'Scanned Image');
    oTable.Items.Add(0, 'TX', 'Machine Readable Text Document');
End;

procedure LoadTable192(oTables : THL7V2ModelTables);
Begin
  oTables.Add(192, 'Visit ID Type');
End;

procedure LoadTable193(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(193, 'Amount Class');
    oTable.Items.Add(0, 'AT', 'Amount');
    oTable.Items.Add(0, 'LM', 'Limit');
    oTable.Items.Add(0, 'PC', 'Percentage');
    oTable.Items.Add(0, 'UL', 'Unlimited');
End;

procedure LoadTable200(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(200, 'Name Type');
    oTable.Items.Add(0, 'A', 'Alias Name');
    oTable.Items.Add(0, 'C', 'Adopted Name');
    oTable.Items.Add(0, 'D', 'Display Name');
    oTable.Items.Add(0, 'L', 'Legal Name');
    oTable.Items.Add(0, 'M', 'Maiden Name');
    oTable.Items.Add(0, 'O', 'Other');
End;

procedure LoadTable201(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(201, 'Telecommunication Use Code');
    oTable.Items.Add(0, 'ASN', 'Answering Service Number');
    oTable.Items.Add(0, 'EMR', 'Emergency Number');
    oTable.Items.Add(0, 'NET', 'Network (email) Address');
    oTable.Items.Add(0, 'ORN', 'Other Residence Number');
    oTable.Items.Add(0, 'PRN', 'Primary Residence Number');
    oTable.Items.Add(0, 'VHN', 'Vacation Home Number');
    oTable.Items.Add(0, 'WPN', 'Work Number');
End;

procedure LoadTable202(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(202, 'Telecommunication Equipment Type');
    oTable.Items.Add(0, 'BP', 'Beeper/Pager');
    oTable.Items.Add(0, 'CP', 'Cellular Phone');
    oTable.Items.Add(0, 'FX', 'Fax');
    oTable.Items.Add(0, 'Internet', 'Internet Address:  Use only if telecommunication use code is NET');
    oTable.Items.Add(0, 'MD', 'Modem');
    oTable.Items.Add(0, 'PH', 'Telephone');
    oTable.Items.Add(0, 'X.400', 'X.400 email address:  use only if telecommunication use code is NET');
End;

procedure LoadTable203(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(203, 'Identifier Type');
    oTable.Items.Add(0, 'AM', 'American Express');
    oTable.Items.Add(0, 'AN', 'Account Number');
    oTable.Items.Add(0, 'BR', 'Birth Registry Number');
    oTable.Items.Add(0, 'DI', 'Diner''s Club Card');
    oTable.Items.Add(0, 'DL', 'Driver''s License Number');
    oTable.Items.Add(0, 'DN', 'Doctor Number');
    oTable.Items.Add(0, 'DS', 'Discover Card');
    oTable.Items.Add(0, 'EI', 'Employee Number');
    oTable.Items.Add(0, 'EN', 'Employer Number');
    oTable.Items.Add(0, 'GI', 'Guarantor Internal Identifier');
    oTable.Items.Add(0, 'GN', 'Guarantor External Identifier');
    oTable.Items.Add(0, 'MA', 'Medicaid Number');
    oTable.Items.Add(0, 'MC', 'Medicare Number');
    oTable.Items.Add(0, 'MR', 'Medical Record Number');
    oTable.Items.Add(0, 'MS', 'Master Card');
    oTable.Items.Add(0, 'PI', 'Patient Internal Identifier');
    oTable.Items.Add(0, 'PT', 'Patient External Identifier');
    oTable.Items.Add(0, 'RR', 'Railroad Retirement Number');
    oTable.Items.Add(0, 'SS', 'Social Security Number');
    oTable.Items.Add(0, 'VN', 'Visit Number');
    oTable.Items.Add(0, 'VS', 'VISA');
    oTable.Items.Add(0, 'XX', 'Organizaiton Indentifier');
End;

procedure LoadTable204(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(204, 'Organizational Name Type');
    oTable.Items.Add(0, 'A', 'Alias Name');
    oTable.Items.Add(0, 'D', 'Display Name');
    oTable.Items.Add(0, 'L', 'Legal Name');
    oTable.Items.Add(0, 'SL', 'Stock Exchange Listing Name');
End;

procedure LoadTable205(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(205, 'Price Type');
    oTable.Items.Add(0, 'AP', 'Administrative Price or Handling Fee');
    oTable.Items.Add(0, 'DC', 'Direct Unit Cost');
    oTable.Items.Add(0, 'IC', 'Indirect Unit Cost');
    oTable.Items.Add(0, 'PF', 'Professional Fee for Performing Provider');
    oTable.Items.Add(0, 'TF', 'Technology Fee for Use of Equipment');
    oTable.Items.Add(0, 'TP', 'Total Price');
    oTable.Items.Add(0, 'UP', 'Unit Price, may be based on length of procedure or service');
End;

procedure LoadTable206(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(206, 'Segment Action Code');
    oTable.Items.Add(0, 'A', 'Add/Insert');
    oTable.Items.Add(0, 'D', 'Delete');
    oTable.Items.Add(0, 'U', 'Update');
End;

procedure LoadTable207(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(207, 'Processing Mode');
    oTable.Items.Add(0, 'a', 'Archive');
    oTable.Items.Add(0, 'i', 'Initial Load');
    oTable.Items.Add(0, 'not present', 'Not Present (the default, meaning current processing)');
    oTable.Items.Add(0, 'r', 'Restore from Archive');
End;

procedure LoadTable208(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(208, 'Query Response Status');
    oTable.Items.Add(0, 'NF', 'No data found, no errors');
    oTable.Items.Add(0, 'OK', 'Data found, no errors (this is the default)');
End;

procedure LoadTable209(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(209, 'Relational Operator');
    oTable.Items.Add(0, 'CT', 'Contains');
    oTable.Items.Add(0, 'EQ', 'Equal');
    oTable.Items.Add(0, 'GE', 'Greater than or equal');
    oTable.Items.Add(0, 'GN', 'Generic');
    oTable.Items.Add(0, 'GT', 'Greater than');
    oTable.Items.Add(0, 'LE', 'Less than or equal');
    oTable.Items.Add(0, 'LT', 'Less than');
    oTable.Items.Add(0, 'NE', 'Not equal');
End;

procedure LoadTable210(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(210, 'Relational Conjunction');
    oTable.Items.Add(0, 'AND', 'Default');
    oTable.Items.Add(0, 'OR', '');
End;

procedure LoadTable211(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(211, 'Alternate Character Sets');
    oTable.Items.Add(0, '8859/1', 'The printable characters from the ISO 8859/1 Character set');
    oTable.Items.Add(0, '8859/2', 'The printable characters from the ISO 8859/2 Character set');
    oTable.Items.Add(0, '8859/3', 'The printable characters from the ISO 8859/3 Character set');
    oTable.Items.Add(0, '8859/4', 'The printable characters from the ISO 8859/4 Character set');
    oTable.Items.Add(0, '8859/5', 'The printable characters from the ISO 8859/5 Character set');
    oTable.Items.Add(0, '8859/6', 'The printable characters from the ISO 8859/6 Character set');
    oTable.Items.Add(0, '8859/7', 'The printable characters from the ISO 8859/7 Character set');
    oTable.Items.Add(0, '8859/8', 'The printable characters from the ISO 8859/8 Character set');
    oTable.Items.Add(0, '8859/9', 'The printable characters from the ISO 8859/9 Character set');
    oTable.Items.Add(0, 'ASCII', 'The printable 7-bit ASCII character set . (This is the default if this field is omitted)');
    oTable.Items.Add(0, 'JAS2020', 'A subset of ISO2020 used for most Kanjii transmissions');
    oTable.Items.Add(0, 'JIS X 0202', 'ISO 2022 with escape sequences for Kanjii');
    oTable.Items.Add(0, 'UNICODE', '<needs document reference>');
End;

procedure LoadTable212(oTables : THL7V2ModelTables);
Begin
  oTables.Add(212, 'Nationality');
End;

procedure LoadTable213(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(213, 'Purge Status');
    oTable.Items.Add(0, 'D', 'The visit is marked for deletion and the user cannot enter new data against it');
    oTable.Items.Add(0, 'I', 'The visit is marked inactive and the user cannot enter new data against it');
    oTable.Items.Add(0, 'P', 'Marked for purge.  User is no longer able to update the visit.');
End;

procedure LoadTable214(oTables : THL7V2ModelTables);
Begin
  oTables.Add(214, 'Special Program Codes');
End;

procedure LoadTable215(oTables : THL7V2ModelTables);
Begin
  oTables.Add(215, 'Publicity Code');
End;

procedure LoadTable216(oTables : THL7V2ModelTables);
Begin
  oTables.Add(216, 'Patient Status');
End;

procedure LoadTable217(oTables : THL7V2ModelTables);
Begin
  oTables.Add(217, 'Visit Priority');
End;

procedure LoadTable218(oTables : THL7V2ModelTables);
Begin
  oTables.Add(218, 'Charge Adjustment');
End;

procedure LoadTable219(oTables : THL7V2ModelTables);
Begin
  oTables.Add(219, 'Recurring Service');
End;

procedure LoadTable220(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(220, 'Living Arrangements');
    oTable.Items.Add(0, 'A', 'Alone');
    oTable.Items.Add(0, 'F', 'Family');
    oTable.Items.Add(0, 'I', 'Institution');
    oTable.Items.Add(0, 'R', 'Relative');
    oTable.Items.Add(0, 'S', 'Spouse');
    oTable.Items.Add(0, 'U', 'Unknown');
End;

procedure LoadTable221(oTables : THL7V2ModelTables);
Begin
  oTables.Add(221, 'Student Indicator');
End;

procedure LoadTable222(oTables : THL7V2ModelTables);
Begin
  oTables.Add(222, 'Contact Reason');
End;

procedure LoadTable223(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(223, 'Living Dependency');
    oTable.Items.Add(0, 'CB', 'Common bath');
    oTable.Items.Add(0, 'D', 'Spouse dependent');
    oTable.Items.Add(0, 'M', 'Medical supervision required');
    oTable.Items.Add(0, 'S', 'Small children');
    oTable.Items.Add(0, 'WU', 'Walk up');
End;

procedure LoadTable224(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(224, 'Transport Arranged');
    oTable.Items.Add(0, 'A', 'Arranged');
    oTable.Items.Add(0, 'N', 'Not Arranged');
    oTable.Items.Add(0, 'U', 'Unknown');
End;

procedure LoadTable225(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(225, 'Escort Required');
    oTable.Items.Add(0, 'N', 'Not Required');
    oTable.Items.Add(0, 'R', 'Required');
    oTable.Items.Add(0, 'U', 'Unknown');
End;

procedure LoadTable227(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(227, 'Manufacturers of Vaccines');
    oTable.Items.Add(0, 'AB', 'Abbott');
    oTable.Items.Add(0, 'AD', 'Adams');
    oTable.Items.Add(0, 'ALP', 'Alpha');
    oTable.Items.Add(0, 'AR', 'Armour');
    oTable.Items.Add(0, 'BA', 'Baxter');
    oTable.Items.Add(0, 'BAY', 'Bayer');
    oTable.Items.Add(0, 'BP', 'Berna');
    oTable.Items.Add(0, 'CON', 'Connaught');
    oTable.Items.Add(0, 'EVN', 'Evans');
    oTable.Items.Add(0, 'GRE', 'Greer');
    oTable.Items.Add(0, 'IM', 'Merieux');
    oTable.Items.Add(0, 'IUS', 'Immuno-US');
    oTable.Items.Add(0, 'JPN', 'Microbial Dis/Osaka U');
    oTable.Items.Add(0, 'KGC', 'Korea Green Cross');
    oTable.Items.Add(0, 'LED', 'Lederle');
    oTable.Items.Add(0, 'MA', 'Massachusetts Public Health');
    oTable.Items.Add(0, 'MIL', 'Miles');
    oTable.Items.Add(0, 'MIP', 'Michigan Dept Public Health');
    oTable.Items.Add(0, 'MSD', 'Merck');
    oTable.Items.Add(0, 'NAB', 'North American Biologicals, Inc.');
    oTable.Items.Add(0, 'NYB', 'New York Blood Center');
    oTable.Items.Add(0, 'OTC', 'Organon Teknika');
    oTable.Items.Add(0, 'OTH', 'Other');
    oTable.Items.Add(0, 'PD', 'Parke Davis');
    oTable.Items.Add(0, 'PRX', 'Praxis Biologics');
    oTable.Items.Add(0, 'SCL', 'Sclavo');
    oTable.Items.Add(0, 'SI', 'Swiss Serum and Vaccine Inst.');
    oTable.Items.Add(0, 'SKB', 'SmithKline');
    oTable.Items.Add(0, 'UNK', 'Unknown manufacturer');
    oTable.Items.Add(0, 'WA', 'Wyeth-Ayerst');
End;

procedure LoadTable228(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(228, 'Diagnosis Classification');
    oTable.Items.Add(0, 'C', 'Consultation');
    oTable.Items.Add(0, 'D', 'Diagnosis');
    oTable.Items.Add(0, 'I', 'Invasive procedure not classified elsewhere (I.V., catheter, etc.)');
    oTable.Items.Add(0, 'M', 'Medication (antibiotic)');
    oTable.Items.Add(0, 'O', 'Other');
    oTable.Items.Add(0, 'R', 'Radiological scheduling (not using ICDA codes)');
    oTable.Items.Add(0, 'S', 'Sign and symptom');
    oTable.Items.Add(0, 'T', 'Tissue diagnosis');
End;

procedure LoadTable229(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(229, 'Outlier Type');
    oTable.Items.Add(0, 'C', 'Champus');
    oTable.Items.Add(0, 'G', 'Managed Care Organization');
    oTable.Items.Add(0, 'M', 'Medicare');
End;

procedure LoadTable230(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(230, 'Procedure Functional Type');
    oTable.Items.Add(0, 'A', 'Anesthesia');
    oTable.Items.Add(0, 'D', 'Diagnostic Procedure');
    oTable.Items.Add(0, 'I', 'Invasive procedure not classified elsewhere (e.g., IV, catheter, etc.)');
    oTable.Items.Add(0, 'P', 'Procedure for treatment (therapeutic includes operations)');
End;

procedure LoadTable231(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(231, 'Student Status');
    oTable.Items.Add(0, 'F', 'Full-time student');
    oTable.Items.Add(0, 'N', 'Not a student');
    oTable.Items.Add(0, 'P', 'Part-time student');
End;

procedure LoadTable232(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(232, 'Insurance Company Contact Reason');
    oTable.Items.Add(0, '01', 'Medicare claim status');
    oTable.Items.Add(0, '02', 'Medicaid claim status');
    oTable.Items.Add(0, '03', 'Name/address change');
End;

procedure LoadTable233(oTables : THL7V2ModelTables);
Begin
  oTables.Add(233, 'Non-concur Code/Description');
End;

procedure LoadTable234(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(234, 'Report Timing');
    oTable.Items.Add(0, '10D', '10 day report');
    oTable.Items.Add(0, '15D', '15 day report');
    oTable.Items.Add(0, '30D', '30 day report');
    oTable.Items.Add(0, '3D', '3 day report');
    oTable.Items.Add(0, '7D', '7 day report');
    oTable.Items.Add(0, 'AD', 'Additional information');
    oTable.Items.Add(0, 'CO', 'Correction');
    oTable.Items.Add(0, 'DE', 'Device evaluation');
    oTable.Items.Add(0, 'PD', 'Periodic');
    oTable.Items.Add(0, 'RQ', 'Requested information');
End;

procedure LoadTable235(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(235, 'Report Source');
    oTable.Items.Add(0, 'C', 'Clinical trial');
    oTable.Items.Add(0, 'D', 'Database/registry/poison control center');
    oTable.Items.Add(0, 'E', 'Distributor');
    oTable.Items.Add(0, 'H', 'Health professional');
    oTable.Items.Add(0, 'L', 'Literature');
    oTable.Items.Add(0, 'M', 'Manufacturer/marketing authority holder');
    oTable.Items.Add(0, 'N', 'Non-health care professional');
    oTable.Items.Add(0, 'O', 'Other');
    oTable.Items.Add(0, 'P', 'Patient');
    oTable.Items.Add(0, 'R', 'Regulatory agency');
End;

procedure LoadTable236(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(236, 'Reported To');
    oTable.Items.Add(0, 'D', 'Distributor');
    oTable.Items.Add(0, 'L', 'Local facility/user facility');
    oTable.Items.Add(0, 'M', 'Manufacturer');
    oTable.Items.Add(0, 'R', 'Regulatory agency');
End;

procedure LoadTable237(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(237, 'Event Qualification');
    oTable.Items.Add(0, 'A', 'Abuse');
    oTable.Items.Add(0, 'B', 'Unexpected beneficial effect');
    oTable.Items.Add(0, 'D', 'Dependency');
    oTable.Items.Add(0, 'I', 'Interaction');
    oTable.Items.Add(0, 'L', 'Lack of expect therapeutic effect');
    oTable.Items.Add(0, 'M', 'Misuse');
    oTable.Items.Add(0, 'O', 'Overdose');
    oTable.Items.Add(0, 'W', 'Drug withdrawal');
End;

procedure LoadTable238(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(238, 'Event Seriousness');
    oTable.Items.Add(0, 'N', 'No');
    oTable.Items.Add(0, 'S', 'Significant');
    oTable.Items.Add(0, 'Y', 'Yes');
End;

procedure LoadTable239(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(239, 'Event Expected');
    oTable.Items.Add(0, 'N', 'No');
    oTable.Items.Add(0, 'U', 'Unknown');
    oTable.Items.Add(0, 'Y', 'Yes');
End;

procedure LoadTable240(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(240, 'Event Consequence');
    oTable.Items.Add(0, 'C', 'Congenital anomaly/birth defect');
    oTable.Items.Add(0, 'D', 'Death');
    oTable.Items.Add(0, 'H', 'Caused hospitalized');
    oTable.Items.Add(0, 'I', 'Incapacity which is significant, persistent or permanent');
    oTable.Items.Add(0, 'J', 'Disability which is significant, persistent or permanent');
    oTable.Items.Add(0, 'L', 'Life threatening');
    oTable.Items.Add(0, 'O', 'Other');
    oTable.Items.Add(0, 'P', 'Prolonged hospitalization');
    oTable.Items.Add(0, 'R', 'Required intervention to prevent permanent impairment/damage');
End;

procedure LoadTable241(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(241, 'Patient Outcome');
    oTable.Items.Add(0, 'D', 'Died');
    oTable.Items.Add(0, 'F', 'Fully recovered');
    oTable.Items.Add(0, 'N', 'Not recovering/unchanged');
    oTable.Items.Add(0, 'R', 'Recovering');
    oTable.Items.Add(0, 'S', 'Sequelae');
    oTable.Items.Add(0, 'U', 'Unknown');
    oTable.Items.Add(0, 'W', 'Worsening');
End;

procedure LoadTable242(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(242, 'Primary Observer''s Qualification');
    oTable.Items.Add(0, 'C', 'Health care consumer/patient');
    oTable.Items.Add(0, 'H', 'Other health professional');
    oTable.Items.Add(0, 'L', 'Lawyer/attorney');
    oTable.Items.Add(0, 'M', 'Mid-level professional (nurse, nurse practitioner, physician''s assistant)');
    oTable.Items.Add(0, 'O', 'Other non-health professional');
    oTable.Items.Add(0, 'P', 'Physician (osteopath, homeopath)');
    oTable.Items.Add(0, 'R', 'Pharmacist');
End;

procedure LoadTable243(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(243, 'Identity may be Divulged');
    oTable.Items.Add(0, 'N', 'No');
    oTable.Items.Add(0, 'NA', 'Not applicable');
    oTable.Items.Add(0, 'Y', 'Yes');
End;

procedure LoadTable244(oTables : THL7V2ModelTables);
Begin
  oTables.Add(244, 'Single Use Device');
End;

procedure LoadTable245(oTables : THL7V2ModelTables);
Begin
  oTables.Add(245, 'Product Problem');
End;

procedure LoadTable246(oTables : THL7V2ModelTables);
Begin
  oTables.Add(246, 'Product Available for Inspection');
End;

procedure LoadTable247(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(247, 'Start of Evaluation');
    oTable.Items.Add(0, 'A', 'Evaluation anticipated, but not yet begun');
    oTable.Items.Add(0, 'C', 'Product received in condition which made analysis impossible');
    oTable.Items.Add(0, 'D', 'Product discarded -- unable to follow up');
    oTable.Items.Add(0, 'I', 'Product remains implanted -- unable to follow up');
    oTable.Items.Add(0, 'K', 'Problem already known, no evaluation necessary');
    oTable.Items.Add(0, 'O', 'Other');
    oTable.Items.Add(0, 'P', 'Evaluation in progress');
    oTable.Items.Add(0, 'Q', 'Product under quarantine -- unable to follow up');
    oTable.Items.Add(0, 'R', 'Product under recall/corrective action');
    oTable.Items.Add(0, 'U', 'Product unavailable for follow up investigation');
    oTable.Items.Add(0, 'X', 'Product not made by company');
    oTable.Items.Add(0, 'Y', 'Evaluation completed');
End;

procedure LoadTable248(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(248, 'Product Source');
    oTable.Items.Add(0, 'A', 'Actual product involved in incident was evaluated');
    oTable.Items.Add(0, 'L', 'A product from the same lot as the the actual product involved was evaluated');
    oTable.Items.Add(0, 'N', 'A product from a controlled/non-related inventory was evaluated');
    oTable.Items.Add(0, 'R', 'A product from a reserve sample was evaluated');
End;

procedure LoadTable249(oTables : THL7V2ModelTables);
Begin
  oTables.Add(249, 'Generic Product');
End;

procedure LoadTable250(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(250, 'Relatedness Assessment');
    oTable.Items.Add(0, 'H', 'Highly probable');
    oTable.Items.Add(0, 'I', 'Improbable');
    oTable.Items.Add(0, 'M', 'Moderately probable');
    oTable.Items.Add(0, 'N', 'Not related');
    oTable.Items.Add(0, 'S', 'Somewhat probable');
End;

procedure LoadTable251(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(251, 'Action Taken in Response to the Event');
    oTable.Items.Add(0, 'DI', 'Product dose or frequency of use increased');
    oTable.Items.Add(0, 'DR', 'Product dose or frequency of use reduced');
    oTable.Items.Add(0, 'N', 'None');
    oTable.Items.Add(0, 'OT', 'Other');
    oTable.Items.Add(0, 'WP', 'Product withdrawn permanently');
    oTable.Items.Add(0, 'WT', 'Product withdrawn temporarily');
End;

procedure LoadTable252(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(252, 'Causality Observations');
    oTable.Items.Add(0, 'AW', 'Abatement of event after product withdrawn');
    oTable.Items.Add(0, 'BE', 'Event recurred after product reintroduced');
    oTable.Items.Add(0, 'DR', 'Dose response observed');
    oTable.Items.Add(0, 'EX', 'Alternative explanations for the event available');
    oTable.Items.Add(0, 'IN', 'Event occurred after product introduced');
    oTable.Items.Add(0, 'LI', 'Literature reports association of product with event');
    oTable.Items.Add(0, 'OE', 'Occurrence of event was confirmed by objective evidence');
    oTable.Items.Add(0, 'OT', 'Other');
    oTable.Items.Add(0, 'PL', 'Effect observed when patient receives placebo');
    oTable.Items.Add(0, 'SE', 'Similar events in past for this patient');
    oTable.Items.Add(0, 'TC', 'Toxic levels of product documented in blood or body fluids');
End;

procedure LoadTable253(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(253, 'Indirect Exposure Mechanism');
    oTable.Items.Add(0, 'B', 'Breast milk');
    oTable.Items.Add(0, 'F', 'Father');
    oTable.Items.Add(0, 'O', 'Other');
    oTable.Items.Add(0, 'P', 'Transplacental');
    oTable.Items.Add(0, 'X', 'Blood product');
End;

procedure LoadTable254(oTables : THL7V2ModelTables);
Begin
  oTables.Add(254, 'Kind of Quantity');
End;

procedure LoadTable255(oTables : THL7V2ModelTables);
Begin
  oTables.Add(255, 'Duration Categories');
End;

procedure LoadTable256(oTables : THL7V2ModelTables);
Begin
  oTables.Add(256, 'Time Delay Post Challenge');
End;

procedure LoadTable257(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(257, 'Nature of Challenge');
    oTable.Items.Add(0, 'CFST', 'Fasting (no calorie intake) for the period specified in the time component of the term, e.g., 1H POST CFST');
    oTable.Items.Add(0, 'EXCZ', 'Exercise undertaken as challenge (can be quantified)');
    oTable.Items.Add(0, 'FFST', 'No fluid intake for the period specified in the time component of the term');
End;

procedure LoadTable258(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(258, 'Relationship Modifier');
    oTable.Items.Add(0, 'BPU', 'Blood product unit');
    oTable.Items.Add(0, 'CONTROL', 'Control');
    oTable.Items.Add(0, 'DONOR', 'Donor');
    oTable.Items.Add(0, 'PATIENT', 'Patient');
End;

procedure LoadTable259(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(259, 'Modality');
    oTable.Items.Add(0, 'AS', 'Angioscopy');
    oTable.Items.Add(0, 'BS', 'Biomagnetic imaging');
    oTable.Items.Add(0, 'CD', 'Color Flow Doppler');
    oTable.Items.Add(0, 'CP', 'Colposcopy');
    oTable.Items.Add(0, 'CR', 'Computed Radiography');
    oTable.Items.Add(0, 'CS', 'Cystoscopy');
    oTable.Items.Add(0, 'CT', 'Computed Tomography');
    oTable.Items.Add(0, 'DD', 'Duplex Doppler');
    oTable.Items.Add(0, 'DG', 'Diapanography');
    oTable.Items.Add(0, 'DM', 'Digital microscopy');
    oTable.Items.Add(0, 'EC', 'Echocardiography');
    oTable.Items.Add(0, 'ES', 'Endoscopy');
    oTable.Items.Add(0, 'FA', 'Fluorescein Angiography');
    oTable.Items.Add(0, 'FS', 'Fundoscopy');
    oTable.Items.Add(0, 'LP', 'Laparoscopy');
    oTable.Items.Add(0, 'LS', 'Laser surface scan');
    oTable.Items.Add(0, 'MA', 'Magnetic Resonance Angiography');
    oTable.Items.Add(0, 'MS', 'Magnetic Resonance Spectroscopy');
    oTable.Items.Add(0, 'NM', 'Nuclear medicine (radioisotope study)');
    oTable.Items.Add(0, 'OT', 'Other');
    oTable.Items.Add(0, 'PT', 'Positron Emission Tomography (PET)');
    oTable.Items.Add(0, 'RF', 'RadioFluoroscopy');
    oTable.Items.Add(0, 'ST', 'Single Photon Emission Computed Tomography (SPECT)');
    oTable.Items.Add(0, 'TG', 'Thermography');
    oTable.Items.Add(0, 'US', 'Ultrasound');
    oTable.Items.Add(0, 'XA', 'X-Ray Angiography');
End;

procedure LoadTable260(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(260, 'Patient Location Type');
    oTable.Items.Add(0, 'B', 'Bed');
    oTable.Items.Add(0, 'C', 'Clinic');
    oTable.Items.Add(0, 'D', 'Department');
    oTable.Items.Add(0, 'E', 'Exam Room');
    oTable.Items.Add(0, 'L', 'Other Location');
    oTable.Items.Add(0, 'N', 'Nursing Unit');
    oTable.Items.Add(0, 'O', 'Operating Room');
    oTable.Items.Add(0, 'R', 'Room');
End;

procedure LoadTable261(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(261, 'Location Equipment');
    oTable.Items.Add(0, 'EEG', 'Electro-Encephalogram');
    oTable.Items.Add(0, 'EKG', 'Electro-Cardiogram');
    oTable.Items.Add(0, 'INF', 'Infusion pump');
    oTable.Items.Add(0, 'IVP', 'IV pump');
    oTable.Items.Add(0, 'OXY', 'Oxygen');
    oTable.Items.Add(0, 'SUC', 'Suction');
    oTable.Items.Add(0, 'VEN', 'Ventilator');
    oTable.Items.Add(0, 'VIT', 'Vital signs monitor');
End;

procedure LoadTable262(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(262, 'Privacy Level');
    oTable.Items.Add(0, 'F', 'Isolation');
    oTable.Items.Add(0, 'J', 'Private Room - Medically Justified');
    oTable.Items.Add(0, 'P', 'Private Room');
    oTable.Items.Add(0, 'Q', 'Private Room - Due To Overflow');
    oTable.Items.Add(0, 'S', 'Semi-Private Room');
    oTable.Items.Add(0, 'W', 'Ward');
End;

procedure LoadTable263(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(263, 'Level of Care');
    oTable.Items.Add(0, 'A', 'Ambulatory');
    oTable.Items.Add(0, 'C', 'Critical Care');
    oTable.Items.Add(0, 'E', 'Emergency');
    oTable.Items.Add(0, 'F', 'Isolation');
    oTable.Items.Add(0, 'N', 'Intensive Care');
    oTable.Items.Add(0, 'R', 'Routine');
    oTable.Items.Add(0, 'S', 'Surgery');
End;

procedure LoadTable264(oTables : THL7V2ModelTables);
Begin
  oTables.Add(264, 'Location Department');
End;

procedure LoadTable265(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(265, 'Specialty Type');
    oTable.Items.Add(0, 'ALC', 'Allergy');
    oTable.Items.Add(0, 'AMB', 'Ambulatory');
    oTable.Items.Add(0, 'CAN', 'Cancer');
    oTable.Items.Add(0, 'CAR', 'Coronary/Cardiac Care');
    oTable.Items.Add(0, 'CCR', 'Critical Care');
    oTable.Items.Add(0, 'CHI', 'Chiropractic');
    oTable.Items.Add(0, 'EDI', 'Education');
    oTable.Items.Add(0, 'EMR', 'Emergency');
    oTable.Items.Add(0, 'FPC', 'Family Planning');
    oTable.Items.Add(0, 'INT', 'Intensive Care');
    oTable.Items.Add(0, 'ISO', 'Isolation');
    oTable.Items.Add(0, 'NAT', 'Naturopathic');
    oTable.Items.Add(0, 'NBI', 'Newborn, Nursery, Infants');
    oTable.Items.Add(0, 'OBG', 'Obstetrics, Gynecology');
    oTable.Items.Add(0, 'OBS', 'Observation');
    oTable.Items.Add(0, 'OTH', 'Other Specialty');
    oTable.Items.Add(0, 'PED', 'Pediatrics');
    oTable.Items.Add(0, 'PHY', 'General/Family Practice');
    oTable.Items.Add(0, 'PIN', 'Pediatric/Neonatal Intensive Care');
    oTable.Items.Add(0, 'PPS', 'Pediatric Psychiatric');
    oTable.Items.Add(0, 'PRE', 'Pediatric Rehabilitation');
    oTable.Items.Add(0, 'PSI', 'Psychiatric Intensive Care');
    oTable.Items.Add(0, 'PSY', 'Psychiatric');
    oTable.Items.Add(0, 'REH', 'Rehabilitation');
    oTable.Items.Add(0, 'SUR', 'Surgery');
    oTable.Items.Add(0, 'WIC', 'Walk-In Clinic');
End;

procedure LoadTable266(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(266, 'Gender Indicator');
    oTable.Items.Add(0, 'E', 'Either Male Or Female Patients');
    oTable.Items.Add(0, 'F', 'Only Female Patients');
    oTable.Items.Add(0, 'M', 'Only Male Patients');
End;

procedure LoadTable267(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(267, 'Days of the Week');
    oTable.Items.Add(0, 'FRI', 'Friday');
    oTable.Items.Add(0, 'MON', 'Monday');
    oTable.Items.Add(0, 'SAT', 'Saturday');
    oTable.Items.Add(0, 'SUN', 'Sunday');
    oTable.Items.Add(0, 'THU', 'Thursday');
    oTable.Items.Add(0, 'TUE', 'Tuesday');
    oTable.Items.Add(0, 'WED', 'Wednesday');
End;

procedure LoadTable268(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(268, 'Override');
    oTable.Items.Add(0, 'A', 'Override Allowed');
    oTable.Items.Add(0, 'R', 'Override Required');
    oTable.Items.Add(0, 'X', 'Override not allowed');
End;

procedure LoadTable269(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(269, 'Charge on Indicator');
    oTable.Items.Add(0, 'O', 'Charge on order');
    oTable.Items.Add(0, 'R', 'Charge on result');
End;

procedure LoadTable270(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(270, 'Report Type Code');
    oTable.Items.Add(0, 'AR', 'Autopsy report');
    oTable.Items.Add(0, 'CC', 'Cardiodiagnostics');
    oTable.Items.Add(0, 'CD', 'Cardiodiagnostics');
    oTable.Items.Add(0, 'CN', 'Consult');
    oTable.Items.Add(0, 'DI', 'Diagnostic imaging');
    oTable.Items.Add(0, 'DS', 'Discharge summary');
    oTable.Items.Add(0, 'ED', 'Emergency department report');
    oTable.Items.Add(0, 'HP', 'History and physical examination');
    oTable.Items.Add(0, 'OP', 'Operative report');
    oTable.Items.Add(0, 'PC', 'Psychiatric consultation');
    oTable.Items.Add(0, 'PH', 'Psychiatric history and physical examination');
    oTable.Items.Add(0, 'PN', 'Procedure note');
    oTable.Items.Add(0, 'PR', 'Progress note');
    oTable.Items.Add(0, 'SP', 'Surgical pathology');
    oTable.Items.Add(0, 'TS', 'Transfer summary');
End;

procedure LoadTable271(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(271, 'Document Completion Status');
    oTable.Items.Add(0, 'AU', 'Authenticated');
    oTable.Items.Add(0, 'CA', 'Canceled');
    oTable.Items.Add(0, 'DI', 'Dictated');
    oTable.Items.Add(0, 'DO', 'Documented');
    oTable.Items.Add(0, 'IN', 'Incomplete');
    oTable.Items.Add(0, 'IP', 'In progress');
    oTable.Items.Add(0, 'LA', 'Legally authenticated');
    oTable.Items.Add(0, 'PA', 'Pre-authenticated');
    oTable.Items.Add(0, 'PR', 'Preliminary');
End;

procedure LoadTable272(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(272, 'Document Confidentiality Status');
    oTable.Items.Add(0, '1', 'ASTM Level 1');
    oTable.Items.Add(0, '2', 'ASTM Level 2');
    oTable.Items.Add(0, '3', 'ASTM Level 3');
    oTable.Items.Add(0, 'RE', 'Restricted');
    oTable.Items.Add(0, 'UC', 'Usual control');
    oTable.Items.Add(0, 'VR', 'Very restricted');
End;

procedure LoadTable273(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(273, 'Document Availability Status');
    oTable.Items.Add(0, 'AV', 'Available for patient care');
    oTable.Items.Add(0, 'UN', 'Unavailable for patient care');
End;

procedure LoadTable274(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(274, 'Document Modification Status');
    oTable.Items.Add(0, 'IN', 'Incremental');
    oTable.Items.Add(0, 'RP', 'Replacement');
End;

procedure LoadTable275(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(275, 'Document Storage Status');
    oTable.Items.Add(0, 'AA', 'Active and archived');
    oTable.Items.Add(0, 'AC', 'Active');
    oTable.Items.Add(0, 'AR', 'Archived (not active)');
    oTable.Items.Add(0, 'PU', 'Purged');
End;

procedure LoadTable276(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(276, 'Appointment Reason Codes');
    oTable.Items.Add(0, 'CHECKUP', 'A routine check-up, such as an annual physical.');
    oTable.Items.Add(0, 'EMERGENCY', 'Emergency appointment');
    oTable.Items.Add(0, 'FOLLOWUP', 'A follow up visit from a previous appointment.');
    oTable.Items.Add(0, 'ROUTINE', 'Routine appointment - default if not valued');
    oTable.Items.Add(0, 'WALKIN', 'A previously unscheduled walk-in visit');
End;

procedure LoadTable277(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(277, 'Appointment Type Codes');
    oTable.Items.Add(0, 'COMPLETE', 'A request to add a completed appointment, used to maintain records of completed appointments that did not appear in the schedule (e.g., STAT, walk-in, etc.)');
    oTable.Items.Add(0, 'NORMAL', 'Routine schedule request type - default if not valued');
    oTable.Items.Add(0, 'TENTATIVE', 'A request for a tentative (e.g., '#147'penciled in'#148') appointment');
End;

procedure LoadTable278(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(278, 'Filler Status Codes');
    oTable.Items.Add(0, 'BLOCKED', 'The indicated time slot(s) is(are) blocked.  Not used in the AIS, AIG, AIL, AIP segments.');
    oTable.Items.Add(0, 'BOOKED', 'The indicated appointment is booked');
    oTable.Items.Add(0, 'CANCELLED', 'The indicated appointment was stopped from occurring (cancelled prior to starting)');
    oTable.Items.Add(0, 'COMPLETE', 'The indicated appointment has completed normally (was not discontinued, canceled, or deleted)');
    oTable.Items.Add(0, 'DC', 'The indicated appointment was discontinued (DC'#146'ed while in progress, discontinued parent appointment, or discontinued child appointment)');
    oTable.Items.Add(0, 'DELETED', 'The indicated appointment was deleted from the filler application');
    oTable.Items.Add(0, 'OVERBOOK', 'The appointment has been confirmed; however it is confirmed in an overbooked state');
    oTable.Items.Add(0, 'PENDING', 'Appointment has not yet been confirmed');
    oTable.Items.Add(0, 'STARTED', 'The indicated appointment has begun and is currently in progress');
    oTable.Items.Add(0, 'WAITLIST', 'Appointment has been placed on a waiting list for a paricular slot, or set of slots');
End;

procedure LoadTable279(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(279, 'Allow Substitution Codes');
    oTable.Items.Add(0, 'CONFIRM', 'Contact the Placer Contact Person prior to making any substitutions of this resource');
    oTable.Items.Add(0, 'NO', 'Substitution of this resource is not allowed');
    oTable.Items.Add(0, 'NOTIFY', 'Notify the Placer Contact Person, through normal institutional procedures, that a substitution of this resource has been made');
    oTable.Items.Add(0, 'YES', 'Substitution of this resource is allowed');
End;

procedure LoadTable280(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(280, 'Referral Priority');
    oTable.Items.Add(0, 'A', 'ASAP');
    oTable.Items.Add(0, 'R', 'Routine');
    oTable.Items.Add(0, 'S', 'STAT');
End;

procedure LoadTable281(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(281, 'Referral Type');
    oTable.Items.Add(0, 'HOM', 'Home Care');
    oTable.Items.Add(0, 'LAB', 'Laboratory');
    oTable.Items.Add(0, 'MED', 'Medical');
    oTable.Items.Add(0, 'PSY', 'Psychiatric');
    oTable.Items.Add(0, 'RAD', 'Radiology');
    oTable.Items.Add(0, 'SKN', 'Skilled Nursing');
End;

procedure LoadTable282(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(282, 'Referral Disposition');
    oTable.Items.Add(0, 'AM', 'Assume Management');
    oTable.Items.Add(0, 'RP', 'Return Patient After Evaluation');
    oTable.Items.Add(0, 'SO', 'Second Opinion');
    oTable.Items.Add(0, 'WR', 'Send Written Report');
End;

procedure LoadTable283(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(283, 'Referral Status');
    oTable.Items.Add(0, 'A', 'Accepted');
    oTable.Items.Add(0, 'E', 'Expired');
    oTable.Items.Add(0, 'P', 'Pending');
    oTable.Items.Add(0, 'R', 'Rejected');
End;

procedure LoadTable284(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(284, 'Referral Category');
    oTable.Items.Add(0, 'A', 'Ambulatory');
    oTable.Items.Add(0, 'E', 'Emergency');
    oTable.Items.Add(0, 'I', 'Inpatient');
    oTable.Items.Add(0, 'O', 'Outpatient');
End;

procedure LoadTable285(oTables : THL7V2ModelTables);
Begin
  oTables.Add(285, 'Insurance Company ID Codes');
End;

procedure LoadTable286(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(286, 'Provider Role');
    oTable.Items.Add(0, 'CP', 'Consulting Provider');
    oTable.Items.Add(0, 'PP', 'Primary Care Provider');
    oTable.Items.Add(0, 'RP', 'Referring Provider');
    oTable.Items.Add(0, 'RT', 'Referred to Provider');
End;

procedure LoadTable287(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(287, 'Action Code');
    oTable.Items.Add(0, 'AD', 'ADD');
    oTable.Items.Add(0, 'CO', 'CORRECT');
    oTable.Items.Add(0, 'DE', 'DELETE');
    oTable.Items.Add(0, 'LI', 'LINK');
    oTable.Items.Add(0, 'UC', 'UNCHANGED 1');
    oTable.Items.Add(0, 'UN', 'UNLINK');
    oTable.Items.Add(0, 'UP', 'UPDATE');
End;

procedure LoadTable288(oTables : THL7V2ModelTables);
Begin
  oTables.Add(288, 'Census Tract');
End;

procedure LoadTable289(oTables : THL7V2ModelTables);
Begin
  oTables.Add(289, 'County/parish');
End;

procedure LoadTable290(oTables : THL7V2ModelTables);
Begin
  oTables.Add(290, 'MIME base64 encoding Characters');
End;

procedure LoadTable291(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(291, 'Subtype of Referenced Data');
    oTable.Items.Add(0, 'BASIC', 'ISDN PCM audio data');
    oTable.Items.Add(0, 'DICOM', 'Digital Imaging and Communications in Medicine');
    oTable.Items.Add(0, 'FAX', 'Facsimile data');
    oTable.Items.Add(0, 'GIF', 'Needs formal description');
    oTable.Items.Add(0, 'JOT', 'Electronic ink data (Jot 1.0 standard)');
    oTable.Items.Add(0, 'JPEG', 'Needs formal description');
    oTable.Items.Add(0, 'Octet-stream', 'Uninterpreted binary data');
    oTable.Items.Add(0, 'PICT', 'PICT format image data');
    oTable.Items.Add(0, 'PostScript', 'PostScript program');
    oTable.Items.Add(0, 'TIFF', 'TIFF image data');
End;

procedure LoadTable292(oTables : THL7V2ModelTables);
Begin
  oTables.Add(292, 'Vaccines Administered');
End;

procedure LoadTable293(oTables : THL7V2ModelTables);
Begin
  oTables.Add(293, 'Billing Category');
End;

procedure LoadTable294(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(294, 'Time Selection Criteria Parameter Class Codes');
    oTable.Items.Add(0, 'FRI', 'An indicator that Friday is or is not preferred for the day on which the appointment will occur.  OK = Preferred appointment dayNO = Day is not preferred');
    oTable.Items.Add(0, 'MON', 'An indicator that Monday is or is not preferred for the day on which the appointment will occur.  OK = Preferred appointment dayNO = Day is not preferred');
    oTable.Items.Add(0, 'PREFEND', 'The preferred start time for the appointment request, service or resource.  Any legal time specification in the format HHMM, using 24-hour clock notation');
    oTable.Items.Add(0, 'PREFSTART', 'The preferred start time for the appointment request, service or resource.   Any legal time specification in the format HHMM, using 24-hour clock notation');
    oTable.Items.Add(0, 'SAT', 'An indicator that Saturday is or is not preferred for the day on which the appointment will occur.  OK = Preferred appointment dayNO = Day is not preferred');
    oTable.Items.Add(0, 'SUN', 'An indicator that Sunday is or is not preferred for the day on which the appointment will occur.  OK = Preferred appointment dayNO = Day is not preferred');
    oTable.Items.Add(0, 'THU', 'An indicator that Thursday is or is not preferred for the day on which the appointment will occur.  OK = Preferred appointment dayNO = Day is not preferred');
    oTable.Items.Add(0, 'TUE', 'An indicator that Tuesday is or is not preferred for the day on which the appointment will occur.  OK = Preferred appointment dayNO = Day is not preferred');
    oTable.Items.Add(0, 'WED', 'An indicator that Wednesday is or is not preferred for the day on which the appointment will occur. OK = Preferred appointment dayNO = Day is not preferred');
End;

procedure LoadTable295(oTables : THL7V2ModelTables);
Begin
  oTables.Add(295, 'Handicap');
End;

procedure LoadTable296(oTables : THL7V2ModelTables);
Begin
  oTables.Add(296, 'Language');
End;

procedure LoadTable297(oTables : THL7V2ModelTables);
Begin
  oTables.Add(297, 'CN ID source');
End;

procedure LoadTable298(oTables : THL7V2ModelTables);
Begin
  oTables.Add(298, 'Range Type');
End;

procedure LoadTable299(oTables : THL7V2ModelTables);
Begin
  oTables.Add(299, 'Encoding');
End;

procedure LoadTable300(oTables : THL7V2ModelTables);
Begin
  oTables.Add(300, 'Namespace ID');
End;

procedure LoadTable301(oTables : THL7V2ModelTables);
Begin
  oTables.Add(301, 'Universal ID type');
End;

procedure LoadTable302(oTables : THL7V2ModelTables);
Begin
  oTables.Add(302, 'Point Of Care');
End;

procedure LoadTable303(oTables : THL7V2ModelTables);
Begin
  oTables.Add(303, 'Room');
End;

procedure LoadTable304(oTables : THL7V2ModelTables);
Begin
  oTables.Add(304, 'Bed');
End;

procedure LoadTable305(oTables : THL7V2ModelTables);
Begin
  oTables.Add(305, 'Person Location Type');
End;

procedure LoadTable306(oTables : THL7V2ModelTables);
Begin
  oTables.Add(306, 'Location Status');
End;

procedure LoadTable307(oTables : THL7V2ModelTables);
Begin
  oTables.Add(307, 'Building');
End;

procedure LoadTable308(oTables : THL7V2ModelTables);
Begin
  oTables.Add(308, 'Floor');
End;

procedure LoadTable309(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(309, 'Coverage Type');
    oTable.Items.Add(0, 'B', 'Both hospital and physician');
    oTable.Items.Add(0, 'H', 'Hospital/institutional');
    oTable.Items.Add(0, 'P', 'Physician/professional');
End;

procedure LoadTable310(oTables : THL7V2ModelTables);
Begin
  oTables.Add(310, 'Handicap');
End;

procedure LoadTable311(oTables : THL7V2ModelTables);
Begin
  oTables.Add(311, 'Job Status');
End;

procedure LoadTable312(oTables : THL7V2ModelTables);
Begin
  oTables.Add(312, 'Policy Scope');
End;

procedure LoadTable313(oTables : THL7V2ModelTables);
Begin
  oTables.Add(313, 'Policy Source');
End;

procedure LoadTable314(oTables : THL7V2ModelTables);
Begin
  oTables.Add(314, 'Document Change Reason');
End;

procedure LoadTable315(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(315, 'Living Will');
    oTable.Items.Add(0, 'F', 'Yes, patient has a living will but it is not on file');
    oTable.Items.Add(0, 'I', 'No, patient does not have a living will but information was provided');
    oTable.Items.Add(0, 'N', 'No, patient does not have a living will and no information was provided');
    oTable.Items.Add(0, 'U', 'Unknown');
    oTable.Items.Add(0, 'Y', 'Yes, patient has a living will');
End;

procedure LoadTable316(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(316, 'Organ Donor');
    oTable.Items.Add(0, 'F', 'Yes, patient is a donor, but card is not on file');
    oTable.Items.Add(0, 'N', 'No, patient is not a donor');
    oTable.Items.Add(0, 'U', 'Unknown');
    oTable.Items.Add(0, 'Y', 'Yes, patient is a donor and card is on file');
End;

procedure LoadTable317(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(317, 'Annotations');
    oTable.Items.Add(0, '9900', 'Pace spike');
    oTable.Items.Add(0, '9901', 'SAS marker');
    oTable.Items.Add(0, '9902', 'Sense marker');
    oTable.Items.Add(0, '9903', 'Beat marker');
    oTable.Items.Add(0, '9904', 'etc.');
End;

procedure LoadTable318(oTables : THL7V2ModelTables);
Begin
  oTables.Add(318, 'Confirmation Provided By');
End;

procedure LoadTable319(oTables : THL7V2ModelTables);
Begin
  oTables.Add(319, 'Department Cost Center');
End;

procedure LoadTable320(oTables : THL7V2ModelTables);
Begin
  oTables.Add(320, 'Item Natural Account Code');
End;

procedure LoadTable321(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(321, 'Dispense Method');
    oTable.Items.Add(0, 'AD', 'Automatic Dispensing');
    oTable.Items.Add(0, 'F', 'Floor Stock');
    oTable.Items.Add(0, 'TR', 'Traditional');
    oTable.Items.Add(0, 'UD', 'Unit Dose');
End;

procedure LoadTable322(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(322, 'Completion Status');
    oTable.Items.Add(0, 'CP', 'Complete');
    oTable.Items.Add(0, 'NA', 'Not Administered');
    oTable.Items.Add(0, 'PA', 'Partially Administered');
    oTable.Items.Add(0, 'RE', 'Refused');
End;

procedure LoadTable323(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(323, 'Action Code');
    oTable.Items.Add(0, 'A', 'Add');
    oTable.Items.Add(0, 'D', 'Delete');
    oTable.Items.Add(0, 'U', 'Update');
End;

procedure LoadTable324(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(324, 'Location Characteristic ID');
    oTable.Items.Add(0, 'GEN', 'Gender of patient(s)');
    oTable.Items.Add(0, 'IMP', 'Implant: can be used for radiation implant patients');
    oTable.Items.Add(0, 'INF', 'Infectious disease:  this location can be used for isolation');
    oTable.Items.Add(0, 'LCR', 'Level of care');
    oTable.Items.Add(0, 'LIC', 'Licensed');
    oTable.Items.Add(0, 'OVR', 'Overflow');
    oTable.Items.Add(0, 'PRL', 'Private Level:  indicating a level of private versus non-private room');
    oTable.Items.Add(0, 'SET', 'Bed is set up');
    oTable.Items.Add(0, 'SHA', 'Shadow:  a temporary holding location that does not physically exist');
    oTable.Items.Add(0, 'SMK', 'Smoking');
    oTable.Items.Add(0, 'STF', 'Bed is staffed');
    oTable.Items.Add(0, 'TEA', 'Teaching location');
End;

procedure LoadTable325(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(325, 'Location Relationship ID');
    oTable.Items.Add(0, 'ALI', 'Location alias(es)');
    oTable.Items.Add(0, 'DTY', 'Nearest Dietary');
    oTable.Items.Add(0, 'LAB', 'Nearest Lab');
    oTable.Items.Add(0, 'LB2', 'Second Lab');
    oTable.Items.Add(0, 'PAR', 'Parent location');
    oTable.Items.Add(0, 'RX', 'Nearest Pharmacy');
    oTable.Items.Add(0, 'RX2', 'Second Pharmacy');
End;

procedure LoadTable326(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(326, 'Visit Indicator');
    oTable.Items.Add(0, 'A', 'Account level');
    oTable.Items.Add(2, 'V', 'Visit Level');
End;

procedure LoadTable327(oTables : THL7V2ModelTables);
Begin
  oTables.Add(327, 'Job Class');
End;

procedure LoadTable328(oTables : THL7V2ModelTables);
Begin
  oTables.Add(328, 'Employee Classification');
End;

procedure LoadTable329(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(329, 'Quantity Method');
    oTable.Items.Add(0, 'A', 'Acutal Count');
    oTable.Items.Add(0, 'E', 'Estimated (see comment)');
End;

procedure LoadTable330(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(330, 'Marketing Basis');
    oTable.Items.Add(0, '510E', '510 (K) exempt');
    oTable.Items.Add(0, '510K', '510 (K)');
    oTable.Items.Add(0, '522S', 'Post marketing study (522)');
    oTable.Items.Add(0, 'PMA', 'Premarketing authorization');
    oTable.Items.Add(0, 'PRE', 'Preamendment');
    oTable.Items.Add(0, 'TXN', 'Transitional');
End;

procedure LoadTable331(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(331, 'Facility Type');
    oTable.Items.Add(0, 'A', 'Agent for a foreign manufacturer');
    oTable.Items.Add(0, 'D', 'Distributor');
    oTable.Items.Add(0, 'M', 'Manufacturer');
    oTable.Items.Add(0, 'U', 'User');
End;

procedure LoadTable332(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(332, 'Network Source Type');
    oTable.Items.Add(0, 'A', 'Accept');
    oTable.Items.Add(0, 'I', 'Initiate');
End;

procedure LoadTable333(oTables : THL7V2ModelTables);
Begin
  oTables.Add(333, 'Driver'#180's License Issuing Authority');
End;

procedure LoadTable334(oTables : THL7V2ModelTables);
Begin
  oTables.Add(334, 'Disabled Person');
End;

procedure LoadTable335(oTables : THL7V2ModelTables);
Begin
  oTables.Add(335, 'Repeat Pattern');
End;

procedure LoadTable336(oTables : THL7V2ModelTables);
Begin
  oTables.Add(336, 'Referral Reason');
End;

procedure LoadTable337(oTables : THL7V2ModelTables);
Begin
  oTables.Add(337, 'Certification Status');
End;

procedure LoadTable338(oTables : THL7V2ModelTables);
Begin
  oTables.Add(338, 'Practitioner ID number type');
End;

procedure LoadTable4000(oTables : THL7V2ModelTables);
Begin
  oTables.Add(4000, 'Name Representation');
End;

procedure Definitions23LoadTables(oTables : THL7V2ModelTables);
Begin
  LoadTable0(oTables);
  LoadTable1(oTables);
  LoadTable2(oTables);
  LoadTable3(oTables);
  LoadTable4(oTables);
  LoadTable5(oTables);
  LoadTable6(oTables);
  LoadTable7(oTables);
  LoadTable8(oTables);
  LoadTable9(oTables);
  LoadTable10(oTables);
  LoadTable17(oTables);
  LoadTable18(oTables);
  LoadTable19(oTables);
  LoadTable21(oTables);
  LoadTable22(oTables);
  LoadTable23(oTables);
  LoadTable24(oTables);
  LoadTable27(oTables);
  LoadTable32(oTables);
  LoadTable33(oTables);
  LoadTable38(oTables);
  LoadTable42(oTables);
  LoadTable43(oTables);
  LoadTable44(oTables);
  LoadTable45(oTables);
  LoadTable46(oTables);
  LoadTable48(oTables);
  LoadTable49(oTables);
  LoadTable50(oTables);
  LoadTable51(oTables);
  LoadTable52(oTables);
  LoadTable53(oTables);
  LoadTable55(oTables);
  LoadTable56(oTables);
  LoadTable59(oTables);
  LoadTable60(oTables);
  LoadTable61(oTables);
  LoadTable62(oTables);
  LoadTable63(oTables);
  LoadTable64(oTables);
  LoadTable65(oTables);
  LoadTable66(oTables);
  LoadTable68(oTables);
  LoadTable69(oTables);
  LoadTable70(oTables);
  LoadTable72(oTables);
  LoadTable73(oTables);
  LoadTable74(oTables);
  LoadTable76(oTables);
  LoadTable78(oTables);
  LoadTable79(oTables);
  LoadTable80(oTables);
  LoadTable83(oTables);
  LoadTable84(oTables);
  LoadTable85(oTables);
  LoadTable86(oTables);
  LoadTable87(oTables);
  LoadTable88(oTables);
  LoadTable89(oTables);
  LoadTable91(oTables);
  LoadTable92(oTables);
  LoadTable93(oTables);
  LoadTable98(oTables);
  LoadTable99(oTables);
  LoadTable100(oTables);
  LoadTable102(oTables);
  LoadTable103(oTables);
  LoadTable104(oTables);
  LoadTable105(oTables);
  LoadTable106(oTables);
  LoadTable107(oTables);
  LoadTable108(oTables);
  LoadTable109(oTables);
  LoadTable110(oTables);
  LoadTable111(oTables);
  LoadTable112(oTables);
  LoadTable113(oTables);
  LoadTable114(oTables);
  LoadTable115(oTables);
  LoadTable116(oTables);
  LoadTable117(oTables);
  LoadTable118(oTables);
  LoadTable119(oTables);
  LoadTable121(oTables);
  LoadTable122(oTables);
  LoadTable123(oTables);
  LoadTable124(oTables);
  LoadTable125(oTables);
  LoadTable126(oTables);
  LoadTable127(oTables);
  LoadTable128(oTables);
  LoadTable129(oTables);
  LoadTable130(oTables);
  LoadTable131(oTables);
  LoadTable132(oTables);
  LoadTable133(oTables);
  LoadTable135(oTables);
  LoadTable136(oTables);
  LoadTable137(oTables);
  LoadTable139(oTables);
  LoadTable140(oTables);
  LoadTable141(oTables);
  LoadTable142(oTables);
  LoadTable143(oTables);
  LoadTable144(oTables);
  LoadTable145(oTables);
  LoadTable146(oTables);
  LoadTable147(oTables);
  LoadTable148(oTables);
  LoadTable149(oTables);
  LoadTable150(oTables);
  LoadTable151(oTables);
  LoadTable152(oTables);
  LoadTable153(oTables);
  LoadTable155(oTables);
  LoadTable156(oTables);
  LoadTable157(oTables);
  LoadTable158(oTables);
  LoadTable159(oTables);
  LoadTable160(oTables);
  LoadTable161(oTables);
  LoadTable162(oTables);
  LoadTable163(oTables);
  LoadTable164(oTables);
  LoadTable165(oTables);
  LoadTable166(oTables);
  LoadTable167(oTables);
  LoadTable168(oTables);
  LoadTable169(oTables);
  LoadTable170(oTables);
  LoadTable171(oTables);
  LoadTable172(oTables);
  LoadTable173(oTables);
  LoadTable174(oTables);
  LoadTable175(oTables);
  LoadTable176(oTables);
  LoadTable177(oTables);
  LoadTable178(oTables);
  LoadTable179(oTables);
  LoadTable180(oTables);
  LoadTable181(oTables);
  LoadTable182(oTables);
  LoadTable183(oTables);
  LoadTable184(oTables);
  LoadTable185(oTables);
  LoadTable186(oTables);
  LoadTable187(oTables);
  LoadTable188(oTables);
  LoadTable189(oTables);
  LoadTable190(oTables);
  LoadTable191(oTables);
  LoadTable192(oTables);
  LoadTable193(oTables);
  LoadTable200(oTables);
  LoadTable201(oTables);
  LoadTable202(oTables);
  LoadTable203(oTables);
  LoadTable204(oTables);
  LoadTable205(oTables);
  LoadTable206(oTables);
  LoadTable207(oTables);
  LoadTable208(oTables);
  LoadTable209(oTables);
  LoadTable210(oTables);
  LoadTable211(oTables);
  LoadTable212(oTables);
  LoadTable213(oTables);
  LoadTable214(oTables);
  LoadTable215(oTables);
  LoadTable216(oTables);
  LoadTable217(oTables);
  LoadTable218(oTables);
  LoadTable219(oTables);
  LoadTable220(oTables);
  LoadTable221(oTables);
  LoadTable222(oTables);
  LoadTable223(oTables);
  LoadTable224(oTables);
  LoadTable225(oTables);
  LoadTable227(oTables);
  LoadTable228(oTables);
  LoadTable229(oTables);
  LoadTable230(oTables);
  LoadTable231(oTables);
  LoadTable232(oTables);
  LoadTable233(oTables);
  LoadTable234(oTables);
  LoadTable235(oTables);
  LoadTable236(oTables);
  LoadTable237(oTables);
  LoadTable238(oTables);
  LoadTable239(oTables);
  LoadTable240(oTables);
  LoadTable241(oTables);
  LoadTable242(oTables);
  LoadTable243(oTables);
  LoadTable244(oTables);
  LoadTable245(oTables);
  LoadTable246(oTables);
  LoadTable247(oTables);
  LoadTable248(oTables);
  LoadTable249(oTables);
  LoadTable250(oTables);
  LoadTable251(oTables);
  LoadTable252(oTables);
  LoadTable253(oTables);
  LoadTable254(oTables);
  LoadTable255(oTables);
  LoadTable256(oTables);
  LoadTable257(oTables);
  LoadTable258(oTables);
  LoadTable259(oTables);
  LoadTable260(oTables);
  LoadTable261(oTables);
  LoadTable262(oTables);
  LoadTable263(oTables);
  LoadTable264(oTables);
  LoadTable265(oTables);
  LoadTable266(oTables);
  LoadTable267(oTables);
  LoadTable268(oTables);
  LoadTable269(oTables);
  LoadTable270(oTables);
  LoadTable271(oTables);
  LoadTable272(oTables);
  LoadTable273(oTables);
  LoadTable274(oTables);
  LoadTable275(oTables);
  LoadTable276(oTables);
  LoadTable277(oTables);
  LoadTable278(oTables);
  LoadTable279(oTables);
  LoadTable280(oTables);
  LoadTable281(oTables);
  LoadTable282(oTables);
  LoadTable283(oTables);
  LoadTable284(oTables);
  LoadTable285(oTables);
  LoadTable286(oTables);
  LoadTable287(oTables);
  LoadTable288(oTables);
  LoadTable289(oTables);
  LoadTable290(oTables);
  LoadTable291(oTables);
  LoadTable292(oTables);
  LoadTable293(oTables);
  LoadTable294(oTables);
  LoadTable295(oTables);
  LoadTable296(oTables);
  LoadTable297(oTables);
  LoadTable298(oTables);
  LoadTable299(oTables);
  LoadTable300(oTables);
  LoadTable301(oTables);
  LoadTable302(oTables);
  LoadTable303(oTables);
  LoadTable304(oTables);
  LoadTable305(oTables);
  LoadTable306(oTables);
  LoadTable307(oTables);
  LoadTable308(oTables);
  LoadTable309(oTables);
  LoadTable310(oTables);
  LoadTable311(oTables);
  LoadTable312(oTables);
  LoadTable313(oTables);
  LoadTable314(oTables);
  LoadTable315(oTables);
  LoadTable316(oTables);
  LoadTable317(oTables);
  LoadTable318(oTables);
  LoadTable319(oTables);
  LoadTable320(oTables);
  LoadTable321(oTables);
  LoadTable322(oTables);
  LoadTable323(oTables);
  LoadTable324(oTables);
  LoadTable325(oTables);
  LoadTable326(oTables);
  LoadTable327(oTables);
  LoadTable328(oTables);
  LoadTable329(oTables);
  LoadTable330(oTables);
  LoadTable331(oTables);
  LoadTable332(oTables);
  LoadTable333(oTables);
  LoadTable334(oTables);
  LoadTable335(oTables);
  LoadTable336(oTables);
  LoadTable337(oTables);
  LoadTable338(oTables);
  LoadTable4000(oTables);
End;

procedure Definitions23LoadDataTypes(oDataTypes : THL7V2ModelDataTypes);
Begin
  oDataTypes.Add('*', 'varies', 0);
  oDataTypes.Add('AD', 'address', 0);
  oDataTypes.Add('CD', 'channel definition', 0);
  oDataTypes.Add('CE', 'CODED ELEMENT', 0);
  oDataTypes.Add('CF', 'coded element with formatted values', 0);
  oDataTypes.Add('CK', 'composite ID with check digit', 0);
  oDataTypes.Add('CM', 'COMPOSITE', 0);
  oDataTypes.Add('CN', 'composite ID number and name', 0);
  oDataTypes.Add('CP', 'composite price', 0);
  oDataTypes.Add('CQ', 'composite quantity with units', 0);
  oDataTypes.Add('CX', 'extended composite ID with check digit', 0);
  oDataTypes.Add('DLN', 'Driver'#146's license number', 0);
  oDataTypes.Add('DR', 'Date/time range', 0);
  oDataTypes.Add('DT', 'DATE', 0);
  oDataTypes.Add('ED', 'encapsulated data', 0);
  oDataTypes.Add('EI', 'entity identifier', 0);
  oDataTypes.Add('FC', 'Financial class', 0);
  oDataTypes.Add('FT', 'formatted text', 0);
  oDataTypes.Add('HD', 'hierarchic designator', 0);
  oDataTypes.Add('ID', 'CODED VALUE', 0);
  oDataTypes.Add('IS', 'Coded value for user-defined tables', 0);
  oDataTypes.Add('JCC', 'Job code/class', 0);
  oDataTypes.Add('MA', 'multiplexed array', 0);
  oDataTypes.Add('MO', 'MONEY', 0);
  oDataTypes.Add('NA', 'numeric array', 0);
  oDataTypes.Add('NM', 'NUMERIC', 0);
  oDataTypes.Add('PL', 'patient location', 0);
  oDataTypes.Add('PN', 'person name', 0);
  oDataTypes.Add('PPN', 'Performing person time stamp', 0);
  oDataTypes.Add('PT', 'Processing type', 0);
  oDataTypes.Add('QIP', 'Query input parameter list', 0);
  oDataTypes.Add('QSC', 'Query selection criteria', 0);
  oDataTypes.Add('RCD', 'Row column definition', 0);
  oDataTypes.Add('RI', 'Repeat interval', 0);
  oDataTypes.Add('RP', 'reference pointer', 0);
  oDataTypes.Add('SCV', 'Scheduling class value pair', 0);
  oDataTypes.Add('SI', 'Sequence ID', 0);
  oDataTypes.Add('SN', 'structured numeric', 0);
  oDataTypes.Add('ST', 'STRING', 0);
  oDataTypes.Add('TM', 'TIME', 0);
  oDataTypes.Add('TN', 'TELEPHONE NUMBER', 0);
  oDataTypes.Add('TQ', 'TIMING / QUANTITY', 0);
  oDataTypes.Add('TS', 'TIME STAMP', 19);
  oDataTypes.Add('TX', 'TEXT', 0);
  oDataTypes.Add('VH', 'Visiting hours', 0);
  oDataTypes.Add('XAD', 'extended address', 0);
  oDataTypes.Add('XCN', 'extended composite ID number and name for persons', 0);
  oDataTypes.Add('XON', 'extended composite name and identification number for organizations', 0);
  oDataTypes.Add('XPN', 'extended person name', 0);
  oDataTypes.Add('XTN', 'Extended telecommunications number', 0);
End;

procedure Definitions23LoadComponents(oComponents : THL7V2ModelComponents);
Begin
  oComponents.Add('trigger event', 'ID', 3, 2);
  oComponents.Add('identifier', 'ID', 0, 3);
  oComponents.Add('text', 'ST', 0, 4);
  oComponents.Add('name of coding system', 'ST', 0, 5);
  oComponents.Add('alternate identifier', 'ID', 0, 6);
  oComponents.Add('alternate text', 'ST', 0, 7);
  oComponents.Add('name of alternate coding system', 'ST', 0, 8);
  oComponents.Add('sequence', 'NM', 0, 10);
  oComponents.Add('first data code value', 'ST', 0, 13);
  oComponents.Add('Last data code calue', 'ST', 0, 14);
  oComponents.Add('check digit', 'ST', 0, 18);
  oComponents.Add('check digit scheme', 'ID', 0, 19);
  oComponents.Add('given name', 'ST', 0, 22);
  oComponents.Add('middle initial or name', 'ST', 0, 23);
  oComponents.Add('street address', 'ST', 0, 27);
  oComponents.Add('other designation', 'ST', 0, 28);
  oComponents.Add('city', 'ST', 0, 29);
  oComponents.Add('state or province', 'ST', 0, 30);
  oComponents.Add('zip or postal code', 'ST', 0, 31);
  oComponents.Add('country', 'ID', 0, 32);
  oComponents.Add('type', 'ID', 0, 33);
  oComponents.Add('other geographic designation', 'ST', 0, 34);
  oComponents.Add('room', 'IS', 303, 38);
  oComponents.Add('bed', 'IS', 304, 39);
  oComponents.Add('facility ID', 'ID', 0, 40);
  oComponents.Add('effective date', 'TS', 0, 51);
  oComponents.Add('discharge location', 'ID', 0, 53);
  oComponents.Add('job code', 'IS', 327, 54);
  oComponents.Add('employee classification', 'ID', 0, 55);
  oComponents.Add('account number', 'NM', 0, 56);
  oComponents.Add('placer application ID', 'ID', 0, 62);
  oComponents.Add('quantity', 'CQ', 0, 63);
  oComponents.Add('interval', 'CM', 0, 64);
  oComponents.Add('duration', 'ST', 0, 65);
  oComponents.Add('start date/time', 'TS', 0, 66);
  oComponents.Add('end date/time', 'TS', 0, 67);
  oComponents.Add('priority', 'ST', 0, 68);
  oComponents.Add('condition', 'ST', 0, 69);
  oComponents.Add('text (TX)', 'TX', 0, 70);
  oComponents.Add('conjunction', 'ST', 0, 71);
  oComponents.Add('order sequencing', 'CM', 0, 72);
  oComponents.Add('parent''s placer order number', 'EI', 0, 73);
  oComponents.Add('parent''s filler order number', 'EI', 0, 74);
  oComponents.Add('date/time', 'TS', 0, 78);
  oComponents.Add('quantity', 'NM', 0, 80);
  oComponents.Add('units', 'CE', 0, 81);
  oComponents.Add('specimen source name or code', 'CE', 70, 82);
  oComponents.Add('additives', 'TX', 0, 83);
  oComponents.Add('freetext', 'TX', 0, 84);
  oComponents.Add('body site', 'CE', 0, 85);
  oComponents.Add('site modifier', 'CE', 0, 86);
  oComponents.Add('dollar amount', 'MO', 0, 87);
  oComponents.Add('charge code', 'CE', 0, 88);
  oComponents.Add('authorization number', 'ST', 0, 97);
  oComponents.Add('source', 'ST', 0, 99);
  oComponents.Add('amount type', 'IS', 146, 101);
  oComponents.Add('coverage amount', 'NM', 0, 102);
  oComponents.Add('policy type', 'IS', 147, 103);
  oComponents.Add('amount class', 'IS', 193, 104);
  oComponents.Add('delay days', 'NM', 0, 110);
  oComponents.Add('penalty type', 'IS', 148, 111);
  oComponents.Add('pre-certification patient type', 'IS', 150, 112);
  oComponents.Add('occurrence code', 'CE', 0, 114);
  oComponents.Add('value code', 'IS', 153, 115);
  oComponents.Add('occurrence span code', 'CE', 0, 116);
  oComponents.Add('date', 'TS', 0, 117);
  oComponents.Add('specialty name', 'ST', 0, 118);
  oComponents.Add('ID number', 'ST', 0, 119);
  oComponents.Add('privilege', 'CE', 0, 120);
  oComponents.Add('amount', 'NM', 0, 122);
  oComponents.Add('number of days', 'NM', 0, 123);
  oComponents.Add('penalty amount', 'NM', 0, 124);
  oComponents.Add('value amount', 'NM', 0, 127);
  oComponents.Add('occurrence date', 'DT', 0, 128);
  oComponents.Add('occurrence span start date', 'DT', 0, 129);
  oComponents.Add('occurrence span stop date', 'DT', 0, 130);
  oComponents.Add('institution name', 'CE', 0, 131);
  oComponents.Add('governing board', 'ST', 0, 132);
  oComponents.Add('eligible or certified', 'ID', 0, 133);
  oComponents.Add('date of certification', 'DT', 0, 134);
  oComponents.Add('type of ID number (ID)', 'ID', 0, 135);
  oComponents.Add('privilege class', 'CE', 0, 137);
  oComponents.Add('expiration date', 'DT', 0, 138);
  oComponents.Add('activation date', 'DT', 0, 139);
  oComponents.Add('day type', 'IS', 149, 140);
  oComponents.Add('repeat pattern', 'IS', 335, 142);
  oComponents.Add('Low Value', 'CE', 0, 153);
  oComponents.Add('High Value', 'CE', 0, 154);
  oComponents.Add('Range', 'CM', 0, 155);
  oComponents.Add('Numeric Change', 'NM', 0, 156);
  oComponents.Add('Percent per Change', 'NM', 0, 157);
  oComponents.Add('Days', 'NM', 0, 158);
  oComponents.Add('family name', 'ST', 0, 201);
  oComponents.Add('address type', 'ID', 190, 202);
  oComponents.Add('degree (e.g., MD)', 'ST', 0, 203);
  oComponents.Add('coverage application identifier', 'ID', 0, 205);
  oComponents.Add('unique authorization identifier', 'ID', 0, 206);
  oComponents.Add('originating application identifier', 'ID', 0, 207);
  oComponents.Add('unique referral identifier', 'ID', 0, 208);
  oComponents.Add('parameter value', 'ST', 294, 209);
  oComponents.Add('when to charge code', 'ID', 100, 212);
  oComponents.Add('OBX-5-observation results from parent', 'CE', 0, 213);
  oComponents.Add('filler application identifier', 'ID', 0, 214);
  oComponents.Add('to value', 'NM', 0, 216);
  oComponents.Add('range units', 'CE', 0, 217);
  oComponents.Add('price', 'MO', 0, 218);
  oComponents.Add('code identifying error', 'CE', 0, 219);
  oComponents.Add('range type', 'ID', 298, 220);
  oComponents.Add('last data code value', 'ST', 0, 221);
  oComponents.Add('parameter class', 'IS', 0, 222);
  oComponents.Add('message type', 'ID', 76, 223);
  oComponents.Add('field position', 'NM', 0, 224);
  oComponents.Add('segment ID', 'ST', 0, 225);
  oComponents.Add('name type code', 'ID', 200, 227);
  oComponents.Add('telecommunication use code', 'ID', 201, 228);
  oComponents.Add('identifier check digit', 'ST', 0, 229);
  oComponents.Add('processing mode', 'ST', 207, 230);
  oComponents.Add('processing ID', 'ST', 103, 231);
  oComponents.Add('point of care (ID)', 'ID', 302, 232);
  oComponents.Add('prefix (e.g., DR)', 'ST', 0, 235);
  oComponents.Add('assigning facility', 'HD', 0, 237);
  oComponents.Add('other qualifying info', 'ST', 0, 238);
  oComponents.Add('application ID', 'HD', 0, 241);
  oComponents.Add('assigning facility ID', 'HD', 0, 243);
  oComponents.Add('name type', 'ID', 200, 244);
  oComponents.Add('facility (HD)', 'HD', 0, 245);
  oComponents.Add('maximum column width', 'NM', 0, 246);
  oComponents.Add('telecommunication equipment type', 'ID', 0, 247);
  oComponents.Add('start day range', 'ID', 267, 248);
  oComponents.Add('from value', 'NM', 0, 249);
  oComponents.Add('email address', 'ST', 0, 250);
  oComponents.Add('county/parish', 'ID', 0, 251);
  oComponents.Add('identifier type code', 'IS', 203, 252);
  oComponents.Add('organization name', 'ST', 0, 253);
  oComponents.Add('occurrence', 'DT', 0, 256);
  oComponents.Add('HL7 date type', 'ST', 0, 257);
  oComponents.Add('end day range', 'ID', 267, 258);
  oComponents.Add('field name', 'ST', 0, 259);
  oComponents.Add('value1&value2&value3', 'ST', 0, 260);
  oComponents.Add('state/other qualifying info', 'ST', 0, 261);
  oComponents.Add('institution', 'CE', 0, 262);
  oComponents.Add('duplicate code', 'ID', 0, 263);
  oComponents.Add('patient identifier', 'CX', 0, 264);
  oComponents.Add('segment unique key (EL)', 'ST', 0, 265);
  oComponents.Add('census tract', 'IS', 0, 266);
  oComponents.Add('job class', 'IS', 328, 267);
  oComponents.Add('HL7 item number', 'ST', 0, 268);
  oComponents.Add('range end date/time', 'TS', 0, 269);
  oComponents.Add('unique filler appointment identifier', 'ID', 0, 270);
  oComponents.Add('building', 'IS', 307, 271);
  oComponents.Add('source table', 'ID', 297, 272);
  oComponents.Add('suffix (e.g., JR or III)', 'ST', 0, 273);
  oComponents.Add('placer group type', 'ID', 0, 274);
  oComponents.Add('room type', 'ID', 145, 276);
  oComponents.Add('organization name type code', 'IS', 204, 277);
  oComponents.Add('explicit time interval', 'ST', 0, 278);
  oComponents.Add('start hour range', 'TM', 0, 279);
  oComponents.Add('range start date/time', 'TS', 0, 280);
  oComponents.Add('assigning authority', 'HD', 0, 281);
  oComponents.Add('end hour range', 'TM', 0, 282);
  oComponents.Add('pre-certification windwow', 'TS', 0, 283);
  oComponents.Add('pre-certification required', 'ID', 136, 284);
  oComponents.Add('unique placer group number', 'ST', 0, 285);
  oComponents.Add('price type', 'ID', 205, 286);
  oComponents.Add('denomination', 'ID', 0, 287);
  oComponents.Add('authenticated by whom', 'CN', 0, 288);
  oComponents.Add('when authenticated', 'TS', 0, 290);
  oComponents.Add('unique placer appointment identifier', 'ID', 0, 291);
  oComponents.Add('ID number (ST)', 'ST', 0, 292);
  oComponents.Add('ID number (NM)', 'NM', 0, 293);
  oComponents.Add('formatted text', 'FT', 0, 294);
  oComponents.Add('alternate formatted text', 'FT', 0, 295);
  oComponents.Add('Issuing State, province, country', 'IS', 333, 296);
  oComponents.Add('ID', 'ST', 0, 297);
  oComponents.Add('code identifying the check digit scheme employed', 'ID', 61, 298);
  oComponents.Add('source application', 'HD', 0, 299);
  oComponents.Add('type of data', 'ID', 191, 300);
  oComponents.Add('encoding', 'ID', 299, 301);
  oComponents.Add('data', 'ST', 0, 302);
  oComponents.Add('entity identifier', 'ST', 0, 303);
  oComponents.Add('Location description', 'ST', 0, 304);
  oComponents.Add('Date/Time Action Performed', 'TS', 0, 305);
  oComponents.Add('name of field', 'ST', 0, 306);
  oComponents.Add('relational operator', 'ID', 209, 307);
  oComponents.Add('Value', 'ST', 0, 308);
  oComponents.Add('relational conjunction', 'ID', 102, 309);
  oComponents.Add('sample 1 from channel 1', 'NM', 0, 310);
  oComponents.Add('sample 1 from channel 2', 'NM', 0, 311);
  oComponents.Add('sample 1 from channel 3', 'NM', 0, 312);
  oComponents.Add('sample 2 from channel 1', 'NM', 0, 313);
  oComponents.Add('sample 2 from channel 2', 'NM', 0, 314);
  oComponents.Add('sample 2 from channel 3', 'NM', 0, 315);
  oComponents.Add('value1', 'NM', 0, 316);
  oComponents.Add('value2', 'NM', 0, 317);
  oComponents.Add('value3', 'NM', 0, 318);
  oComponents.Add('value4', 'NM', 0, 319);
  oComponents.Add('nursing unit or department or clinic', 'ID', 0, 320);
  oComponents.Add('location status', 'IS', 306, 321);
  oComponents.Add('person location type', 'IS', 305, 322);
  oComponents.Add('floor', 'ST', 308, 323);
  oComponents.Add('pointer', 'ST', 0, 324);
  oComponents.Add('type of data', 'ID', 191, 325);
  oComponents.Add('comparator', 'ST', 0, 326);
  oComponents.Add('num1', 'NM', 0, 327);
  oComponents.Add('separator or suffix', 'ST', 0, 328);
  oComponents.Add('num2', 'NM', 0, 329);
  oComponents.Add('county/parish code', 'IS', 0, 330);
  oComponents.Add('Driver''s License Number', 'ST', 0, 331);
  oComponents.Add('channel identifier', 'CM', 0, 332);
  oComponents.Add('electrode names', 'CM', 0, 333);
  oComponents.Add('channel sensitivity/units', 'CM', 0, 334);
  oComponents.Add('calibration parameters', 'CM', 0, 335);
  oComponents.Add('sampling frequency', 'NM', 0, 336);
  oComponents.Add('minimum/maximum data values', 'CM', 0, 337);
  oComponents.Add('room type', 'IS', 0, 338);
  oComponents.Add('Channel Name', 'ST', 0, 339);
  oComponents.Add('data subtype', 'ID', 291, 340);
  oComponents.Add('universal ID', 'ST', 0, 341);
  oComponents.Add('namespace ID', 'IS', 300, 342);
  oComponents.Add('universal ID type', 'ID', 301, 343);
  oComponents.Add('Financial Class', 'IS', 64, 344);
  oComponents.Add('Effective Date', 'TS', 0, 345);
  oComponents.Add('subtype', 'ID', 291, 346);
  oComponents.Add('[(999)] 999-9999 [X99999][C any text]', 'TN', 0, 347);
  oComponents.Add('telecommunication use code', 'ID', 201, 348);
  oComponents.Add('telecommunication equipment type (ID)', 'ID', 202, 349);
  oComponents.Add('Email address', 'ST', 0, 350);
  oComponents.Add('Area/city code', 'NM', 0, 351);
  oComponents.Add('Country Code', 'NM', 0, 352);
  oComponents.Add('Phone number', 'NM', 0, 353);
  oComponents.Add('Extension', 'NM', 0, 354);
  oComponents.Add('any text', 'ST', 0, 355);
  oComponents.Add('Name Representation code', 'ID', 4000, 356);
  oComponents.Add('Channel Number', 'NM', 0, 357);
  oComponents.Add('type of ID number (IS)', 'IS', 0, 405);
  oComponents.Add('point of care (ST)', 'ST', 302, 406);
  oComponents.Add('collection modifier method code', 'CE', 0, 408);
  oComponents.Add('occurrence duration', 'CE', 0, 410);
  oComponents.Add('total occurences', 'NM', 0, 411);
  oComponents.Add('OBX-3 observation identifier of parent result', 'CE', 0, 412);
  oComponents.Add('OBX-4 sub-ID of parent result', 'ST', 0, 413);
  oComponents.Add('part of OBX-5 observation result from parent', 'TX', 0, 414);
  oComponents.Add('name', 'CN', 0, 415);
  oComponents.Add('point of care (IS)', 'IS', 0, 416);
  oComponents.Add('numeric threshold', 'NM', 0, 417);
  oComponents.Add('change', 'ST', 0, 418);
  oComponents.Add('length of time-days', 'NM', 0, 419);
  oComponents.Add('reference range', 'CM', 0, 432);
  oComponents.Add('sex', 'IS', 0, 433);
  oComponents.Add('age range', 'CM', 0, 434);
  oComponents.Add('age gestation', 'CM', 0, 435);
  oComponents.Add('species', 'TX', 0, 436);
  oComponents.Add('race/subspecies', 'ST', 0, 437);
  oComponents.Add('conditions', 'TX', 0, 438);
  oComponents.Add('time of an event', 'ST', 0, 439);
  oComponents.Add('degree of precision', 'ST', 0, 440);
  oComponents.Add('namespace ID', 'IS', 300, 441);
  oComponents.Add('universal ID', 'ST', 0, 442);
  oComponents.Add('varies', 'ST', 0, 9999);
End;

procedure Definitions23LoadStructures(oStructures : THL7V2ModelStructures; oComponents : THL7V2ModelComponents);
Var
  oStructure : THL7V2ModelStructure;
Begin
  oStructure := oStructures.Add('XTN', 'extended telecommunication number', 'XTN', 0);
    oStructure.Components.Add(oComponents.GetByNumber(347).Link);
    oStructure.Components.Add(oComponents.GetByNumber(348).Link);
    oStructure.Components.Add(oComponents.GetByNumber(349).Link);
    oStructure.Components.Add(oComponents.GetByNumber(350).Link);
    oStructure.Components.Add(oComponents.GetByNumber(352).Link);
    oStructure.Components.Add(oComponents.GetByNumber(351).Link);
    oStructure.Components.Add(oComponents.GetByNumber(353).Link);
    oStructure.Components.Add(oComponents.GetByNumber(354).Link);
    oStructure.Components.Add(oComponents.GetByNumber(355).Link);
  oStructure := oStructures.Add('XPN', 'extended person name', 'XPN', 0);
    oStructure.Components.Add(oComponents.GetByNumber(201).Link);
    oStructure.Components.Add(oComponents.GetByNumber(22).Link);
    oStructure.Components.Add(oComponents.GetByNumber(23).Link);
    oStructure.Components.Add(oComponents.GetByNumber(273).Link);
    oStructure.Components.Add(oComponents.GetByNumber(235).Link);
    oStructure.Components.Add(oComponents.GetByNumber(203).Link);
    oStructure.Components.Add(oComponents.GetByNumber(227).Link);
    oStructure.Components.Add(oComponents.GetByNumber(356).Link);
  oStructure := oStructures.Add('XON', 'Extended Composite Name and ID for organizations (2.8.47)', 'XON', 0);
    oStructure.Components.Add(oComponents.GetByNumber(253).Link);
    oStructure.Components.Add(oComponents.GetByNumber(277).Link);
    oStructure.Components.Add(oComponents.GetByNumber(293).Link);
    oStructure.Components.Add(oComponents.GetByNumber(18).Link);
    oStructure.Components.Add(oComponents.GetByNumber(298).Link);
    oStructure.Components.Add(oComponents.GetByNumber(281).Link);
    oStructure.Components.Add(oComponents.GetByNumber(252).Link);
    oStructure.Components.Add(oComponents.GetByNumber(243).Link);
  oStructure := oStructures.Add('XCN', 'Extended Composite ID number and name (2.8.46)', 'XCN', 0);
    oStructure.Components.Add(oComponents.GetByNumber(292).Link);
    oStructure.Components.Add(oComponents.GetByNumber(201).Link);
    oStructure.Components.Add(oComponents.GetByNumber(22).Link);
    oStructure.Components.Add(oComponents.GetByNumber(23).Link);
    oStructure.Components.Add(oComponents.GetByNumber(273).Link);
    oStructure.Components.Add(oComponents.GetByNumber(235).Link);
    oStructure.Components.Add(oComponents.GetByNumber(203).Link);
    oStructure.Components.Add(oComponents.GetByNumber(272).Link);
    oStructure.Components.Add(oComponents.GetByNumber(281).Link);
    oStructure.Components.Add(oComponents.GetByNumber(244).Link);
    oStructure.Components.Add(oComponents.GetByNumber(229).Link);
    oStructure.Components.Add(oComponents.GetByNumber(298).Link);
    oStructure.Components.Add(oComponents.GetByNumber(252).Link);
    oStructure.Components.Add(oComponents.GetByNumber(243).Link);
  oStructure := oStructures.Add('XAD', 'extended address', 'XAD', 0);
    oStructure.Components.Add(oComponents.GetByNumber(27).Link);
    oStructure.Components.Add(oComponents.GetByNumber(28).Link);
    oStructure.Components.Add(oComponents.GetByNumber(29).Link);
    oStructure.Components.Add(oComponents.GetByNumber(30).Link);
    oStructure.Components.Add(oComponents.GetByNumber(31).Link);
    oStructure.Components.Add(oComponents.GetByNumber(32).Link);
    oStructure.Components.Add(oComponents.GetByNumber(202).Link);
    oStructure.Components.Add(oComponents.GetByNumber(34).Link);
    oStructure.Components.Add(oComponents.GetByNumber(330).Link);
    oStructure.Components.Add(oComponents.GetByNumber(266).Link);
  oStructure := oStructures.Add('VH', 'visiting hours', 'VH', 0);
    oStructure.Components.Add(oComponents.GetByNumber(248).Link);
    oStructure.Components.Add(oComponents.GetByNumber(258).Link);
    oStructure.Components.Add(oComponents.GetByNumber(279).Link);
    oStructure.Components.Add(oComponents.GetByNumber(282).Link);
  oStructure := oStructures.Add('TS', 'time stamp', 'TS', 0);
    oStructure.Components.Add(oComponents.GetByNumber(439).Link);
    oStructure.Components.Add(oComponents.GetByNumber(440).Link);
  oStructure := oStructures.Add('TQ', 'timing quantity', 'TQ', 0);
    oStructure.Components.Add(oComponents.GetByNumber(63).Link);
    oStructure.Components.Add(oComponents.GetByNumber(64).Link);
    oStructure.Components.Add(oComponents.GetByNumber(65).Link);
    oStructure.Components.Add(oComponents.GetByNumber(66).Link);
    oStructure.Components.Add(oComponents.GetByNumber(67).Link);
    oStructure.Components.Add(oComponents.GetByNumber(68).Link);
    oStructure.Components.Add(oComponents.GetByNumber(69).Link);
    oStructure.Components.Add(oComponents.GetByNumber(70).Link);
    oStructure.Components.Add(oComponents.GetByNumber(71).Link);
    oStructure.Components.Add(oComponents.GetByNumber(72).Link);
  oStructure := oStructures.Add('SN', 'structured numeric', 'SN', 0);
    oStructure.Components.Add(oComponents.GetByNumber(326).Link);
    oStructure.Components.Add(oComponents.GetByNumber(327).Link);
    oStructure.Components.Add(oComponents.GetByNumber(328).Link);
    oStructure.Components.Add(oComponents.GetByNumber(329).Link);
  oStructure := oStructures.Add('SCV', 'scheduling class value pair', 'SCV', 0);
    oStructure.Components.Add(oComponents.GetByNumber(222).Link);
    oStructure.Components.Add(oComponents.GetByNumber(209).Link);
  oStructure := oStructures.Add('RP', 'reference pointer', 'RP', 0);
    oStructure.Components.Add(oComponents.GetByNumber(324).Link);
    oStructure.Components.Add(oComponents.GetByNumber(241).Link);
    oStructure.Components.Add(oComponents.GetByNumber(325).Link);
    oStructure.Components.Add(oComponents.GetByNumber(346).Link);
  oStructure := oStructures.Add('RI', 'repeat interval', 'RI', 0);
    oStructure.Components.Add(oComponents.GetByNumber(142).Link);
    oStructure.Components.Add(oComponents.GetByNumber(278).Link);
  oStructure := oStructures.Add('RCD', 'row column definition', 'RCD', 0);
    oStructure.Components.Add(oComponents.GetByNumber(268).Link);
    oStructure.Components.Add(oComponents.GetByNumber(257).Link);
    oStructure.Components.Add(oComponents.GetByNumber(246).Link);
  oStructure := oStructures.Add('QSC', 'query selection criteria', 'QSC', 0);
    oStructure.Components.Add(oComponents.GetByNumber(306).Link);
    oStructure.Components.Add(oComponents.GetByNumber(307).Link);
    oStructure.Components.Add(oComponents.GetByNumber(308).Link);
    oStructure.Components.Add(oComponents.GetByNumber(309).Link);
  oStructure := oStructures.Add('QIP', 'query input parameter list', 'QIP', 0);
    oStructure.Components.Add(oComponents.GetByNumber(259).Link);
    oStructure.Components.Add(oComponents.GetByNumber(260).Link);
  oStructure := oStructures.Add('PT', 'processing type', 'PT', 0);
    oStructure.Components.Add(oComponents.GetByNumber(231).Link);
    oStructure.Components.Add(oComponents.GetByNumber(230).Link);
  oStructure := oStructures.Add('PPN', 'performing person time stamp', 'PPN', 0);
    oStructure.Components.Add(oComponents.GetByNumber(119).Link);
    oStructure.Components.Add(oComponents.GetByNumber(201).Link);
    oStructure.Components.Add(oComponents.GetByNumber(22).Link);
    oStructure.Components.Add(oComponents.GetByNumber(23).Link);
    oStructure.Components.Add(oComponents.GetByNumber(273).Link);
    oStructure.Components.Add(oComponents.GetByNumber(235).Link);
    oStructure.Components.Add(oComponents.GetByNumber(203).Link);
    oStructure.Components.Add(oComponents.GetByNumber(272).Link);
    oStructure.Components.Add(oComponents.GetByNumber(281).Link);
    oStructure.Components.Add(oComponents.GetByNumber(227).Link);
    oStructure.Components.Add(oComponents.GetByNumber(229).Link);
    oStructure.Components.Add(oComponents.GetByNumber(298).Link);
    oStructure.Components.Add(oComponents.GetByNumber(252).Link);
    oStructure.Components.Add(oComponents.GetByNumber(237).Link);
    oStructure.Components.Add(oComponents.GetByNumber(305).Link);
  oStructure := oStructures.Add('PL', 'person location', 'PL', 0);
    oStructure.Components.Add(oComponents.GetByNumber(232).Link);
    oStructure.Components.Add(oComponents.GetByNumber(38).Link);
    oStructure.Components.Add(oComponents.GetByNumber(39).Link);
    oStructure.Components.Add(oComponents.GetByNumber(245).Link);
    oStructure.Components.Add(oComponents.GetByNumber(321).Link);
    oStructure.Components.Add(oComponents.GetByNumber(322).Link);
    oStructure.Components.Add(oComponents.GetByNumber(271).Link);
    oStructure.Components.Add(oComponents.GetByNumber(323).Link);
    oStructure.Components.Add(oComponents.GetByNumber(304).Link);
  oStructure := oStructures.Add('NA', 'numeric array', 'NA', 0);
    oStructure.Components.Add(oComponents.GetByNumber(316).Link);
    oStructure.Components.Add(oComponents.GetByNumber(317).Link);
    oStructure.Components.Add(oComponents.GetByNumber(318).Link);
    oStructure.Components.Add(oComponents.GetByNumber(319).Link);
  oStructure := oStructures.Add('MO', 'money', 'MO', 0);
    oStructure.Components.Add(oComponents.GetByNumber(80).Link);
    oStructure.Components.Add(oComponents.GetByNumber(287).Link);
  oStructure := oStructures.Add('MA', 'multiplexed array', 'MA', 0);
    oStructure.Components.Add(oComponents.GetByNumber(310).Link);
    oStructure.Components.Add(oComponents.GetByNumber(311).Link);
    oStructure.Components.Add(oComponents.GetByNumber(312).Link);
    oStructure.Components.Add(oComponents.GetByNumber(313).Link);
    oStructure.Components.Add(oComponents.GetByNumber(314).Link);
    oStructure.Components.Add(oComponents.GetByNumber(315).Link);
  oStructure := oStructures.Add('JCC', 'Job Code Class', 'JCC', 0);
    oStructure.Components.Add(oComponents.GetByNumber(54).Link);
    oStructure.Components.Add(oComponents.GetByNumber(267).Link);
  oStructures.Add('IS', 'Coded Value for user defined tables', 'IS', 0);
  oStructure := oStructures.Add('HD', 'hierarchic designator', 'HD', 0);
    oStructure.Components.Add(oComponents.GetByNumber(342).Link);
    oStructure.Components.Add(oComponents.GetByNumber(341).Link);
    oStructure.Components.Add(oComponents.GetByNumber(343).Link);
  oStructure := oStructures.Add('FC', 'financial class', 'FC', 0);
    oStructure.Components.Add(oComponents.GetByNumber(344).Link);
    oStructure.Components.Add(oComponents.GetByNumber(345).Link);
  oStructure := oStructures.Add('EI', 'entity identifier', 'EI', 0);
    oStructure.Components.Add(oComponents.GetByNumber(303).Link);
    oStructure.Components.Add(oComponents.GetByNumber(441).Link);
    oStructure.Components.Add(oComponents.GetByNumber(442).Link);
    oStructure.Components.Add(oComponents.GetByNumber(343).Link);
  oStructure := oStructures.Add('ED', 'encapsulated data', 'ED', 0);
    oStructure.Components.Add(oComponents.GetByNumber(299).Link);
    oStructure.Components.Add(oComponents.GetByNumber(300).Link);
    oStructure.Components.Add(oComponents.GetByNumber(340).Link);
    oStructure.Components.Add(oComponents.GetByNumber(301).Link);
    oStructure.Components.Add(oComponents.GetByNumber(302).Link);
  oStructure := oStructures.Add('DR', 'Date Time Range', 'DR', 0);
    oStructure.Components.Add(oComponents.GetByNumber(280).Link);
    oStructure.Components.Add(oComponents.GetByNumber(269).Link);
  oStructure := oStructures.Add('DLN', 'driver''s license number', 'DLN', 0);
    oStructure.Components.Add(oComponents.GetByNumber(331).Link);
    oStructure.Components.Add(oComponents.GetByNumber(296).Link);
    oStructure.Components.Add(oComponents.GetByNumber(138).Link);
  oStructure := oStructures.Add('CX', 'extended composite ID with check digit', 'CX', 0);
    oStructure.Components.Add(oComponents.GetByNumber(297).Link);
    oStructure.Components.Add(oComponents.GetByNumber(18).Link);
    oStructure.Components.Add(oComponents.GetByNumber(298).Link);
    oStructure.Components.Add(oComponents.GetByNumber(281).Link);
    oStructure.Components.Add(oComponents.GetByNumber(252).Link);
    oStructure.Components.Add(oComponents.GetByNumber(237).Link);
  oStructure := oStructures.Add('CQ', 'composite quantity with units', 'CQ', 0);
    oStructure.Components.Add(oComponents.GetByNumber(80).Link);
    oStructure.Components.Add(oComponents.GetByNumber(81).Link);
  oStructure := oStructures.Add('CP', 'Composite Price', 'CP', 0);
    oStructure.Components.Add(oComponents.GetByNumber(218).Link);
    oStructure.Components.Add(oComponents.GetByNumber(286).Link);
    oStructure.Components.Add(oComponents.GetByNumber(249).Link);
    oStructure.Components.Add(oComponents.GetByNumber(216).Link);
    oStructure.Components.Add(oComponents.GetByNumber(217).Link);
    oStructure.Components.Add(oComponents.GetByNumber(220).Link);
  oStructure := oStructures.Add('CN', 'Composite ID number and name (2.8.7)', 'CN', 0);
    oStructure.Components.Add(oComponents.GetByNumber(292).Link);
    oStructure.Components.Add(oComponents.GetByNumber(201).Link);
    oStructure.Components.Add(oComponents.GetByNumber(22).Link);
    oStructure.Components.Add(oComponents.GetByNumber(23).Link);
    oStructure.Components.Add(oComponents.GetByNumber(273).Link);
    oStructure.Components.Add(oComponents.GetByNumber(235).Link);
    oStructure.Components.Add(oComponents.GetByNumber(203).Link);
    oStructure.Components.Add(oComponents.GetByNumber(272).Link);
    oStructure.Components.Add(oComponents.GetByNumber(281).Link);
  oStructure := oStructures.Add('CM_WVI', 'channel identifier', 'CM', 0);
    oStructure.Components.Add(oComponents.GetByNumber(357).Link);
    oStructure.Components.Add(oComponents.GetByNumber(339).Link);
  oStructure := oStructures.Add('CM_VR', 'value qualifier', 'CM', 0);
    oStructure.Components.Add(oComponents.GetByNumber(13).Link);
    oStructure.Components.Add(oComponents.GetByNumber(14).Link);
  oStructure := oStructures.Add('CM_UVC', 'Value code and amount', 'CM', 0);
    oStructure.Components.Add(oComponents.GetByNumber(115).Link);
    oStructure.Components.Add(oComponents.GetByNumber(127).Link);
  oStructure := oStructures.Add('CM_SPS', 'specimen source', 'CM', 0);
    oStructure.Components.Add(oComponents.GetByNumber(82).Link);
    oStructure.Components.Add(oComponents.GetByNumber(83).Link);
    oStructure.Components.Add(oComponents.GetByNumber(84).Link);
    oStructure.Components.Add(oComponents.GetByNumber(85).Link);
    oStructure.Components.Add(oComponents.GetByNumber(86).Link);
    oStructure.Components.Add(oComponents.GetByNumber(408).Link);
  oStructure := oStructures.Add('CM_SPD', 'Specialty', 'CM', 0);
    oStructure.Components.Add(oComponents.GetByNumber(118).Link);
    oStructure.Components.Add(oComponents.GetByNumber(132).Link);
    oStructure.Components.Add(oComponents.GetByNumber(133).Link);
    oStructure.Components.Add(oComponents.GetByNumber(134).Link);
  oStructure := oStructures.Add('CM_RMC', 'Room Coverage', 'CM', 0);
    oStructure.Components.Add(oComponents.GetByNumber(338).Link);
    oStructure.Components.Add(oComponents.GetByNumber(101).Link);
    oStructure.Components.Add(oComponents.GetByNumber(102).Link);
  oStructure := oStructures.Add('CM_RI', 'interval', 'CM', 0);
    oStructure.Components.Add(oComponents.GetByNumber(142).Link);
    oStructure.Components.Add(oComponents.GetByNumber(278).Link);
  oStructure := oStructures.Add('CM_RFR', 'reference range', 'CM', 0);
    oStructure.Components.Add(oComponents.GetByNumber(432).Link);
    oStructure.Components.Add(oComponents.GetByNumber(433).Link);
    oStructure.Components.Add(oComponents.GetByNumber(434).Link);
    oStructure.Components.Add(oComponents.GetByNumber(435).Link);
    oStructure.Components.Add(oComponents.GetByNumber(436).Link);
    oStructure.Components.Add(oComponents.GetByNumber(437).Link);
    oStructure.Components.Add(oComponents.GetByNumber(438).Link);
  oStructure := oStructures.Add('CM_RANGE', 'Wertebereich', 'CM', 0);
    oStructure.Components.Add(oComponents.GetByNumber(153).Link);
    oStructure.Components.Add(oComponents.GetByNumber(154).Link);
  oStructure := oStructures.Add('CM_PTA', 'Policy Type', 'CM', 0);
    oStructure.Components.Add(oComponents.GetByNumber(103).Link);
    oStructure.Components.Add(oComponents.GetByNumber(104).Link);
    oStructure.Components.Add(oComponents.GetByNumber(122).Link);
  oStructure := oStructures.Add('CM_PRL', 'parent result link', 'CM', 0);
    oStructure.Components.Add(oComponents.GetByNumber(412).Link);
    oStructure.Components.Add(oComponents.GetByNumber(413).Link);
    oStructure.Components.Add(oComponents.GetByNumber(414).Link);
  oStructure := oStructures.Add('CM_PLN', 'Practitioner ID Numbers', 'CM', 0);
    oStructure.Components.Add(oComponents.GetByNumber(119).Link);
    oStructure.Components.Add(oComponents.GetByNumber(405).Link);
    oStructure.Components.Add(oComponents.GetByNumber(261).Link);
    oStructure.Components.Add(oComponents.GetByNumber(138).Link);
  oStructure := oStructures.Add('CM_PIP', 'Privileges', 'CM', 0);
    oStructure.Components.Add(oComponents.GetByNumber(120).Link);
    oStructure.Components.Add(oComponents.GetByNumber(137).Link);
    oStructure.Components.Add(oComponents.GetByNumber(138).Link);
    oStructure.Components.Add(oComponents.GetByNumber(139).Link);
  oStructure := oStructures.Add('CM_PI', 'person identifier', 'CM', 0);
    oStructure.Components.Add(oComponents.GetByNumber(292).Link);
    oStructure.Components.Add(oComponents.GetByNumber(405).Link);
    oStructure.Components.Add(oComponents.GetByNumber(238).Link);
  oStructure := oStructures.Add('CM_PEN', 'penalty', 'CM', 0);
    oStructure.Components.Add(oComponents.GetByNumber(111).Link);
    oStructure.Components.Add(oComponents.GetByNumber(124).Link);
  oStructure := oStructures.Add('CM_PCF', 'Pre-certification required', 'CM', 0);
    oStructure.Components.Add(oComponents.GetByNumber(112).Link);
    oStructure.Components.Add(oComponents.GetByNumber(284).Link);
    oStructure.Components.Add(oComponents.GetByNumber(283).Link);
  oStructure := oStructures.Add('CM_OSP', 'occurence span', 'CM', 0);
    oStructure.Components.Add(oComponents.GetByNumber(116).Link);
    oStructure.Components.Add(oComponents.GetByNumber(129).Link);
    oStructure.Components.Add(oComponents.GetByNumber(130).Link);
  oStructures.Add('CM_OSD', 'order sequence', 'CM', 0);
  oStructure := oStructures.Add('CM_OCD', 'occurence', 'CM', 0);
    oStructure.Components.Add(oComponents.GetByNumber(114).Link);
    oStructure.Components.Add(oComponents.GetByNumber(128).Link);
  oStructure := oStructures.Add('CM_NDL', 'observing practitioner', 'CM', 0);
    oStructure.Components.Add(oComponents.GetByNumber(415).Link);
    oStructure.Components.Add(oComponents.GetByNumber(66).Link);
    oStructure.Components.Add(oComponents.GetByNumber(67).Link);
    oStructure.Components.Add(oComponents.GetByNumber(416).Link);
    oStructure.Components.Add(oComponents.GetByNumber(38).Link);
    oStructure.Components.Add(oComponents.GetByNumber(39).Link);
    oStructure.Components.Add(oComponents.GetByNumber(245).Link);
    oStructure.Components.Add(oComponents.GetByNumber(321).Link);
    oStructure.Components.Add(oComponents.GetByNumber(322).Link);
    oStructure.Components.Add(oComponents.GetByNumber(271).Link);
    oStructure.Components.Add(oComponents.GetByNumber(323).Link);
  oStructure := oStructures.Add('CM_MSG', 'Message Type', 'CM', 0);
    oStructure.Components.Add(oComponents.GetByNumber(223).Link);
    oStructure.Components.Add(oComponents.GetByNumber(2).Link);
  oStructure := oStructures.Add('CM_MOC', 'Charge To Practise', 'CM', 0);
    oStructure.Components.Add(oComponents.GetByNumber(87).Link);
    oStructure.Components.Add(oComponents.GetByNumber(88).Link);
  oStructures.Add('CM_MDV', 'minimum/maximum data values', 'CM', 0);
  oStructure := oStructures.Add('CM_LA1', 'Location with address information', 'CM', 0);
    oStructure.Components.Add(oComponents.GetByNumber(406).Link);
    oStructure.Components.Add(oComponents.GetByNumber(38).Link);
    oStructure.Components.Add(oComponents.GetByNumber(39).Link);
    oStructure.Components.Add(oComponents.GetByNumber(245).Link);
    oStructure.Components.Add(oComponents.GetByNumber(321).Link);
    oStructure.Components.Add(oComponents.GetByNumber(322).Link);
    oStructure.Components.Add(oComponents.GetByNumber(271).Link);
    oStructure.Components.Add(oComponents.GetByNumber(323).Link);
    oStructure.Components.Add(oComponents.GetByNumber(27).Link);
    oStructure.Components.Add(oComponents.GetByNumber(28).Link);
    oStructure.Components.Add(oComponents.GetByNumber(29).Link);
    oStructure.Components.Add(oComponents.GetByNumber(30).Link);
    oStructure.Components.Add(oComponents.GetByNumber(31).Link);
    oStructure.Components.Add(oComponents.GetByNumber(32).Link);
    oStructure.Components.Add(oComponents.GetByNumber(202).Link);
    oStructure.Components.Add(oComponents.GetByNumber(34).Link);
  oStructure := oStructures.Add('CM_ELD', 'error', 'CM', 0);
    oStructure.Components.Add(oComponents.GetByNumber(225).Link);
    oStructure.Components.Add(oComponents.GetByNumber(10).Link);
    oStructure.Components.Add(oComponents.GetByNumber(224).Link);
    oStructure.Components.Add(oComponents.GetByNumber(219).Link);
  oStructure := oStructures.Add('CM_EIP', 'parent order', 'CM', 0);
    oStructure.Components.Add(oComponents.GetByNumber(73).Link);
    oStructure.Components.Add(oComponents.GetByNumber(74).Link);
  oStructure := oStructures.Add('CM_DTN', 'Day Type and Number', 'CM', 0);
    oStructure.Components.Add(oComponents.GetByNumber(140).Link);
    oStructure.Components.Add(oComponents.GetByNumber(123).Link);
  oStructure := oStructures.Add('CM_DLT', 'delta check', 'CM', 0);
    oStructure.Components.Add(oComponents.GetByNumber(155).Link);
    oStructure.Components.Add(oComponents.GetByNumber(417).Link);
    oStructure.Components.Add(oComponents.GetByNumber(418).Link);
    oStructure.Components.Add(oComponents.GetByNumber(419).Link);
  oStructure := oStructures.Add('CM_DLD', 'discharge location', 'CM', 0);
    oStructure.Components.Add(oComponents.GetByNumber(53).Link);
    oStructure.Components.Add(oComponents.GetByNumber(51).Link);
  oStructure := oStructures.Add('CM_DIN', 'activation date', 'CM', 0);
    oStructure.Components.Add(oComponents.GetByNumber(117).Link);
    oStructure.Components.Add(oComponents.GetByNumber(131).Link);
  oStructure := oStructures.Add('CM_DDI', 'daily deductible', 'CM', 0);
    oStructure.Components.Add(oComponents.GetByNumber(110).Link);
    oStructure.Components.Add(oComponents.GetByNumber(122).Link);
    oStructure.Components.Add(oComponents.GetByNumber(123).Link);
  oStructures.Add('CM_CSU', 'channel sensitivity/units', 'CM', 0);
  oStructures.Add('CM_CD_ELECTRODE', '', 'CM', 0);
  oStructures.Add('CM_CCP', 'channel calibration parameters', 'CM', 0);
  oStructure := oStructures.Add('CM_CCD', 'charge time', 'CM', 0);
    oStructure.Components.Add(oComponents.GetByNumber(212).Link);
    oStructure.Components.Add(oComponents.GetByNumber(78).Link);
  oStructure := oStructures.Add('CM_AUI', 'authorization information', 'CM', 0);
    oStructure.Components.Add(oComponents.GetByNumber(97).Link);
    oStructure.Components.Add(oComponents.GetByNumber(117).Link);
    oStructure.Components.Add(oComponents.GetByNumber(99).Link);
  oStructure := oStructures.Add('CM_ABS_RANGE', 'absolute range', 'CM', 0);
    oStructure.Components.Add(oComponents.GetByNumber(155).Link);
    oStructure.Components.Add(oComponents.GetByNumber(156).Link);
    oStructure.Components.Add(oComponents.GetByNumber(157).Link);
    oStructure.Components.Add(oComponents.GetByNumber(158).Link);
  oStructure := oStructures.Add('CK', 'composite ID with check digit', 'CK', 0);
    oStructure.Components.Add(oComponents.GetByNumber(293).Link);
    oStructure.Components.Add(oComponents.GetByNumber(18).Link);
    oStructure.Components.Add(oComponents.GetByNumber(298).Link);
    oStructure.Components.Add(oComponents.GetByNumber(281).Link);
  oStructure := oStructures.Add('CF', 'coded element with formatted values', 'CF', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(294).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(295).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0336', '', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0325', '', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0324', '', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0321', '', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0296', '', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0293', 'CE_NORM mit Tab. 0293', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0292', '', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0286', 'CE_NORM mit Tab. 0286', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0285', 'CE_NORM mit Tab. 0285', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0284', 'CE_NORM mit Tab. 0284', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0283', 'CE_NORM mit Tab. 0283', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0282', 'CE_NORM mit Tab. 0282', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0281', 'CE_NORM mit Tab. 0281', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0280', 'CE_NORM mit Tab. 0280', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0278', 'CE_NORM mit Tab. 0278', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0277', 'CE_NORM mit Tab. 0277', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0276', 'CE_NORM mit Tab. 0276', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0265', 'CE_NORM mit Tab. 0265', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0263', 'CE_NORM mit Tab. 0263', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0262', 'CE_NORM mit Tab. 0262', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0259', 'CE_NORM mit Tab. 0259', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0258', 'CE_NORM mit Tab. 0258', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0254', 'CE_NORM mit Tab. 0254', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0247', '', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0233', 'CE_NORM mit Tab. 0233', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0222', 'CE_NORM mit Tab. 0222', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0218', 'CE_NORM mit Tab. 0218', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0215', '', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0212', 'CE_NORM mit Tab. 0212', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0185', 'CE_NORM mit Tab. 0185', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0184', 'CE_NORM mit Tab. 0184', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0181', 'CE_NORM mit Tab. 0181', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0175', 'CE_NORM mit Tab. 0175', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0172', 'CE_NORM mit Tab. 0172', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0165', 'CE_NORM mit Tab. 0165', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0164', 'CE_NORM mit Tab. 0164', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0163', 'CE_NORM mit Tab. 0163', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0162', 'CE_NORM mit Tab. 0162', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0160', 'CE_NORM mit Tab. 0160', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0132', 'CE_NORM mit Tab. 0132', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0131', 'CE_NORM mit Tab. 0131', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0129', 'CE_NORM mit Tab. 0129', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0118', 'CE_NORM mit Tab. 0118', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0088', 'CE_NORM mit Tab. 0088', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0083', 'CE_NORM mit Tab. 0083', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0072', 'CE_NORM mit Tab. 0072', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0070', 'CE_NORM mit Tab. 0070', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0066', 'CE_NORM mit Tab. 0066', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0063', 'CE_NORM mit Tab. 0063', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0059', '', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0055', 'CE_NORM mit Tab. 0055', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0051', 'CE_NORM mit Tab. 0051', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0050', 'CE_NORM mit Tab. 0050', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0049', 'CE with table 49', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0048', 'CE with table 48', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE', 'coded element', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CD', 'Channel Definition', 'CD', 0);
    oStructure.Components.Add(oComponents.GetByNumber(332).Link);
    oStructure.Components.Add(oComponents.GetByNumber(333).Link);
    oStructure.Components.Add(oComponents.GetByNumber(334).Link);
    oStructure.Components.Add(oComponents.GetByNumber(335).Link);
    oStructure.Components.Add(oComponents.GetByNumber(336).Link);
    oStructure.Components.Add(oComponents.GetByNumber(337).Link);
  oStructure := oStructures.Add('AD', 'address', 'AD', 0);
    oStructure.Components.Add(oComponents.GetByNumber(27).Link);
    oStructure.Components.Add(oComponents.GetByNumber(28).Link);
    oStructure.Components.Add(oComponents.GetByNumber(29).Link);
    oStructure.Components.Add(oComponents.GetByNumber(30).Link);
    oStructure.Components.Add(oComponents.GetByNumber(31).Link);
    oStructure.Components.Add(oComponents.GetByNumber(32).Link);
    oStructure.Components.Add(oComponents.GetByNumber(202).Link);
    oStructure.Components.Add(oComponents.GetByNumber(34).Link);
  oStructures.Add('varies', 'variable data type', '*', 1);
  oStructures.Add('TX', 'text data', 'TX', 1);
  oStructures.Add('TN', 'telephone number', 'TN', 1);
  oStructures.Add('TM', 'time', 'TM', 1);
  oStructures.Add('ST', 'string data', 'ST', 1);
  oStructures.Add('SI', 'sequence ID', 'SI', 1);
  oStructures.Add('NM', 'numeric', 'NM', 1);
  oStructures.Add('ID', 'Coded Value for HL7 tables', 'ID', 1);
  oStructures.Add('FT', 'formatted text data', 'FT', 1);
  oStructures.Add('DT', 'Date', 'DT', 1);
End;

procedure LoadDataElements1(oDataElements : THL7V2ModelDataElements);
Begin
  oDataElements.Add('Field Separator', 1, 'ST', 1, 0);
  oDataElements.Add('Encoding Characters', 2, 'ST', 4, 0);
  oDataElements.Add('Sending Application', 3, 'HD', 180, 0);
  oDataElements.Add('Sending Facility', 4, 'HD', 180, 0);
  oDataElements.Add('Receiving Application', 5, 'HD', 180, 0);
  oDataElements.Add('Receiving Facility', 6, 'HD', 180, 0);
  oDataElements.Add('Date / Time of Message', 7, 'TS', 26, 0);
  oDataElements.Add('Security', 8, 'ST', 40, 0);
  oDataElements.Add('Message Type', 9, 'CM_MSG', 7, 0);
  oDataElements.Add('Message Control ID', 10, 'ST', 20, 0);
  oDataElements.Add('Processing ID', 11, 'PT', 3, 0);
  oDataElements.Add('Version ID', 12, 'ID', 8, 104);
  oDataElements.Add('Sequence Number', 13, 'NM', 15, 0);
  oDataElements.Add('Continuation Pointer', 14, 'ST', 180, 0);
  oDataElements.Add('Accept Acknowledgement Type', 15, 'ID', 2, 155);
  oDataElements.Add('Application Acknowledgement Type', 16, 'ID', 2, 155);
  oDataElements.Add('Country Code', 17, 'ID', 2, 0);
  oDataElements.Add('Acknowledgement code', 18, 'ID', 2, 8);
  oDataElements.Add('Text Message', 20, 'ST', 80, 0);
  oDataElements.Add('Expected Sequence Number', 21, 'NM', 15, 0);
  oDataElements.Add('Delayed Acknowledgement Type', 22, 'ID', 1, 102);
  oDataElements.Add('Error Condition', 23, 'CE', 100, 0);
  oDataElements.Add('Error Code and Location', 24, 'CM_ELD', 80, 60);
  oDataElements.Add('Query Date/Time', 25, 'TS', 26, 0);
  oDataElements.Add('Query Format Code', 26, 'ID', 1, 106);
  oDataElements.Add('Query Priority', 27, 'ID', 1, 91);
  oDataElements.Add('Query ID', 28, 'ST', 10, 0);
  oDataElements.Add('Deferred Response Type', 29, 'ID', 1, 107);
  oDataElements.Add('Deferred Response Date/Time', 30, 'TS', 26, 0);
  oDataElements.Add('Quantity Limited Request', 31, 'CQ', 10, 126);
  oDataElements.Add('Who Subject Filter', 32, 'XCN', 60, 0);
  oDataElements.Add('What Subject Filter', 33, 'CE_0048', 60, 48);
  oDataElements.Add('What Department Data Code', 34, 'CE', 60, 0);
  oDataElements.Add('What Data Code Value Qualifier', 35, 'CM_VR', 20, 0);
  oDataElements.Add('Query Results Level', 36, 'ID', 1, 108);
  oDataElements.Add('Where Subject Filter', 37, 'ST', 20, 0);
  oDataElements.Add('When Data Start Date/Time', 38, 'TS', 26, 0);
  oDataElements.Add('When Data End Date/Time', 39, 'TS', 26, 0);
  oDataElements.Add('What User Qualifier', 40, 'ST', 60, 0);
  oDataElements.Add('Other QRY Subject Filter', 41, 'ST', 60, 0);
  oDataElements.Add('Which Date/Time Qualifier', 42, 'ID', 12, 156);
  oDataElements.Add('Which Date/Time Status Qualifier', 43, 'ID', 12, 157);
  oDataElements.Add('Date/Time Selection Qualifier', 44, 'ID', 12, 158);
  oDataElements.Add('R/U Date/Time', 45, 'TS', 26, 0);
  oDataElements.Add('Report Priority', 46, 'ID', 1, 109);
  oDataElements.Add('R/U Who Subject Definition', 47, 'XCN', 60, 0);
  oDataElements.Add('R/U What Subject Definition', 48, 'CE_0048', 60, 48);
  oDataElements.Add('R/U What Department Code', 49, 'CE', 60, 0);
  oDataElements.Add('R/U Display/Print Locations', 50, 'ST', 20, 0);
  oDataElements.Add('R/U Results Level', 51, 'ID', 1, 108);
  oDataElements.Add('R/U Where Subject Definition', 52, 'ST', 20, 0);
  oDataElements.Add('R/U When Data Start Date/Time', 53, 'TS', 26, 0);
  oDataElements.Add('R/U When Data End Date/Time', 54, 'TS', 26, 0);
  oDataElements.Add('R/U What User Qualifier', 55, 'ST', 20, 0);
  oDataElements.Add('R/U Other Results Subject Definition', 56, 'ST', 20, 0);
  oDataElements.Add('R/U Which Date/Time Qualifier', 57, 'ID', 12, 156);
  oDataElements.Add('R/U Which Date/Time Status Qualifier', 58, 'ID', 12, 157);
  oDataElements.Add('R/U Date/Time Selection Qualifier', 59, 'ID', 12, 158);
  oDataElements.Add('Set ID - Display Data', 61, 'SI', 4, 0);
  oDataElements.Add('Display Level', 62, 'SI', 4, 0);
  oDataElements.Add('Data Line', 63, 'TX', 300, 0);
  oDataElements.Add('Logical Break Point', 64, 'ST', 2, 0);
  oDataElements.Add('Result ID', 65, 'TX', 20, 0);
  oDataElements.Add('Addendum Continuation Pointer', 66, 'ST', 65536, 0);
  oDataElements.Add('File Field Separator', 67, 'ST', 1, 0);
  oDataElements.Add('File Encoding Characters', 68, 'ST', 4, 0);
  oDataElements.Add('File Sending Application', 69, 'ST', 15, 0);
  oDataElements.Add('File Sending Facility', 70, 'ST', 20, 0);
  oDataElements.Add('File Receiving Application', 71, 'ST', 15, 0);
  oDataElements.Add('File Receiving Facility', 72, 'ST', 20, 0);
  oDataElements.Add('File Creation Date/Time', 73, 'TS', 26, 0);
  oDataElements.Add('File Security', 74, 'ST', 40, 0);
  oDataElements.Add('File Name/ID', 75, 'ST', 20, 0);
  oDataElements.Add('File Header Comment', 76, 'ST', 80, 0);
  oDataElements.Add('File Control ID', 77, 'ST', 20, 0);
  oDataElements.Add('Reference File Control ID', 78, 'ST', 20, 0);
  oDataElements.Add('File Batch Count', 79, 'NM', 10, 0);
  oDataElements.Add('File Trailer Comment', 80, 'ST', 80, 0);
  oDataElements.Add('Batch Field Separator', 81, 'ST', 1, 0);
  oDataElements.Add('Batch Encoding Characters', 82, 'ST', 3, 0);
  oDataElements.Add('Batch Sending Application', 83, 'ST', 15, 0);
  oDataElements.Add('Batch Sending Facility', 84, 'ST', 20, 0);
  oDataElements.Add('Batch Receiving Application', 85, 'ST', 15, 0);
  oDataElements.Add('Batch Receiving Facility', 86, 'ST', 20, 0);
  oDataElements.Add('Batch Creation Date/Time', 87, 'TS', 26, 0);
  oDataElements.Add('Batch Security', 88, 'ST', 40, 0);
  oDataElements.Add('Batch Name/ID/Type', 89, 'ST', 20, 0);
  oDataElements.Add('Batch Comment', 90, 'ST', 80, 0);
  oDataElements.Add('Batch Control ID', 91, 'ST', 20, 0);
  oDataElements.Add('Reference Batch Control ID', 92, 'ST', 20, 0);
  oDataElements.Add('Batch Message Count', 93, 'ST', 10, 0);
  oDataElements.Add('Batch Totals', 95, 'NM', 100, 0);
  oDataElements.Add('Set ID - Notes and Comments', 96, 'SI', 4, 0);
  oDataElements.Add('Source of Comment', 97, 'ID', 8, 105);
  oDataElements.Add('Comment', 98, 'FT', 65536, 0);
  oDataElements.Add('Event Type Code', 99, 'ID', 3, 3);
  oDataElements.Add('Recorded Date/Time', 100, 'TS', 26, 0);
  oDataElements.Add('Date/Time Planned Event', 101, 'TS', 26, 0);
  oDataElements.Add('Event Reason Code', 102, 'ID', 3, 62);
  oDataElements.Add('Operator ID', 103, 'XCN', 60, 188);
  oDataElements.Add('Set ID - Patient ID', 104, 'SI', 4, 0);
  oDataElements.Add('Patient ID (External ID)', 105, 'CX', 16, 0);
  oDataElements.Add('Patient ID (Internal ID)', 106, 'CX', 20, 0);
  oDataElements.Add('Alternate Patient ID', 107, 'CX', 12, 0);
  oDataElements.Add('Patient Name', 108, 'XPN', 48, 0);
  oDataElements.Add('Mother''s Maiden Name', 109, 'XPN', 48, 0);
  oDataElements.Add('Date of Birth', 110, 'TS', 26, 0);
  oDataElements.Add('Sex', 111, 'IS', 1, 1);
  oDataElements.Add('Patient Alias', 112, 'XPN', 48, 0);
  oDataElements.Add('Race', 113, 'IS', 1, 5);
  oDataElements.Add('Patient Address', 114, 'XAD', 106, 0);
  oDataElements.Add('County Code', 115, 'IS', 4, 0);
  oDataElements.Add('Phone Number - Home', 116, 'XTN', 40, 0);
  oDataElements.Add('Phone Number - Business', 117, 'XTN', 40, 0);
  oDataElements.Add('Primary Language', 118, 'CE_0296', 60, 296);
  oDataElements.Add('Marital Status', 119, 'IS', 1, 2);
  oDataElements.Add('Religion', 120, 'IS', 3, 6);
  oDataElements.Add('Patient Account Number', 121, 'CX', 20, 0);
  oDataElements.Add('SSN Number - Patient', 122, 'ST', 16, 0);
  oDataElements.Add('Driver''s License Number', 123, 'DLN', 25, 0);
  oDataElements.Add('Mother''s Identifier', 124, 'CX', 20, 0);
  oDataElements.Add('Ethnic Group', 125, 'IS', 1, 189);
  oDataElements.Add('Birth Place', 126, 'ST', 60, 0);
  oDataElements.Add('Multiple Birth Indicator', 127, 'ID', 2, 136);
  oDataElements.Add('Birth Order', 128, 'NM', 2, 0);
  oDataElements.Add('Citizenship', 129, 'IS', 4, 171);
  oDataElements.Add('Veterans Military Status', 130, 'CE_0172', 60, 172);
  oDataElements.Add('Set ID - Patient Visit', 131, 'SI', 4, 0);
  oDataElements.Add('Patient Class', 132, 'ID', 1, 4);
  oDataElements.Add('Assigned Patient Location', 133, 'PL', 12, 0);
  oDataElements.Add('Admission Type', 134, 'ID', 2, 7);
  oDataElements.Add('Preadmit Number', 135, 'CX', 20, 0);
  oDataElements.Add('Prior Patient Location', 136, 'PL', 12, 0);
  oDataElements.Add('Attending Doctor', 137, 'XCN', 60, 10);
  oDataElements.Add('Referring Doctor', 138, 'XCN', 60, 10);
  oDataElements.Add('Consulting Doctor', 139, 'XCN', 60, 10);
  oDataElements.Add('Hospital Service', 140, 'ID', 3, 69);
  oDataElements.Add('Temporary Location', 141, 'PL', 12, 0);
  oDataElements.Add('Preadmit Test Indicator', 142, 'ID', 2, 87);
  oDataElements.Add('Readmission Indicator', 143, 'ID', 2, 92);
  oDataElements.Add('Admit Source', 144, 'ID', 3, 23);
  oDataElements.Add('Ambulatory Status', 145, 'IS', 2, 9);
  oDataElements.Add('VIP Indicator', 146, 'ID', 2, 99);
  oDataElements.Add('Admitting Doctor', 147, 'XCN', 60, 10);
  oDataElements.Add('Patient Type', 148, 'ID', 2, 18);
  oDataElements.Add('Visit Number', 149, 'CX', 15, 0);
  oDataElements.Add('Financial Class', 150, 'FC', 50, 64);
  oDataElements.Add('Charge Price Indicator', 151, 'ID', 2, 32);
  oDataElements.Add('Courtesy Code', 152, 'ID', 2, 45);
  oDataElements.Add('Credit Rating', 153, 'ID', 2, 46);
  oDataElements.Add('Contract Code', 154, 'ID', 2, 44);
  oDataElements.Add('Contract Effective Date', 155, 'DT', 8, 0);
  oDataElements.Add('Contract Amount', 156, 'NM', 12, 0);
  oDataElements.Add('Contract Period', 157, 'NM', 3, 0);
  oDataElements.Add('Interest Code', 158, 'ID', 2, 73);
  oDataElements.Add('Transfer to Bad Debt Code', 159, 'ID', 1, 110);
  oDataElements.Add('Transfer to Bad Debt Date', 160, 'DT', 8, 0);
  oDataElements.Add('Bad Debt Agency Code', 161, 'ID', 10, 21);
  oDataElements.Add('Bad Debt Transfer Amount', 162, 'NM', 12, 0);
  oDataElements.Add('Bad Debt Recovery Amount', 163, 'NM', 12, 0);
  oDataElements.Add('Delete Account Indicator', 164, 'ID', 1, 111);
  oDataElements.Add('Delete Account Date', 165, 'DT', 8, 0);
  oDataElements.Add('Discharge Disposition', 166, 'ID', 3, 112);
  oDataElements.Add('Discharged to Location', 167, 'CM_DLD', 25, 113);
  oDataElements.Add('Diet Type', 168, 'ID', 2, 114);
  oDataElements.Add('Servicing Facility', 169, 'ID', 2, 115);
  oDataElements.Add('Bed Status', 170, 'IS', 1, 116);
  oDataElements.Add('Account Status', 171, 'ID', 2, 117);
  oDataElements.Add('Pending Location', 172, 'PL', 12, 0);
  oDataElements.Add('Prior Temporary Location', 173, 'PL', 12, 0);
  oDataElements.Add('Admit Date/Time', 174, 'TS', 26, 0);
  oDataElements.Add('Discharge Date/Time', 175, 'TS', 26, 0);
  oDataElements.Add('Current Patient Balance', 176, 'NM', 12, 0);
  oDataElements.Add('Total Charges', 177, 'NM', 12, 0);
  oDataElements.Add('Total Adjustments', 178, 'NM', 12, 0);
  oDataElements.Add('Total Payments', 179, 'NM', 12, 0);
  oDataElements.Add('Alternate Visit ID', 180, 'CX', 20, 192);
  oDataElements.Add('Prior Pending Location', 181, 'PL', 12, 0);
  oDataElements.Add('Accommodation Code', 182, 'CE_0129', 60, 129);
  oDataElements.Add('Admit Reason', 183, 'CE', 60, 0);
  oDataElements.Add('Transfer Reason', 184, 'CE', 60, 0);
  oDataElements.Add('Patient Valuables', 185, 'ST', 25, 0);
  oDataElements.Add('Patient Valuables Location', 186, 'ST', 25, 0);
  oDataElements.Add('Visit User Code', 187, 'IS', 2, 130);
  oDataElements.Add('Expected Admit Date', 188, 'TS', 8, 0);
  oDataElements.Add('Expected Discharge Date', 189, 'TS', 8, 0);
  oDataElements.Add('Set ID - Next of Kin', 190, 'SI', 4, 0);
  oDataElements.Add('Name', 191, 'XPN', 48, 0);
  oDataElements.Add('Relationship', 192, 'CE_0063', 60, 63);
  oDataElements.Add('Address', 193, 'XAD', 106, 0);
  oDataElements.Add('Phone Number', 194, 'XTN', 40, 0);
  oDataElements.Add('Business Phone Number', 195, 'XTN', 40, 0);
  oDataElements.Add('Contact Role', 196, 'CE_0131', 60, 131);
  oDataElements.Add('Start Date', 197, 'DT', 8, 0);
  oDataElements.Add('End Date', 198, 'DT', 8, 0);
  oDataElements.Add('Next of Kin/Associated Parties Job Title', 199, 'ST', 60, 0);
  oDataElements.Add('Next of Kin Job/Associated Parties Code/Class', 200, 'JCC', 20, 0);
  oDataElements.Add('Next of Kin/Associated Parties Employee Number', 201, 'CX', 20, 0);
  oDataElements.Add('Organization Name', 202, 'XON', 60, 0);
  oDataElements.Add('Set ID - AL1', 203, 'SI', 4, 0);
  oDataElements.Add('Allergy Type', 204, 'ID', 2, 127);
  oDataElements.Add('Allergy Code/Mnemonic/ Description', 205, 'CE', 60, 0);
  oDataElements.Add('Allergy Severity', 206, 'ID', 2, 128);
  oDataElements.Add('Allergy Reaction', 207, 'ST', 15, 0);
  oDataElements.Add('Identification Date', 208, 'DT', 8, 0);
  oDataElements.Add('Bed Location', 209, 'PL', 12, 79);
  oDataElements.Add('Prior Patient ID - Internal', 211, 'CX', 20, 0);
  oDataElements.Add('Prior Alternate Patient ID', 212, 'CX', 16, 0);
  oDataElements.Add('Prior Patient Account Number', 213, 'CX', 20, 0);
  oDataElements.Add('Prior Patient ID - External', 214, 'CX', 16, 0);
  oDataElements.Add('Order Control', 215, 'ID', 2, 119);
  oDataElements.Add('Placer Order Number', 216, 'EI', 22, 0);
  oDataElements.Add('Filler Order Number', 217, 'EI', 22, 0);
  oDataElements.Add('Placer Group Number', 218, 'EI', 22, 0);
  oDataElements.Add('Order Status', 219, 'ID', 2, 38);
  oDataElements.Add('Response Flag', 220, 'ID', 1, 121);
  oDataElements.Add('Quantity/Timing', 221, 'TQ', 200, 0);
  oDataElements.Add('Parent', 222, 'CM_EIP', 200, 0);
  oDataElements.Add('Date/Time of Transaction', 223, 'TS', 26, 0);
  oDataElements.Add('Entered By', 224, 'XCN', 120, 0);
  oDataElements.Add('Verified By', 225, 'XCN', 120, 0);
  oDataElements.Add('Ordering Provider', 226, 'XCN', 120, 0);
  oDataElements.Add('Enterer''s Location', 227, 'PL', 80, 0);
  oDataElements.Add('Call Back Phone Number', 228, 'TN', 40, 0);
  oDataElements.Add('Order Effective Date/Time', 229, 'TS', 26, 0);
  oDataElements.Add('Order Control Code Reason', 230, 'CE', 200, 0);
  oDataElements.Add('Entering Organization', 231, 'CE', 60, 0);
  oDataElements.Add('Entering Device', 232, 'CE', 60, 0);
  oDataElements.Add('Action By', 233, 'XCN', 120, 0);
  oDataElements.Add('When to Charge', 234, 'CM_CCD', 15, 100);
  oDataElements.Add('Charge Type', 235, 'ID', 50, 122);
  oDataElements.Add('Account ID', 236, 'CK', 100, 0);
  oDataElements.Add('Set ID - Observation Request', 237, 'SI', 4, 0);
  oDataElements.Add('Universal Service Identifier', 238, 'CE', 200, 0);
  oDataElements.Add('Priority', 239, 'ID', 2, 0);
  oDataElements.Add('Requested Date/Time', 240, 'TS', 26, 0);
  oDataElements.Add('Observation Date/Time', 241, 'TS', 26, 0);
  oDataElements.Add('Observation End Date/Time', 242, 'TS', 26, 0);
  oDataElements.Add('Collection Volume', 243, 'CQ', 20, 0);
  oDataElements.Add('Collector Identifier', 244, 'XCN', 60, 0);
  oDataElements.Add('Specimen Action Code', 245, 'ID', 1, 65);
  oDataElements.Add('Danger Code', 246, 'CE', 60, 0);
  oDataElements.Add('Relevant Clinical Information', 247, 'ST', 300, 0);
  oDataElements.Add('Specimen Received Date/Time', 248, 'TS', 26, 0);
  oDataElements.Add('Specimen Source', 249, 'CM_SPS', 300, 70);
  oDataElements.Add('Order Callback Phone Number', 250, 'XTN', 40, 0);
  oDataElements.Add('Placer Field 1', 251, 'ST', 60, 0);
  oDataElements.Add('Placer Field 2', 252, 'ST', 60, 0);
  oDataElements.Add('Filler Field 1', 253, 'ST', 60, 0);
  oDataElements.Add('Filler Field 2', 254, 'ST', 60, 0);
  oDataElements.Add('Results Rpt/Status Chng - Date/Time', 255, 'TS', 26, 0);
  oDataElements.Add('Charge To Practice', 256, 'CM_MOC', 40, 0);
  oDataElements.Add('Diagnostic Service Section ID', 257, 'ID', 10, 74);
  oDataElements.Add('Result Status', 258, 'ID', 1, 123);
  oDataElements.Add('Parent Result', 259, 'CM_PRL', 200, 0);
  oDataElements.Add('Result Copies To', 260, 'XCN', 150, 0);
  oDataElements.Add('Parent Number', 261, 'CM_EIP', 150, 0);
  oDataElements.Add('Transportation Mode', 262, 'ID', 20, 124);
  oDataElements.Add('Reason For Study', 263, 'CE', 300, 0);
  oDataElements.Add('Principal Result Interpreter', 264, 'CM_NDL', 200, 0);
  oDataElements.Add('Assistant Result Interpreter', 265, 'CM_NDL', 200, 0);
  oDataElements.Add('Technician', 266, 'CM_NDL', 200, 0);
  oDataElements.Add('Transcriptionist', 267, 'CM_NDL', 200, 0);
  oDataElements.Add('Scheduled Date/Time', 268, 'TS', 26, 0);
  oDataElements.Add('Type', 269, 'ID', 1, 159);
  oDataElements.Add('Service Period', 270, 'CE', 60, 0);
  oDataElements.Add('Diet, Supplement, or Preference Code', 271, 'CE', 60, 0);
  oDataElements.Add('Text Instruction', 272, 'ST', 80, 0);
  oDataElements.Add('Tray Type', 273, 'CE_0160', 60, 160);
  oDataElements.Add('Requisition Line Number', 275, 'SI', 4, 0);
  oDataElements.Add('Item Code - Internal', 276, 'CE', 60, 0);
  oDataElements.Add('Item Code - External', 277, 'CE', 60, 0);
  oDataElements.Add('Hospital Item Code', 278, 'CE', 60, 0);
  oDataElements.Add('Requisition Quantity', 279, 'NM', 6, 0);
  oDataElements.Add('Requisition Unit of Measure', 280, 'CE', 60, 0);
  oDataElements.Add('Department Cost Center', 281, 'ID', 30, 0);
  oDataElements.Add('Item Natural Account Code', 282, 'ID', 30, 0);
  oDataElements.Add('Deliver To ID', 283, 'CE', 60, 0);
  oDataElements.Add('Date Needed', 284, 'DT', 8, 0);
  oDataElements.Add('Anticipated Price', 285, 'ST', 10, 0);
  oDataElements.Add('Manufactured ID', 286, 'CE', 60, 0);
  oDataElements.Add('Manufacturer''s Catalog', 287, 'ST', 16, 0);
  oDataElements.Add('Vendor ID', 288, 'CE', 60, 0);
  oDataElements.Add('Vendor Catalog', 289, 'ST', 16, 0);
  oDataElements.Add('Taxable', 290, 'ID', 1, 136);
  oDataElements.Add('Substitute Allowed', 291, 'ID', 1, 136);
  oDataElements.Add('Requested Give Code', 292, 'CE', 100, 0);
  oDataElements.Add('Requested Give Amount - Minimum', 293, 'NM', 20, 0);
  oDataElements.Add('Requested Give Amount - Maximum', 294, 'NM', 20, 0);
  oDataElements.Add('Requested Give Units', 295, 'CE', 60, 0);
  oDataElements.Add('Requested Dosage Form', 296, 'CE', 60, 0);
  oDataElements.Add('Provider''s Pharmacy Instructions', 297, 'CE', 200, 0);
  oDataElements.Add('Provider''s Administration Instructions', 298, 'CE', 200, 0);
  oDataElements.Add('Deliver To Location', 299, 'CM_LA1', 200, 0);
  oDataElements.Add('Allow Substitutions', 300, 'ID', 1, 161);
  oDataElements.Add('Requested Dispense Code', 301, 'CE', 100, 0);
  oDataElements.Add('Requested Dispense Amount', 302, 'NM', 20, 0);
  oDataElements.Add('Requested Dispense Units', 303, 'CE', 60, 0);
  oDataElements.Add('Number of Refills', 304, 'NM', 3, 0);
  oDataElements.Add('Ordering Provider''s DEA Number', 305, 'CN', 60, 0);
  oDataElements.Add('Pharmacist/Treatment Supplier''s Verifier ID', 306, 'CN', 60, 0);
  oDataElements.Add('Needs Human Review', 307, 'ID', 1, 136);
  oDataElements.Add('Requested Give Per (Time Unit)', 308, 'ST', 20, 0);
  oDataElements.Add('Route', 309, 'CE_0162', 60, 162);
  oDataElements.Add('Site', 310, 'CE_0163', 60, 163);
  oDataElements.Add('Administration Device', 311, 'CE_0164', 60, 164);
  oDataElements.Add('Administration Method', 312, 'CE_0165', 60, 165);
  oDataElements.Add('RX Component Type', 313, 'ID', 1, 166);
  oDataElements.Add('Component Code', 314, 'CE', 100, 0);
  oDataElements.Add('Component Amount', 315, 'NM', 20, 0);
  oDataElements.Add('Component Units', 316, 'CE', 60, 0);
  oDataElements.Add('Give Code', 317, 'CE', 100, 0);
  oDataElements.Add('Give Amount - Minimum', 318, 'NM', 20, 0);
  oDataElements.Add('Give Amount - Maximum', 319, 'NM', 20, 0);
  oDataElements.Add('Give Units', 320, 'CE', 60, 0);
  oDataElements.Add('Give Dosage Form', 321, 'CE', 60, 0);
  oDataElements.Add('Substitution Status', 322, 'ID', 1, 167);
  oDataElements.Add('Dispense Amount', 323, 'NM', 20, 0);
  oDataElements.Add('Dispense Units', 324, 'CE', 60, 0);
  oDataElements.Add('Prescription Number', 325, 'ST', 20, 0);
  oDataElements.Add('Number of Refills Remaining', 326, 'NM', 20, 0);
  oDataElements.Add('Number of Refills/Doses Dispensed', 327, 'NM', 20, 0);
  oDataElements.Add('Date / time of most recent refill or dose dispensed', 328, 'TS', 26, 0);
  oDataElements.Add('Total Daily Dose', 329, 'CQ', 10, 0);
  oDataElements.Add('Pharmacy/Treatment Supplier''s Special Dispensing Instructions', 330, 'CE', 200, 0);
  oDataElements.Add('Give Per (Time Unit)', 331, 'ST', 20, 0);
  oDataElements.Add('Give Rate Amount', 332, 'ST', 6, 0);
  oDataElements.Add('Give Rate Units', 333, 'CE', 60, 0);
  oDataElements.Add('Dispense Sub-ID Counter', 334, 'NM', 4, 0);
  oDataElements.Add('Dispense/Give Code', 335, 'CE_0292', 100, 292);
  oDataElements.Add('Date/Time Dispensed', 336, 'TS', 26, 0);
  oDataElements.Add('Actual Dispense Amount', 337, 'NM', 20, 0);
  oDataElements.Add('Actual Dispense Units', 338, 'CE', 60, 0);
  oDataElements.Add('Actual Dosage Form', 339, 'CE', 60, 0);
  oDataElements.Add('Dispense Notes', 340, 'CE', 200, 0);
  oDataElements.Add('Dispensing Provider', 341, 'XCN', 200, 0);
  oDataElements.Add('Give Sub-ID Counter', 342, 'ID', 4, 0);
  oDataElements.Add('Pharmacy Special Administration Instructions', 343, 'CE', 200, 0);
  oDataElements.Add('Administration Sub-ID Counter', 344, 'NM', 4, 0);
  oDataElements.Add('Date/Time Start of Administration', 345, 'TS', 26, 0);
  oDataElements.Add('Date/Time End of Administration', 346, 'TS', 26, 0);
  oDataElements.Add('Administered Code', 347, 'CE', 100, 292);
  oDataElements.Add('Administered Amount', 348, 'NM', 20, 0);
  oDataElements.Add('Administered Units', 349, 'CE', 60, 0);
  oDataElements.Add('Administered Dosage Form', 350, 'CE', 60, 0);
  oDataElements.Add('Administration Notes', 351, 'CE', 200, 0);
  oDataElements.Add('Administering Provider', 352, 'XCN', 200, 0);
  oDataElements.Add('Administered-at Location', 353, 'CM_LA1', 200, 0);
  oDataElements.Add('Administered Per (Time Unit)', 354, 'ST', 20, 0);
  oDataElements.Add('Set ID - Financial Transaction', 355, 'SI', 4, 0);
  oDataElements.Add('Transaction ID', 356, 'ST', 12, 0);
  oDataElements.Add('Transaction Batch ID', 357, 'ST', 10, 0);
  oDataElements.Add('Transaction Date', 358, 'TS', 26, 0);
  oDataElements.Add('Transaction Posting Date', 359, 'TS', 26, 0);
  oDataElements.Add('Transaction Type', 360, 'ID', 8, 17);
  oDataElements.Add('Transaction Code', 361, 'CE_0132', 80, 132);
  oDataElements.Add('Transaction Description', 362, 'ST', 40, 0);
  oDataElements.Add('Transaction Description - alternate', 363, 'ST', 40, 0);
  oDataElements.Add('Transaction Quantity', 364, 'NM', 6, 0);
  oDataElements.Add('Transaction Amount - Extended', 365, 'CP', 12, 0);
  oDataElements.Add('Transaction Amount - Unit', 366, 'CP', 12, 0);
  oDataElements.Add('Department Code', 367, 'CE_0049', 60, 49);
  oDataElements.Add('Insurance Plan ID', 368, 'CE_0072', 8, 72);
  oDataElements.Add('Insurance Amount', 369, 'CP', 12, 0);
  oDataElements.Add('Fee Schedule', 370, 'ID', 1, 24);
  oDataElements.Add('Diagnosis Code', 371, 'CE_0051', 60, 51);
  oDataElements.Add('Performed By Code', 372, 'XCN', 120, 84);
  oDataElements.Add('Ordered By Code', 373, 'XCN', 120, 0);
  oDataElements.Add('Unit Cost', 374, 'NM', 12, 0);
  oDataElements.Add('Set ID - Diagnosis', 375, 'SI', 4, 0);
  oDataElements.Add('Diagnosis Coding Method', 376, 'ID', 2, 53);
  oDataElements.Add('Diagnosis Code', 377, 'CE_0051', 60, 51);
  oDataElements.Add('Diagnosis Description', 378, 'ST', 40, 0);
  oDataElements.Add('Diagnosis Date/Time', 379, 'TS', 26, 0);
  oDataElements.Add('Diagnosis Type', 380, 'IS', 2, 52);
  oDataElements.Add('Major Diagnostic Category', 381, 'CE_0118', 60, 118);
  oDataElements.Add('Diagnostic Related Group', 382, 'CE_0055', 4, 55);
  oDataElements.Add('DRG Approval Indicator', 383, 'ID', 2, 136);
  oDataElements.Add('DRG Grouper Review Code', 384, 'IS', 2, 56);
  oDataElements.Add('Outlier Type', 385, 'CE_0083', 60, 83);
  oDataElements.Add('Outlier Days', 386, 'NM', 3, 0);
  oDataElements.Add('Outlier Cost', 387, 'CP', 12, 0);
  oDataElements.Add('Grouper Version and Type', 388, 'ST', 4, 0);
  oDataElements.Add('Diagnosis Priority', 389, 'NM', 2, 0);
  oDataElements.Add('Diagnosing Clinician', 390, 'XCN', 60, 0);
  oDataElements.Add('Set ID - Procedure', 391, 'SI', 4, 0);
  oDataElements.Add('Procedure Coding Method', 392, 'IS', 2, 89);
  oDataElements.Add('Procedure Code', 393, 'CE_0088', 80, 88);
  oDataElements.Add('Procedure Description', 394, 'ST', 40, 0);
  oDataElements.Add('Procedure Date/Time', 395, 'TS', 26, 0);
  oDataElements.Add('Procedure Type', 396, 'ID', 2, 230);
  oDataElements.Add('Procedure Minutes', 397, 'NM', 4, 0);
  oDataElements.Add('Anesthesiologist', 398, 'XCN', 120, 10);
  oDataElements.Add('Anesthesia Code', 399, 'IS', 2, 19);
  oDataElements.Add('Anesthesia Minutes', 400, 'NM', 4, 0);
  oDataElements.Add('Surgeon', 401, 'XCN', 120, 10);
  oDataElements.Add('Procedure Practitioner', 402, 'XCN', 230, 10);
  oDataElements.Add('Consent Code', 403, 'CE_0059', 60, 59);
  oDataElements.Add('Procedure Priority', 404, 'NM', 2, 0);
  oDataElements.Add('Set ID - Guarantor', 405, 'SI', 4, 0);
  oDataElements.Add('Guarantor Number', 406, 'CX', 59, 0);
  oDataElements.Add('Guarantor Name', 407, 'XPN', 48, 0);
  oDataElements.Add('Guarantor Spouse Name', 408, 'XPN', 48, 0);
  oDataElements.Add('Guarantor Address', 409, 'XAD', 106, 0);
  oDataElements.Add('Guarantor Ph Num- Home', 410, 'XTN', 40, 0);
  oDataElements.Add('Guarantor Ph Num-Business', 411, 'XTN', 40, 0);
  oDataElements.Add('Guarantor Date/Time of Birth', 412, 'TS', 26, 0);
  oDataElements.Add('Guarantor Sex', 413, 'IS', 1, 1);
  oDataElements.Add('Guarantor Type', 414, 'IS', 2, 68);
  oDataElements.Add('Guarantor Relationship', 415, 'IS', 2, 63);
  oDataElements.Add('Guarantor SSN', 416, 'ST', 11, 0);
  oDataElements.Add('Guarantor Date - Begin', 417, 'DT', 8, 0);
  oDataElements.Add('Guarantor Date - End', 418, 'DT', 8, 0);
  oDataElements.Add('Guarantor Priority', 419, 'NM', 2, 0);
  oDataElements.Add('Guarantor Employer Name', 420, 'XPN', 130, 0);
  oDataElements.Add('Guarantor Employer Address', 421, 'XAD', 106, 0);
  oDataElements.Add('Guarantor Employ Phone Number', 422, 'XTN', 40, 0);
  oDataElements.Add('Guarantor Employee ID Number', 423, 'CX', 20, 0);
  oDataElements.Add('Guarantor Employment Status', 424, 'IS', 2, 66);
  oDataElements.Add('Guarantor Organization', 425, 'XON', 130, 0);
  oDataElements.Add('Set ID - Insurance', 426, 'SI', 4, 0);
  oDataElements.Add('Insurance Company ID', 428, 'CX', 59, 0);
  oDataElements.Add('Insurance Company Name', 429, 'XON', 130, 0);
  oDataElements.Add('Insurance Company Address', 430, 'XAD', 106, 0);
  oDataElements.Add('Insurance Co. Contact Ppers', 431, 'XPN', 48, 0);
  oDataElements.Add('Insurance Co Phone Number', 432, 'XTN', 40, 0);
  oDataElements.Add('Group Number', 433, 'ST', 12, 0);
  oDataElements.Add('Group Name', 434, 'XON', 130, 0);
  oDataElements.Add('Insured''s group employer ID', 435, 'CX', 12, 0);
  oDataElements.Add('Insured''s Group Emp Name', 436, 'XON', 130, 0);
  oDataElements.Add('Plan Effective Date', 437, 'DT', 8, 0);
  oDataElements.Add('Plan Expiration Date', 438, 'DT', 8, 0);
  oDataElements.Add('Authorization Information', 439, 'CM_AUI', 55, 0);
  oDataElements.Add('Plan Type', 440, 'IS', 3, 86);
  oDataElements.Add('Name of Insured', 441, 'XPN', 48, 0);
  oDataElements.Add('Insured''s Relationship to Patient', 442, 'IS', 2, 63);
  oDataElements.Add('Insured''s Date of Birth', 443, 'TS', 26, 0);
  oDataElements.Add('Insured''s Address', 444, 'XAD', 106, 0);
  oDataElements.Add('Assignment of Benefits', 445, 'IS', 2, 135);
  oDataElements.Add('Coordination of Benefits', 446, 'IS', 2, 173);
  oDataElements.Add('Coord of Ben. Priority', 447, 'ST', 2, 0);
  oDataElements.Add('Notice of Admission Code', 448, 'ID', 2, 136);
  oDataElements.Add('Notice of Admission Date', 449, 'DT', 8, 0);
  oDataElements.Add('Rpt of Eigibility Code', 450, 'ID', 2, 136);
  oDataElements.Add('Rpt of Eligibility Date', 451, 'DT', 8, 0);
  oDataElements.Add('Release Information Code', 452, 'IS', 2, 93);
  oDataElements.Add('Pre-Admit Cert (PAC)', 453, 'ST', 15, 0);
  oDataElements.Add('Verification Date/Time', 454, 'TS', 26, 0);
  oDataElements.Add('Verification By', 455, 'XPN', 60, 0);
  oDataElements.Add('Type of Agreement Code', 456, 'IS', 2, 98);
  oDataElements.Add('Billing Status', 457, 'IS', 2, 22);
  oDataElements.Add('Lifetime Reserve Days', 458, 'NM', 4, 0);
  oDataElements.Add('Delay before lifetime reserve days', 459, 'NM', 4, 0);
  oDataElements.Add('Company Plan Code', 460, 'IS', 8, 42);
  oDataElements.Add('Policy Number', 461, 'ST', 15, 0);
  oDataElements.Add('Policy Deductible', 462, 'CP', 12, 0);
  oDataElements.Add('Policy Limit - Amount', 463, 'CP', 12, 0);
  oDataElements.Add('Policy Limit - Days', 464, 'NM', 4, 0);
  oDataElements.Add('Room Rate - Semi-Private', 465, 'CP', 12, 0);
  oDataElements.Add('Room Rate - Private', 466, 'CP', 12, 0);
  oDataElements.Add('Insured''s Employment Status', 467, 'CE_0066', 60, 66);
  oDataElements.Add('Insured''s Sex', 468, 'IS', 1, 1);
  oDataElements.Add('Insured''s Employer Address', 469, 'XAD', 106, 0);
  oDataElements.Add('Verification Status', 470, 'ST', 2, 0);
  oDataElements.Add('Prior Insurance Plan ID', 471, 'IS', 8, 72);
  oDataElements.Add('Insured''s Employee ID', 472, 'CX', 59, 0);
  oDataElements.Add('Insured''s Social Security Number', 473, 'ST', 11, 0);
  oDataElements.Add('Insured''s Employer Name', 474, 'XCN', 130, 0);
  oDataElements.Add('Employer Information Data', 475, 'IS', 1, 139);
  oDataElements.Add('Mail Claim Party', 476, 'IS', 1, 137);
  oDataElements.Add('Medicare Health Ins Card Number', 477, 'ST', 15, 0);
  oDataElements.Add('Medicaid Case Name', 478, 'XPN', 48, 0);
  oDataElements.Add('Medicaid Case Number', 479, 'ST', 15, 0);
  oDataElements.Add('Champus Sponsor Name', 480, 'XPN', 48, 0);
  oDataElements.Add('Champus ID Number', 481, 'ST', 20, 0);
  oDataElements.Add('Dependent of Champus Recipient', 482, 'CE', 80, 0);
  oDataElements.Add('Champus Organization', 483, 'ST', 25, 0);
  oDataElements.Add('Champus Station', 484, 'ST', 25, 0);
  oDataElements.Add('Champus Service', 485, 'IS', 14, 140);
  oDataElements.Add('Champus Rank/Grade', 486, 'IS', 2, 141);
  oDataElements.Add('Champus Status', 487, 'IS', 3, 142);
  oDataElements.Add('Champus Retire Date', 488, 'DT', 8, 0);
  oDataElements.Add('Champus Non-Avail Cert on File', 489, 'ID', 1, 136);
  oDataElements.Add('Baby Coverage', 490, 'ID', 1, 136);
  oDataElements.Add('Combine Baby Bill', 491, 'ID', 1, 136);
  oDataElements.Add('Blood Deductible', 492, 'ST', 1, 0);
  oDataElements.Add('Special Coverage Approval Name', 493, 'XPN', 48, 0);
  oDataElements.Add('Special Coverage Approval Title', 494, 'ST', 30, 0);
  oDataElements.Add('Non-Covered Insurance Code', 495, 'ST', 8, 143);
  oDataElements.Add('Payor ID', 496, 'CX', 59, 0);
  oDataElements.Add('Payor Subscriber ID', 497, 'CX', 59, 0);
  oDataElements.Add('Eligibility Source', 498, 'IS', 1, 144);
  oDataElements.Add('Room Coverage Type/Amount', 499, 'CM_RMC', 25, 0);
  oDataElements.Add('Policy Type/Amount', 500, 'CM_PTA', 25, 0);
  oDataElements.Add('Daily Deductible', 501, 'CM_DDI', 25, 0);
  oDataElements.Add('Set ID - Insurance Certification', 502, 'SI', 4, 0);
  oDataElements.Add('Certification Number', 503, 'CX', 59, 0);
  oDataElements.Add('Certified By', 504, 'XCN', 60, 0);
  oDataElements.Add('Certification Required', 505, 'ID', 1, 136);
  oDataElements.Add('Penalty', 506, 'CM_PEN', 10, 148);
End;

procedure LoadDataElements2(oDataElements : THL7V2ModelDataElements);
Begin
  oDataElements.Add('Certification Date/Time', 507, 'TS', 26, 0);
  oDataElements.Add('Certification Modify Date/Time', 508, 'TS', 26, 0);
  oDataElements.Add('Operator', 509, 'XCN', 60, 0);
  oDataElements.Add('Certification Begin Date', 510, 'DT', 8, 0);
  oDataElements.Add('Certification End Date', 511, 'DT', 8, 0);
  oDataElements.Add('Days', 512, 'CM_DTN', 3, 149);
  oDataElements.Add('Non-Concur Code/Description', 513, 'CE_0233', 60, 233);
  oDataElements.Add('Non-Concur Effective Date/Time', 514, 'TS', 26, 0);
  oDataElements.Add('Physician Reviewer', 515, 'XCN', 60, 0);
  oDataElements.Add('Certification Contact', 516, 'ST', 48, 0);
  oDataElements.Add('Certification Contact Phone Number', 517, 'XTN', 40, 0);
  oDataElements.Add('Appeal Reason', 518, 'CE', 60, 0);
  oDataElements.Add('Certification Agency', 519, 'CE', 60, 0);
  oDataElements.Add('Certification Agency Phone Number', 520, 'XTN', 40, 0);
  oDataElements.Add('Pre-Certification required/Window', 521, 'CM_PCF', 40, 0);
  oDataElements.Add('Case Manager', 522, 'ST', 48, 0);
  oDataElements.Add('Second Opinion Date', 523, 'DT', 8, 0);
  oDataElements.Add('Second Opinion Status', 524, 'IS', 1, 151);
  oDataElements.Add('Second Opinion Documentation Received', 525, 'IS', 1, 152);
  oDataElements.Add('Second Opinion Physician', 526, 'XCN', 60, 0);
  oDataElements.Add('Accident Date/Time', 527, 'TS', 26, 0);
  oDataElements.Add('Accident Code', 528, 'CE_0050', 60, 50);
  oDataElements.Add('Accident Location', 529, 'ST', 25, 0);
  oDataElements.Add('Set ID - UB1', 530, 'SI', 4, 0);
  oDataElements.Add('Blood Deductible  (43)', 531, 'NM', 1, 0);
  oDataElements.Add('Blood Furnished Pints Of (40)', 532, 'NM', 2, 0);
  oDataElements.Add('Blood Replaced Pints (41)', 533, 'NM', 2, 0);
  oDataElements.Add('Blood Not Replaced Pints(42)', 534, 'NM', 2, 0);
  oDataElements.Add('Co Insurance Days (25)', 535, 'NM', 2, 0);
  oDataElements.Add('Condition Code (35-39)', 536, 'IS', 2, 43);
  oDataElements.Add('Covered Days   (23)', 537, 'NM', 3, 0);
  oDataElements.Add('Non Covered Days   (24)', 538, 'NM', 3, 0);
  oDataElements.Add('Value Amount & Code (46-49)', 539, 'CM_UVC', 12, 153);
  oDataElements.Add('Number Of Grace Days (90)', 540, 'NM', 2, 0);
  oDataElements.Add('Spec Program Indicator (44)', 541, 'CE', 60, 0);
  oDataElements.Add('PSRO/UR Approval Indicator (87)', 542, 'ID', 60, 0);
  oDataElements.Add('PSRO/UR Approved Stay Fm (88)', 543, 'DT', 8, 0);
  oDataElements.Add('PSRO/UR Approved Stay To (89)', 544, 'DT', 8, 0);
  oDataElements.Add('Occurrence (28 32)', 545, 'CM_OCD', 20, 0);
  oDataElements.Add('Occurrence Span (33)', 546, 'ID', 2, 0);
  oDataElements.Add('Occur Span Start Date(33)', 547, 'DT', 8, 0);
  oDataElements.Add('Occur Span End Date (33)', 548, 'DT', 8, 0);
  oDataElements.Add('UB 82 Locator 2', 549, 'ST', 30, 0);
  oDataElements.Add('UB 82 Locator 9', 550, 'ST', 7, 0);
  oDataElements.Add('UB 82 Locator 27', 551, 'ST', 8, 0);
  oDataElements.Add('UB 82 Locator 45', 552, 'ST', 17, 0);
  oDataElements.Add('Set ID - UB2', 553, 'SI', 4, 0);
  oDataElements.Add('Co-Insurance Days (9)', 554, 'ST', 3, 0);
  oDataElements.Add('Condition Code (24-30)', 555, 'ID', 2, 43);
  oDataElements.Add('Covered Days (7)', 556, 'ST', 3, 0);
  oDataElements.Add('Non-Covered Days (8)', 557, 'ST', 4, 0);
  oDataElements.Add('Value Amount & Code', 558, 'CM_UVC', 11, 0);
  oDataElements.Add('Occurrence Code & Date (32-35)', 559, 'CM_OCD', 11, 0);
  oDataElements.Add('Occurrence Span Code/Dates (36)', 560, 'CM_OSP', 28, 0);
  oDataElements.Add('UB92 Locator 2 (State)', 561, 'ST', 29, 0);
  oDataElements.Add('UB92 Locator 11 (State)', 562, 'ST', 12, 0);
  oDataElements.Add('UB92 Locator 31 (National)', 563, 'ST', 5, 0);
  oDataElements.Add('Document Control Number', 564, 'ST', 23, 0);
  oDataElements.Add('UB92 Locator 49 (National)', 565, 'ST', 4, 0);
  oDataElements.Add('UB92 Locator 56 (State)', 566, 'ST', 14, 0);
  oDataElements.Add('UB92 Locator 57 (National)', 567, 'ST', 27, 0);
  oDataElements.Add('UB92 Locator 78 (State)', 568, 'ST', 2, 0);
  oDataElements.Add('Set ID - OBX', 569, 'SI', 4, 0);
  oDataElements.Add('Value Type', 570, 'ID', 2, 125);
  oDataElements.Add('Observation Identifier', 571, 'CE', 590, 0);
  oDataElements.Add('Observation Sub-ID', 572, 'ST', 20, 0);
  oDataElements.Add('Observation Value', 573, 'varies', 65536, 0);
  oDataElements.Add('Units', 574, 'CE', 60, 0);
  oDataElements.Add('References Range', 575, 'ST', 10, 0);
  oDataElements.Add('Abnormal Flags', 576, 'ID', 5, 78);
  oDataElements.Add('Probability', 577, 'NM', 5, 0);
  oDataElements.Add('Nature of Abnormal Test', 578, 'ID', 2, 80);
  oDataElements.Add('Observ Result Status', 579, 'ID', 1, 85);
  oDataElements.Add('Date Last Obs Normal Values', 580, 'TS', 26, 0);
  oDataElements.Add('User Defined Access Checks', 581, 'ST', 20, 0);
  oDataElements.Add('Date/Time of the Observation', 582, 'TS', 26, 0);
  oDataElements.Add('Producer''s ID', 583, 'CE', 60, 0);
  oDataElements.Add('Responsible Observer', 584, 'XCN', 80, 0);
  oDataElements.Add('Sequence Number - Test/ Observation Master File', 586, 'NM', 4, 0);
  oDataElements.Add('Producer''s Test/Observation ID', 587, 'CE', 200, 0);
  oDataElements.Add('Permitted Data Types', 588, 'ID', 12, 125);
  oDataElements.Add('Specimen Required', 589, 'ID', 1, 136);
  oDataElements.Add('Producer ID', 590, 'CE', 200, 0);
  oDataElements.Add('Observation Description', 591, 'CE', 200, 0);
  oDataElements.Add('Other Test/Observation IDs for the Observation', 592, 'CE', 200, 0);
  oDataElements.Add('Other Names', 593, 'ST', 200, 0);
  oDataElements.Add('Preferred Report Name for the Observation', 594, 'ST', 30, 0);
  oDataElements.Add('Preferred Short Name or Mnemonic for Observation', 595, 'ST', 8, 0);
  oDataElements.Add('Preferred Long Name for the Observation', 596, 'ST', 200, 0);
  oDataElements.Add('Orderability', 597, 'ID', 1, 136);
  oDataElements.Add('Identity of Instrument Used to Perfrom this Study', 598, 'CE', 60, 0);
  oDataElements.Add('Coded Representation of Method', 599, 'CE', 200, 0);
  oDataElements.Add('Portable', 600, 'ID', 1, 136);
  oDataElements.Add('Observation Producing Department/Section', 601, 'CE', 60, 0);
  oDataElements.Add('Telephone Number of Section', 602, 'TN', 40, 0);
  oDataElements.Add('Nature of Test/Observation', 603, 'ID', 1, 174);
  oDataElements.Add('Report Subheader', 604, 'CE', 200, 0);
  oDataElements.Add('Report Display Order', 605, 'ST', 20, 0);
  oDataElements.Add('Date/Time Stamp for any change in Def Attri for Obs', 606, 'TS', 26, 0);
  oDataElements.Add('Effective Date/Time of Change in Test Proc. that make Results Non-Comparable', 607, 'TS', 26, 0);
  oDataElements.Add('Typical Turn-Around Time', 608, 'NM', 20, 0);
  oDataElements.Add('Processing Time', 609, 'NM', 20, 0);
  oDataElements.Add('Processing Priority', 610, 'ID', 40, 168);
  oDataElements.Add('Reporting Priority', 611, 'ID', 5, 169);
  oDataElements.Add('Outside Site(s) Where Observation may be Performed', 612, 'CE', 200, 0);
  oDataElements.Add('Address of Outside Site(s)', 613, 'AD', 1000, 0);
  oDataElements.Add('Phone Number of Outside Site', 614, 'TN', 400, 0);
  oDataElements.Add('Confidentiality Code', 615, 'ID', 1, 177);
  oDataElements.Add('Observations Required to Interpret the Observation', 616, 'CE', 200, 0);
  oDataElements.Add('Interpretation of Observations', 617, 'TX', 65536, 0);
  oDataElements.Add('Contraindications to Observations', 618, 'CE', 65536, 0);
  oDataElements.Add('Reflex Tests/Observations', 619, 'CE', 200, 0);
  oDataElements.Add('Rules that Trigger Reflex Testing', 620, 'ST', 80, 0);
  oDataElements.Add('Fixed Canned Message', 621, 'CE', 65536, 0);
  oDataElements.Add('Patient Preparation', 622, 'TX', 200, 0);
  oDataElements.Add('Procedure Medication', 623, 'CE', 200, 0);
  oDataElements.Add('Factors that may Effect the Observation', 624, 'TX', 200, 0);
  oDataElements.Add('Test/Observation Performance Schedule', 625, 'ST', 60, 0);
  oDataElements.Add('Description of Test Methods', 626, 'TX', 65536, 0);
  oDataElements.Add('Units of Measure', 627, 'CE', 60, 0);
  oDataElements.Add('Range of Decimal Precision', 628, 'NM', 10, 0);
  oDataElements.Add('Corresponding SI Units of Measure', 629, 'CE', 60, 0);
  oDataElements.Add('SI Conversion Factor', 630, 'TX', 60, 0);
  oDataElements.Add('Reference (Normal) Range - Ordinal & Continuous Obs', 631, 'CM_RFR', 200, 0);
  oDataElements.Add('Critical Range for Ordinal & Continuous Obs', 632, 'CM_RANGE', 200, 0);
  oDataElements.Add('Absolute Range for Ordinal & Continuous Obs', 633, 'CM_ABS_RANGE', 200, 0);
  oDataElements.Add('Delta Check Criteria', 634, 'CM_DLT', 200, 0);
  oDataElements.Add('Minimum Meaningful Increments', 635, 'NM', 20, 0);
  oDataElements.Add('Preferred Coding System', 636, 'CE', 60, 0);
  oDataElements.Add('Valid Coded "Answers"', 637, 'CE', 60, 0);
  oDataElements.Add('Normal Text/Codes for Categorical Observations', 638, 'CE', 200, 0);
  oDataElements.Add('Abnormal Text/Codes for Categorical Observations', 639, 'CE', 200, 0);
  oDataElements.Add('Critical Text Codes for Categorical Observations', 640, 'CE', 200, 0);
  oDataElements.Add('Data Type', 641, 'ID', 2, 0);
  oDataElements.Add('Derived Specimen', 642, 'ID', 1, 170);
  oDataElements.Add('Container Description', 643, 'TX', 60, 0);
  oDataElements.Add('Container Volume', 644, 'NM', 20, 0);
  oDataElements.Add('Container Units', 645, 'CE', 60, 0);
  oDataElements.Add('Specimen', 646, 'CE', 60, 0);
  oDataElements.Add('Additive', 647, 'CE', 60, 0);
  oDataElements.Add('Preparation', 648, 'TX', 10240, 0);
  oDataElements.Add('Special Handling Requirements', 649, 'TX', 10240, 0);
  oDataElements.Add('Normal Collection Volume', 650, 'CQ', 20, 0);
  oDataElements.Add('Minimum Collection Volume', 651, 'CQ', 20, 0);
  oDataElements.Add('Specimen Requirements', 652, 'TX', 10240, 0);
  oDataElements.Add('Specimen Priorities', 653, 'ID', 1, 27);
  oDataElements.Add('Specimen Retention Time', 654, 'CQ', 20, 0);
  oDataElements.Add('Test/Observations Included w/an Ordered Test Battery', 655, 'CE', 200, 0);
  oDataElements.Add('Observation ID Suffixes', 656, 'ST', 200, 0);
  oDataElements.Add('Derivation Rule', 657, 'TX', 10240, 0);
  oDataElements.Add('Master File Identifier', 658, 'CE_0175', 60, 175);
  oDataElements.Add('Master File Application Identifier', 659, 'HD', 180, 176);
  oDataElements.Add('File-Level Event Code', 660, 'ID', 3, 178);
  oDataElements.Add('Entered Date/Time', 661, 'TS', 26, 0);
  oDataElements.Add('Effective Date/Time', 662, 'TS', 26, 0);
  oDataElements.Add('Response Level Code', 663, 'ID', 2, 179);
  oDataElements.Add('Record-Level Event Code', 664, 'ID', 3, 180);
  oDataElements.Add('MFN Control ID', 665, 'ST', 20, 0);
  oDataElements.Add('Primary Key Value', 667, 'CE', 60, 0);
  oDataElements.Add('Event Completion Date/Time', 668, 'TS', 26, 0);
  oDataElements.Add('Error Return Code and/or Text', 669, 'CE_0181', 60, 181);
  oDataElements.Add('STF - Primary Key Value', 671, 'CE', 60, 0);
  oDataElements.Add('Staff ID Code', 672, 'CE', 60, 0);
  oDataElements.Add('Staff Name', 673, 'XPN', 48, 0);
  oDataElements.Add('Staff Type', 674, 'ID', 2, 182);
  oDataElements.Add('Active/Inactive Flag', 675, 'ID', 1, 183);
  oDataElements.Add('Department', 676, 'CE_0184', 200, 184);
  oDataElements.Add('Service', 677, 'CE', 200, 0);
  oDataElements.Add('Phone', 678, 'TN', 40, 0);
  oDataElements.Add('Office/Home Address', 679, 'AD', 106, 0);
  oDataElements.Add('Activation Date', 680, 'CM_DIN', 26, 0);
  oDataElements.Add('Inactivation Date', 681, 'CM_DIN', 26, 0);
  oDataElements.Add('Backup Person ID', 682, 'CE', 60, 0);
  oDataElements.Add('E-mail Address', 683, 'ST', 40, 0);
  oDataElements.Add('Preferred Method of Contact', 684, 'CE_0185', 200, 185);
  oDataElements.Add('PRA - Primary Key Value', 685, 'ST', 20, 0);
  oDataElements.Add('Practioner Group', 686, 'CE', 60, 0);
  oDataElements.Add('Practioner Category', 687, 'ID', 3, 0);
  oDataElements.Add('Provider Billing', 688, 'ID', 1, 186);
  oDataElements.Add('Specialty', 689, 'CM_SPD', 100, 187);
  oDataElements.Add('Practitioner ID Numbers', 690, 'CM_PLN', 100, 0);
  oDataElements.Add('Privileges', 691, 'CM_PIP', 200, 0);
  oDataElements.Add('Character Set', 692, 'ID', 6, 211);
  oDataElements.Add('Principal Language of Message', 693, 'CE', 3, 0);
  oDataElements.Add('When Quantity/Timing Qualifier', 694, 'TQ', 60, 0);
  oDataElements.Add('R/U Quantity/Timing Qualifier', 695, 'TQ', 60, 0);
  oDataElements.Add('Query tag', 696, 'ST', 32, 0);
  oDataElements.Add('Query/ Response Format Code', 697, 'ID', 1, 106);
  oDataElements.Add('VT Query Name', 698, 'CE', 60, 0);
  oDataElements.Add('Virtual Table Name', 699, 'CE', 60, 0);
  oDataElements.Add('Selection Criteria', 700, 'QSC', 256, 0);
  oDataElements.Add('Number of Columns per Row', 701, 'NM', 3, 0);
  oDataElements.Add('Column Description', 702, 'RCD', 40, 0);
  oDataElements.Add('Column value', 703, 'varies', 0, 0);
  oDataElements.Add('Stored procedure name', 704, 'CE', 60, 0);
  oDataElements.Add('Input parameter list', 705, 'QIP', 256, 0);
  oDataElements.Add('Event identifier', 706, 'CE', 60, 0);
  oDataElements.Add('Query response status', 708, 'ID', 2, 208);
  oDataElements.Add('EQL Query Name', 709, 'CE', 60, 0);
  oDataElements.Add('EQL Query Statement', 710, 'ST', 4096, 0);
  oDataElements.Add('Estimated Length of Inpatient Stay', 711, 'NM', 3, 0);
  oDataElements.Add('Actual Length of Inpatient Stay', 712, 'NM', 3, 0);
  oDataElements.Add('Visit Description', 713, 'ST', 50, 0);
  oDataElements.Add('Referral Source Code', 714, 'XCN', 90, 0);
  oDataElements.Add('Previous Service Date', 715, 'DT', 8, 0);
  oDataElements.Add('Employment Illness Related Indicator', 716, 'ID', 1, 136);
  oDataElements.Add('Purge Status Code', 717, 'IS', 1, 213);
  oDataElements.Add('Purge Status Date', 718, 'DT', 8, 0);
  oDataElements.Add('Special Program Code', 719, 'IS', 2, 214);
  oDataElements.Add('Retention Indicator', 720, 'ID', 1, 136);
  oDataElements.Add('Expected Number of Insurance Plans', 721, 'NM', 1, 0);
  oDataElements.Add('Visit Publicity Code', 722, 'IS', 1, 215);
  oDataElements.Add('Visit Protection Indicator', 723, 'ID', 1, 136);
  oDataElements.Add('Clinic Organization Name', 724, 'XON', 90, 0);
  oDataElements.Add('Patient Status Code', 725, 'IS', 2, 216);
  oDataElements.Add('Visit Priority Code', 726, 'IS', 1, 217);
  oDataElements.Add('Previous Treatment Date', 727, 'DT', 8, 0);
  oDataElements.Add('Expected Discharge Disposition', 728, 'IS', 2, 112);
  oDataElements.Add('Signature on File Date', 729, 'DT', 8, 0);
  oDataElements.Add('First Similar Illness Date', 730, 'DT', 8, 0);
  oDataElements.Add('Patient Charge Adjustment Code', 731, 'IS', 3, 218);
  oDataElements.Add('Recurring Service Code', 732, 'IS', 2, 219);
  oDataElements.Add('Billing Media Code', 733, 'ID', 1, 136);
  oDataElements.Add('Expected Surgery Date & Time', 734, 'TS', 26, 0);
  oDataElements.Add('Military Partnership Code', 735, 'ID', 2, 136);
  oDataElements.Add('Military Non-Availabiltiy Code', 736, 'ID', 2, 136);
  oDataElements.Add('Newborn Baby Indicator', 737, 'ID', 1, 136);
  oDataElements.Add('Baby Detained Indicator', 738, 'ID', 1, 136);
  oDataElements.Add('Nationality Code', 739, 'CE_0212', 80, 212);
  oDataElements.Add('Patient Death Date and Time', 740, 'TS', 26, 0);
  oDataElements.Add('Patient Death Indicator', 741, 'ID', 1, 136);
  oDataElements.Add('Living Arrangement', 742, 'IS', 2, 220);
  oDataElements.Add('Publicity Indicator', 743, 'CE_0215', 1, 215);
  oDataElements.Add('Protection Indicator', 744, 'ID', 1, 136);
  oDataElements.Add('Student Indicator', 745, 'IS', 2, 231);
  oDataElements.Add('Mother'#146's Maiden Name', 746, 'XPN', 48, 0);
  oDataElements.Add('Contact Reason', 747, 'CE_0222', 2, 222);
  oDataElements.Add('Contact Person''s Name', 748, 'XPN', 48, 0);
  oDataElements.Add('Contact Person'#146's Telephone Number', 749, 'XTN', 40, 0);
  oDataElements.Add('Contact Person'#146's Address', 750, 'XAD', 106, 0);
  oDataElements.Add('Associated Party'#146's Identifiers', 751, 'CX', 32, 0);
  oDataElements.Add('Job Status', 752, 'IS', 2, 311);
  oDataElements.Add('Handicap', 753, 'IS', 2, 310);
  oDataElements.Add('Contact Person Social Security Number', 754, 'ST', 16, 0);
  oDataElements.Add('Living Dependency', 755, 'IS', 2, 223);
  oDataElements.Add('Patient Primary Facility', 756, 'XON', 90, 0);
  oDataElements.Add('Patient Primary Care Provider Name & ID No.', 757, 'XCN', 90, 0);
  oDataElements.Add('Living Will', 759, 'IS', 2, 315);
  oDataElements.Add('Organ Donor', 760, 'IS', 2, 316);
  oDataElements.Add('Separate Bill', 761, 'ID', 2, 136);
  oDataElements.Add('Duplicate Patient', 762, 'CX', 2, 0);
  oDataElements.Add('Segment Action Code', 763, 'ID', 3, 206);
  oDataElements.Add('Segment Unique Key', 764, 'EI', 80, 0);
  oDataElements.Add('Entered By Code', 765, 'XCN', 120, 0);
  oDataElements.Add('Diagnosis Classification', 766, 'IS', 3, 228);
  oDataElements.Add('Confidential Indicator', 767, 'ID', 1, 136);
  oDataElements.Add('Attestation Date/Time', 768, 'TS', 26, 0);
  oDataElements.Add('DRG Assigned Date/Time', 769, 'TS', 26, 0);
  oDataElements.Add('DRG Payor', 770, 'IS', 1, 229);
  oDataElements.Add('Outlier Reimbursement', 771, 'CP', 9, 0);
  oDataElements.Add('Associated Diagnosis Code', 772, 'CE', 80, 0);
  oDataElements.Add('Guarantor Billing Hold Flag', 773, 'ID', 1, 136);
  oDataElements.Add('Guarantor Credit Rating Code', 774, 'CE', 80, 0);
  oDataElements.Add('Guarantor Death Date And Time', 775, 'TS', 26, 0);
  oDataElements.Add('Guarantor Death Flag', 776, 'ID', 1, 136);
  oDataElements.Add('Guarantor Charge Adjustment Code', 777, 'CE_0218', 80, 218);
  oDataElements.Add('Guarantor Household Annual Income', 778, 'CP', 10, 0);
  oDataElements.Add('Guarantor Household Size', 779, 'NM', 3, 0);
  oDataElements.Add('Guarantor Employer ID Number', 780, 'CX', 20, 0);
  oDataElements.Add('Guarantor Marital Status Code', 781, 'IS', 1, 0);
  oDataElements.Add('Guarantor Hire Effective Date', 782, 'DT', 8, 0);
  oDataElements.Add('Employment Stop Date', 783, 'DT', 8, 0);
  oDataElements.Add('Contact Relationship Code', 784, 'IS', 2, 63);
  oDataElements.Add('Job Title', 785, 'ST', 20, 0);
  oDataElements.Add('Job Code/Class', 786, 'JCC', 20, 0);
  oDataElements.Add('Employment Start Date', 787, 'DT', 8, 0);
  oDataElements.Add('Employer Contact Person Name', 789, 'XPN', 48, 0);
  oDataElements.Add('Employer Contact Person Phone Number', 790, 'XTN', 40, 0);
  oDataElements.Add('Employer Contact Reason', 791, 'IS', 2, 222);
  oDataElements.Add('Insured'#146's Contact Person'#146's Name', 792, 'XPN', 48, 0);
  oDataElements.Add('Insured'#146's Contact Person Telephone Number', 793, 'XTN', 40, 0);
  oDataElements.Add('Insured'#146's Contact Person Reason', 794, 'IS', 2, 222);
  oDataElements.Add('Relationship To The Patient Start Date', 795, 'DT', 8, 0);
  oDataElements.Add('Relationship To The Patient Stop Date', 796, 'DT', 8, 0);
  oDataElements.Add('Insurance Co. Contact Reason', 797, 'IS', 2, 232);
  oDataElements.Add('Insurance Co. Contact Phone Number', 798, 'XTN', 40, 0);
  oDataElements.Add('Policy Scope', 799, 'IS', 2, 312);
  oDataElements.Add('Policy Source', 800, 'IS', 2, 313);
  oDataElements.Add('Patient Member Number', 801, 'CX', 60, 0);
  oDataElements.Add('Guarantor'#146's Relationship To Insured', 802, 'IS', 2, 63);
  oDataElements.Add('Insured'#146's Telephone Number - Home', 803, 'XTN', 40, 0);
  oDataElements.Add('Insured'#146's Employer Telephone Number', 804, 'XTN', 40, 0);
  oDataElements.Add('Military Handicapped Program', 805, 'CE', 2, 0);
  oDataElements.Add('Suspend Flag', 806, 'ID', 2, 136);
  oDataElements.Add('Co-pay Limit Flag', 807, 'ID', 2, 136);
  oDataElements.Add('Stoploss Limit Flag', 808, 'ID', 2, 136);
  oDataElements.Add('Insured Organization Name And ID', 809, 'XON', 130, 0);
  oDataElements.Add('Insured Employer Organization Name And ID', 810, 'XON', 130, 0);
  oDataElements.Add('Patient Relationship to Insured', 811, 'ID', 1, 0);
  oDataElements.Add('Auto Accident State', 812, 'CE', 60, 0);
  oDataElements.Add('Accident Job Related Indicator', 813, 'ID', 2, 136);
  oDataElements.Add('Accident Death Indicator', 814, 'ID', 2, 136);
  oDataElements.Add('Special Visit Count', 815, 'NM', 3, 0);
  oDataElements.Add('Action Code', 816, 'ID', 2, 287);
  oDataElements.Add('Action Date/Time', 817, 'TS', 26, 0);
  oDataElements.Add('Goal ID', 818, 'CE', 80, 0);
  oDataElements.Add('Goal Instance ID', 819, 'EI', 60, 0);
  oDataElements.Add('Episode of Care ID', 820, 'EI', 60, 0);
  oDataElements.Add('Goal List Priority', 821, 'NM', 60, 0);
  oDataElements.Add('Goal Established Date/Time', 822, 'TS', 26, 0);
  oDataElements.Add('Security/Sensitivity', 823, 'CE', 80, 0);
  oDataElements.Add('Expected Goal Achievement Date/Time', 824, 'TS', 26, 0);
  oDataElements.Add('Goal Classification', 825, 'CE', 80, 0);
  oDataElements.Add('Goal Management Discipline', 826, 'CE', 80, 0);
  oDataElements.Add('Current Goal Review Status', 827, 'CE', 80, 0);
  oDataElements.Add('Current Goal Review Date/Time', 828, 'TS', 26, 0);
  oDataElements.Add('Next Goal Review Date/Time', 829, 'TS', 26, 0);
  oDataElements.Add('Previous Goal Review Date/Time', 830, 'TS', 26, 0);
  oDataElements.Add('Goal Review Interval', 831, 'TQ', 200, 0);
  oDataElements.Add('Goal Evaluation', 832, 'CE', 80, 0);
  oDataElements.Add('Goal Evaluation Comment', 833, 'ST', 300, 0);
  oDataElements.Add('Goal Life Cycle Status', 834, 'CE', 80, 0);
  oDataElements.Add('Goal Life Cycle Status Date/Time', 835, 'TS', 26, 0);
  oDataElements.Add('Goal Target Type', 836, 'CE', 80, 0);
  oDataElements.Add('Goal Target Name', 837, 'XPN', 80, 0);
  oDataElements.Add('Problem ID', 838, 'CE', 80, 0);
  oDataElements.Add('Problem Instance ID', 839, 'EI', 60, 0);
  oDataElements.Add('Problem List Priority', 841, 'NM', 60, 0);
  oDataElements.Add('Problem Established Date/Time', 842, 'TS', 26, 0);
  oDataElements.Add('Anticipated Problem Resolution Date/Time', 843, 'TS', 26, 0);
  oDataElements.Add('Actual Problem Resolution Date/Time', 844, 'TS', 26, 0);
  oDataElements.Add('Problem Classification', 845, 'CE', 80, 0);
  oDataElements.Add('Problem Management Discipline', 846, 'CE', 80, 0);
  oDataElements.Add('Problem Persistence', 847, 'CE', 80, 0);
  oDataElements.Add('Problem Confirmation Status', 848, 'CE', 80, 0);
  oDataElements.Add('Problem Life Cycle Status', 849, 'CE', 80, 0);
  oDataElements.Add('Problem Life Cycle Status Date/Time', 850, 'TS', 26, 0);
  oDataElements.Add('Problem Date of Onset', 851, 'TS', 26, 0);
  oDataElements.Add('Problem Onset Text', 852, 'ST', 80, 0);
  oDataElements.Add('Problem Ranking', 853, 'CE', 80, 0);
  oDataElements.Add('Certainty of Problem', 854, 'CE', 60, 0);
  oDataElements.Add('Probability of Problem (0-1)', 855, 'NM', 5, 0);
  oDataElements.Add('Individual Awareness of Problem', 856, 'CE', 80, 0);
  oDataElements.Add('Problem Prognosis', 857, 'CE', 80, 0);
  oDataElements.Add('Individual Awareness of Prognosis', 858, 'CE', 80, 0);
  oDataElements.Add('Family/Significant Other Awareness of Problem/Prognosis', 859, 'ST', 200, 0);
  oDataElements.Add('Placer Appointment ID', 860, 'EI', 22, 0);
  oDataElements.Add('Filler Appointment ID', 861, 'EI', 22, 0);
  oDataElements.Add('Occurrence Number', 862, 'NM', 5, 0);
  oDataElements.Add('Placer Group Number', 863, 'EI', 37, 0);
  oDataElements.Add('Schedule ID', 864, 'CE', 200, 0);
  oDataElements.Add('Request Event Reason', 865, 'CE', 200, 0);
  oDataElements.Add('Appointment Reason', 866, 'CE_0276', 200, 276);
  oDataElements.Add('Appointment Type', 867, 'CE_0277', 200, 277);
  oDataElements.Add('Appointment Duration', 868, 'NM', 20, 0);
  oDataElements.Add('Appointment Duration Units', 869, 'CE', 200, 0);
  oDataElements.Add('Requested Start Date/Time Range', 870, 'DR', 53, 0);
  oDataElements.Add('Priority', 871, 'ST', 5, 0);
  oDataElements.Add('Repeating Interval', 872, 'RI', 100, 0);
  oDataElements.Add('Repeating Interval Duration', 873, 'ST', 5, 0);
  oDataElements.Add('Placer Contact Person', 874, 'XCN', 48, 0);
  oDataElements.Add('Placer Contact Phone Number', 875, 'XTN', 40, 0);
  oDataElements.Add('Placer Contact Address', 876, 'XAD', 106, 0);
  oDataElements.Add('Placer Contact Location', 877, 'PL', 80, 0);
  oDataElements.Add('Entered By Person', 878, 'XCN', 48, 0);
  oDataElements.Add('Entered By Phone Number', 879, 'XTN', 40, 0);
  oDataElements.Add('Entered By Location', 880, 'PL', 80, 0);
  oDataElements.Add('Parent Placer Appointment ID', 881, 'EI', 75, 0);
  oDataElements.Add('Parent Filler Appointment ID', 882, 'EI', 75, 0);
  oDataElements.Add('Event Reason', 883, 'CE', 200, 0);
  oDataElements.Add('Appointment Timing Quantity', 884, 'TQ', 200, 0);
  oDataElements.Add('Filler Contact Person', 885, 'XCN', 38, 0);
  oDataElements.Add('Filler Contact Phone Number', 886, 'XTN', 40, 0);
  oDataElements.Add('Filler Contact Address', 887, 'XAD', 106, 0);
  oDataElements.Add('Filler Contact Location', 888, 'PL', 80, 0);
  oDataElements.Add('Filler Status Code', 889, 'CE_0278', 200, 278);
  oDataElements.Add('Set ID - AIS', 890, 'SI', 4, 0);
  oDataElements.Add('Start Date/Time Offset', 891, 'NM', 20, 0);
  oDataElements.Add('Start Date/Time Offset Units', 892, 'CE', 200, 0);
  oDataElements.Add('Duration', 893, 'NM', 20, 0);
  oDataElements.Add('Duration Units', 894, 'CE', 200, 0);
  oDataElements.Add('Allow Substitution Code', 895, 'IS', 10, 279);
  oDataElements.Add('Set ID - AIG', 896, 'SI', 4, 0);
  oDataElements.Add('Resource ID', 897, 'CE', 80, 0);
  oDataElements.Add('Resource Type', 898, 'CE', 15, 0);
  oDataElements.Add('Resource Group', 899, 'CE', 200, 0);
  oDataElements.Add('Resource Quantity', 900, 'NM', 5, 0);
  oDataElements.Add('Resource Quantity Units', 901, 'CE', 200, 0);
  oDataElements.Add('Set ID - AIL', 902, 'SI', 4, 0);
  oDataElements.Add('Location Resource ID', 903, 'PL', 80, 0);
  oDataElements.Add('Location Type', 904, 'CE', 15, 0);
  oDataElements.Add('Location Group', 905, 'CE', 200, 0);
  oDataElements.Add('Set ID - AIP', 906, 'SI', 4, 0);
  oDataElements.Add('Resource Role', 907, 'CE', 60, 0);
  oDataElements.Add('Time Selection Criteria', 908, 'SCV', 80, 0);
  oDataElements.Add('Resource Selection Criteria', 909, 'SCV', 80, 0);
  oDataElements.Add('Location Selection Criteria', 910, 'SCV', 80, 0);
  oDataElements.Add('Slot Spacing Criteria', 911, 'NM', 5, 0);
  oDataElements.Add('Filler Override Criteria', 912, 'SCV', 80, 0);
  oDataElements.Add('Personnel Resource ID', 913, 'XCN', 80, 0);
  oDataElements.Add('Set ID- TXA', 914, 'SI', 4, 0);
  oDataElements.Add('Document Type', 915, 'IS', 30, 270);
  oDataElements.Add('Document Content Presentation', 916, 'ID', 2, 191);
  oDataElements.Add('Activity Date/Time', 917, 'TS', 26, 0);
  oDataElements.Add('Primary Activity Provider Code/Name', 918, 'XCN', 60, 0);
  oDataElements.Add('Origination Date/Time', 919, 'TS', 26, 0);
  oDataElements.Add('Transcription Date/Time', 920, 'TS', 26, 0);
  oDataElements.Add('Edit Date/Time', 921, 'TS', 26, 0);
  oDataElements.Add('Originator Code/Name', 922, 'XCN', 60, 0);
  oDataElements.Add('Assigned Document Authenticator', 923, 'XCN', 60, 0);
  oDataElements.Add('Transcriptionist Code/Name', 924, 'XCN', 48, 0);
  oDataElements.Add('Unique Document Number', 925, 'EI', 30, 0);
  oDataElements.Add('Parent Document Number', 926, 'EI', 30, 0);
  oDataElements.Add('Unique Document File Name', 927, 'ST', 30, 0);
  oDataElements.Add('Document Completion Status', 928, 'ID', 2, 271);
  oDataElements.Add('Document Confidentiality Status', 929, 'ID', 2, 272);
  oDataElements.Add('Document Availability Status', 930, 'ID', 2, 273);
  oDataElements.Add('Document Storage Status', 932, 'ID', 2, 275);
  oDataElements.Add('Document Change Reason', 933, 'ST', 30, 0);
  oDataElements.Add('Authentication Person, Time Stamp', 934, 'PPN', 60, 0);
  oDataElements.Add('Distributed Copies (Code and Name of Recipients)', 935, 'XCN', 60, 0);
  oDataElements.Add('Observation Method', 936, 'CE', 80, 0);
  oDataElements.Add('Kind of Quantity Observed', 937, 'CE_0254', 60, 0);
  oDataElements.Add('Point versus Interval', 938, 'CE', 60, 0);
  oDataElements.Add('Challenge information', 939, 'TX', 200, 0);
  oDataElements.Add('Relationship modifier', 940, 'CE_0258', 200, 0);
  oDataElements.Add('Target anatomic site of test', 941, 'CE', 200, 0);
  oDataElements.Add('Modality of imaging measurement', 942, 'CE_0259', 200, 0);
  oDataElements.Add('Primary Key Value', 943, 'PL', 20, 0);
  oDataElements.Add('Location Description', 944, 'ST', 48, 0);
  oDataElements.Add('Location Type', 945, 'IS', 2, 260);
  oDataElements.Add('Organization Name', 947, 'XON', 90, 0);
  oDataElements.Add('Location Address', 948, 'XAD', 106, 0);
  oDataElements.Add('Location Phone', 949, 'XTN', 40, 0);
  oDataElements.Add('License Number', 951, 'CE', 60, 0);
  oDataElements.Add('Location Equipment', 953, 'ID', 3, 261);
  oDataElements.Add('LDP Primary Key Value', 963, 'PL', 20, 0);
  oDataElements.Add('Location Department', 964, 'IS', 10, 264);
  oDataElements.Add('Location Service', 965, 'IS', 3, 69);
  oDataElements.Add('Speciality Type', 966, 'CE_0265', 60, 265);
  oDataElements.Add('Valid Patient Classes', 967, 'ID', 1, 4);
  oDataElements.Add('Activation Date', 969, 'TS', 19, 0);
  oDataElements.Add('Inactivation Date - LDP', 970, 'TS', 19, 0);
  oDataElements.Add('Inactivated Reason', 971, 'ST', 80, 0);
  oDataElements.Add('Visiting Hours', 976, 'VH', 80, 267);
  oDataElements.Add('Contact Phone', 978, 'XTN', 40, 0);
  oDataElements.Add('Primary Key Value', 979, 'PL', 200, 0);
  oDataElements.Add('Accommodation Type', 980, 'CE', 60, 0);
  oDataElements.Add('Charge Code', 981, 'CE_0132', 60, 0);
  oDataElements.Add('Primary Key Value', 982, 'CE_0132', 200, 132);
  oDataElements.Add('Charge Code Alias', 983, 'CE', 200, 0);
  oDataElements.Add('Charge Description Short', 984, 'ST', 20, 0);
  oDataElements.Add('Charge Description Long', 985, 'ST', 250, 0);
  oDataElements.Add('Description Override Indicator', 986, 'ID', 1, 268);
  oDataElements.Add('Exploding Charges', 987, 'CE', 60, 0);
  oDataElements.Add('Procedure Code', 988, 'CE', 200, 0);
  oDataElements.Add('Cost', 989, 'MO', 12, 0);
  oDataElements.Add('Inventory Number', 990, 'CE', 60, 0);
  oDataElements.Add('Resource Load', 991, 'NM', 12, 0);
  oDataElements.Add('Contract Number', 992, 'CK', 200, 0);
  oDataElements.Add('Contract Organization', 993, 'XON', 200, 0);
  oDataElements.Add('Room Fee Indicator', 994, 'ID', 1, 136);
  oDataElements.Add('Department', 996, 'CE', 30, 0);
  oDataElements.Add('Price', 998, 'CP', 12, 0);
  oDataElements.Add('Formula', 999, 'ST', 200, 0);
  oDataElements.Add('Minimum Quantity', 1000, 'NM', 4, 0);
  oDataElements.Add('Maximum Quantity', 1001, 'NM', 4, 0);
  oDataElements.Add('Minimum Price', 1002, 'MO', 12, 0);
  oDataElements.Add('Maximum Price', 1003, 'MO', 12, 0);
  oDataElements.Add('Effective Start Date', 1004, 'TS', 26, 0);
  oDataElements.Add('Effective End Date', 1005, 'TS', 26, 0);
  oDataElements.Add('Price Override Flag', 1006, 'ID', 1, 268);
  oDataElements.Add('Billing Category', 1007, 'CE_0293', 60, 293);
  oDataElements.Add('Chargeable Flag', 1008, 'ID', 1, 136);
  oDataElements.Add('Charge On Indicator', 1009, 'ID', 1, 269);
  oDataElements.Add('CM0 - Set ID', 1010, 'SI', 4, 0);
  oDataElements.Add('Sponsor Study ID', 1011, 'EI', 60, 0);
  oDataElements.Add('Alternate Study ID', 1012, 'CE', 60, 0);
  oDataElements.Add('Title of Study', 1013, 'ST', 300, 0);
  oDataElements.Add('Chairman of Study', 1014, 'XCN', 60, 0);
  oDataElements.Add('Last IRB Approval Date', 1015, 'DT', 8, 0);
  oDataElements.Add('Total Accrual to Date', 1016, 'NM', 8, 0);
  oDataElements.Add('Last Accrual Date', 1017, 'DT', 8, 0);
  oDataElements.Add('Contact for Study', 1018, 'XCN', 60, 0);
  oDataElements.Add('Contact''s Tel. Number', 1019, 'XTN', 40, 0);
  oDataElements.Add('Contact''s Address', 1020, 'XAD', 100, 0);
  oDataElements.Add('CM1 - Set ID', 1021, 'SI', 4, 0);
  oDataElements.Add('Description of Study Phase', 1023, 'ST', 300, 0);
  oDataElements.Add('CM2 - Set ID', 1024, 'SI', 4, 0);
  oDataElements.Add('Scheduled Time Point', 1025, 'CE', 60, 0);
  oDataElements.Add('Description of Time Point', 1026, 'ST', 300, 0);
  oDataElements.Add('Events Scheduled This Time Point', 1027, 'CE', 60, 0);
  oDataElements.Add('Number Of Sample Containers', 1028, 'NM', 4, 0);
  oDataElements.Add('Transport Logistics Of Collected Sample', 1029, 'CE', 60, 0);
  oDataElements.Add('Collector'#146's Comment', 1030, 'CE', 200, 0);
  oDataElements.Add('Transport Arrangement Responsibility', 1031, 'CE', 60, 0);
  oDataElements.Add('Transport Arranged', 1032, 'ID', 30, 224);
  oDataElements.Add('Escort Required', 1033, 'ID', 1, 225);
  oDataElements.Add('Planned Patient Transport Comment', 1034, 'CE', 200, 0);
  oDataElements.Add('Alternate Study ID', 1036, 'EI', 60, 0);
End;

procedure LoadDataElements3(oDataElements : THL7V2ModelDataElements);
Begin
  oDataElements.Add('Institution Registering the Patient', 1037, 'CE', 60, 0);
  oDataElements.Add('Sponsor Patient ID', 1038, 'CX', 30, 0);
  oDataElements.Add('Alternate Patient ID', 1039, 'CX', 30, 0);
  oDataElements.Add('Date/Time of Patient Study Registration', 1040, 'TS', 26, 0);
  oDataElements.Add('Person Performing Study Registration', 1041, 'XCN', 60, 0);
  oDataElements.Add('Study Authorizing Provider', 1042, 'XCN', 60, 0);
  oDataElements.Add('Date/time Patient Study Consent Signed', 1043, 'TS', 26, 0);
  oDataElements.Add('Patient Study Eligibility Status', 1044, 'CE', 60, 0);
  oDataElements.Add('Study Randomization Date/time', 1045, 'TS', 26, 0);
  oDataElements.Add('Study Randomized Arm', 1046, 'CE', 200, 0);
  oDataElements.Add('Stratum for Study Randomization', 1047, 'CE', 200, 0);
  oDataElements.Add('Patient Evaluability Status', 1048, 'CE', 60, 0);
  oDataElements.Add('Date/time Ended Study', 1049, 'TS', 26, 0);
  oDataElements.Add('Reason Ended Study', 1050, 'CE', 60, 0);
  oDataElements.Add('Study Phase Identifier', 1051, 'CE', 60, 0);
  oDataElements.Add('Date/time Study Phase Began', 1052, 'TS', 26, 0);
  oDataElements.Add('Date/time Study Phase Ended', 1053, 'TS', 26, 0);
  oDataElements.Add('Study Phase Evaluability', 1054, 'CE', 60, 0);
  oDataElements.Add('Study Scheduled Time Point', 1055, 'CE', 60, 0);
  oDataElements.Add('Study Scheduled Patient Time Point', 1056, 'TS', 26, 0);
  oDataElements.Add('Study Quality Control Codes', 1057, 'CE', 60, 0);
  oDataElements.Add('Sender Organization Name', 1059, 'XON', 80, 0);
  oDataElements.Add('Sender Individual Name', 1060, 'XCN', 60, 0);
  oDataElements.Add('Sender Address', 1062, 'XAD', 200, 0);
  oDataElements.Add('Sender Telephone', 1063, 'XTN', 44, 0);
  oDataElements.Add('Sender Event Identifier', 1064, 'EI', 30, 0);
  oDataElements.Add('Sender Sequence Number', 1065, 'NM', 2, 0);
  oDataElements.Add('Sender Event Description', 1066, 'FT', 600, 0);
  oDataElements.Add('Sender Comment', 1067, 'FT', 600, 0);
  oDataElements.Add('Sender Aware Date/Time', 1068, 'TS', 26, 0);
  oDataElements.Add('Event Report Date', 1069, 'TS', 26, 0);
  oDataElements.Add('Event Report Timing/Type', 1070, 'ID', 3, 234);
  oDataElements.Add('Event Report Source', 1071, 'ID', 1, 235);
  oDataElements.Add('Event Reported To', 1072, 'ID', 1, 236);
  oDataElements.Add('Event Identifiers Used', 1073, 'CE', 60, 0);
  oDataElements.Add('Event Symptom/Diagnosis Code', 1074, 'CE', 60, 0);
  oDataElements.Add('Event Onset Date/Time', 1075, 'TS', 26, 0);
  oDataElements.Add('Event Exacerbation Date/Time', 1076, 'TS', 26, 0);
  oDataElements.Add('Event Improved Date/Time', 1077, 'TS', 26, 0);
  oDataElements.Add('Event Ended Data/Time', 1078, 'TS', 26, 0);
  oDataElements.Add('Event Location Occurred Address', 1079, 'XAD', 106, 0);
  oDataElements.Add('Event Qualification', 1080, 'ID', 1, 237);
  oDataElements.Add('Event Serious', 1081, 'ID', 1, 238);
  oDataElements.Add('Event Expected', 1082, 'ID', 1, 239);
  oDataElements.Add('Event Outcome', 1083, 'ID', 1, 240);
  oDataElements.Add('Patient Outcome', 1084, 'ID', 1, 241);
  oDataElements.Add('Event Description From Others', 1085, 'FT', 600, 0);
  oDataElements.Add('Event From Original Reporter', 1086, 'FT', 600, 0);
  oDataElements.Add('Event Description From Patient', 1087, 'FT', 600, 0);
  oDataElements.Add('Event Description From Practitioner', 1088, 'FT', 600, 0);
  oDataElements.Add('Event Description From Autopsy', 1089, 'FT', 600, 0);
  oDataElements.Add('Cause Of Death', 1090, 'CE', 30, 0);
  oDataElements.Add('Primary Observer Name', 1091, 'XPN', 46, 0);
  oDataElements.Add('Primary Observer Address', 1092, 'XAD', 106, 0);
  oDataElements.Add('Primary Observer Telephone', 1093, 'XTN', 40, 0);
  oDataElements.Add('Primary Observer'#146's Qualification', 1094, 'ID', 1, 242);
  oDataElements.Add('Confirmation Provided By', 1095, 'ID', 1, 242);
  oDataElements.Add('Primary Observer Aware Date/Time', 1096, 'TS', 26, 0);
  oDataElements.Add('Primary Observer'#146's Identity May Be Divulged', 1097, 'ID', 1, 243);
  oDataElements.Add('Implicated Product', 1098, 'CE', 60, 0);
  oDataElements.Add('Generic Product', 1099, 'IS', 1, 249);
  oDataElements.Add('Product Class', 1100, 'CE', 30, 0);
  oDataElements.Add('Total Duration Of Therapy', 1101, 'CQ', 8, 0);
  oDataElements.Add('Product Manufacture Date', 1102, 'TS', 26, 0);
  oDataElements.Add('Product Expiration Date', 1103, 'TS', 26, 0);
  oDataElements.Add('Product Implantation Date', 1104, 'TS', 26, 0);
  oDataElements.Add('Product Explantation Date', 1105, 'TS', 26, 0);
  oDataElements.Add('Single Use Device', 1106, 'IS', 8, 244);
  oDataElements.Add('Indication For Product Use', 1107, 'CE', 60, 0);
  oDataElements.Add('Product Problem', 1108, 'IS', 8, 245);
  oDataElements.Add('Product Serial/Lot Number', 1109, 'ST', 30, 0);
  oDataElements.Add('Product Available For Inspection', 1110, 'IS', 1, 246);
  oDataElements.Add('Product Evaluation Performed', 1111, 'CE', 8, 0);
  oDataElements.Add('Product Evaluation Status', 1112, 'CE_0247', 60, 247);
  oDataElements.Add('Product Evaluation Results', 1113, 'CE', 60, 0);
  oDataElements.Add('Evaluated Product Source', 1114, 'ID', 8, 248);
  oDataElements.Add('Date Product Returned To Manufacturer', 1115, 'TS', 26, 0);
  oDataElements.Add('Device Operator Qualifications', 1116, 'ID', 1, 242);
  oDataElements.Add('Relatedness Assessment', 1117, 'ID', 8, 250);
  oDataElements.Add('Action Taken In Response To The Event', 1118, 'ID', 2, 251);
  oDataElements.Add('Event Causality Observations', 1119, 'ID', 2, 232);
  oDataElements.Add('Indirect Exposure Mechanism', 1120, 'ID', 2, 253);
  oDataElements.Add('Requested Give Strength', 1121, 'NM', 20, 0);
  oDataElements.Add('Requested Give Strength Units', 1122, 'CE', 60, 0);
  oDataElements.Add('Indication', 1123, 'CE', 200, 0);
  oDataElements.Add('Component Strength', 1124, 'NM', 20, 0);
  oDataElements.Add('Component Strength Units', 1125, 'CE', 60, 0);
  oDataElements.Add('Give Strength', 1126, 'NM', 20, 0);
  oDataElements.Add('Give Strength Units', 1127, 'CE', 60, 0);
  oDataElements.Add('Give Indication', 1128, 'CE', 200, 0);
  oDataElements.Add('Substance Lot Number', 1129, 'ST', 20, 0);
  oDataElements.Add('Substance Expiration Date', 1130, 'TS', 26, 0);
  oDataElements.Add('Substance Manufacturer Name', 1131, 'CE', 60, 227);
  oDataElements.Add('Actual Strength', 1132, 'NM', 20, 0);
  oDataElements.Add('Actual Strength Unit', 1133, 'CE', 60, 0);
  oDataElements.Add('Administered Strength', 1134, 'NM', 20, 0);
  oDataElements.Add('Administered Strength Units', 1135, 'CE', 60, 0);
  oDataElements.Add('Substance Refusal Reason', 1136, 'CE', 60, 0);
  oDataElements.Add('Referral Status', 1137, 'CE_0283', 200, 283);
  oDataElements.Add('Referral Priority', 1138, 'CE_0280', 200, 280);
  oDataElements.Add('Referral Type', 1139, 'CE_0281', 200, 281);
  oDataElements.Add('Referral Disposition', 1140, 'CE_0282', 200, 282);
  oDataElements.Add('Referral Category', 1141, 'CE_0284', 200, 284);
  oDataElements.Add('Originating Referral Identifier', 1142, 'EI', 30, 0);
  oDataElements.Add('Effective Date', 1143, 'TS', 26, 0);
  oDataElements.Add('Expiration Date', 1144, 'TS', 26, 0);
  oDataElements.Add('Process Date', 1145, 'TS', 26, 0);
  oDataElements.Add('Authorizing Payor, Plan Code', 1146, 'CE_0072', 200, 72);
  oDataElements.Add('Authorizing Payor, Company ID', 1147, 'CE_0285', 200, 285);
  oDataElements.Add('Authorizing Payor, Company Name', 1148, 'ST', 45, 0);
  oDataElements.Add('Authorization Effective Date', 1149, 'TS', 26, 0);
  oDataElements.Add('Authorization Expiration Date', 1150, 'TS', 26, 0);
  oDataElements.Add('Authorization Identifier', 1151, 'EI', 30, 0);
  oDataElements.Add('Reimbursement Limit', 1152, 'CP', 25, 0);
  oDataElements.Add('Requested Number of Treatments', 1153, 'NM', 2, 0);
  oDataElements.Add('Authorized Number of Treatments', 1154, 'NM', 2, 0);
  oDataElements.Add('Role', 1155, 'CE_0131', 200, 286);
  oDataElements.Add('Provider Name', 1156, 'XPN', 106, 0);
  oDataElements.Add('Provider Address', 1157, 'XAD', 60, 0);
  oDataElements.Add('Provider Location', 1158, 'PL', 60, 0);
  oDataElements.Add('Provider Communication Information', 1159, 'XTN', 20, 0);
  oDataElements.Add('Preferred Method of Contact', 1161, 'CE_0185', 200, 185);
  oDataElements.Add('Provider Identifiers', 1162, 'CM_PI', 100, 0);
  oDataElements.Add('Effective Start Date of Role', 1163, 'TS', 26, 0);
  oDataElements.Add('Effective End Date of Role', 1164, 'TS', 26, 0);
  oDataElements.Add('Contact Name', 1165, 'XPN', 106, 0);
  oDataElements.Add('Contact Location', 1167, 'PL', 60, 0);
  oDataElements.Add('Contact Communication Information', 1168, 'XTN', 20, 0);
  oDataElements.Add('Preferred Method of Contact', 1170, 'CE_0185', 200, 185);
  oDataElements.Add('Contact Identifiers', 1171, 'CM_PI', 100, 0);
  oDataElements.Add('System Date/Time', 1172, 'TS', 26, 0);
  oDataElements.Add('Statistics Available', 1173, 'ID', 1, 125);
  oDataElements.Add('Source Identifier', 1174, 'ST', 30, 0);
  oDataElements.Add('Source Type', 1175, 'ID', 3, 0);
  oDataElements.Add('Statistics Start', 1176, 'TS', 26, 0);
  oDataElements.Add('Statistics End', 1177, 'TS', 26, 0);
  oDataElements.Add('Receive Character Count', 1178, 'NM', 10, 0);
  oDataElements.Add('Send Character Count', 1179, 'NM', 10, 0);
  oDataElements.Add('Messages Received', 1180, 'NM', 10, 0);
  oDataElements.Add('Messages Sent', 1181, 'NM', 10, 0);
  oDataElements.Add('Checksum Errors Received', 1182, 'NM', 10, 0);
  oDataElements.Add('Length Errors Received', 1183, 'NM', 10, 0);
  oDataElements.Add('Other Errors Received', 1184, 'NM', 10, 0);
  oDataElements.Add('Connect Timeouts', 1185, 'NM', 10, 0);
  oDataElements.Add('Receive Timeouts', 1186, 'NM', 10, 0);
  oDataElements.Add('Network Errors', 1187, 'NM', 10, 0);
  oDataElements.Add('Network Change Type', 1188, 'ID', 4, 0);
  oDataElements.Add('Current CPU', 1189, 'ST', 30, 0);
  oDataElements.Add('Current Fileserver', 1190, 'ST', 30, 0);
  oDataElements.Add('Current Application', 1191, 'ST', 30, 0);
  oDataElements.Add('Current Facility', 1192, 'ST', 30, 0);
  oDataElements.Add('New CPU', 1193, 'ST', 30, 206);
  oDataElements.Add('New Fileserver', 1194, 'ST', 30, 0);
  oDataElements.Add('New Application', 1195, 'ST', 30, 0);
  oDataElements.Add('New Facility', 1196, 'ST', 30, 0);
  oDataElements.Add('Role', 1197, 'CE', 0, 0);
  oDataElements.Add('Role Person', 1198, 'XCN', 80, 0);
  oDataElements.Add('Role Begin Date/Time', 1199, 'TS', 26, 0);
  oDataElements.Add('Role End Date/Time', 1200, 'TS', 26, 0);
  oDataElements.Add('Role Duration', 1201, 'CE', 80, 0);
  oDataElements.Add('Start Date/Time', 1202, 'TS', 26, 0);
  oDataElements.Add('Set ID - RGS', 1203, 'SI', 4, 0);
  oDataElements.Add('Resource Group ID', 1204, 'CE', 200, 0);
  oDataElements.Add('Role Action (Assumption) Reason', 1205, 'CE', 80, 0);
  oDataElements.Add('Role Instance ID', 1206, 'EI', 60, 0);
  oDataElements.Add('Pathway ID', 1207, 'CE', 80, 0);
  oDataElements.Add('Pathway Instance ID', 1208, 'EI', 60, 0);
  oDataElements.Add('Pathway Established Date/Time', 1209, 'TS', 26, 0);
  oDataElements.Add('Pathway Lifecycle Status', 1210, 'CE', 80, 0);
  oDataElements.Add('Change Pathway Lifecycle Status Date/Time', 1211, 'TS', 26, 0);
  oDataElements.Add('Variance Instance ID', 1212, 'EI', 60, 0);
  oDataElements.Add('Documented Date/Time', 1213, 'TS', 26, 0);
  oDataElements.Add('Stated Variance Date/Time', 1214, 'TS', 26, 0);
  oDataElements.Add('Variance Originator', 1215, 'XCN', 860, 0);
  oDataElements.Add('Variance Classification', 1216, 'CE', 60, 0);
  oDataElements.Add('Variance Description', 1217, 'ST', 512, 0);
  oDataElements.Add('Requested Give Rate Amount', 1218, 'ST', 6, 0);
  oDataElements.Add('Requested Give Rate Units', 1219, 'CE', 60, 0);
  oDataElements.Add('Dispense Package Size', 1220, 'NM', 20, 0);
  oDataElements.Add('Dispense Package Size Unit', 1221, 'CE', 60, 0);
  oDataElements.Add('Dispense Package Method', 1222, 'ID', 2, 321);
  oDataElements.Add('Completion Status', 1223, 'ID', 2, 322);
  oDataElements.Add('Action Code-RXA', 1224, 'ID', 2, 323);
  oDataElements.Add('System Entry Date/Time', 1225, 'TS', 26, 0);
  oDataElements.Add('Visit Indicator', 1226, 'IS', 1, 326);
  oDataElements.Add('Location Relationship ID', 1227, 'CE_0325', 80, 325);
  oDataElements.Add('Referral Reason', 1228, 'CE_0336', 200, 336);
  oDataElements.Add('Copy Auto Ins', 1229, 'ID', 1, 136);
  oDataElements.Add('Insured''s ID Number', 1230, 'CX', 12, 0);
  oDataElements.Add('Guarantor Financial Class', 1231, 'FC', 50, 64);
  oDataElements.Add('Auto Ins. Expires', 1232, 'DT', 8, 0);
  oDataElements.Add('Report Type', 1233, 'ST', 60, 0);
  oDataElements.Add('Report Form Identifier', 1234, 'ST', 60, 0);
  oDataElements.Add('Report Date', 1235, 'TS', 26, 0);
  oDataElements.Add('Report Interval Start Date', 1236, 'TS', 26, 0);
  oDataElements.Add('Report Interval End Date', 1237, 'TS', 26, 0);
  oDataElements.Add('Quantity Manufactured', 1238, 'CQ', 12, 0);
  oDataElements.Add('Quantity Distributed', 1239, 'CQ', 12, 0);
  oDataElements.Add('Quantity Distributed Method', 1240, 'ID', 1, 329);
  oDataElements.Add('Quantity Distributed Comment', 1241, 'FT', 600, 0);
  oDataElements.Add('Quantity in Use', 1242, 'CQ', 12, 0);
  oDataElements.Add('Quantity in Use Method', 1243, 'ID', 1, 329);
  oDataElements.Add('Quantity in Use Comment', 1244, 'FT', 600, 0);
  oDataElements.Add('Number of Product Experience Reports Filed by Facility', 1245, 'NM', 2, 0);
  oDataElements.Add('Number of Product Experience Reports Filed by Distributor', 1246, 'NM', 2, 0);
  oDataElements.Add('Manufacturer/Distributor', 1247, 'XON', 80, 0);
  oDataElements.Add('Country', 1248, 'CE', 60, 0);
  oDataElements.Add('Brand Name', 1249, 'ST', 60, 0);
  oDataElements.Add('Device Family Name', 1250, 'ST', 60, 0);
  oDataElements.Add('Generic Name', 1251, 'CE', 60, 0);
  oDataElements.Add('Model Identifier', 1252, 'ST', 60, 0);
  oDataElements.Add('Catalogue Identifier', 1253, 'ST', 60, 0);
  oDataElements.Add('Other Identifier', 1254, 'ST', 60, 0);
  oDataElements.Add('Product Code', 1255, 'CE', 60, 0);
  oDataElements.Add('Marketing Basis', 1256, 'ID', 4, 330);
  oDataElements.Add('Marketing Approval Identifier', 1257, 'ST', 60, 0);
  oDataElements.Add('Labeled Shelf Life', 1258, 'CQ', 12, 0);
  oDataElements.Add('Expected Shelf Life', 1259, 'CQ', 12, 0);
  oDataElements.Add('Date First Marked', 1260, 'TS', 26, 0);
  oDataElements.Add('Date Last Marked', 1261, 'TS', 26, 0);
  oDataElements.Add('Facility ID', 1262, 'EI', 60, 0);
  oDataElements.Add('Facility Type', 1263, 'ID', 1, 331);
  oDataElements.Add('Facility Address', 1264, 'XAD', 200, 0);
  oDataElements.Add('Facility Telecommunication', 1265, 'XTN', 44, 0);
  oDataElements.Add('Contact Person', 1266, 'XCN', 60, 0);
  oDataElements.Add('Contact Title', 1267, 'ST', 60, 0);
  oDataElements.Add('Contact Address', 1268, 'XAD', 60, 0);
  oDataElements.Add('Contact Telecommunication', 1269, 'XTN', 44, 0);
  oDataElements.Add('Signature Authority', 1270, 'XCN', 60, 0);
  oDataElements.Add('Signature Authority Title', 1271, 'ST', 60, 0);
  oDataElements.Add('Signature Authority Address', 1272, 'XAD', 200, 0);
  oDataElements.Add('Signature Authority Telecommunication', 1273, 'XTN', 44, 0);
  oDataElements.Add('Other Healthcare Provider', 1274, 'XCN', 60, 10);
  oDataElements.Add('Additional Insured on Auto', 1275, 'ID', 1, 136);
  oDataElements.Add('Employment Status', 1276, 'IS', 2, 66);
  oDataElements.Add('Coverage Type', 1277, 'IS', 3, 309);
  oDataElements.Add('Event occured', 1278, 'TS', 26, 0);
  oDataElements.Add('Prior Visit Number', 1279, 'CX', 0, 0);
  oDataElements.Add('Prior Alternate Visit ID', 1280, 'CX', 0, 0);
  oDataElements.Add('Prior Patient Name', 1281, 'XPN', 0, 0);
  oDataElements.Add('Set ID - DB1', 1283, 'SI', 4, 0);
  oDataElements.Add('Disabled person code', 1284, 'IS', 2, 33);
  oDataElements.Add('Disabled person identifier', 1285, 'CX', 32, 0);
  oDataElements.Add('Disabled Indicator', 1286, 'ID', 1, 136);
  oDataElements.Add('Disability start date', 1287, 'DT', 8, 0);
  oDataElements.Add('Disability end date', 1288, 'DT', 8, 0);
  oDataElements.Add('Disability return to work date', 1289, 'DT', 8, 0);
  oDataElements.Add('Disability unable to work date', 1290, 'DT', 8, 0);
  oDataElements.Add('Guarantor Race', 1291, 'IS', 1, 5);
  oDataElements.Add('Patient Location Relationship Value', 1292, 'PL', 80, 0);
  oDataElements.Add('Location Characteristic Value', 1294, 'CE', 80, 0);
  oDataElements.Add('Location Characteristic ID', 1295, 'CE_0324', 80, 324);
  oDataElements.Add('Date Entered Practice', 1296, 'DT', 8, 129);
  oDataElements.Add('Date Next DMV Review', 1297, 'DT', 8, 0);
  oDataElements.Add('Date Last DMV Review', 1298, 'DT', 8, 0);
  oDataElements.Add('Guarantor Employer''s Organization Name', 1299, 'XON', 130, 0);
  oDataElements.Add('External Referral Identifier', 1300, 'EI', 30, 0);
  oDataElements.Add('Organizational Location Relationship Value', 1301, 'XON', 0, 0);
  oDataElements.Add('Dispense-To Location', 1303, 'CM_LA1', 200, 0);
  oDataElements.Add('new number (within next version)', 99998, 'TX', 0, 0);
  oDataElements.Add('new (within next version)', 99999, 'TX', 0, 0);
End;

procedure Definitions23LoadDataElements(oDataElements : THL7V2ModelDataElements);
Begin
  LoadDataElements1(oDataElements);
  LoadDataElements2(oDataElements);
  LoadDataElements3(oDataElements);
End;

procedure Definitions23LoadSegments(oSegments : THL7V2ModelSegments);
Var
  oSegment : THL7V2ModelSegment;
Begin
  oSegments.Add('<', 'begin choice');
  oSegments.Add('>', 'end choice');
  oSegments.Add('?', 'any order segment');
  oSegment := oSegments.Add('ACC', 'Accident');
    oSegment.Fields.Add(527, False, 0, False, 1);
    oSegment.Fields.Add(528, False, 0, False, 2);
    oSegment.Fields.Add(529, False, 0, False, 3);
    oSegment.Fields.Add(812, False, 0, False, 4);
    oSegment.Fields.Add(813, False, 0, False, 5);
    oSegment.Fields.Add(814, False, 0, False, 6);
  oSegment := oSegments.Add('ADD', 'Addendum segment');
    oSegment.Fields.Add(66, False, 0, False, 1);
  oSegment := oSegments.Add('AIG', 'Appointment Information - General Resource');
    oSegment.Fields.Add(896, False, 0, True, 1);
    oSegment.Fields.Add(763, False, 0, False, 2);
    oSegment.Fields.Add(897, False, 0, False, 3);
    oSegment.Fields.Add(898, False, 0, True, 4);
    oSegment.Fields.Add(899, True, 0, False, 5);
    oSegment.Fields.Add(900, False, 0, False, 6);
    oSegment.Fields.Add(901, False, 0, False, 7);
    oSegment.Fields.Add(1202, False, 0, False, 8);
    oSegment.Fields.Add(891, False, 0, False, 9);
    oSegment.Fields.Add(892, False, 0, False, 10);
    oSegment.Fields.Add(893, False, 0, False, 11);
    oSegment.Fields.Add(894, False, 0, False, 12);
    oSegment.Fields.Add(895, False, 0, False, 13);
    oSegment.Fields.Add(889, False, 0, False, 14);
  oSegment := oSegments.Add('AIL', 'Appointment Information - Location Resource');
    oSegment.Fields.Add(902, False, 0, True, 1);
    oSegment.Fields.Add(763, False, 0, False, 2);
    oSegment.Fields.Add(903, False, 0, True, 3);
    oSegment.Fields.Add(904, False, 0, False, 4);
    oSegment.Fields.Add(905, False, 0, False, 5);
    oSegment.Fields.Add(1202, False, 0, False, 6);
    oSegment.Fields.Add(891, False, 0, False, 7);
    oSegment.Fields.Add(892, False, 0, False, 8);
    oSegment.Fields.Add(893, False, 0, False, 9);
    oSegment.Fields.Add(894, False, 0, False, 10);
    oSegment.Fields.Add(895, False, 0, False, 11);
    oSegment.Fields.Add(889, False, 0, False, 12);
  oSegment := oSegments.Add('AIP', 'Appointment Information - Personnel Resource');
    oSegment.Fields.Add(906, False, 0, True, 1);
    oSegment.Fields.Add(763, False, 0, False, 2);
    oSegment.Fields.Add(913, False, 0, False, 3);
    oSegment.Fields.Add(907, False, 0, True, 4);
    oSegment.Fields.Add(899, True, 0, False, 5);
    oSegment.Fields.Add(1202, False, 0, False, 6);
    oSegment.Fields.Add(891, False, 0, False, 7);
    oSegment.Fields.Add(892, False, 0, False, 8);
    oSegment.Fields.Add(893, False, 0, False, 9);
    oSegment.Fields.Add(894, False, 0, False, 10);
    oSegment.Fields.Add(895, False, 0, False, 11);
    oSegment.Fields.Add(889, False, 0, False, 12);
  oSegment := oSegments.Add('AIS', 'Appointment Information - Service');
    oSegment.Fields.Add(890, False, 0, True, 1);
    oSegment.Fields.Add(763, False, 0, False, 2);
    oSegment.Fields.Add(238, False, 0, True, 3);
    oSegment.Fields.Add(1202, False, 0, False, 4);
    oSegment.Fields.Add(891, False, 0, False, 5);
    oSegment.Fields.Add(892, False, 0, False, 6);
    oSegment.Fields.Add(893, False, 0, False, 7);
    oSegment.Fields.Add(894, False, 0, False, 8);
    oSegment.Fields.Add(895, False, 0, False, 9);
    oSegment.Fields.Add(889, False, 0, False, 10);
  oSegment := oSegments.Add('AL1', 'Patient allergy information');
    oSegment.Fields.Add(203, False, 0, True, 1);
    oSegment.Fields.Add(204, False, 0, False, 2);
    oSegment.Fields.Add(205, False, 0, True, 3);
    oSegment.Fields.Add(206, False, 0, False, 4);
    oSegment.Fields.Add(207, False, 0, False, 5);
    oSegment.Fields.Add(208, False, 0, False, 6);
  oSegment := oSegments.Add('APR', 'Appointment Preferences');
    oSegment.Fields.Add(908, True, 0, False, 1);
    oSegment.Fields.Add(909, True, 0, False, 2);
    oSegment.Fields.Add(910, True, 0, False, 3);
    oSegment.Fields.Add(911, False, 0, False, 4);
    oSegment.Fields.Add(912, True, 0, False, 5);
  oSegment := oSegments.Add('ARQ', 'Appointment Request');
    oSegment.Fields.Add(860, False, 0, True, 1);
    oSegment.Fields.Add(861, False, 0, False, 2);
    oSegment.Fields.Add(862, False, 0, False, 3);
    oSegment.Fields.Add(863, False, 0, False, 4);
    oSegment.Fields.Add(864, False, 0, False, 5);
    oSegment.Fields.Add(865, False, 0, False, 6);
    oSegment.Fields.Add(866, False, 0, False, 7);
    oSegment.Fields.Add(867, False, 0, False, 8);
    oSegment.Fields.Add(868, False, 0, False, 9);
    oSegment.Fields.Add(869, False, 0, False, 10);
    oSegment.Fields.Add(870, True, 0, False, 11);
    oSegment.Fields.Add(871, False, 0, False, 12);
    oSegment.Fields.Add(872, False, 0, False, 13);
    oSegment.Fields.Add(873, False, 0, False, 14);
    oSegment.Fields.Add(874, False, 0, False, 15);
    oSegment.Fields.Add(875, False, 0, False, 16);
    oSegment.Fields.Add(876, False, 0, False, 17);
    oSegment.Fields.Add(877, False, 0, False, 18);
    oSegment.Fields.Add(878, False, 0, True, 19);
    oSegment.Fields.Add(879, True, 0, False, 20);
    oSegment.Fields.Add(880, False, 0, False, 21);
    oSegment.Fields.Add(881, False, 0, False, 22);
    oSegment.Fields.Add(882, False, 0, False, 23);
  oSegment := oSegments.Add('AUT', 'Authorization Information');
    oSegment.Fields.Add(1146, False, 0, False, 1);
    oSegment.Fields.Add(1147, False, 0, True, 2);
    oSegment.Fields.Add(1148, False, 0, False, 3);
    oSegment.Fields.Add(1149, False, 0, False, 4);
    oSegment.Fields.Add(1150, False, 0, False, 5);
    oSegment.Fields.Add(1151, False, 0, False, 6);
    oSegment.Fields.Add(1152, False, 0, False, 7);
    oSegment.Fields.Add(1153, False, 0, False, 8);
    oSegment.Fields.Add(1154, False, 0, False, 9);
    oSegment.Fields.Add(1145, False, 0, False, 10);
  oSegment := oSegments.Add('BHS', 'Batch header');
    oSegment.Fields.Add(81, False, 0, True, 1);
    oSegment.Fields.Add(82, False, 0, True, 2);
    oSegment.Fields.Add(83, False, 0, False, 3);
    oSegment.Fields.Add(84, False, 0, False, 4);
    oSegment.Fields.Add(85, False, 0, False, 5);
    oSegment.Fields.Add(86, False, 0, False, 6);
    oSegment.Fields.Add(87, False, 0, False, 7);
    oSegment.Fields.Add(88, False, 0, False, 8);
    oSegment.Fields.Add(89, False, 0, False, 9);
    oSegment.Fields.Add(90, False, 0, False, 10);
    oSegment.Fields.Add(91, False, 0, False, 11);
    oSegment.Fields.Add(92, False, 0, False, 12);
  oSegment := oSegments.Add('BLG', 'Billing Segment');
    oSegment.Fields.Add(234, False, 0, False, 1);
    oSegment.Fields.Add(235, False, 0, False, 2);
    oSegment.Fields.Add(236, False, 0, False, 3);
  oSegment := oSegments.Add('BTS', 'Batch trailer segment');
    oSegment.Fields.Add(93, False, 0, False, 1);
    oSegment.Fields.Add(90, False, 0, False, 2);
    oSegment.Fields.Add(95, True, 0, False, 3);
  oSegment := oSegments.Add('CDM', 'Charge Description Master');
    oSegment.Fields.Add(982, False, 0, True, 1);
    oSegment.Fields.Add(983, True, 0, False, 2);
    oSegment.Fields.Add(984, False, 0, True, 3);
    oSegment.Fields.Add(985, False, 0, False, 4);
    oSegment.Fields.Add(986, False, 0, False, 5);
    oSegment.Fields.Add(987, True, 0, False, 6);
    oSegment.Fields.Add(988, True, 0, False, 7);
    oSegment.Fields.Add(675, False, 0, False, 8);
    oSegment.Fields.Add(990, True, 0, False, 9);
    oSegment.Fields.Add(991, False, 0, False, 10);
    oSegment.Fields.Add(992, True, 0, False, 11);
    oSegment.Fields.Add(993, False, 0, False, 12);
    oSegment.Fields.Add(994, False, 0, False, 13);
  oSegment := oSegments.Add('CM0', 'Clinical Study Master');
    oSegment.Fields.Add(1010, False, 0, False, 1);
    oSegment.Fields.Add(1011, False, 0, True, 2);
    oSegment.Fields.Add(1012, True, 3, False, 3);
    oSegment.Fields.Add(1013, False, 0, True, 4);
    oSegment.Fields.Add(1014, False, 0, False, 5);
    oSegment.Fields.Add(1015, False, 0, False, 6);
    oSegment.Fields.Add(1016, False, 0, False, 7);
    oSegment.Fields.Add(1017, False, 0, False, 8);
    oSegment.Fields.Add(1018, False, 0, False, 9);
    oSegment.Fields.Add(1019, False, 0, False, 10);
    oSegment.Fields.Add(1020, False, 0, False, 11);
  oSegment := oSegments.Add('CM1', 'Clinical Study Phase Master');
    oSegment.Fields.Add(1021, False, 0, True, 1);
    oSegment.Fields.Add(1051, False, 0, False, 2);
    oSegment.Fields.Add(1023, False, 0, True, 3);
  oSegment := oSegments.Add('CM2', 'Clinical Study Schedule Master');
    oSegment.Fields.Add(1024, False, 0, False, 1);
    oSegment.Fields.Add(1025, False, 0, True, 2);
    oSegment.Fields.Add(1026, False, 0, False, 3);
    oSegment.Fields.Add(1027, True, 200, True, 4);
  oSegment := oSegments.Add('CSP', 'Clinical Study Phase');
    oSegment.Fields.Add(1051, False, 0, False, 1);
    oSegment.Fields.Add(1052, False, 0, True, 2);
    oSegment.Fields.Add(1053, False, 0, False, 3);
    oSegment.Fields.Add(1054, False, 0, False, 4);
  oSegment := oSegments.Add('CSR', 'Clinical Study Registration');
    oSegment.Fields.Add(1011, False, 0, True, 1);
    oSegment.Fields.Add(1036, False, 0, False, 2);
    oSegment.Fields.Add(1037, False, 0, False, 3);
    oSegment.Fields.Add(1038, False, 0, True, 4);
    oSegment.Fields.Add(1039, False, 0, False, 5);
    oSegment.Fields.Add(1040, False, 0, False, 6);
    oSegment.Fields.Add(1041, False, 0, False, 7);
    oSegment.Fields.Add(1042, False, 0, True, 8);
    oSegment.Fields.Add(1043, False, 0, False, 9);
    oSegment.Fields.Add(1044, False, 0, False, 10);
    oSegment.Fields.Add(1045, True, 3, False, 11);
    oSegment.Fields.Add(1046, True, 3, False, 12);
    oSegment.Fields.Add(1047, True, 3, False, 13);
    oSegment.Fields.Add(1048, False, 0, False, 14);
    oSegment.Fields.Add(1049, False, 0, False, 15);
    oSegment.Fields.Add(1050, False, 0, False, 16);
  oSegment := oSegments.Add('CSS', 'Clinical Study Data Schedule');
    oSegment.Fields.Add(1055, False, 0, False, 1);
    oSegment.Fields.Add(1056, False, 0, False, 2);
    oSegment.Fields.Add(1057, True, 3, False, 3);
  oSegment := oSegments.Add('CTD', 'Contact Data');
    oSegment.Fields.Add(196, False, 0, True, 1);
    oSegment.Fields.Add(1165, True, 0, False, 2);
    oSegment.Fields.Add(1268, True, 0, False, 3);
    oSegment.Fields.Add(1167, False, 0, False, 4);
    oSegment.Fields.Add(1168, True, 0, False, 5);
    oSegment.Fields.Add(684, False, 0, False, 6);
    oSegment.Fields.Add(1171, True, 0, False, 7);
  oSegment := oSegments.Add('CTI', 'Clinical Trial Identification');
    oSegment.Fields.Add(1011, False, 0, True, 1);
    oSegment.Fields.Add(1051, False, 0, False, 2);
    oSegment.Fields.Add(1055, False, 0, False, 3);
  oSegment := oSegments.Add('DB1', 'Disability Segment');
    oSegment.Fields.Add(1283, False, 0, True, 1);
    oSegment.Fields.Add(1284, False, 0, False, 2);
    oSegment.Fields.Add(1285, True, 0, False, 3);
    oSegment.Fields.Add(1286, False, 0, False, 4);
    oSegment.Fields.Add(1287, False, 0, False, 5);
    oSegment.Fields.Add(1288, False, 0, False, 6);
    oSegment.Fields.Add(1289, False, 0, False, 7);
    oSegment.Fields.Add(1290, False, 0, False, 8);
  oSegment := oSegments.Add('DG1', 'Diagnosis');
    oSegment.Fields.Add(375, False, 0, True, 1);
    oSegment.Fields.Add(376, False, 0, False, 2);
    oSegment.Fields.Add(377, False, 0, False, 3);
    oSegment.Fields.Add(378, False, 0, False, 4);
    oSegment.Fields.Add(379, False, 0, False, 5);
    oSegment.Fields.Add(380, False, 0, True, 6);
    oSegment.Fields.Add(381, False, 0, False, 7);
    oSegment.Fields.Add(382, False, 0, False, 8);
    oSegment.Fields.Add(383, False, 0, False, 9);
    oSegment.Fields.Add(384, False, 0, False, 10);
    oSegment.Fields.Add(385, False, 0, False, 11);
    oSegment.Fields.Add(386, False, 0, False, 12);
    oSegment.Fields.Add(387, False, 0, False, 13);
    oSegment.Fields.Add(388, False, 0, False, 14);
    oSegment.Fields.Add(389, False, 0, False, 15);
    oSegment.Fields.Add(390, True, 0, False, 16);
    oSegment.Fields.Add(766, False, 0, False, 17);
    oSegment.Fields.Add(767, False, 0, False, 18);
    oSegment.Fields.Add(768, False, 0, False, 19);
  oSegment := oSegments.Add('DRG', 'Diagnosis Related Group');
    oSegment.Fields.Add(382, False, 0, False, 1);
    oSegment.Fields.Add(769, False, 0, False, 2);
    oSegment.Fields.Add(383, False, 0, False, 3);
    oSegment.Fields.Add(384, False, 0, False, 4);
    oSegment.Fields.Add(385, False, 0, False, 5);
    oSegment.Fields.Add(386, False, 0, False, 6);
    oSegment.Fields.Add(387, False, 0, False, 7);
    oSegment.Fields.Add(770, False, 0, False, 8);
    oSegment.Fields.Add(771, False, 0, False, 9);
    oSegment.Fields.Add(767, False, 0, False, 10);
  oSegment := oSegments.Add('DSC', 'Continuation pointer segment');
    oSegment.Fields.Add(14, False, 0, False, 1);
  oSegment := oSegments.Add('DSP', 'Display data segment');
    oSegment.Fields.Add(61, False, 0, False, 1);
    oSegment.Fields.Add(62, False, 0, False, 2);
    oSegment.Fields.Add(63, False, 0, True, 3);
    oSegment.Fields.Add(64, False, 0, False, 4);
    oSegment.Fields.Add(65, False, 0, False, 5);
  oSegment := oSegments.Add('EQL', 'Embedded Query Language');
    oSegment.Fields.Add(696, False, 0, False, 1);
    oSegment.Fields.Add(697, False, 0, True, 2);
    oSegment.Fields.Add(709, False, 0, True, 3);
    oSegment.Fields.Add(710, False, 0, True, 4);
  oSegment := oSegments.Add('ERQ', 'Event Replay Query Segment');
    oSegment.Fields.Add(696, False, 0, False, 1);
    oSegment.Fields.Add(706, False, 0, True, 2);
    oSegment.Fields.Add(705, True, 0, False, 3);
  oSegment := oSegments.Add('ERR', 'Error segment');
    oSegment.Fields.Add(24, True, 0, True, 1);
  oSegment := oSegments.Add('EVN', 'Event type');
    oSegment.Fields.Add(99, False, 0, True, 1);
    oSegment.Fields.Add(100, False, 0, False, 2);
    oSegment.Fields.Add(101, False, 0, False, 3);
    oSegment.Fields.Add(102, False, 0, False, 4);
    oSegment.Fields.Add(103, False, 0, False, 5);
    oSegment.Fields.Add(1278, False, 0, False, 6);
  oSegment := oSegments.Add('FAC', 'Facility');
    oSegment.Fields.Add(1262, True, 0, True, 1);
    oSegment.Fields.Add(1263, False, 0, False, 2);
    oSegment.Fields.Add(1264, False, 0, True, 3);
    oSegment.Fields.Add(1265, False, 0, True, 4);
    oSegment.Fields.Add(1266, True, 0, False, 5);
    oSegment.Fields.Add(1267, True, 0, False, 6);
    oSegment.Fields.Add(1268, True, 0, False, 7);
    oSegment.Fields.Add(1269, True, 0, False, 8);
    oSegment.Fields.Add(1270, False, 0, True, 9);
    oSegment.Fields.Add(1271, False, 0, False, 10);
    oSegment.Fields.Add(1272, False, 0, False, 11);
    oSegment.Fields.Add(1273, False, 0, False, 12);
  oSegment := oSegments.Add('FHS', 'File header segment');
    oSegment.Fields.Add(67, False, 0, True, 1);
    oSegment.Fields.Add(68, False, 0, True, 2);
    oSegment.Fields.Add(69, False, 0, False, 3);
    oSegment.Fields.Add(70, False, 0, False, 4);
    oSegment.Fields.Add(71, False, 0, False, 5);
    oSegment.Fields.Add(72, False, 0, False, 6);
    oSegment.Fields.Add(73, False, 0, False, 7);
    oSegment.Fields.Add(74, False, 0, False, 8);
    oSegment.Fields.Add(75, False, 0, False, 9);
    oSegment.Fields.Add(76, False, 0, False, 10);
    oSegment.Fields.Add(77, False, 0, False, 11);
    oSegment.Fields.Add(78, False, 0, False, 12);
  oSegment := oSegments.Add('FT1', 'Financial transaction');
    oSegment.Fields.Add(355, False, 0, False, 1);
    oSegment.Fields.Add(356, False, 0, False, 2);
    oSegment.Fields.Add(357, False, 0, False, 3);
    oSegment.Fields.Add(358, False, 0, True, 4);
    oSegment.Fields.Add(359, False, 0, False, 5);
    oSegment.Fields.Add(360, False, 0, True, 6);
    oSegment.Fields.Add(361, False, 0, True, 7);
    oSegment.Fields.Add(362, False, 0, False, 8);
    oSegment.Fields.Add(363, False, 0, False, 9);
    oSegment.Fields.Add(364, False, 0, False, 10);
    oSegment.Fields.Add(365, False, 0, False, 11);
    oSegment.Fields.Add(366, False, 0, False, 12);
    oSegment.Fields.Add(367, False, 0, False, 13);
    oSegment.Fields.Add(368, False, 0, False, 14);
    oSegment.Fields.Add(369, False, 0, False, 15);
    oSegment.Fields.Add(133, False, 0, False, 16);
    oSegment.Fields.Add(370, False, 0, False, 17);
    oSegment.Fields.Add(148, False, 0, False, 18);
    oSegment.Fields.Add(371, True, 0, False, 19);
    oSegment.Fields.Add(372, False, 0, False, 20);
    oSegment.Fields.Add(373, False, 0, False, 21);
    oSegment.Fields.Add(374, False, 0, False, 22);
    oSegment.Fields.Add(217, False, 0, False, 23);
    oSegment.Fields.Add(765, False, 0, False, 24);
    oSegment.Fields.Add(393, False, 0, False, 25);
  oSegment := oSegments.Add('FTS', 'File trailer segment');
    oSegment.Fields.Add(79, False, 0, False, 1);
    oSegment.Fields.Add(80, False, 0, False, 2);
  oSegment := oSegments.Add('GOL', 'Goal Detail');
    oSegment.Fields.Add(816, False, 0, True, 1);
    oSegment.Fields.Add(817, False, 0, True, 2);
    oSegment.Fields.Add(818, False, 0, True, 3);
    oSegment.Fields.Add(819, False, 0, True, 4);
    oSegment.Fields.Add(820, False, 0, False, 5);
    oSegment.Fields.Add(821, False, 0, False, 6);
    oSegment.Fields.Add(822, False, 0, False, 7);
    oSegment.Fields.Add(824, False, 0, False, 8);
    oSegment.Fields.Add(825, False, 0, False, 9);
    oSegment.Fields.Add(826, False, 0, False, 10);
    oSegment.Fields.Add(827, False, 0, False, 11);
    oSegment.Fields.Add(828, False, 0, False, 12);
    oSegment.Fields.Add(829, False, 0, False, 13);
    oSegment.Fields.Add(830, False, 0, False, 14);
    oSegment.Fields.Add(831, False, 0, False, 15);
    oSegment.Fields.Add(832, False, 0, False, 16);
    oSegment.Fields.Add(833, True, 0, False, 17);
    oSegment.Fields.Add(834, False, 0, False, 18);
    oSegment.Fields.Add(835, False, 0, False, 19);
    oSegment.Fields.Add(836, True, 0, False, 20);
    oSegment.Fields.Add(837, True, 0, False, 21);
  oSegment := oSegments.Add('GT1', 'Guarantor');
    oSegment.Fields.Add(405, False, 0, True, 1);
    oSegment.Fields.Add(406, True, 0, False, 2);
    oSegment.Fields.Add(407, True, 0, True, 3);
    oSegment.Fields.Add(408, True, 0, False, 4);
    oSegment.Fields.Add(409, True, 0, False, 5);
    oSegment.Fields.Add(410, True, 0, False, 6);
    oSegment.Fields.Add(411, True, 0, False, 7);
    oSegment.Fields.Add(412, False, 0, False, 8);
    oSegment.Fields.Add(413, False, 0, False, 9);
    oSegment.Fields.Add(414, False, 0, False, 10);
    oSegment.Fields.Add(415, False, 0, False, 11);
    oSegment.Fields.Add(416, False, 0, False, 12);
    oSegment.Fields.Add(417, False, 0, False, 13);
    oSegment.Fields.Add(418, False, 0, False, 14);
    oSegment.Fields.Add(419, False, 0, False, 15);
    oSegment.Fields.Add(420, True, 0, False, 16);
    oSegment.Fields.Add(421, True, 0, False, 17);
    oSegment.Fields.Add(422, True, 0, False, 18);
    oSegment.Fields.Add(423, True, 0, False, 19);
    oSegment.Fields.Add(424, False, 0, False, 20);
    oSegment.Fields.Add(425, True, 0, False, 21);
    oSegment.Fields.Add(773, False, 0, False, 22);
    oSegment.Fields.Add(774, False, 0, False, 23);
    oSegment.Fields.Add(775, False, 0, False, 24);
    oSegment.Fields.Add(776, False, 0, False, 25);
    oSegment.Fields.Add(777, False, 0, False, 26);
    oSegment.Fields.Add(778, False, 0, False, 27);
    oSegment.Fields.Add(779, False, 0, False, 28);
    oSegment.Fields.Add(780, True, 0, False, 29);
    oSegment.Fields.Add(781, False, 0, False, 30);
    oSegment.Fields.Add(782, False, 0, False, 31);
    oSegment.Fields.Add(783, False, 0, False, 32);
    oSegment.Fields.Add(755, False, 0, False, 33);
    oSegment.Fields.Add(145, False, 0, False, 34);
    oSegment.Fields.Add(129, False, 0, False, 35);
    oSegment.Fields.Add(118, False, 0, False, 36);
    oSegment.Fields.Add(742, False, 0, False, 37);
    oSegment.Fields.Add(743, False, 0, False, 38);
    oSegment.Fields.Add(744, False, 0, False, 39);
    oSegment.Fields.Add(745, False, 0, False, 40);
    oSegment.Fields.Add(120, False, 0, False, 41);
    oSegment.Fields.Add(746, False, 0, False, 42);
    oSegment.Fields.Add(739, False, 0, False, 43);
    oSegment.Fields.Add(125, False, 0, False, 44);
    oSegment.Fields.Add(748, True, 0, False, 45);
    oSegment.Fields.Add(749, True, 0, False, 46);
    oSegment.Fields.Add(747, False, 0, False, 47);
    oSegment.Fields.Add(784, False, 0, False, 48);
    oSegment.Fields.Add(785, False, 0, False, 49);
    oSegment.Fields.Add(786, False, 0, False, 50);
    oSegment.Fields.Add(1299, True, 0, False, 51);
    oSegment.Fields.Add(753, False, 0, False, 52);
    oSegment.Fields.Add(752, False, 0, False, 53);
    oSegment.Fields.Add(1231, False, 0, False, 54);
    oSegment.Fields.Add(1291, False, 0, False, 55);
  oSegments.Add('Hxx', 'any HL7 segment');
  oSegment := oSegments.Add('IN1', 'Insurance');
    oSegment.Fields.Add(426, False, 0, True, 1);
    oSegment.Fields.Add(368, False, 0, False, 2);
    oSegment.Fields.Add(428, False, 0, True, 3);
    oSegment.Fields.Add(429, False, 0, False, 4);
    oSegment.Fields.Add(430, False, 0, False, 5);
    oSegment.Fields.Add(431, False, 0, False, 6);
    oSegment.Fields.Add(432, True, 3, False, 7);
    oSegment.Fields.Add(433, False, 0, False, 8);
    oSegment.Fields.Add(434, False, 0, False, 9);
    oSegment.Fields.Add(435, False, 0, False, 10);
    oSegment.Fields.Add(436, False, 0, False, 11);
    oSegment.Fields.Add(437, False, 0, False, 12);
    oSegment.Fields.Add(438, False, 0, False, 13);
    oSegment.Fields.Add(439, False, 0, False, 14);
    oSegment.Fields.Add(440, False, 0, False, 15);
    oSegment.Fields.Add(441, False, 0, False, 16);
    oSegment.Fields.Add(442, False, 0, False, 17);
    oSegment.Fields.Add(443, False, 0, False, 18);
    oSegment.Fields.Add(444, False, 0, False, 19);
    oSegment.Fields.Add(445, False, 0, False, 20);
    oSegment.Fields.Add(446, False, 0, False, 21);
    oSegment.Fields.Add(447, False, 0, False, 22);
    oSegment.Fields.Add(448, False, 0, False, 23);
    oSegment.Fields.Add(449, False, 0, False, 24);
    oSegment.Fields.Add(450, False, 0, False, 25);
    oSegment.Fields.Add(451, False, 0, False, 26);
    oSegment.Fields.Add(452, False, 0, False, 27);
    oSegment.Fields.Add(453, False, 0, False, 28);
    oSegment.Fields.Add(454, False, 0, False, 29);
    oSegment.Fields.Add(455, False, 0, False, 30);
    oSegment.Fields.Add(456, False, 0, False, 31);
    oSegment.Fields.Add(457, False, 0, False, 32);
    oSegment.Fields.Add(458, False, 0, False, 33);
    oSegment.Fields.Add(459, False, 0, False, 34);
    oSegment.Fields.Add(460, False, 0, False, 35);
    oSegment.Fields.Add(461, False, 0, False, 36);
    oSegment.Fields.Add(462, False, 0, False, 37);
    oSegment.Fields.Add(463, False, 0, False, 38);
    oSegment.Fields.Add(464, False, 0, False, 39);
    oSegment.Fields.Add(465, False, 0, False, 40);
    oSegment.Fields.Add(466, False, 0, False, 41);
    oSegment.Fields.Add(467, False, 0, False, 42);
    oSegment.Fields.Add(468, False, 0, False, 43);
    oSegment.Fields.Add(469, False, 0, False, 44);
    oSegment.Fields.Add(470, False, 0, False, 45);
    oSegment.Fields.Add(471, False, 0, False, 46);
    oSegment.Fields.Add(1277, False, 0, False, 47);
    oSegment.Fields.Add(753, False, 0, False, 48);
    oSegment.Fields.Add(1230, False, 0, False, 49);
  oSegment := oSegments.Add('IN2', 'Insurance additional info');
    oSegment.Fields.Add(472, False, 0, False, 1);
    oSegment.Fields.Add(473, False, 0, False, 2);
    oSegment.Fields.Add(474, False, 0, False, 3);
    oSegment.Fields.Add(475, False, 0, False, 4);
    oSegment.Fields.Add(476, False, 0, False, 5);
    oSegment.Fields.Add(477, False, 0, False, 6);
    oSegment.Fields.Add(478, False, 0, False, 7);
    oSegment.Fields.Add(479, False, 0, False, 8);
    oSegment.Fields.Add(480, False, 0, False, 9);
    oSegment.Fields.Add(481, False, 0, False, 10);
    oSegment.Fields.Add(482, False, 0, False, 11);
    oSegment.Fields.Add(483, False, 0, False, 12);
    oSegment.Fields.Add(484, False, 0, False, 13);
    oSegment.Fields.Add(485, False, 0, False, 14);
    oSegment.Fields.Add(486, False, 0, False, 15);
    oSegment.Fields.Add(487, False, 0, False, 16);
    oSegment.Fields.Add(488, False, 0, False, 17);
    oSegment.Fields.Add(489, False, 0, False, 18);
    oSegment.Fields.Add(490, False, 0, False, 19);
    oSegment.Fields.Add(491, False, 0, False, 20);
    oSegment.Fields.Add(492, False, 0, False, 21);
    oSegment.Fields.Add(493, False, 0, False, 22);
    oSegment.Fields.Add(494, False, 0, False, 23);
    oSegment.Fields.Add(495, True, 0, False, 24);
    oSegment.Fields.Add(496, False, 0, False, 25);
    oSegment.Fields.Add(497, False, 0, False, 26);
    oSegment.Fields.Add(498, False, 0, False, 27);
    oSegment.Fields.Add(499, True, 0, False, 28);
    oSegment.Fields.Add(500, True, 0, False, 29);
    oSegment.Fields.Add(501, False, 0, False, 30);
    oSegment.Fields.Add(755, False, 0, False, 31);
    oSegment.Fields.Add(145, False, 0, False, 32);
    oSegment.Fields.Add(129, False, 0, False, 33);
    oSegment.Fields.Add(118, False, 0, False, 34);
    oSegment.Fields.Add(742, False, 0, False, 35);
    oSegment.Fields.Add(743, False, 0, False, 36);
    oSegment.Fields.Add(744, False, 0, False, 37);
    oSegment.Fields.Add(745, False, 0, False, 38);
    oSegment.Fields.Add(120, False, 0, False, 39);
    oSegment.Fields.Add(746, False, 0, False, 40);
    oSegment.Fields.Add(739, False, 0, False, 41);
    oSegment.Fields.Add(125, False, 0, False, 42);
    oSegment.Fields.Add(119, True, 0, False, 43);
    oSegment.Fields.Add(787, False, 0, False, 44);
    oSegment.Fields.Add(783, False, 0, False, 45);
    oSegment.Fields.Add(785, False, 0, False, 46);
    oSegment.Fields.Add(786, False, 0, False, 47);
    oSegment.Fields.Add(752, False, 0, False, 48);
    oSegment.Fields.Add(789, True, 0, False, 49);
    oSegment.Fields.Add(790, True, 0, False, 50);
    oSegment.Fields.Add(791, False, 0, False, 51);
    oSegment.Fields.Add(792, True, 0, False, 52);
    oSegment.Fields.Add(793, True, 0, False, 53);
    oSegment.Fields.Add(794, True, 0, False, 54);
    oSegment.Fields.Add(795, False, 0, False, 55);
    oSegment.Fields.Add(796, True, 0, False, 56);
    oSegment.Fields.Add(797, False, 0, False, 57);
    oSegment.Fields.Add(798, False, 0, False, 58);
    oSegment.Fields.Add(799, False, 0, False, 59);
    oSegment.Fields.Add(800, False, 0, False, 60);
    oSegment.Fields.Add(801, False, 0, False, 61);
    oSegment.Fields.Add(802, False, 0, False, 62);
    oSegment.Fields.Add(803, True, 0, False, 63);
    oSegment.Fields.Add(804, True, 0, False, 64);
    oSegment.Fields.Add(805, False, 0, False, 65);
    oSegment.Fields.Add(806, False, 0, False, 66);
    oSegment.Fields.Add(807, False, 0, False, 67);
    oSegment.Fields.Add(808, False, 0, False, 68);
    oSegment.Fields.Add(809, True, 0, False, 69);
    oSegment.Fields.Add(810, True, 0, False, 70);
    oSegment.Fields.Add(113, False, 0, False, 71);
    oSegment.Fields.Add(811, False, 0, False, 72);
  oSegment := oSegments.Add('IN3', 'Insurance additional info - certification');
    oSegment.Fields.Add(502, False, 0, True, 1);
    oSegment.Fields.Add(503, False, 0, False, 2);
    oSegment.Fields.Add(504, True, 0, False, 3);
    oSegment.Fields.Add(505, False, 0, False, 4);
    oSegment.Fields.Add(506, False, 0, False, 5);
    oSegment.Fields.Add(507, False, 0, False, 6);
    oSegment.Fields.Add(508, False, 0, False, 7);
    oSegment.Fields.Add(509, True, 0, False, 8);
    oSegment.Fields.Add(510, False, 0, False, 9);
    oSegment.Fields.Add(511, False, 0, False, 10);
    oSegment.Fields.Add(512, False, 0, False, 11);
    oSegment.Fields.Add(513, False, 0, False, 12);
    oSegment.Fields.Add(514, False, 0, False, 13);
    oSegment.Fields.Add(515, True, 0, False, 14);
    oSegment.Fields.Add(516, False, 0, False, 15);
    oSegment.Fields.Add(517, True, 0, False, 16);
    oSegment.Fields.Add(518, False, 0, False, 17);
    oSegment.Fields.Add(519, False, 0, False, 18);
    oSegment.Fields.Add(520, True, 0, False, 19);
    oSegment.Fields.Add(521, True, 0, False, 20);
    oSegment.Fields.Add(522, False, 0, False, 21);
    oSegment.Fields.Add(523, False, 0, False, 22);
    oSegment.Fields.Add(524, False, 0, False, 23);
    oSegment.Fields.Add(525, True, 0, False, 24);
    oSegment.Fields.Add(526, True, 0, False, 25);
  oSegment := oSegments.Add('LCC', 'Location Charge Code');
    oSegment.Fields.Add(979, False, 0, True, 1);
    oSegment.Fields.Add(964, False, 0, True, 2);
    oSegment.Fields.Add(980, True, 0, False, 3);
    oSegment.Fields.Add(981, True, 0, True, 4);
  oSegment := oSegments.Add('LCH', 'Location Characteristic');
    oSegment.Fields.Add(943, False, 0, True, 1);
    oSegment.Fields.Add(763, False, 0, False, 2);
    oSegment.Fields.Add(764, False, 0, False, 3);
    oSegment.Fields.Add(1295, False, 0, True, 4);
    oSegment.Fields.Add(1294, False, 0, True, 5);
  oSegment := oSegments.Add('LDP', 'Location Department');
    oSegment.Fields.Add(963, False, 0, True, 1);
    oSegment.Fields.Add(964, False, 0, True, 2);
    oSegment.Fields.Add(965, True, 0, False, 3);
    oSegment.Fields.Add(966, True, 0, False, 4);
    oSegment.Fields.Add(967, True, 0, False, 5);
    oSegment.Fields.Add(675, False, 0, False, 6);
    oSegment.Fields.Add(969, False, 0, False, 7);
    oSegment.Fields.Add(970, False, 0, False, 8);
    oSegment.Fields.Add(971, False, 0, False, 9);
    oSegment.Fields.Add(976, True, 0, False, 10);
    oSegment.Fields.Add(978, False, 0, False, 11);
  oSegment := oSegments.Add('LOC', 'Location Identification');
    oSegment.Fields.Add(943, False, 0, True, 1);
    oSegment.Fields.Add(944, False, 0, False, 2);
    oSegment.Fields.Add(945, True, 0, True, 3);
    oSegment.Fields.Add(947, False, 0, False, 4);
    oSegment.Fields.Add(948, False, 0, False, 5);
    oSegment.Fields.Add(949, True, 0, False, 6);
    oSegment.Fields.Add(951, True, 0, False, 7);
    oSegment.Fields.Add(953, True, 0, False, 8);
  oSegment := oSegments.Add('LRL', 'Location Relationship');
    oSegment.Fields.Add(943, False, 0, True, 1);
    oSegment.Fields.Add(763, False, 0, False, 2);
    oSegment.Fields.Add(764, False, 0, False, 3);
    oSegment.Fields.Add(1227, False, 0, False, 4);
    oSegment.Fields.Add(1301, False, 0, False, 5);
    oSegment.Fields.Add(1292, False, 0, False, 6);
  oSegment := oSegments.Add('MFA', 'Master file acknowledgement segment');
    oSegment.Fields.Add(664, False, 0, True, 1);
    oSegment.Fields.Add(665, False, 0, False, 2);
    oSegment.Fields.Add(668, False, 0, False, 3);
    oSegment.Fields.Add(669, False, 0, True, 4);
    oSegment.Fields.Add(667, True, 0, True, 5);
  oSegment := oSegments.Add('MFE', 'Master file entry segment');
    oSegment.Fields.Add(664, False, 0, True, 1);
    oSegment.Fields.Add(665, False, 0, False, 2);
    oSegment.Fields.Add(662, False, 0, False, 3);
    oSegment.Fields.Add(667, True, 0, True, 4);
  oSegment := oSegments.Add('MFI', 'Master file identification segment');
    oSegment.Fields.Add(658, False, 0, True, 1);
    oSegment.Fields.Add(659, False, 0, False, 2);
    oSegment.Fields.Add(660, False, 0, True, 3);
    oSegment.Fields.Add(661, False, 0, False, 4);
    oSegment.Fields.Add(662, False, 0, False, 5);
    oSegment.Fields.Add(663, False, 0, True, 6);
  oSegment := oSegments.Add('MRG', 'Merge patient information');
    oSegment.Fields.Add(211, True, 0, True, 1);
    oSegment.Fields.Add(212, True, 0, False, 2);
    oSegment.Fields.Add(213, False, 0, False, 3);
    oSegment.Fields.Add(214, False, 0, False, 4);
    oSegment.Fields.Add(1279, False, 0, False, 5);
    oSegment.Fields.Add(1280, False, 0, False, 6);
    oSegment.Fields.Add(1281, False, 0, False, 7);
  oSegment := oSegments.Add('MSA', 'Message acknowledgement segment');
    oSegment.Fields.Add(18, False, 0, True, 1);
    oSegment.Fields.Add(10, False, 0, True, 2);
    oSegment.Fields.Add(20, False, 0, False, 3);
    oSegment.Fields.Add(21, False, 0, False, 4);
    oSegment.Fields.Add(22, False, 0, False, 5);
    oSegment.Fields.Add(23, False, 0, False, 6);
  oSegment := oSegments.Add('MSH', 'Message header segment');
    oSegment.Fields.Add(1, False, 0, True, 1);
    oSegment.Fields.Add(2, False, 0, True, 2);
    oSegment.Fields.Add(3, False, 0, False, 3);
    oSegment.Fields.Add(4, False, 0, False, 4);
    oSegment.Fields.Add(5, False, 0, False, 5);
    oSegment.Fields.Add(6, False, 0, False, 6);
    oSegment.Fields.Add(7, False, 0, False, 7);
    oSegment.Fields.Add(8, False, 0, False, 8);
    oSegment.Fields.Add(9, False, 0, True, 9);
    oSegment.Fields.Add(10, False, 0, True, 10);
    oSegment.Fields.Add(11, False, 0, True, 11);
    oSegment.Fields.Add(12, False, 0, True, 12);
    oSegment.Fields.Add(13, False, 0, False, 13);
    oSegment.Fields.Add(14, False, 0, False, 14);
    oSegment.Fields.Add(15, False, 0, False, 15);
    oSegment.Fields.Add(16, False, 0, False, 16);
    oSegment.Fields.Add(17, False, 0, False, 17);
    oSegment.Fields.Add(692, False, 0, False, 18);
    oSegment.Fields.Add(693, False, 0, False, 19);
  oSegment := oSegments.Add('NCK', 'System Clock');
    oSegment.Fields.Add(1172, False, 0, False, 1);
  oSegment := oSegments.Add('NK1', 'Next of kin');
    oSegment.Fields.Add(190, False, 0, True, 1);
    oSegment.Fields.Add(191, True, 0, False, 2);
    oSegment.Fields.Add(192, False, 0, False, 3);
    oSegment.Fields.Add(193, True, 0, False, 4);
    oSegment.Fields.Add(194, True, 0, False, 5);
    oSegment.Fields.Add(195, True, 0, False, 6);
    oSegment.Fields.Add(196, False, 0, True, 7);
    oSegment.Fields.Add(197, False, 0, False, 8);
    oSegment.Fields.Add(198, False, 0, False, 9);
    oSegment.Fields.Add(199, False, 0, False, 10);
    oSegment.Fields.Add(200, False, 0, False, 11);
    oSegment.Fields.Add(201, False, 0, False, 12);
    oSegment.Fields.Add(202, True, 0, False, 13);
    oSegment.Fields.Add(119, True, 0, False, 14);
    oSegment.Fields.Add(111, False, 0, False, 15);
    oSegment.Fields.Add(110, False, 0, False, 16);
    oSegment.Fields.Add(755, True, 0, False, 17);
    oSegment.Fields.Add(145, True, 0, False, 18);
    oSegment.Fields.Add(129, True, 0, False, 19);
    oSegment.Fields.Add(118, False, 0, False, 20);
    oSegment.Fields.Add(742, False, 0, False, 21);
    oSegment.Fields.Add(743, False, 0, False, 22);
    oSegment.Fields.Add(744, False, 0, False, 23);
    oSegment.Fields.Add(745, False, 0, False, 24);
    oSegment.Fields.Add(120, False, 0, False, 25);
    oSegment.Fields.Add(746, False, 0, False, 26);
    oSegment.Fields.Add(739, False, 0, False, 27);
    oSegment.Fields.Add(125, False, 0, False, 28);
    oSegment.Fields.Add(747, True, 0, False, 29);
    oSegment.Fields.Add(748, True, 0, False, 30);
    oSegment.Fields.Add(749, True, 0, False, 31);
    oSegment.Fields.Add(750, True, 0, False, 32);
    oSegment.Fields.Add(751, True, 0, False, 33);
    oSegment.Fields.Add(752, False, 0, False, 34);
    oSegment.Fields.Add(113, False, 0, False, 35);
    oSegment.Fields.Add(753, False, 0, False, 36);
    oSegment.Fields.Add(754, False, 0, False, 37);
  oSegment := oSegments.Add('NPU', 'Bed status update');
    oSegment.Fields.Add(209, False, 0, True, 1);
    oSegment.Fields.Add(170, False, 0, False, 2);
  oSegment := oSegments.Add('NSC', 'STATUS CHANGE');
    oSegment.Fields.Add(1188, False, 0, False, 1);
    oSegment.Fields.Add(1189, False, 0, False, 2);
    oSegment.Fields.Add(1190, False, 0, False, 3);
    oSegment.Fields.Add(1191, False, 0, False, 4);
    oSegment.Fields.Add(1192, False, 0, False, 5);
    oSegment.Fields.Add(1193, False, 0, False, 6);
    oSegment.Fields.Add(1194, False, 0, False, 7);
    oSegment.Fields.Add(1195, False, 0, False, 8);
  oSegment := oSegments.Add('NST', 'Statistics');
    oSegment.Fields.Add(1173, False, 0, False, 1);
    oSegment.Fields.Add(1174, False, 0, False, 2);
    oSegment.Fields.Add(1175, False, 0, False, 3);
    oSegment.Fields.Add(1176, False, 0, False, 4);
    oSegment.Fields.Add(1177, False, 0, False, 5);
    oSegment.Fields.Add(1178, False, 0, False, 6);
    oSegment.Fields.Add(1179, False, 0, False, 7);
    oSegment.Fields.Add(1180, False, 0, False, 8);
    oSegment.Fields.Add(1181, False, 0, False, 9);
    oSegment.Fields.Add(1182, False, 0, False, 10);
    oSegment.Fields.Add(1183, False, 0, False, 11);
    oSegment.Fields.Add(1184, False, 0, False, 12);
    oSegment.Fields.Add(1185, False, 0, False, 13);
    oSegment.Fields.Add(1186, False, 0, False, 14);
    oSegment.Fields.Add(1187, False, 0, False, 15);
  oSegment := oSegments.Add('NTE', 'Notes and comments segment');
    oSegment.Fields.Add(96, False, 0, False, 1);
    oSegment.Fields.Add(97, False, 0, False, 2);
    oSegment.Fields.Add(98, True, 0, False, 3);
  oSegment := oSegments.Add('OBR', 'Observation request segment');
    oSegment.Fields.Add(237, False, 0, False, 1);
    oSegment.Fields.Add(216, False, 0, False, 2);
    oSegment.Fields.Add(217, False, 0, False, 3);
    oSegment.Fields.Add(238, False, 0, True, 4);
    oSegment.Fields.Add(239, False, 0, False, 5);
    oSegment.Fields.Add(240, False, 0, False, 6);
    oSegment.Fields.Add(241, False, 0, False, 7);
    oSegment.Fields.Add(242, False, 0, False, 8);
    oSegment.Fields.Add(243, False, 0, False, 9);
    oSegment.Fields.Add(244, True, 0, False, 10);
    oSegment.Fields.Add(245, False, 0, False, 11);
    oSegment.Fields.Add(246, False, 0, False, 12);
    oSegment.Fields.Add(247, False, 0, False, 13);
    oSegment.Fields.Add(248, False, 0, False, 14);
    oSegment.Fields.Add(249, False, 0, False, 15);
    oSegment.Fields.Add(226, True, 0, False, 16);
    oSegment.Fields.Add(250, True, 2, False, 17);
    oSegment.Fields.Add(251, False, 0, False, 18);
    oSegment.Fields.Add(252, False, 0, False, 19);
    oSegment.Fields.Add(253, False, 0, False, 20);
    oSegment.Fields.Add(254, False, 0, False, 21);
    oSegment.Fields.Add(255, False, 0, False, 22);
    oSegment.Fields.Add(256, False, 0, False, 23);
    oSegment.Fields.Add(257, False, 0, False, 24);
    oSegment.Fields.Add(258, False, 0, False, 25);
    oSegment.Fields.Add(259, False, 0, False, 26);
    oSegment.Fields.Add(221, False, 0, False, 27);
    oSegment.Fields.Add(260, True, 5, False, 28);
    oSegment.Fields.Add(261, False, 0, False, 29);
    oSegment.Fields.Add(262, False, 0, False, 30);
    oSegment.Fields.Add(263, True, 0, False, 31);
    oSegment.Fields.Add(264, False, 0, False, 32);
    oSegment.Fields.Add(265, True, 0, False, 33);
    oSegment.Fields.Add(266, True, 0, False, 34);
    oSegment.Fields.Add(267, True, 0, False, 35);
    oSegment.Fields.Add(268, False, 0, False, 36);
    oSegment.Fields.Add(1028, False, 0, False, 37);
    oSegment.Fields.Add(1029, True, 0, False, 38);
    oSegment.Fields.Add(1030, True, 0, False, 39);
    oSegment.Fields.Add(1031, False, 0, False, 40);
    oSegment.Fields.Add(1032, False, 0, False, 41);
    oSegment.Fields.Add(1033, False, 0, False, 42);
    oSegment.Fields.Add(1034, True, 0, False, 43);
  oSegment := oSegments.Add('OBX', 'Observation segment');
    oSegment.Fields.Add(569, False, 0, False, 1);
    oSegment.Fields.Add(570, False, 0, True, 2);
    oSegment.Fields.Add(571, False, 0, True, 3);
    oSegment.Fields.Add(572, False, 0, False, 4);
    oSegment.Fields.Add(573, True, 0, False, 5);
    oSegment.Fields.Add(574, False, 0, False, 6);
    oSegment.Fields.Add(575, False, 0, False, 7);
    oSegment.Fields.Add(576, True, 5, False, 8);
    oSegment.Fields.Add(577, False, 0, False, 9);
    oSegment.Fields.Add(578, False, 0, False, 10);
    oSegment.Fields.Add(579, False, 0, True, 11);
    oSegment.Fields.Add(580, False, 0, False, 12);
    oSegment.Fields.Add(581, False, 0, False, 13);
    oSegment.Fields.Add(582, False, 0, False, 14);
    oSegment.Fields.Add(583, False, 0, False, 15);
    oSegment.Fields.Add(584, False, 0, False, 16);
    oSegment.Fields.Add(936, True, 0, False, 17);
  oSegment := oSegments.Add('ODS', 'Dietary orders, supplements, and preferences');
    oSegment.Fields.Add(269, False, 0, True, 1);
    oSegment.Fields.Add(270, True, 10, False, 2);
    oSegment.Fields.Add(271, True, 20, True, 3);
    oSegment.Fields.Add(272, False, 0, False, 4);
  oSegment := oSegments.Add('ODT', 'Diet tray instructions segment');
    oSegment.Fields.Add(273, False, 0, True, 1);
    oSegment.Fields.Add(270, True, 10, False, 2);
    oSegment.Fields.Add(272, False, 0, False, 3);
  oSegment := oSegments.Add('OM1', 'General - fields that apply to most observations');
    oSegment.Fields.Add(586, False, 0, False, 1);
    oSegment.Fields.Add(587, False, 0, True, 2);
    oSegment.Fields.Add(588, True, 0, False, 3);
    oSegment.Fields.Add(589, False, 0, True, 4);
    oSegment.Fields.Add(590, False, 0, True, 5);
    oSegment.Fields.Add(591, False, 0, False, 6);
    oSegment.Fields.Add(592, False, 0, False, 7);
    oSegment.Fields.Add(593, True, 0, True, 8);
    oSegment.Fields.Add(594, False, 0, False, 9);
    oSegment.Fields.Add(595, False, 0, False, 10);
    oSegment.Fields.Add(596, False, 0, False, 11);
    oSegment.Fields.Add(597, False, 0, False, 12);
    oSegment.Fields.Add(598, True, 0, False, 13);
    oSegment.Fields.Add(599, False, 0, False, 14);
    oSegment.Fields.Add(600, False, 0, False, 15);
    oSegment.Fields.Add(601, True, 0, False, 16);
    oSegment.Fields.Add(602, False, 0, False, 17);
    oSegment.Fields.Add(603, False, 0, False, 18);
    oSegment.Fields.Add(604, False, 0, False, 19);
    oSegment.Fields.Add(605, False, 0, False, 20);
    oSegment.Fields.Add(606, False, 0, False, 21);
    oSegment.Fields.Add(607, False, 0, False, 22);
    oSegment.Fields.Add(608, False, 0, False, 23);
    oSegment.Fields.Add(609, False, 0, False, 24);
    oSegment.Fields.Add(610, True, 0, False, 25);
    oSegment.Fields.Add(611, False, 0, False, 26);
    oSegment.Fields.Add(612, True, 0, False, 27);
    oSegment.Fields.Add(613, False, 0, False, 28);
    oSegment.Fields.Add(614, False, 0, False, 29);
    oSegment.Fields.Add(615, False, 0, False, 30);
    oSegment.Fields.Add(616, False, 0, False, 31);
    oSegment.Fields.Add(617, False, 0, False, 32);
    oSegment.Fields.Add(618, False, 0, False, 33);
    oSegment.Fields.Add(619, True, 0, False, 34);
    oSegment.Fields.Add(620, False, 0, False, 35);
    oSegment.Fields.Add(621, False, 0, False, 36);
    oSegment.Fields.Add(622, False, 0, False, 37);
    oSegment.Fields.Add(623, False, 0, False, 38);
    oSegment.Fields.Add(624, False, 0, False, 39);
    oSegment.Fields.Add(625, True, 0, False, 40);
    oSegment.Fields.Add(626, False, 0, False, 41);
    oSegment.Fields.Add(937, False, 0, False, 42);
    oSegment.Fields.Add(938, False, 0, False, 43);
    oSegment.Fields.Add(939, False, 0, False, 44);
    oSegment.Fields.Add(940, False, 0, False, 45);
    oSegment.Fields.Add(941, False, 0, False, 46);
    oSegment.Fields.Add(942, False, 0, False, 47);
  oSegment := oSegments.Add('OM2', 'Numeric observation');
    oSegment.Fields.Add(586, False, 0, False, 1);
    oSegment.Fields.Add(627, False, 0, False, 2);
    oSegment.Fields.Add(628, True, 0, False, 3);
    oSegment.Fields.Add(629, False, 0, False, 4);
    oSegment.Fields.Add(630, False, 0, False, 5);
    oSegment.Fields.Add(631, False, 0, False, 6);
    oSegment.Fields.Add(632, False, 0, False, 7);
    oSegment.Fields.Add(633, False, 0, False, 8);
    oSegment.Fields.Add(634, True, 0, False, 9);
    oSegment.Fields.Add(635, False, 0, False, 10);
  oSegment := oSegments.Add('OM3', 'Categorical test/observation');
    oSegment.Fields.Add(586, False, 0, False, 1);
    oSegment.Fields.Add(636, False, 0, False, 2);
    oSegment.Fields.Add(637, False, 0, False, 3);
    oSegment.Fields.Add(638, True, 0, False, 4);
    oSegment.Fields.Add(639, False, 0, False, 5);
    oSegment.Fields.Add(640, False, 0, False, 6);
    oSegment.Fields.Add(570, False, 0, True, 7);
  oSegment := oSegments.Add('OM4', 'Observations that require specimens');
    oSegment.Fields.Add(586, False, 0, False, 1);
    oSegment.Fields.Add(642, False, 0, False, 2);
    oSegment.Fields.Add(643, False, 0, False, 3);
    oSegment.Fields.Add(644, False, 0, False, 4);
    oSegment.Fields.Add(645, False, 0, False, 5);
    oSegment.Fields.Add(646, False, 0, False, 6);
    oSegment.Fields.Add(647, False, 0, False, 7);
    oSegment.Fields.Add(648, False, 0, False, 8);
    oSegment.Fields.Add(649, False, 0, False, 9);
    oSegment.Fields.Add(650, False, 0, False, 10);
    oSegment.Fields.Add(651, False, 0, False, 11);
    oSegment.Fields.Add(652, False, 0, False, 12);
    oSegment.Fields.Add(653, False, 0, False, 13);
    oSegment.Fields.Add(654, False, 0, False, 14);
  oSegment := oSegments.Add('OM5', 'Observation batteries');
    oSegment.Fields.Add(586, False, 0, False, 1);
    oSegment.Fields.Add(655, True, 0, False, 2);
    oSegment.Fields.Add(656, False, 0, False, 3);
  oSegment := oSegments.Add('OM6', 'Observations that are calculated from other observations');
    oSegment.Fields.Add(586, False, 0, False, 1);
    oSegment.Fields.Add(657, False, 0, False, 2);
  oSegment := oSegments.Add('ORC', 'Common order segment');
    oSegment.Fields.Add(215, False, 0, True, 1);
    oSegment.Fields.Add(216, True, 0, False, 2);
    oSegment.Fields.Add(217, False, 0, False, 3);
    oSegment.Fields.Add(218, False, 0, False, 4);
    oSegment.Fields.Add(219, False, 0, False, 5);
    oSegment.Fields.Add(220, False, 0, False, 6);
    oSegment.Fields.Add(221, False, 0, True, 7);
    oSegment.Fields.Add(222, False, 0, False, 8);
    oSegment.Fields.Add(223, False, 0, False, 9);
    oSegment.Fields.Add(224, False, 0, False, 10);
    oSegment.Fields.Add(225, False, 0, False, 11);
    oSegment.Fields.Add(226, True, 0, False, 12);
    oSegment.Fields.Add(227, False, 0, False, 13);
    oSegment.Fields.Add(228, True, 2, False, 14);
    oSegment.Fields.Add(229, False, 0, False, 15);
    oSegment.Fields.Add(230, False, 0, False, 16);
    oSegment.Fields.Add(231, False, 0, False, 17);
    oSegment.Fields.Add(232, False, 0, False, 18);
    oSegment.Fields.Add(233, False, 0, False, 19);
  oSegment := oSegments.Add('PCR', 'Possible Causal Relationship');
    oSegment.Fields.Add(1098, False, 0, True, 1);
    oSegment.Fields.Add(1099, False, 0, False, 2);
    oSegment.Fields.Add(1100, False, 0, False, 3);
    oSegment.Fields.Add(1101, False, 0, False, 4);
    oSegment.Fields.Add(1102, False, 0, False, 5);
    oSegment.Fields.Add(1103, False, 0, False, 6);
    oSegment.Fields.Add(1104, False, 0, False, 7);
    oSegment.Fields.Add(1105, False, 0, False, 8);
    oSegment.Fields.Add(1106, False, 0, False, 9);
    oSegment.Fields.Add(1107, False, 0, False, 10);
    oSegment.Fields.Add(1108, False, 0, False, 11);
    oSegment.Fields.Add(1109, True, 3, False, 12);
    oSegment.Fields.Add(1110, False, 0, False, 13);
    oSegment.Fields.Add(1111, False, 0, False, 14);
    oSegment.Fields.Add(1112, False, 0, False, 15);
    oSegment.Fields.Add(1113, False, 0, False, 16);
    oSegment.Fields.Add(1114, False, 0, False, 17);
    oSegment.Fields.Add(1115, False, 0, False, 18);
    oSegment.Fields.Add(1116, False, 0, False, 19);
    oSegment.Fields.Add(1117, False, 0, False, 20);
    oSegment.Fields.Add(1118, True, 6, False, 21);
    oSegment.Fields.Add(1119, True, 6, False, 22);
    oSegment.Fields.Add(1120, True, 3, False, 23);
  oSegment := oSegments.Add('PD1', 'Patient Demographic');
    oSegment.Fields.Add(755, True, 0, False, 1);
    oSegment.Fields.Add(742, False, 0, False, 2);
    oSegment.Fields.Add(756, True, 0, False, 3);
    oSegment.Fields.Add(757, True, 0, False, 4);
    oSegment.Fields.Add(745, False, 0, False, 5);
    oSegment.Fields.Add(753, False, 0, False, 6);
    oSegment.Fields.Add(759, False, 0, False, 7);
    oSegment.Fields.Add(760, False, 0, False, 8);
    oSegment.Fields.Add(761, False, 0, False, 9);
    oSegment.Fields.Add(762, True, 0, False, 10);
    oSegment.Fields.Add(743, False, 0, False, 11);
    oSegment.Fields.Add(744, False, 0, False, 12);
  oSegment := oSegments.Add('PDC', 'Product Detail Country');
    oSegment.Fields.Add(1247, False, 0, True, 1);
    oSegment.Fields.Add(1248, False, 0, True, 2);
    oSegment.Fields.Add(1249, False, 0, True, 3);
    oSegment.Fields.Add(1250, False, 0, False, 4);
    oSegment.Fields.Add(1251, False, 0, False, 5);
    oSegment.Fields.Add(1252, True, 0, False, 6);
    oSegment.Fields.Add(1253, False, 0, False, 7);
    oSegment.Fields.Add(1254, True, 0, False, 8);
    oSegment.Fields.Add(1255, False, 0, False, 9);
    oSegment.Fields.Add(1256, False, 0, False, 10);
    oSegment.Fields.Add(1257, False, 0, False, 11);
    oSegment.Fields.Add(1258, False, 0, False, 12);
    oSegment.Fields.Add(1259, False, 0, False, 13);
    oSegment.Fields.Add(1260, False, 0, False, 14);
    oSegment.Fields.Add(1261, False, 0, False, 15);
  oSegment := oSegments.Add('PEO', 'Product Experience Observation');
    oSegment.Fields.Add(1073, True, 0, False, 1);
    oSegment.Fields.Add(1074, True, 0, False, 2);
    oSegment.Fields.Add(1075, False, 0, True, 3);
    oSegment.Fields.Add(1076, False, 0, False, 4);
    oSegment.Fields.Add(1077, False, 0, False, 5);
    oSegment.Fields.Add(1078, False, 0, False, 6);
    oSegment.Fields.Add(1079, False, 0, False, 7);
    oSegment.Fields.Add(1080, True, 0, False, 8);
    oSegment.Fields.Add(1081, False, 0, False, 9);
    oSegment.Fields.Add(1082, False, 0, False, 10);
    oSegment.Fields.Add(1083, True, 0, False, 11);
    oSegment.Fields.Add(1084, False, 0, False, 12);
    oSegment.Fields.Add(1085, True, 0, False, 13);
    oSegment.Fields.Add(1086, True, 0, False, 14);
    oSegment.Fields.Add(1087, True, 0, False, 15);
    oSegment.Fields.Add(1088, True, 0, False, 16);
    oSegment.Fields.Add(1089, True, 0, False, 17);
    oSegment.Fields.Add(1090, True, 0, False, 18);
    oSegment.Fields.Add(1091, False, 0, False, 19);
    oSegment.Fields.Add(1092, True, 0, False, 20);
    oSegment.Fields.Add(1093, True, 0, False, 21);
    oSegment.Fields.Add(1094, False, 0, False, 22);
    oSegment.Fields.Add(1095, False, 0, False, 23);
    oSegment.Fields.Add(1096, False, 0, False, 24);
    oSegment.Fields.Add(1097, False, 0, False, 25);
  oSegment := oSegments.Add('PES', 'Product Experience Sender');
    oSegment.Fields.Add(1059, False, 0, False, 1);
    oSegment.Fields.Add(1060, True, 0, False, 2);
    oSegment.Fields.Add(1062, True, 0, False, 3);
    oSegment.Fields.Add(1063, True, 0, False, 4);
    oSegment.Fields.Add(1064, False, 0, False, 5);
    oSegment.Fields.Add(1065, False, 0, False, 6);
    oSegment.Fields.Add(1066, True, 0, False, 7);
    oSegment.Fields.Add(1067, False, 0, False, 8);
    oSegment.Fields.Add(1068, False, 0, False, 9);
    oSegment.Fields.Add(1069, False, 0, True, 10);
    oSegment.Fields.Add(1070, True, 2, False, 11);
    oSegment.Fields.Add(1071, False, 0, False, 12);
    oSegment.Fields.Add(1072, True, 0, False, 13);
  oSegment := oSegments.Add('PID', 'Patient Identification');
    oSegment.Fields.Add(104, False, 0, False, 1);
    oSegment.Fields.Add(105, False, 0, False, 2);
    oSegment.Fields.Add(106, True, 0, True, 3);
    oSegment.Fields.Add(107, True, 0, False, 4);
    oSegment.Fields.Add(108, True, 0, True, 5);
    oSegment.Fields.Add(109, False, 0, False, 6);
    oSegment.Fields.Add(110, False, 0, False, 7);
    oSegment.Fields.Add(111, False, 0, False, 8);
    oSegment.Fields.Add(112, True, 0, False, 9);
    oSegment.Fields.Add(113, False, 0, False, 10);
    oSegment.Fields.Add(114, True, 0, False, 11);
    oSegment.Fields.Add(115, False, 0, False, 12);
    oSegment.Fields.Add(116, True, 0, False, 13);
    oSegment.Fields.Add(117, True, 0, False, 14);
    oSegment.Fields.Add(118, False, 0, False, 15);
    oSegment.Fields.Add(119, False, 0, False, 16);
    oSegment.Fields.Add(120, False, 0, False, 17);
    oSegment.Fields.Add(121, False, 0, False, 18);
    oSegment.Fields.Add(122, False, 0, False, 19);
    oSegment.Fields.Add(123, False, 0, False, 20);
    oSegment.Fields.Add(124, True, 0, False, 21);
    oSegment.Fields.Add(125, False, 0, False, 22);
    oSegment.Fields.Add(126, False, 0, False, 23);
    oSegment.Fields.Add(127, False, 0, False, 24);
    oSegment.Fields.Add(128, False, 0, False, 25);
    oSegment.Fields.Add(129, True, 0, False, 26);
    oSegment.Fields.Add(130, False, 0, False, 27);
    oSegment.Fields.Add(739, False, 0, False, 28);
    oSegment.Fields.Add(740, False, 0, False, 29);
    oSegment.Fields.Add(741, False, 0, False, 30);
  oSegment := oSegments.Add('PR1', 'Procedures');
    oSegment.Fields.Add(391, False, 0, True, 1);
    oSegment.Fields.Add(392, False, 0, True, 2);
    oSegment.Fields.Add(393, False, 0, True, 3);
    oSegment.Fields.Add(394, False, 0, False, 4);
    oSegment.Fields.Add(395, False, 0, False, 5);
    oSegment.Fields.Add(396, False, 0, True, 6);
    oSegment.Fields.Add(397, False, 0, False, 7);
    oSegment.Fields.Add(398, True, 0, False, 8);
    oSegment.Fields.Add(399, False, 0, False, 9);
    oSegment.Fields.Add(400, False, 0, False, 10);
    oSegment.Fields.Add(401, True, 0, False, 11);
    oSegment.Fields.Add(402, True, 0, False, 12);
    oSegment.Fields.Add(403, False, 0, False, 13);
    oSegment.Fields.Add(404, False, 0, False, 14);
    oSegment.Fields.Add(772, False, 0, False, 15);
  oSegment := oSegments.Add('PRA', 'Practitioner detail segment');
    oSegment.Fields.Add(685, False, 0, True, 1);
    oSegment.Fields.Add(686, True, 0, False, 2);
    oSegment.Fields.Add(687, True, 0, False, 3);
    oSegment.Fields.Add(688, False, 0, False, 4);
    oSegment.Fields.Add(689, True, 0, False, 5);
    oSegment.Fields.Add(690, True, 0, False, 6);
    oSegment.Fields.Add(691, True, 0, False, 7);
  oSegment := oSegments.Add('PRB', 'Problem Detail');
    oSegment.Fields.Add(816, False, 0, True, 1);
    oSegment.Fields.Add(817, False, 0, True, 2);
    oSegment.Fields.Add(838, False, 0, True, 3);
    oSegment.Fields.Add(839, False, 0, True, 4);
    oSegment.Fields.Add(820, False, 0, False, 5);
    oSegment.Fields.Add(841, False, 0, False, 6);
    oSegment.Fields.Add(842, False, 0, False, 7);
    oSegment.Fields.Add(843, False, 0, False, 8);
    oSegment.Fields.Add(844, False, 0, False, 9);
    oSegment.Fields.Add(845, False, 0, False, 10);
    oSegment.Fields.Add(846, True, 0, False, 11);
    oSegment.Fields.Add(847, False, 0, False, 12);
    oSegment.Fields.Add(848, False, 0, False, 13);
    oSegment.Fields.Add(849, False, 0, False, 14);
    oSegment.Fields.Add(850, False, 0, False, 15);
    oSegment.Fields.Add(851, False, 0, False, 16);
    oSegment.Fields.Add(852, False, 0, False, 17);
    oSegment.Fields.Add(853, False, 0, False, 18);
    oSegment.Fields.Add(854, False, 0, False, 19);
    oSegment.Fields.Add(855, False, 0, False, 20);
    oSegment.Fields.Add(856, False, 0, False, 21);
    oSegment.Fields.Add(857, False, 0, False, 22);
    oSegment.Fields.Add(858, False, 0, False, 23);
    oSegment.Fields.Add(859, False, 0, False, 24);
    oSegment.Fields.Add(823, False, 0, False, 25);
  oSegment := oSegments.Add('PRC', 'Pricing');
    oSegment.Fields.Add(982, False, 0, True, 1);
    oSegment.Fields.Add(1262, True, 0, True, 2);
    oSegment.Fields.Add(996, True, 0, False, 3);
    oSegment.Fields.Add(967, True, 0, False, 4);
    oSegment.Fields.Add(998, True, 0, False, 5);
    oSegment.Fields.Add(999, True, 0, False, 6);
    oSegment.Fields.Add(1000, False, 0, False, 7);
    oSegment.Fields.Add(1001, False, 0, False, 8);
    oSegment.Fields.Add(1002, False, 0, False, 9);
    oSegment.Fields.Add(1003, False, 0, False, 10);
    oSegment.Fields.Add(1004, False, 0, False, 11);
    oSegment.Fields.Add(1005, False, 0, False, 12);
    oSegment.Fields.Add(1006, False, 0, False, 13);
    oSegment.Fields.Add(1007, True, 0, False, 14);
    oSegment.Fields.Add(1008, False, 0, False, 15);
    oSegment.Fields.Add(675, False, 0, False, 16);
    oSegment.Fields.Add(989, False, 0, False, 17);
    oSegment.Fields.Add(1009, False, 0, False, 18);
  oSegment := oSegments.Add('PRD', 'Provider Data');
    oSegment.Fields.Add(1155, True, 0, True, 1);
    oSegment.Fields.Add(1156, True, 0, False, 2);
    oSegment.Fields.Add(1157, False, 0, False, 3);
    oSegment.Fields.Add(1158, False, 0, False, 4);
    oSegment.Fields.Add(1159, True, 0, False, 5);
    oSegment.Fields.Add(684, False, 0, False, 6);
    oSegment.Fields.Add(1162, True, 0, False, 7);
    oSegment.Fields.Add(1163, False, 0, False, 8);
    oSegment.Fields.Add(1164, False, 0, False, 9);
  oSegment := oSegments.Add('PSH', 'Product Summary Header');
    oSegment.Fields.Add(1233, False, 0, True, 1);
    oSegment.Fields.Add(1234, False, 0, False, 2);
    oSegment.Fields.Add(1235, False, 0, True, 3);
    oSegment.Fields.Add(1236, False, 0, False, 4);
    oSegment.Fields.Add(1237, False, 0, False, 5);
    oSegment.Fields.Add(1238, False, 0, False, 6);
    oSegment.Fields.Add(1239, False, 0, False, 7);
    oSegment.Fields.Add(1240, False, 0, False, 8);
    oSegment.Fields.Add(1241, False, 0, False, 9);
    oSegment.Fields.Add(1242, False, 0, False, 10);
    oSegment.Fields.Add(1243, False, 0, False, 11);
    oSegment.Fields.Add(1244, False, 0, False, 12);
    oSegment.Fields.Add(1245, True, 8, False, 13);
    oSegment.Fields.Add(1246, True, 8, False, 14);
  oSegment := oSegments.Add('PTH', 'Pathway');
    oSegment.Fields.Add(816, False, 0, True, 1);
    oSegment.Fields.Add(1207, False, 0, True, 2);
    oSegment.Fields.Add(1208, False, 0, True, 3);
    oSegment.Fields.Add(1209, False, 0, True, 4);
    oSegment.Fields.Add(1210, False, 0, False, 5);
    oSegment.Fields.Add(1211, False, 0, False, 6);
  oSegment := oSegments.Add('PV1', 'Patient visit');
    oSegment.Fields.Add(131, False, 0, False, 1);
    oSegment.Fields.Add(132, False, 0, True, 2);
    oSegment.Fields.Add(133, False, 0, False, 3);
    oSegment.Fields.Add(134, False, 0, False, 4);
    oSegment.Fields.Add(135, False, 0, False, 5);
    oSegment.Fields.Add(136, False, 0, False, 6);
    oSegment.Fields.Add(137, True, 0, False, 7);
    oSegment.Fields.Add(138, True, 0, False, 8);
    oSegment.Fields.Add(139, True, 0, False, 9);
    oSegment.Fields.Add(140, False, 0, False, 10);
    oSegment.Fields.Add(141, False, 0, False, 11);
    oSegment.Fields.Add(142, False, 0, False, 12);
    oSegment.Fields.Add(143, False, 0, False, 13);
    oSegment.Fields.Add(144, False, 0, False, 14);
    oSegment.Fields.Add(145, True, 0, False, 15);
    oSegment.Fields.Add(146, False, 0, False, 16);
    oSegment.Fields.Add(147, True, 0, False, 17);
    oSegment.Fields.Add(148, False, 0, False, 18);
    oSegment.Fields.Add(149, False, 0, False, 19);
    oSegment.Fields.Add(150, True, 0, False, 20);
    oSegment.Fields.Add(151, False, 0, False, 21);
    oSegment.Fields.Add(152, False, 0, False, 22);
    oSegment.Fields.Add(153, False, 0, False, 23);
    oSegment.Fields.Add(154, True, 0, False, 24);
    oSegment.Fields.Add(155, True, 0, False, 25);
    oSegment.Fields.Add(156, True, 0, False, 26);
    oSegment.Fields.Add(157, True, 0, False, 27);
    oSegment.Fields.Add(158, False, 0, False, 28);
    oSegment.Fields.Add(159, False, 0, False, 29);
    oSegment.Fields.Add(160, False, 0, False, 30);
    oSegment.Fields.Add(161, False, 0, False, 31);
    oSegment.Fields.Add(162, False, 0, False, 32);
    oSegment.Fields.Add(163, False, 0, False, 33);
    oSegment.Fields.Add(164, False, 0, False, 34);
    oSegment.Fields.Add(165, False, 0, False, 35);
    oSegment.Fields.Add(166, False, 0, False, 36);
    oSegment.Fields.Add(167, False, 0, False, 37);
    oSegment.Fields.Add(168, False, 0, False, 38);
    oSegment.Fields.Add(169, False, 0, False, 39);
    oSegment.Fields.Add(170, False, 0, False, 40);
    oSegment.Fields.Add(171, False, 0, False, 41);
    oSegment.Fields.Add(172, False, 0, False, 42);
    oSegment.Fields.Add(173, False, 0, False, 43);
    oSegment.Fields.Add(174, False, 0, False, 44);
    oSegment.Fields.Add(175, False, 0, False, 45);
    oSegment.Fields.Add(176, False, 0, False, 46);
    oSegment.Fields.Add(177, False, 0, False, 47);
    oSegment.Fields.Add(178, False, 0, False, 48);
    oSegment.Fields.Add(179, False, 0, False, 49);
    oSegment.Fields.Add(180, False, 0, False, 50);
    oSegment.Fields.Add(1226, False, 0, False, 51);
    oSegment.Fields.Add(1274, True, 0, False, 52);
  oSegment := oSegments.Add('PV2', 'Patient visit - additional information');
    oSegment.Fields.Add(181, False, 0, False, 1);
    oSegment.Fields.Add(182, False, 0, False, 2);
    oSegment.Fields.Add(183, False, 0, False, 3);
    oSegment.Fields.Add(184, False, 0, False, 4);
    oSegment.Fields.Add(185, True, 0, False, 5);
    oSegment.Fields.Add(186, False, 0, False, 6);
    oSegment.Fields.Add(187, False, 0, False, 7);
    oSegment.Fields.Add(188, False, 0, False, 8);
    oSegment.Fields.Add(189, False, 0, False, 9);
    oSegment.Fields.Add(711, False, 0, False, 10);
    oSegment.Fields.Add(712, False, 0, False, 11);
    oSegment.Fields.Add(713, False, 0, False, 12);
    oSegment.Fields.Add(714, False, 0, False, 13);
    oSegment.Fields.Add(715, False, 0, False, 14);
    oSegment.Fields.Add(716, False, 0, False, 15);
    oSegment.Fields.Add(717, False, 0, False, 16);
    oSegment.Fields.Add(718, False, 0, False, 17);
    oSegment.Fields.Add(719, False, 0, False, 18);
    oSegment.Fields.Add(720, False, 0, False, 19);
    oSegment.Fields.Add(721, False, 0, False, 20);
    oSegment.Fields.Add(722, False, 0, False, 21);
    oSegment.Fields.Add(723, False, 0, False, 22);
    oSegment.Fields.Add(724, True, 0, False, 23);
    oSegment.Fields.Add(725, False, 0, False, 24);
    oSegment.Fields.Add(726, False, 0, False, 25);
    oSegment.Fields.Add(727, False, 0, False, 26);
    oSegment.Fields.Add(728, False, 0, False, 27);
    oSegment.Fields.Add(729, False, 0, False, 28);
    oSegment.Fields.Add(730, False, 0, False, 29);
    oSegment.Fields.Add(731, False, 0, False, 30);
    oSegment.Fields.Add(732, False, 0, False, 31);
    oSegment.Fields.Add(733, False, 0, False, 32);
    oSegment.Fields.Add(734, False, 0, False, 33);
    oSegment.Fields.Add(735, False, 0, False, 34);
    oSegment.Fields.Add(736, False, 0, False, 35);
    oSegment.Fields.Add(737, False, 0, False, 36);
    oSegment.Fields.Add(738, False, 0, False, 37);
  oSegment := oSegments.Add('QAK', 'Query Acknowledgement');
    oSegment.Fields.Add(696, False, 0, False, 1);
    oSegment.Fields.Add(708, False, 0, False, 2);
  oSegment := oSegments.Add('QRD', 'Query definition segment');
    oSegment.Fields.Add(25, False, 0, False, 1);
    oSegment.Fields.Add(26, False, 0, True, 2);
    oSegment.Fields.Add(27, False, 0, True, 3);
    oSegment.Fields.Add(28, False, 0, True, 4);
    oSegment.Fields.Add(29, False, 0, False, 5);
    oSegment.Fields.Add(30, False, 0, False, 6);
    oSegment.Fields.Add(31, False, 0, True, 7);
    oSegment.Fields.Add(32, True, 0, True, 8);
    oSegment.Fields.Add(33, True, 0, True, 9);
    oSegment.Fields.Add(34, True, 0, True, 10);
    oSegment.Fields.Add(35, True, 0, False, 11);
    oSegment.Fields.Add(36, False, 0, False, 12);
  oSegment := oSegments.Add('QRF', 'Query filter segment');
    oSegment.Fields.Add(37, True, 0, True, 1);
    oSegment.Fields.Add(38, False, 0, False, 2);
    oSegment.Fields.Add(39, False, 0, False, 3);
    oSegment.Fields.Add(40, True, 0, False, 4);
    oSegment.Fields.Add(41, True, 0, False, 5);
    oSegment.Fields.Add(42, True, 0, False, 6);
    oSegment.Fields.Add(43, True, 0, False, 7);
    oSegment.Fields.Add(44, True, 0, False, 8);
    oSegment.Fields.Add(694, False, 0, False, 9);
  oSegment := oSegments.Add('RDF', 'Table Row Definition');
    oSegment.Fields.Add(701, False, 0, True, 1);
    oSegment.Fields.Add(702, True, 0, True, 2);
  oSegment := oSegments.Add('RDT', 'Table Row Data');
    oSegment.Fields.Add(703, False, 0, True, 1);
  oSegment := oSegments.Add('RF1', 'Referral Information Segment');
    oSegment.Fields.Add(1137, False, 0, False, 1);
    oSegment.Fields.Add(1138, False, 0, False, 2);
    oSegment.Fields.Add(1139, False, 0, False, 3);
    oSegment.Fields.Add(1140, True, 0, False, 4);
    oSegment.Fields.Add(1141, False, 0, False, 5);
    oSegment.Fields.Add(1142, False, 0, True, 6);
    oSegment.Fields.Add(1143, False, 0, False, 7);
    oSegment.Fields.Add(1144, False, 0, False, 8);
    oSegment.Fields.Add(1145, False, 0, False, 9);
    oSegment.Fields.Add(1228, True, 0, False, 10);
    oSegment.Fields.Add(1300, True, 0, False, 11);
  oSegment := oSegments.Add('RGS', 'Resource Group');
    oSegment.Fields.Add(1203, False, 0, True, 1);
    oSegment.Fields.Add(763, False, 0, False, 2);
    oSegment.Fields.Add(1204, False, 0, False, 3);
  oSegment := oSegments.Add('ROL', 'Role');
    oSegment.Fields.Add(1206, False, 0, True, 1);
    oSegment.Fields.Add(816, False, 0, True, 2);
    oSegment.Fields.Add(1197, False, 0, False, 3);
    oSegment.Fields.Add(1198, False, 0, True, 4);
    oSegment.Fields.Add(1199, False, 0, False, 5);
    oSegment.Fields.Add(1200, False, 0, False, 6);
    oSegment.Fields.Add(1201, False, 0, False, 7);
    oSegment.Fields.Add(1205, False, 0, False, 8);
  oSegment := oSegments.Add('RQ1', 'Requisition detail-1 segment');
    oSegment.Fields.Add(285, False, 0, False, 1);
    oSegment.Fields.Add(286, False, 0, False, 2);
    oSegment.Fields.Add(287, False, 0, False, 3);
    oSegment.Fields.Add(288, False, 0, False, 4);
    oSegment.Fields.Add(289, False, 0, False, 5);
    oSegment.Fields.Add(290, False, 0, False, 6);
    oSegment.Fields.Add(291, False, 0, False, 7);
  oSegment := oSegments.Add('RQD', 'Requisition detail');
    oSegment.Fields.Add(275, False, 0, False, 1);
    oSegment.Fields.Add(276, False, 0, False, 2);
    oSegment.Fields.Add(277, False, 0, False, 3);
    oSegment.Fields.Add(278, False, 0, False, 4);
    oSegment.Fields.Add(279, False, 0, False, 5);
    oSegment.Fields.Add(280, False, 0, False, 6);
    oSegment.Fields.Add(281, False, 0, False, 7);
    oSegment.Fields.Add(282, False, 0, False, 8);
    oSegment.Fields.Add(283, False, 0, False, 9);
    oSegment.Fields.Add(284, False, 0, False, 10);
  oSegment := oSegments.Add('RXA', 'Pharmacy administration segment');
    oSegment.Fields.Add(342, False, 0, True, 1);
    oSegment.Fields.Add(344, False, 0, True, 2);
    oSegment.Fields.Add(345, False, 0, True, 3);
    oSegment.Fields.Add(346, False, 0, True, 4);
    oSegment.Fields.Add(347, False, 0, True, 5);
    oSegment.Fields.Add(348, False, 0, True, 6);
    oSegment.Fields.Add(349, False, 0, False, 7);
    oSegment.Fields.Add(350, False, 0, False, 8);
    oSegment.Fields.Add(351, True, 0, False, 9);
    oSegment.Fields.Add(352, False, 0, False, 10);
    oSegment.Fields.Add(353, False, 0, False, 11);
    oSegment.Fields.Add(354, False, 0, False, 12);
    oSegment.Fields.Add(1134, False, 0, False, 13);
    oSegment.Fields.Add(1135, False, 0, False, 14);
    oSegment.Fields.Add(1129, True, 0, False, 15);
    oSegment.Fields.Add(1130, True, 0, False, 16);
    oSegment.Fields.Add(1131, True, 0, False, 17);
    oSegment.Fields.Add(1136, True, 0, False, 18);
    oSegment.Fields.Add(1123, True, 0, False, 19);
    oSegment.Fields.Add(1223, False, 0, False, 20);
    oSegment.Fields.Add(1224, False, 0, False, 21);
    oSegment.Fields.Add(1225, False, 0, False, 22);
  oSegment := oSegments.Add('RXC', 'Pharmacy component order segment');
    oSegment.Fields.Add(313, False, 0, True, 1);
    oSegment.Fields.Add(314, False, 0, True, 2);
    oSegment.Fields.Add(315, False, 0, True, 3);
    oSegment.Fields.Add(316, False, 0, True, 4);
    oSegment.Fields.Add(1124, False, 0, False, 5);
    oSegment.Fields.Add(1125, False, 0, False, 6);
  oSegment := oSegments.Add('RXD', 'Pharmacy dispense segment');
    oSegment.Fields.Add(334, False, 0, True, 1);
    oSegment.Fields.Add(335, False, 0, True, 2);
    oSegment.Fields.Add(336, False, 0, True, 3);
    oSegment.Fields.Add(337, False, 0, True, 4);
    oSegment.Fields.Add(338, False, 0, False, 5);
    oSegment.Fields.Add(339, False, 0, False, 6);
    oSegment.Fields.Add(325, False, 0, True, 7);
    oSegment.Fields.Add(326, False, 0, False, 8);
    oSegment.Fields.Add(340, True, 0, False, 9);
    oSegment.Fields.Add(341, False, 0, False, 10);
    oSegment.Fields.Add(322, False, 0, False, 11);
    oSegment.Fields.Add(329, False, 0, False, 12);
    oSegment.Fields.Add(1303, False, 0, False, 13);
    oSegment.Fields.Add(307, False, 0, False, 14);
    oSegment.Fields.Add(330, True, 0, False, 15);
    oSegment.Fields.Add(1132, False, 0, False, 16);
    oSegment.Fields.Add(1133, False, 0, False, 17);
    oSegment.Fields.Add(1129, True, 0, False, 18);
    oSegment.Fields.Add(1130, True, 0, False, 19);
    oSegment.Fields.Add(1131, True, 0, False, 20);
    oSegment.Fields.Add(1123, False, 0, False, 21);
    oSegment.Fields.Add(1220, False, 0, False, 22);
    oSegment.Fields.Add(1221, False, 0, False, 23);
    oSegment.Fields.Add(1222, False, 0, False, 24);
  oSegment := oSegments.Add('RXE', 'Pharmacy encoded order segment');
    oSegment.Fields.Add(221, False, 0, True, 1);
    oSegment.Fields.Add(317, False, 0, True, 2);
    oSegment.Fields.Add(318, False, 0, True, 3);
    oSegment.Fields.Add(319, False, 0, False, 4);
    oSegment.Fields.Add(320, False, 0, True, 5);
    oSegment.Fields.Add(321, False, 0, False, 6);
    oSegment.Fields.Add(298, True, 0, False, 7);
    oSegment.Fields.Add(299, False, 0, False, 8);
    oSegment.Fields.Add(322, False, 0, False, 9);
    oSegment.Fields.Add(323, False, 0, False, 10);
    oSegment.Fields.Add(324, False, 0, False, 11);
    oSegment.Fields.Add(304, False, 0, False, 12);
    oSegment.Fields.Add(305, False, 0, False, 13);
    oSegment.Fields.Add(306, False, 0, False, 14);
    oSegment.Fields.Add(325, False, 0, False, 15);
    oSegment.Fields.Add(326, False, 0, False, 16);
    oSegment.Fields.Add(327, False, 0, False, 17);
    oSegment.Fields.Add(328, False, 0, False, 18);
    oSegment.Fields.Add(329, False, 0, False, 19);
    oSegment.Fields.Add(307, False, 0, False, 20);
    oSegment.Fields.Add(330, True, 0, False, 21);
    oSegment.Fields.Add(331, False, 0, False, 22);
    oSegment.Fields.Add(332, False, 0, False, 23);
    oSegment.Fields.Add(333, False, 0, False, 24);
    oSegment.Fields.Add(1126, False, 0, False, 25);
    oSegment.Fields.Add(1127, False, 0, False, 26);
    oSegment.Fields.Add(1128, False, 0, False, 27);
    oSegment.Fields.Add(1220, False, 0, False, 28);
    oSegment.Fields.Add(1221, False, 0, False, 29);
    oSegment.Fields.Add(1222, False, 0, False, 30);
  oSegment := oSegments.Add('RXG', 'Pharmacy give segment');
    oSegment.Fields.Add(342, False, 0, False, 1);
    oSegment.Fields.Add(334, False, 0, True, 2);
    oSegment.Fields.Add(221, False, 0, True, 3);
    oSegment.Fields.Add(317, False, 0, True, 4);
    oSegment.Fields.Add(318, False, 0, True, 5);
    oSegment.Fields.Add(319, False, 0, False, 6);
    oSegment.Fields.Add(320, False, 0, True, 7);
    oSegment.Fields.Add(321, False, 0, False, 8);
    oSegment.Fields.Add(351, True, 0, False, 9);
    oSegment.Fields.Add(322, False, 0, False, 10);
    oSegment.Fields.Add(1303, False, 0, False, 11);
    oSegment.Fields.Add(307, False, 0, False, 12);
    oSegment.Fields.Add(343, False, 0, False, 13);
    oSegment.Fields.Add(331, False, 0, False, 14);
    oSegment.Fields.Add(332, False, 0, False, 15);
    oSegment.Fields.Add(333, False, 0, False, 16);
    oSegment.Fields.Add(1126, False, 0, False, 17);
    oSegment.Fields.Add(1127, False, 0, False, 18);
    oSegment.Fields.Add(1129, True, 0, False, 19);
    oSegment.Fields.Add(1130, True, 0, False, 20);
    oSegment.Fields.Add(1131, True, 0, False, 21);
    oSegment.Fields.Add(1123, False, 0, False, 22);
  oSegment := oSegments.Add('RXO', 'Pharmacy prescription order segment');
    oSegment.Fields.Add(292, False, 0, True, 1);
    oSegment.Fields.Add(293, False, 0, True, 2);
    oSegment.Fields.Add(294, False, 0, False, 3);
    oSegment.Fields.Add(295, False, 0, True, 4);
    oSegment.Fields.Add(296, False, 0, False, 5);
    oSegment.Fields.Add(297, True, 0, False, 6);
    oSegment.Fields.Add(298, True, 0, False, 7);
    oSegment.Fields.Add(299, False, 0, False, 8);
    oSegment.Fields.Add(300, False, 0, False, 9);
    oSegment.Fields.Add(301, False, 0, False, 10);
    oSegment.Fields.Add(302, False, 0, False, 11);
    oSegment.Fields.Add(303, False, 0, False, 12);
    oSegment.Fields.Add(304, False, 0, False, 13);
    oSegment.Fields.Add(305, False, 0, False, 14);
    oSegment.Fields.Add(306, False, 0, False, 15);
    oSegment.Fields.Add(307, False, 0, False, 16);
    oSegment.Fields.Add(308, False, 0, False, 17);
    oSegment.Fields.Add(1121, False, 0, False, 18);
    oSegment.Fields.Add(1122, False, 0, False, 19);
    oSegment.Fields.Add(1123, False, 0, False, 20);
    oSegment.Fields.Add(1218, False, 0, False, 21);
    oSegment.Fields.Add(1219, False, 0, False, 22);
  oSegment := oSegments.Add('RXR', 'Pharmacy route segment');
    oSegment.Fields.Add(309, False, 0, True, 1);
    oSegment.Fields.Add(310, False, 0, False, 2);
    oSegment.Fields.Add(311, False, 0, False, 3);
    oSegment.Fields.Add(312, False, 0, False, 4);
  oSegment := oSegments.Add('SCH', 'Schedule Activity Information');
    oSegment.Fields.Add(860, False, 0, True, 1);
    oSegment.Fields.Add(861, False, 0, False, 2);
    oSegment.Fields.Add(862, False, 0, False, 3);
    oSegment.Fields.Add(863, False, 0, False, 4);
    oSegment.Fields.Add(864, False, 0, False, 5);
    oSegment.Fields.Add(883, False, 0, True, 6);
    oSegment.Fields.Add(866, False, 0, False, 7);
    oSegment.Fields.Add(867, False, 0, False, 8);
    oSegment.Fields.Add(868, False, 0, False, 9);
    oSegment.Fields.Add(869, False, 0, False, 10);
    oSegment.Fields.Add(884, True, 0, True, 11);
    oSegment.Fields.Add(874, False, 0, False, 12);
    oSegment.Fields.Add(875, False, 0, False, 13);
    oSegment.Fields.Add(876, False, 0, False, 14);
    oSegment.Fields.Add(877, False, 0, False, 15);
    oSegment.Fields.Add(885, False, 0, True, 16);
    oSegment.Fields.Add(886, False, 0, False, 17);
    oSegment.Fields.Add(887, False, 0, False, 18);
    oSegment.Fields.Add(888, False, 0, False, 19);
    oSegment.Fields.Add(878, False, 0, True, 20);
    oSegment.Fields.Add(879, True, 0, False, 21);
    oSegment.Fields.Add(880, False, 0, False, 22);
    oSegment.Fields.Add(881, False, 0, False, 23);
    oSegment.Fields.Add(882, False, 0, False, 24);
    oSegment.Fields.Add(889, False, 0, False, 25);
  oSegment := oSegments.Add('SPR', 'Stored Procedure Request Definition');
    oSegment.Fields.Add(696, False, 0, False, 1);
    oSegment.Fields.Add(697, False, 0, True, 2);
    oSegment.Fields.Add(704, False, 0, True, 3);
    oSegment.Fields.Add(705, True, 0, False, 4);
  oSegment := oSegments.Add('STF', 'Staff identification segment');
    oSegment.Fields.Add(671, False, 0, True, 1);
    oSegment.Fields.Add(672, True, 0, False, 2);
    oSegment.Fields.Add(673, False, 0, False, 3);
    oSegment.Fields.Add(674, True, 0, False, 4);
    oSegment.Fields.Add(111, False, 0, False, 5);
    oSegment.Fields.Add(110, False, 0, False, 6);
    oSegment.Fields.Add(675, False, 0, False, 7);
    oSegment.Fields.Add(676, True, 0, False, 8);
    oSegment.Fields.Add(677, True, 0, False, 9);
    oSegment.Fields.Add(678, True, 0, False, 10);
    oSegment.Fields.Add(679, True, 2, False, 11);
    oSegment.Fields.Add(680, True, 0, False, 12);
    oSegment.Fields.Add(681, True, 0, False, 13);
    oSegment.Fields.Add(682, True, 0, False, 14);
    oSegment.Fields.Add(683, True, 0, False, 15);
    oSegment.Fields.Add(684, False, 0, False, 16);
    oSegment.Fields.Add(119, True, 0, False, 17);
    oSegment.Fields.Add(785, False, 0, False, 18);
    oSegment.Fields.Add(786, False, 0, False, 19);
    oSegment.Fields.Add(1276, False, 0, False, 20);
    oSegment.Fields.Add(1275, False, 0, False, 21);
    oSegment.Fields.Add(123, False, 0, False, 22);
    oSegment.Fields.Add(1229, False, 0, False, 23);
    oSegment.Fields.Add(1232, False, 0, False, 24);
    oSegment.Fields.Add(1298, False, 0, False, 25);
    oSegment.Fields.Add(1297, False, 0, False, 26);
  oSegment := oSegments.Add('TXA', 'Document notification segment');
    oSegment.Fields.Add(914, False, 0, True, 1);
    oSegment.Fields.Add(915, False, 0, True, 2);
    oSegment.Fields.Add(916, False, 0, False, 3);
    oSegment.Fields.Add(917, False, 0, False, 4);
    oSegment.Fields.Add(918, False, 0, False, 5);
    oSegment.Fields.Add(919, False, 0, False, 6);
    oSegment.Fields.Add(920, False, 0, False, 7);
    oSegment.Fields.Add(921, True, 0, False, 8);
    oSegment.Fields.Add(922, False, 0, False, 9);
    oSegment.Fields.Add(923, True, 0, False, 10);
    oSegment.Fields.Add(924, False, 0, False, 11);
    oSegment.Fields.Add(925, False, 0, True, 12);
    oSegment.Fields.Add(926, False, 0, False, 13);
    oSegment.Fields.Add(216, True, 0, False, 14);
    oSegment.Fields.Add(217, False, 0, False, 15);
    oSegment.Fields.Add(927, False, 0, False, 16);
    oSegment.Fields.Add(928, True, 0, True, 17);
    oSegment.Fields.Add(929, False, 0, False, 18);
    oSegment.Fields.Add(930, False, 0, False, 19);
    oSegment.Fields.Add(932, False, 0, False, 20);
    oSegment.Fields.Add(933, False, 0, False, 21);
    oSegment.Fields.Add(934, True, 0, False, 22);
    oSegment.Fields.Add(935, True, 0, False, 23);
  oSegment := oSegments.Add('UB1', 'UB82  data');
    oSegment.Fields.Add(530, False, 0, False, 1);
    oSegment.Fields.Add(531, False, 0, False, 2);
    oSegment.Fields.Add(532, False, 0, False, 3);
    oSegment.Fields.Add(533, False, 0, False, 4);
    oSegment.Fields.Add(534, False, 0, False, 5);
    oSegment.Fields.Add(535, False, 0, False, 6);
    oSegment.Fields.Add(536, True, 5, False, 7);
    oSegment.Fields.Add(537, False, 0, False, 8);
    oSegment.Fields.Add(538, False, 0, False, 9);
    oSegment.Fields.Add(539, True, 8, False, 10);
    oSegment.Fields.Add(540, False, 0, False, 11);
    oSegment.Fields.Add(541, False, 0, False, 12);
    oSegment.Fields.Add(542, False, 0, False, 13);
    oSegment.Fields.Add(543, False, 0, False, 14);
    oSegment.Fields.Add(544, False, 0, False, 15);
    oSegment.Fields.Add(545, True, 5, False, 16);
    oSegment.Fields.Add(546, False, 0, False, 17);
    oSegment.Fields.Add(547, False, 0, False, 18);
    oSegment.Fields.Add(548, False, 0, False, 19);
    oSegment.Fields.Add(549, False, 0, False, 20);
    oSegment.Fields.Add(550, False, 0, False, 21);
    oSegment.Fields.Add(551, False, 0, False, 22);
    oSegment.Fields.Add(552, False, 0, False, 23);
  oSegment := oSegments.Add('UB2', 'UB92 data');
    oSegment.Fields.Add(553, False, 0, False, 1);
    oSegment.Fields.Add(554, False, 0, False, 2);
    oSegment.Fields.Add(555, True, 7, False, 3);
    oSegment.Fields.Add(556, False, 0, False, 4);
    oSegment.Fields.Add(557, False, 0, False, 5);
    oSegment.Fields.Add(558, True, 12, False, 6);
    oSegment.Fields.Add(559, True, 8, False, 7);
    oSegment.Fields.Add(560, True, 2, False, 8);
    oSegment.Fields.Add(561, True, 2, False, 9);
    oSegment.Fields.Add(562, True, 2, False, 10);
    oSegment.Fields.Add(563, False, 0, False, 11);
    oSegment.Fields.Add(564, True, 3, False, 12);
    oSegment.Fields.Add(565, True, 23, False, 13);
    oSegment.Fields.Add(566, True, 5, False, 14);
    oSegment.Fields.Add(567, False, 0, False, 15);
    oSegment.Fields.Add(568, True, 2, False, 16);
    oSegment.Fields.Add(815, False, 0, False, 17);
  oSegment := oSegments.Add('URD', 'Results/update definition segment');
    oSegment.Fields.Add(45, False, 0, False, 1);
    oSegment.Fields.Add(46, False, 0, False, 2);
    oSegment.Fields.Add(47, True, 0, True, 3);
    oSegment.Fields.Add(48, True, 0, False, 4);
    oSegment.Fields.Add(49, True, 0, False, 5);
    oSegment.Fields.Add(50, True, 0, False, 6);
    oSegment.Fields.Add(51, False, 0, False, 7);
  oSegment := oSegments.Add('URS', 'Unsolicited selection segment');
    oSegment.Fields.Add(52, True, 0, True, 1);
    oSegment.Fields.Add(53, False, 0, False, 2);
    oSegment.Fields.Add(54, False, 0, False, 3);
    oSegment.Fields.Add(55, True, 0, False, 4);
    oSegment.Fields.Add(56, True, 0, False, 5);
    oSegment.Fields.Add(57, True, 0, False, 6);
    oSegment.Fields.Add(58, True, 0, False, 7);
    oSegment.Fields.Add(59, True, 0, False, 8);
    oSegment.Fields.Add(695, False, 0, False, 9);
  oSegment := oSegments.Add('VAR', 'Variance');
    oSegment.Fields.Add(1212, False, 0, True, 1);
    oSegment.Fields.Add(1213, False, 0, True, 2);
    oSegment.Fields.Add(1214, False, 0, False, 3);
    oSegment.Fields.Add(1215, False, 0, False, 4);
    oSegment.Fields.Add(1216, False, 0, False, 5);
    oSegment.Fields.Add(1217, True, 0, False, 6);
  oSegment := oSegments.Add('VTQ', 'Virtual Table Query Request');
    oSegment.Fields.Add(696, False, 0, False, 1);
    oSegment.Fields.Add(697, False, 0, True, 2);
    oSegment.Fields.Add(698, False, 0, True, 3);
    oSegment.Fields.Add(699, False, 0, True, 4);
    oSegment.Fields.Add(700, True, 0, False, 5);
  oSegments.Add('[', 'begin optional');
  oSegments.Add(']', 'end optional');
  oSegments.Add('{', 'begin repetition');
  oSegments.Add('|', 'next choice');
  oSegments.Add('}', 'end repetition');
End;

procedure Definitions23LoadMessageStructures1(oStructures : THL7V2ModelMessageStructures);
Var
  oStructure : THL7V2ModelMessageStructure;
  oGrp1 : THL7V2ModelSegmentGroup;
  oGrp2 : THL7V2ModelSegmentGroup;
  oGrp3 : THL7V2ModelSegmentGroup;
  oGrp4 : THL7V2ModelSegmentGroup;
  oGrp5 : THL7V2ModelSegmentGroup;
  oGrp6 : THL7V2ModelSegmentGroup;
Begin
  oStructures.Add('?', 'unknown', '', '', '');
  oStructures.Add('ACK', 'Standard Acknowlegdement', 'A01', 'ACK', '');
  oStructure := oStructures.Add('ACK_A01', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A01', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A02', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A02', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A03', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A03', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A04', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A04', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A05', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A05', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A06', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A06', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A07', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A07', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A08', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A08', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A09', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A09', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A10', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A10', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A11', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A11', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A12', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A12', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A13', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A13', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A14', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A14', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A15', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A15', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A16', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A16', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A17', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A17', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A18', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A18', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A20', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A20', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A21', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A21', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A22', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A22', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A23', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A23', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A24', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A24', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A25', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A25', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A26', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A26', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A27', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A27', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A28', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A28', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A29', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A29', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A30', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A30', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A31', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A31', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A32', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A32', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A33', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A33', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A34', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A34', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A35', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A35', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A36', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A36', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A37', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A37', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A38', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A38', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A39', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A39', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A40', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A40', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A41', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A41', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A42', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A42', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A43', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A43', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A44', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A44', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A45', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A45', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A46', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A46', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A47', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A47', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A48', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A48', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A49', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A49', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A50', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A50', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A51', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A51', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_I07', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_I07', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_P01', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_P01', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_P02', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_P02', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_P03', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_P03', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_P05', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_P05', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_P06', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_P06', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_P09', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_P09', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_PC1', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_PC1', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_PC2', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_PC2', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_PC3', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_PC3', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_PC6', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_PC6', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_PC7', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_PC7', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_PC8', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_PC8', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_PCB', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_PCB', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_PCC', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_PCC', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_PCD', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_PCD', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_PCG', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_PCG', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_PCH', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_PCH', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_PCJ', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_PCJ', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_Q02', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_Q02', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_Q03', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_Q03', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_Q05', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_Q05', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_R01', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_R01', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
  oStructure := oStructures.Add('ACK_S12', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_S12', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_S13', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_S13', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_S14', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_S14', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_S15', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_S15', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_S16', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_S16', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_S17', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_S17', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_S18', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_S18', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_S19', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_S19', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_S20', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_S20', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_S21', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_S21', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_S22', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_S22', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_S23', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_S23', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_S24', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_S24', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_S26', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_S26', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_T01', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_T01', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_T02', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_T02', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_T03', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_T03', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_T04', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_T04', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_T05', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_T05', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_T06', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_T06', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_T07', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_T07', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_T08', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_T08', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_T09', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_T09', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_T10', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_T10', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_T11', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_T11', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ADR_A19', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADR_A19', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRF', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('QUERY_RESPONSE', False, True, gtGroup);
      oGrp1.Children.Add('EVN', True, False, gtSingle);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp1.Children.Add('PD1', True, False, gtSingle);
      oGrp1.Children.Add('NK1', True, True, gtSingle);
      oGrp1.Children.Add('PV1', False, False, gtSingle);
      oGrp1.Children.Add('PV2', True, False, gtSingle);
      oGrp1.Children.Add('DB1', True, True, gtSingle);
      oGrp1.Children.Add('OBX', True, True, gtSingle);
      oGrp1.Children.Add('AL1', True, True, gtSingle);
      oGrp1.Children.Add('DG1', True, True, gtSingle);
      oGrp1.Children.Add('DRG', True, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('PROCEDURE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('PR1', False, False, gtSingle);
          oGrp3.Children.Add('ROL', True, True, gtSingle);
      oGrp1.Children.Add('GT1', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('INSURANCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('IN1', False, False, gtSingle);
          oGrp3.Children.Add('IN2', True, False, gtSingle);
          oGrp3.Children.Add('IN3', True, False, gtSingle);
      oGrp1.Children.Add('ACC', True, False, gtSingle);
      oGrp1.Children.Add('UB1', True, False, gtSingle);
      oGrp1.Children.Add('UB2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('ADT_A01', 'General', 'A01', 'ADT', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A01', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NK1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DB1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('OBX', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('AL1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DG1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DRG', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROCEDURE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('PR1', False, False, gtSingle);
        oGrp2.Children.Add('ROL', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('GT1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('INSURANCE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('IN1', False, False, gtSingle);
        oGrp2.Children.Add('IN2', True, False, gtSingle);
        oGrp2.Children.Add('IN3', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ACC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('UB1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('UB2', True, False, gtSingle);
  oStructure := oStructures.Add('ADT_A02', 'Transfer', 'A02', 'ADT', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A02', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DB1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('OBX', True, True, gtSingle);
  oStructure := oStructures.Add('ADT_A03', 'Discharge', 'A03', 'ADT', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A03', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DB1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DG1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DRG', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROCEDURE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('PR1', False, False, gtSingle);
        oGrp2.Children.Add('ROL', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('OBX', True, True, gtSingle);
  oStructure := oStructures.Add('ADT_A04', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A04', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NK1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DB1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('OBX', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('AL1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DG1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DRG', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROCEDURE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('PR1', False, False, gtSingle);
        oGrp2.Children.Add('ROL', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('GT1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('INSURANCE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('IN1', False, False, gtSingle);
        oGrp2.Children.Add('IN2', True, False, gtSingle);
        oGrp2.Children.Add('IN3', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ACC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('UB1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('UB2', True, False, gtSingle);
  oStructure := oStructures.Add('ADT_A05', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A05', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NK1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DB1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('OBX', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('AL1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DG1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DRG', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROCEDURE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('PR1', False, False, gtSingle);
        oGrp2.Children.Add('ROL', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('GT1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('INSURANCE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('IN1', False, False, gtSingle);
        oGrp2.Children.Add('IN2', True, False, gtSingle);
        oGrp2.Children.Add('IN3', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ACC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('UB1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('UB2', True, False, gtSingle);
  oStructure := oStructures.Add('ADT_A06', 'General (2)', 'A06', 'ADT', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A06', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MRG', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NK1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DB1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DRG', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('OBX', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('AL1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DG1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DRG', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROCEDURE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('PR1', False, False, gtSingle);
        oGrp2.Children.Add('ROL', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('GT1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('INSURANCE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('IN1', False, False, gtSingle);
        oGrp2.Children.Add('IN2', True, False, gtSingle);
        oGrp2.Children.Add('IN3', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ACC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('UB1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('UB2', True, False, gtSingle);
  oStructure := oStructures.Add('ADT_A07', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A07', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MRG', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NK1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DB1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DRG', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('OBX', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('AL1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DG1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DRG', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROCEDURE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('PR1', False, False, gtSingle);
        oGrp2.Children.Add('ROL', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('GT1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('INSURANCE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('IN1', False, False, gtSingle);
        oGrp2.Children.Add('IN2', True, False, gtSingle);
        oGrp2.Children.Add('IN3', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ACC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('UB1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('UB2', True, False, gtSingle);
  oStructure := oStructures.Add('ADT_A08', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A08', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NK1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DB1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('OBX', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('AL1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DG1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DRG', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROCEDURE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('PR1', False, False, gtSingle);
        oGrp2.Children.Add('ROL', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('GT1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('INSURANCE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('IN1', False, False, gtSingle);
        oGrp2.Children.Add('IN2', True, False, gtSingle);
        oGrp2.Children.Add('IN3', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ACC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('UB1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('UB2', True, False, gtSingle);
  oStructure := oStructures.Add('ADT_A09', 'Track/Cancel', 'A09', 'ADT', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A09', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DB1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('OBX', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DG1', True, True, gtSingle);
  oStructure := oStructures.Add('ADT_A10', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A10', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DB1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('OBX', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DG1', True, True, gtSingle);
  oStructure := oStructures.Add('ADT_A11', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A11', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DB1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('OBX', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DG1', True, True, gtSingle);
  oStructure := oStructures.Add('ADT_A12', 'Track/Cancel (2)', 'A12', 'ADT', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A12', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DB1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('OBX', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DG1', True, False, gtSingle);
  oStructure := oStructures.Add('ADT_A13', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A13', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NK1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DB1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('OBX', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('AL1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DG1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DRG', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROCEDURE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('PR1', False, False, gtSingle);
        oGrp2.Children.Add('ROL', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('GT1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('INSURANCE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('IN1', False, False, gtSingle);
        oGrp2.Children.Add('IN2', True, False, gtSingle);
        oGrp2.Children.Add('IN3', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ACC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('UB1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('UB2', True, False, gtSingle);
  oStructure := oStructures.Add('ADT_A14', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A14', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NK1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DB1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('OBX', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('AL1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DG1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DRG', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROCEDURE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('PR1', False, False, gtSingle);
        oGrp2.Children.Add('ROL', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('GT1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('INSURANCE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('IN1', False, False, gtSingle);
        oGrp2.Children.Add('IN2', True, False, gtSingle);
        oGrp2.Children.Add('IN3', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ACC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('UB1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('UB2', True, False, gtSingle);
  oStructure := oStructures.Add('ADT_A15', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A15', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DB1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('OBX', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DG1', True, True, gtSingle);
  oStructure := oStructures.Add('ADT_A16', 'Pending Discharge', 'A16', 'ADT', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A16', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DB1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('OBX', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DG1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DRG', True, False, gtSingle);
  oStructure := oStructures.Add('ADT_A17', 'Swap', 'A17', 'ADT', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A17', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DB1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('OBX', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DB1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('OBX', True, True, gtSingle);
  oStructure := oStructures.Add('ADT_A18', '', 'A18', 'ADT', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A18', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MRG', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
  oStructure := oStructures.Add('ADT_A20', '', 'A20', 'ADT', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A20', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NPU', False, False, gtSingle);
  oStructure := oStructures.Add('ADT_A21', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A21', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DB1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('OBX', True, True, gtSingle);
  oStructure := oStructures.Add('ADT_A22', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A22', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DB1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('OBX', True, True, gtSingle);
  oStructure := oStructures.Add('ADT_A23', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A23', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DB1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('OBX', True, True, gtSingle);
  oStructure := oStructures.Add('ADT_A24', '', 'A24', 'ADT', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A24', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DB1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DB1', True, True, gtSingle);
  oStructure := oStructures.Add('ADT_A25', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A25', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DB1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('OBX', True, True, gtSingle);
  oStructure := oStructures.Add('ADT_A26', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A26', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DB1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('OBX', True, True, gtSingle);
  oStructure := oStructures.Add('ADT_A27', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A27', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DB1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('OBX', True, True, gtSingle);
  oStructure := oStructures.Add('ADT_A28', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A28', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NK1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DB1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('OBX', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('AL1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DG1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DRG', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROCEDURE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('PR1', False, False, gtSingle);
        oGrp2.Children.Add('ROL', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('GT1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('INSURANCE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('IN1', False, False, gtSingle);
        oGrp2.Children.Add('IN2', True, False, gtSingle);
        oGrp2.Children.Add('IN3', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ACC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('UB1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('UB2', True, False, gtSingle);
  oStructure := oStructures.Add('ADT_A29', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A29', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DB1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('OBX', True, True, gtSingle);
  oStructure := oStructures.Add('ADT_A30', '', 'A30', 'ADT', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A30', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MRG', False, False, gtSingle);
  oStructure := oStructures.Add('ADT_A31', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A31', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NK1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DB1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('OBX', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('AL1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DG1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DRG', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROCEDURE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('PR1', False, False, gtSingle);
        oGrp2.Children.Add('ROL', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('GT1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('INSURANCE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('IN1', False, False, gtSingle);
        oGrp2.Children.Add('IN2', True, False, gtSingle);
        oGrp2.Children.Add('IN3', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ACC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('UB1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('UB2', True, False, gtSingle);
  oStructure := oStructures.Add('ADT_A32', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A32', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DB1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('OBX', True, True, gtSingle);
  oStructure := oStructures.Add('ADT_A33', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A33', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DB1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('OBX', True, True, gtSingle);
  oStructure := oStructures.Add('ADT_A34', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A34', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MRG', False, False, gtSingle);
  oStructure := oStructures.Add('ADT_A35', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A35', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MRG', False, False, gtSingle);
  oStructure := oStructures.Add('ADT_A36', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A36', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MRG', False, False, gtSingle);
  oStructure := oStructures.Add('ADT_A37', '', 'A37', 'ADT', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A37', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DB1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DB1', True, True, gtSingle);
  oStructure := oStructures.Add('ADT_A38', 'Swap (2)', 'A38', 'ADT', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A38', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DB1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('OBX', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DG1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DRG', True, False, gtSingle);
  oStructure := oStructures.Add('ADT_A39', '', 'A39', 'ADT', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A39', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', False, True, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp1.Children.Add('PD1', True, False, gtSingle);
      oGrp1.Children.Add('MRG', False, False, gtSingle);
      oGrp1.Children.Add('PV1', True, False, gtSingle);
  oStructure := oStructures.Add('ADT_A40', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A40', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', False, True, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp1.Children.Add('PD1', True, False, gtSingle);
      oGrp1.Children.Add('MRG', False, False, gtSingle);
      oGrp1.Children.Add('PV1', True, False, gtSingle);
  oStructure := oStructures.Add('ADT_A41', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A41', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', False, True, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp1.Children.Add('PD1', True, False, gtSingle);
      oGrp1.Children.Add('MRG', False, False, gtSingle);
      oGrp1.Children.Add('PV1', True, False, gtSingle);
  oStructure := oStructures.Add('ADT_A42', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A42', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', False, True, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp1.Children.Add('PD1', True, False, gtSingle);
      oGrp1.Children.Add('MRG', False, False, gtSingle);
      oGrp1.Children.Add('PV1', True, False, gtSingle);
  oStructure := oStructures.Add('ADT_A43', '', 'A43', 'ADT', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A43', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', False, True, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp1.Children.Add('PD1', True, False, gtSingle);
      oGrp1.Children.Add('MRG', False, False, gtSingle);
  oStructure := oStructures.Add('ADT_A44', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A44', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', False, True, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp1.Children.Add('PD1', True, False, gtSingle);
      oGrp1.Children.Add('MRG', False, False, gtSingle);
  oStructure := oStructures.Add('ADT_A45', '', 'A45', 'ADT', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A45', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('MERGE_INFO', False, True, gtGroup);
      oGrp1.Children.Add('MRG', False, False, gtSingle);
      oGrp1.Children.Add('PV1', False, False, gtSingle);
  oStructure := oStructures.Add('ADT_A46', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A46', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MRG', False, False, gtSingle);
  oStructure := oStructures.Add('ADT_A47', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A47', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MRG', False, False, gtSingle);
  oStructure := oStructures.Add('ADT_A48', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A48', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MRG', False, False, gtSingle);
  oStructure := oStructures.Add('ADT_A49', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A49', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MRG', False, False, gtSingle);
  oStructure := oStructures.Add('ADT_A50', '', 'A50', 'ADT', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A50', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MRG', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
  oStructure := oStructures.Add('ADT_A51', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A51', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MRG', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
  oStructures.Add('ARD_A19', '', 'A19', 'ARD', '');
  oStructure := oStructures.Add('BAR_P01', 'open account', 'P01', 'BAR', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('BAR_P01', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('VISIT', False, True, gtGroup);
      oGrp1.Children.Add('PV1', True, False, gtSingle);
      oGrp1.Children.Add('PV2', True, False, gtSingle);
      oGrp1.Children.Add('DB1', True, True, gtSingle);
      oGrp1.Children.Add('OBX', True, True, gtSingle);
      oGrp1.Children.Add('AL1', True, True, gtSingle);
      oGrp1.Children.Add('DG1', True, True, gtSingle);
      oGrp1.Children.Add('DRG', True, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('PROCEDURE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('PR1', False, False, gtSingle);
          oGrp3.Children.Add('ROL', True, True, gtSingle);
      oGrp1.Children.Add('GT1', True, True, gtSingle);
      oGrp1.Children.Add('NK1', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('INSURANCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('IN1', False, False, gtSingle);
          oGrp3.Children.Add('IN2', True, False, gtSingle);
          oGrp3.Children.Add('IN3', True, False, gtSingle);
      oGrp1.Children.Add('ACC', True, False, gtSingle);
      oGrp1.Children.Add('UB1', True, False, gtSingle);
      oGrp1.Children.Add('UB2', True, False, gtSingle);
  oStructure := oStructures.Add('BAR_P02', '', 'P02', 'BAR', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('BAR_P02', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', False, True, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp1.Children.Add('PD1', True, False, gtSingle);
      oGrp1.Children.Add('PV1', True, False, gtSingle);
      oGrp1.Children.Add('DB1', True, True, gtSingle);
  oStructure := oStructures.Add('BAR_P05', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('BAR_P05', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('VISIT', False, True, gtGroup);
      oGrp1.Children.Add('PV1', True, False, gtSingle);
      oGrp1.Children.Add('PV2', True, False, gtSingle);
      oGrp1.Children.Add('DB1', True, True, gtSingle);
      oGrp1.Children.Add('OBX', True, True, gtSingle);
      oGrp1.Children.Add('AL1', True, True, gtSingle);
      oGrp1.Children.Add('DG1', True, True, gtSingle);
      oGrp1.Children.Add('DRG', True, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('PROCEDURE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('PR1', False, False, gtSingle);
          oGrp3.Children.Add('ROL', True, True, gtSingle);
      oGrp1.Children.Add('GT1', True, True, gtSingle);
      oGrp1.Children.Add('NK1', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('INSURANCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('IN1', False, False, gtSingle);
          oGrp3.Children.Add('IN2', True, False, gtSingle);
          oGrp3.Children.Add('IN3', True, False, gtSingle);
      oGrp1.Children.Add('ACC', True, False, gtSingle);
      oGrp1.Children.Add('UB1', True, False, gtSingle);
      oGrp1.Children.Add('UB2', True, False, gtSingle);
  oStructure := oStructures.Add('BAR_P06', '', 'P06', 'BAR', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('BAR_P06', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', False, True, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp1.Children.Add('PV1', True, False, gtSingle);
  oStructure := oStructures.Add('CRM_C01', '', 'C01', 'CRM', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('CRM_C01', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', False, True, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp1.Children.Add('PV1', True, False, gtSingle);
      oGrp1.Children.Add('CSR', False, False, gtSingle);
      oGrp1.Children.Add('CSP', True, True, gtSingle);
  oStructure := oStructures.Add('CRM_C02', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('CRM_C02', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', False, True, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp1.Children.Add('PV1', True, False, gtSingle);
      oGrp1.Children.Add('CSR', False, False, gtSingle);
      oGrp1.Children.Add('CSP', True, True, gtSingle);
  oStructure := oStructures.Add('CRM_C03', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('CRM_C03', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', False, True, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp1.Children.Add('PV1', True, False, gtSingle);
      oGrp1.Children.Add('CSR', False, False, gtSingle);
      oGrp1.Children.Add('CSP', True, True, gtSingle);
  oStructure := oStructures.Add('CRM_C04', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('CRM_C04', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', False, True, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp1.Children.Add('PV1', True, False, gtSingle);
      oGrp1.Children.Add('CSR', False, False, gtSingle);
      oGrp1.Children.Add('CSP', True, True, gtSingle);
  oStructure := oStructures.Add('CRM_C05', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('CRM_C05', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', False, True, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp1.Children.Add('PV1', True, False, gtSingle);
      oGrp1.Children.Add('CSR', False, False, gtSingle);
      oGrp1.Children.Add('CSP', True, True, gtSingle);
  oStructure := oStructures.Add('CRM_C06', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('CRM_C06', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', False, True, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp1.Children.Add('PV1', True, False, gtSingle);
      oGrp1.Children.Add('CSR', False, False, gtSingle);
      oGrp1.Children.Add('CSP', True, True, gtSingle);
  oStructure := oStructures.Add('CRM_C07', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('CRM_C07', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', False, True, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp1.Children.Add('PV1', True, False, gtSingle);
      oGrp1.Children.Add('CSR', False, False, gtSingle);
      oGrp1.Children.Add('CSP', True, True, gtSingle);
  oStructure := oStructures.Add('CRM_C08', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('CRM_C08', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', False, True, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp1.Children.Add('PV1', True, False, gtSingle);
      oGrp1.Children.Add('CSR', False, False, gtSingle);
      oGrp1.Children.Add('CSP', True, True, gtSingle);
  oStructure := oStructures.Add('CSU_C09', '', 'C09', 'CSU', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('CSU_C09', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', False, True, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp1.Children.Add('PD1', True, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('VISIT', True, False, gtGroup);
        oGrp2.Children.Add('PV1', False, False, gtSingle);
        oGrp2.Children.Add('PV2', True, False, gtSingle);
      oGrp1.Children.Add('CSR', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('STUDY_PHASE', False, True, gtGroup);
        oGrp2.Children.Add('CSP', True, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('STUDY_SCHEDULE', False, True, gtGroup);
          oGrp3.Children.Add('CSS', True, False, gtSingle);
          oGrp4 := oGrp3.Children.Add('STUDY_OBSERVATION', True, False, gtGroup);
            oGrp5 := oGrp4.Children.Add('', False, True, gtGroup);
              oGrp5.Children.Add('ORC', True, False, gtSingle);
              oGrp5.Children.Add('OBR', False, False, gtSingle);
              oGrp5.Children.Add('OBX', False, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('STUDY_PHARM', False, True, gtGroup);
            oGrp4.Children.Add('ORC', True, False, gtSingle);
            oGrp5 := oGrp4.Children.Add('RX_ADMIN', False, True, gtGroup);
              oGrp5.Children.Add('RXA', False, False, gtSingle);
              oGrp5.Children.Add('RXR', False, False, gtSingle);
  oStructure := oStructures.Add('CSU_C10', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('CSU_C10', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', False, True, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp1.Children.Add('PD1', True, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('VISIT', True, False, gtGroup);
        oGrp2.Children.Add('PV1', False, False, gtSingle);
        oGrp2.Children.Add('PV2', True, False, gtSingle);
      oGrp1.Children.Add('CSR', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('STUDY_PHASE', False, True, gtGroup);
        oGrp2.Children.Add('CSP', True, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('STUDY_SCHEDULE', False, True, gtGroup);
          oGrp3.Children.Add('CSS', True, False, gtSingle);
          oGrp4 := oGrp3.Children.Add('STUDY_OBSERVATION', True, False, gtGroup);
            oGrp5 := oGrp4.Children.Add('', False, True, gtGroup);
              oGrp5.Children.Add('ORC', True, False, gtSingle);
              oGrp5.Children.Add('OBR', False, False, gtSingle);
              oGrp5.Children.Add('OBX', False, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('STUDY_PHARM', False, True, gtGroup);
            oGrp4.Children.Add('ORC', True, False, gtSingle);
            oGrp5 := oGrp4.Children.Add('RX_ADMIN', False, True, gtGroup);
              oGrp5.Children.Add('RXA', False, False, gtSingle);
              oGrp5.Children.Add('RXR', False, False, gtSingle);
  oStructure := oStructures.Add('CSU_C11', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('CSU_C11', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', False, True, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp1.Children.Add('PD1', True, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('VISIT', True, False, gtGroup);
        oGrp2.Children.Add('PV1', False, False, gtSingle);
        oGrp2.Children.Add('PV2', True, False, gtSingle);
      oGrp1.Children.Add('CSR', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('STUDY_PHASE', False, True, gtGroup);
        oGrp2.Children.Add('CSP', True, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('STUDY_SCHEDULE', False, True, gtGroup);
          oGrp3.Children.Add('CSS', True, False, gtSingle);
          oGrp4 := oGrp3.Children.Add('STUDY_OBSERVATION', True, False, gtGroup);
            oGrp5 := oGrp4.Children.Add('', False, True, gtGroup);
              oGrp5.Children.Add('ORC', True, False, gtSingle);
              oGrp5.Children.Add('OBR', False, False, gtSingle);
              oGrp5.Children.Add('OBX', False, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('STUDY_PHARM', False, True, gtGroup);
            oGrp4.Children.Add('ORC', True, False, gtSingle);
            oGrp5 := oGrp4.Children.Add('RX_ADMIN', False, True, gtGroup);
              oGrp5.Children.Add('RXA', False, False, gtSingle);
              oGrp5.Children.Add('RXR', False, False, gtSingle);
  oStructure := oStructures.Add('CSU_C12', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('CSU_C12', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', False, True, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp1.Children.Add('PD1', True, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('VISIT', True, False, gtGroup);
        oGrp2.Children.Add('PV1', False, False, gtSingle);
        oGrp2.Children.Add('PV2', True, False, gtSingle);
      oGrp1.Children.Add('CSR', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('STUDY_PHASE', False, True, gtGroup);
        oGrp2.Children.Add('CSP', True, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('STUDY_SCHEDULE', False, True, gtGroup);
          oGrp3.Children.Add('CSS', True, False, gtSingle);
          oGrp4 := oGrp3.Children.Add('STUDY_OBSERVATION', True, False, gtGroup);
            oGrp5 := oGrp4.Children.Add('', False, True, gtGroup);
              oGrp5.Children.Add('ORC', True, False, gtSingle);
              oGrp5.Children.Add('OBR', False, False, gtSingle);
              oGrp5.Children.Add('OBX', False, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('STUDY_PHARM', False, True, gtGroup);
            oGrp4.Children.Add('ORC', True, False, gtSingle);
            oGrp5 := oGrp4.Children.Add('RX_ADMIN', False, True, gtGroup);
              oGrp5.Children.Add('RXA', False, False, gtSingle);
              oGrp5.Children.Add('RXR', False, False, gtSingle);
  oStructure := oStructures.Add('DFT_P03', '', 'P03', 'DFT', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('DFT_P03', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DB1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('OBX', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('FINANCIAL', False, True, gtGroup);
      oGrp1.Children.Add('FT1', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('FINANCIAL_PROCEDURE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('PR1', False, False, gtSingle);
          oGrp3.Children.Add('ROL', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DG1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DRG', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('GT1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('INSURANCE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('IN1', False, False, gtSingle);
        oGrp2.Children.Add('IN2', True, False, gtSingle);
        oGrp2.Children.Add('IN3', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ACC', True, False, gtSingle);
  oStructure := oStructures.Add('DOC_T12', '', 'T12', 'DOC', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('DOC_T12', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('RESULT', False, True, gtGroup);
      oGrp1.Children.Add('EVN', True, False, gtSingle);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp1.Children.Add('PV1', False, False, gtSingle);
      oGrp1.Children.Add('TXA', False, False, gtSingle);
      oGrp1.Children.Add('OBX', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('DSR_Q01', '', 'Q01', 'DSR', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('DSR_Q01', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QAK', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRF', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DSP', False, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('DSR_Q02', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('DSR_Q02', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QAK', True, False, gtSingle);
  oStructure := oStructures.Add('DSR_Q03', '', 'Q03', 'DSR', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('DSR_Q03', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QAK', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRF', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DSP', False, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('EDR_Q01', '', 'Q01', 'EDR', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('EDR_Q01', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QAK', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DSP', False, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('EQQ_Q01', '', 'Q01', 'EQQ', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('EQQ_Q01', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EQL', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('ERP_Q01', '', 'Q01', 'ERP', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ERP_Q01', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QAK', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERQ', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('MDM_T01', '', 'T01', 'MDM', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('MDM_T01', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('TXA', False, False, gtSingle);
  oStructure := oStructures.Add('MDM_T02', '', 'T02', 'MDM', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('MDM_T02', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('TXA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('OBX', False, True, gtSingle);
  oStructure := oStructures.Add('MDM_T03', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('MDM_T03', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('TXA', False, False, gtSingle);
  oStructure := oStructures.Add('MDM_T04', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('MDM_T04', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('TXA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('OBX', False, True, gtSingle);
  oStructure := oStructures.Add('MDM_T05', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('MDM_T05', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('TXA', False, False, gtSingle);
  oStructure := oStructures.Add('MDM_T06', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('MDM_T06', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('TXA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('OBX', False, True, gtSingle);
  oStructure := oStructures.Add('MDM_T07', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('MDM_T07', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('TXA', False, False, gtSingle);
  oStructure := oStructures.Add('MDM_T08', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('MDM_T08', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('TXA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('OBX', False, True, gtSingle);
  oStructure := oStructures.Add('MDM_T09', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('MDM_T09', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('TXA', False, False, gtSingle);
  oStructure := oStructures.Add('MDM_T10', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('MDM_T10', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('TXA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('OBX', False, True, gtSingle);
  oStructure := oStructures.Add('MDM_T11', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('MDM_T11', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('TXA', False, False, gtSingle);
  oStructures.Add('MFD_P09', '', 'P09', 'MFD', '');
  oStructure := oStructures.Add('MFK_M01', '', 'M01', 'MFK', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('MFK_M01', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MFI', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('MF', False, True, gtGroup);
      oGrp1.Children.Add('MFA', True, False, gtSingle);
  oStructure := oStructures.Add('MFK_M02', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('MFK_M02', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MFI', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MFA', True, True, gtSingle);
  oStructure := oStructures.Add('MFK_M03', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('MFK_M03', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MFI', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MFA', True, True, gtSingle);
  oStructure := oStructures.Add('MFK_M04', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('MFK_M04', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MFI', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MFA', True, True, gtSingle);
  oStructure := oStructures.Add('MFK_M05', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('MFK_M05', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MFI', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MFA', True, True, gtSingle);
  oStructure := oStructures.Add('MFK_M07', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('MFK_M07', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MFI', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MFA', True, True, gtSingle);
  oStructure := oStructures.Add('MFN_M01', '', 'M01', 'MFN', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('MFN_M01', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MFI', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('MF', False, True, gtGroup);
      oGrp1.Children.Add('MFE', False, False, gtSingle);
      oGrp1.Children.Add('?', True, False, gtSingle);
  oStructure := oStructures.Add('MFN_M02', '', 'M02', 'MFN', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('MFN_M02', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MFI', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('MF_STAFF', False, True, gtGroup);
      oGrp1.Children.Add('MFE', False, False, gtSingle);
      oGrp1.Children.Add('STF', False, False, gtSingle);
      oGrp1.Children.Add('PRA', True, False, gtSingle);
  oStructure := oStructures.Add('MFN_M03', '', 'M03', 'MFN', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('MFN_M03', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MFI', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('MF_TEST', False, True, gtGroup);
      oGrp1.Children.Add('MFE', False, False, gtSingle);
      oGrp1.Children.Add('OM1', False, False, gtSingle);
      oGrp1.Children.Add('Hxx', False, False, gtSingle);
  oStructure := oStructures.Add('MFN_M04', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('MFN_M04', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MFI', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('MF_CDM', False, True, gtGroup);
      oGrp1.Children.Add('MFE', False, False, gtSingle);
      oGrp1.Children.Add('CDM', False, False, gtSingle);
      oGrp1.Children.Add('PRC', True, True, gtSingle);
  oStructure := oStructures.Add('MFN_M05', '', 'M05', 'MFN', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('MFN_M05', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MFI', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('MF_LOCATION', False, True, gtGroup);
      oGrp1.Children.Add('MFE', False, False, gtSingle);
      oGrp1.Children.Add('LOC', False, False, gtSingle);
      oGrp1.Children.Add('LCH', True, True, gtSingle);
      oGrp1.Children.Add('LRL', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('MF_LOC_DEPT', False, True, gtGroup);
        oGrp2.Children.Add('LDP', False, False, gtSingle);
        oGrp2.Children.Add('LCH', True, True, gtSingle);
        oGrp2.Children.Add('LCC', True, True, gtSingle);
  oStructure := oStructures.Add('MFN_M06', '', 'M06', 'MFN', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('MFN_M06', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MFI', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('MF_CLIN_STUDY', False, True, gtGroup);
      oGrp1.Children.Add('MFE', False, False, gtSingle);
      oGrp1.Children.Add('CM0', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('MF_PHASE_SCHED_DETAIL', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('CM1', False, False, gtSingle);
          oGrp3.Children.Add('CM2', True, True, gtSingle);
  oStructure := oStructures.Add('MFN_M07', '', 'M07', 'MFN', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('MFN_M07', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MFI', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('MF_CLIN_STUDY', False, True, gtGroup);
      oGrp1.Children.Add('MFE', False, False, gtSingle);
      oGrp1.Children.Add('CM0', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('MF_PHASE_SCHED_DETAIL', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('CM1', False, False, gtSingle);
          oGrp3.Children.Add('CM2', True, True, gtSingle);
  oStructure := oStructures.Add('MFN_M08', '', 'M08', 'MFN', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('MFN_M08', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MFI', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('MF_TEST_NUMERIC', False, True, gtGroup);
      oGrp1.Children.Add('MFE', False, False, gtSingle);
      oGrp1.Children.Add('OM1', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('xx', True, False, gtGroup);
        oGrp2.Children.Add('OM2', True, False, gtSingle);
        oGrp2.Children.Add('OM3', True, False, gtSingle);
        oGrp2.Children.Add('OM4', True, False, gtSingle);
  oStructure := oStructures.Add('MFN_M09', '', 'M09', 'MFN', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('MFN_M09', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MFI', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('MF_TEST_CATEGORICAL', False, True, gtGroup);
      oGrp1.Children.Add('MFE', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('MF_TEST_CAT_DETAIL', True, False, gtGroup);
        oGrp2.Children.Add('OM3', False, False, gtSingle);
        oGrp2.Children.Add('OM4', True, True, gtSingle);
  oStructure := oStructures.Add('MFN_M10', '', 'M10', 'MFN', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('MFN_M10', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MFI', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('MF_TEST_BATTERIES', False, True, gtGroup);
      oGrp2 := oGrp1.Children.Add('MF_TEST_BATT_DETAIL', True, False, gtGroup);
        oGrp2.Children.Add('OM5', False, False, gtSingle);
        oGrp2.Children.Add('OM4', True, True, gtSingle);
  oStructure := oStructures.Add('MFN_M11', '', 'M11', 'MFN', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('MFN_M11', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MFI', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('MF_TEST_CALCULATED', False, True, gtGroup);
      oGrp1.Children.Add('MFE', False, False, gtSingle);
      oGrp1.Children.Add('OM1', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('MF_TEST_CALC_DETAIL', True, False, gtGroup);
        oGrp2.Children.Add('OM6', False, False, gtSingle);
        oGrp2.Children.Add('OM2', False, False, gtSingle);
  oStructures.Add('NUL', '', 'NUL', 'NUL', '');
  oStructure := oStructures.Add('OMD_O01', 'Diet Order Message', 'O01', 'ORM', 'order');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('OMD_O01', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', True, False, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp1.Children.Add('PD1', True, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATIENT_VISIT', True, False, gtGroup);
        oGrp2.Children.Add('PV1', False, False, gtSingle);
        oGrp2.Children.Add('PV2', True, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('INSURANCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('IN1', False, False, gtSingle);
          oGrp3.Children.Add('IN2', True, False, gtSingle);
          oGrp3.Children.Add('IN3', True, False, gtSingle);
      oGrp1.Children.Add('GT1', True, False, gtSingle);
      oGrp1.Children.Add('AL1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('ORDER_DIET', False, True, gtGroup);
      oGrp1.Children.Add('ORC', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('DIET', True, False, gtGroup);
        oGrp2.Children.Add('ODS', False, True, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('OBSERVATION', False, True, gtGroup);
          oGrp3.Children.Add('OBX', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('ORDER_TRAY', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('ORC', False, False, gtSingle);
        oGrp2.Children.Add('ODT', False, True, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('OMN_O01', 'Non-Stock Supply Order Message', 'O02', 'ORR', 'order');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('OMN_O01', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', True, False, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp1.Children.Add('PD1', True, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATIENT_VISIT', True, False, gtGroup);
        oGrp2.Children.Add('PV1', False, False, gtSingle);
        oGrp2.Children.Add('PV2', True, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('INSURANCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('IN1', False, False, gtSingle);
          oGrp3.Children.Add('IN2', True, False, gtSingle);
          oGrp3.Children.Add('IN3', True, False, gtSingle);
      oGrp1.Children.Add('GT1', True, False, gtSingle);
      oGrp1.Children.Add('AL1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('ORDER', False, True, gtGroup);
      oGrp1.Children.Add('ORC', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER_DETAIL', True, False, gtGroup);
        oGrp2.Children.Add('RQD', False, False, gtSingle);
        oGrp2.Children.Add('RQ1', True, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('OBSERVATION', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('OBX', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
      oGrp1.Children.Add('BLG', True, False, gtSingle);
  oStructure := oStructures.Add('OMS_O01', 'Stock Supply Order Message', 'O02', 'OMS', 'order');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('OMS_O01', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', True, False, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp1.Children.Add('PD1', True, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATIENT_VISIT', True, False, gtGroup);
        oGrp2.Children.Add('PV1', False, False, gtSingle);
        oGrp2.Children.Add('PV2', True, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('INSURANCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('IN1', False, False, gtSingle);
          oGrp3.Children.Add('IN2', True, False, gtSingle);
          oGrp3.Children.Add('IN3', True, False, gtSingle);
      oGrp1.Children.Add('GT1', True, False, gtSingle);
      oGrp1.Children.Add('AL1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('ORDER', False, True, gtGroup);
      oGrp1.Children.Add('ORC', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER_DETAIL', True, False, gtGroup);
        oGrp2.Children.Add('RQD', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('OBSERVATION', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('OBX', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
      oGrp1.Children.Add('BLG', True, False, gtSingle);
  oStructure := oStructures.Add('ORD_O02', 'Diet Order Message Response', 'O02', 'ORR', 'respond');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ORD_O02', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('RESPONSE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('PATIENT', True, False, gtGroup);
        oGrp2.Children.Add('PID', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER_DIET', False, True, gtGroup);
        oGrp2.Children.Add('ORC', False, False, gtSingle);
        oGrp2.Children.Add('ODS', True, True, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER_TRAY', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('ORC', False, False, gtSingle);
          oGrp3.Children.Add('ODT', True, True, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('ORF_R02', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ORF_R02', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRF', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('QUERY_RESPONSE', False, True, gtGroup);
      oGrp2 := oGrp1.Children.Add('PATIENT', True, False, gtGroup);
        oGrp2.Children.Add('PID', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER', False, True, gtGroup);
        oGrp2.Children.Add('ORC', True, False, gtSingle);
        oGrp2.Children.Add('OBR', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('OBSERVATION', False, True, gtGroup);
          oGrp3.Children.Add('OBX', True, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
        oGrp2.Children.Add('CTI', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('ORF_R04', '', 'R02', 'ORF', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ORF_R04', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRF', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('QUERY_RESPONSE', False, True, gtGroup);
      oGrp2 := oGrp1.Children.Add('PATIENT', True, False, gtGroup);
        oGrp2.Children.Add('PID', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER', False, True, gtGroup);
        oGrp2.Children.Add('ORC', True, False, gtSingle);
        oGrp2.Children.Add('OBR', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('OBSERVATION', False, True, gtGroup);
          oGrp3.Children.Add('OBX', True, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
        oGrp2.Children.Add('CTI', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('ORM_O01', 'General Order Message', 'O01', 'ORM', 'order');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ORM_O01', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', True, False, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp1.Children.Add('PD1', True, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATIENT_VISIT', True, False, gtGroup);
        oGrp2.Children.Add('PV1', False, False, gtSingle);
        oGrp2.Children.Add('PV2', True, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('INSURANCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('IN1', False, False, gtSingle);
          oGrp3.Children.Add('IN2', True, False, gtSingle);
          oGrp3.Children.Add('IN3', True, False, gtSingle);
      oGrp1.Children.Add('GT1', True, False, gtSingle);
      oGrp1.Children.Add('AL1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('ORDER', False, True, gtGroup);
      oGrp1.Children.Add('ORC', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER_DETAIL', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('CHOICE', False, True, gtChoice);
          oGrp3.Children.Add('OBR', False, False, gtSingle);
          oGrp3.Children.Add('RQD', False, False, gtSingle);
          oGrp3.Children.Add('RQ1', False, False, gtSingle);
          oGrp3.Children.Add('RXO', False, False, gtSingle);
          oGrp3.Children.Add('ODS', False, False, gtSingle);
          oGrp3.Children.Add('ODT', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
        oGrp2.Children.Add('DG1', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('OBSERVATION', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('OBX', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
      oGrp1.Children.Add('CTI', True, False, gtSingle);
      oGrp1.Children.Add('BLG', True, False, gtSingle);
  oStructures.Add('ORM_Q06', '', 'Q06', 'ORM', '');
  oStructure := oStructures.Add('ORN_O02', 'Non-Stock Supply Response', 'O02', 'ORR', 'respond');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ORN_O02', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('RESPONSE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('PATIENT', True, False, gtGroup);
        oGrp2.Children.Add('PID', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER', False, True, gtGroup);
        oGrp2.Children.Add('ORC', False, False, gtSingle);
        oGrp2.Children.Add('RQD', False, False, gtSingle);
        oGrp2.Children.Add('RQ1', True, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('ORR_O02', 'General Order Response', 'O02', 'ORR', 'respond');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ORR_O02', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('RESPONSE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('PATIENT', True, False, gtGroup);
        oGrp2.Children.Add('PID', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER', False, True, gtGroup);
        oGrp2.Children.Add('ORC', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('CHOICE', False, True, gtChoice);
          oGrp3.Children.Add('OBR', False, False, gtSingle);
          oGrp3.Children.Add('RQD', False, False, gtSingle);
          oGrp3.Children.Add('RQ1', False, False, gtSingle);
          oGrp3.Children.Add('RXO', False, False, gtSingle);
          oGrp3.Children.Add('ODS', False, False, gtSingle);
          oGrp3.Children.Add('ODT', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
        oGrp2.Children.Add('CTI', True, True, gtSingle);
  oStructures.Add('ORR_Q06', '', 'Q06', 'ORR', '');
  oStructures.Add('ORS_O02', 'Stock Supply Order Message Response', 'O02', 'ORR', 'respond');
  oStructure := oStructures.Add('ORU_R01', '', 'R01', 'ORU', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ORU_R01', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('RESPONSE', False, True, gtGroup);
      oGrp2 := oGrp1.Children.Add('PATIENT', True, False, gtGroup);
        oGrp2.Children.Add('PID', False, False, gtSingle);
        oGrp2.Children.Add('PD1', True, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('VISIT', True, False, gtGroup);
          oGrp3.Children.Add('PV1', False, False, gtSingle);
          oGrp3.Children.Add('PV2', True, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER_OBSERVATION', False, True, gtGroup);
        oGrp2.Children.Add('ORC', True, False, gtSingle);
        oGrp2.Children.Add('OBR', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('OBSERVATION', False, True, gtGroup);
          oGrp3.Children.Add('OBX', True, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
        oGrp2.Children.Add('CTI', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructures.Add('ORU_W01', '', 'W01', 'ORU', '');
  oStructure := oStructures.Add('OSQ_Q06', '', 'Q06', 'OSQ', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('OSQ_Q06', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRF', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('OSR_Q06', '', 'Q06', 'OSR', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('OSR_Q06', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRF', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('RESPONSE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('PATIENT', True, False, gtGroup);
        oGrp2.Children.Add('PID', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER', False, True, gtGroup);
        oGrp2.Children.Add('ORC', False, False, gtSingle);
        oGrp2.Children.Add('OBR', True, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
        oGrp2.Children.Add('CTI', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('PEX_P07', '', 'P07', 'PEX', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('PEX_P07', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('VISIT', True, False, gtGroup);
      oGrp1.Children.Add('PV1', False, False, gtSingle);
      oGrp1.Children.Add('PV2', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('EXPERIENCE', False, True, gtGroup);
      oGrp1.Children.Add('PES', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('PEX_OBSERVATION', False, True, gtGroup);
        oGrp2.Children.Add('PEO', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('PEX_CAUSE', False, True, gtGroup);
          oGrp3.Children.Add('PCR', False, False, gtSingle);
          oGrp4 := oGrp3.Children.Add('RX_ORDER', True, False, gtGroup);
            oGrp4.Children.Add('RXE', False, False, gtSingle);
            oGrp4.Children.Add('RXR', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('RX_ADMINISTRATION', True, False, gtGroup);
            oGrp5 := oGrp4.Children.Add('', False, True, gtGroup);
              oGrp5.Children.Add('RXA', False, False, gtSingle);
              oGrp5.Children.Add('RXR', True, False, gtSingle);
          oGrp3.Children.Add('PRB', True, True, gtSingle);
          oGrp3.Children.Add('OBX', True, True, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('ASSOCIATED_PERSON', True, False, gtGroup);
            oGrp4.Children.Add('NK1', False, False, gtSingle);
            oGrp5 := oGrp4.Children.Add('ASSOCIATED_RX_ORDER', True, False, gtGroup);
              oGrp5.Children.Add('RXE', False, False, gtSingle);
              oGrp5.Children.Add('RXR', True, True, gtSingle);
            oGrp5 := oGrp4.Children.Add('ASSOCIATED_RX_ADMIN', True, False, gtGroup);
              oGrp6 := oGrp5.Children.Add('', False, True, gtGroup);
                oGrp6.Children.Add('RXA', False, False, gtSingle);
                oGrp6.Children.Add('RXR', True, False, gtSingle);
            oGrp4.Children.Add('PRB', True, True, gtSingle);
            oGrp4.Children.Add('OBX', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('STUDY', True, False, gtGroup);
            oGrp5 := oGrp4.Children.Add('', False, True, gtGroup);
              oGrp5.Children.Add('CSR', False, False, gtSingle);
              oGrp5.Children.Add('CSP', True, True, gtSingle);
  oStructure := oStructures.Add('PEX_P08', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('PEX_P08', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('VISIT', True, False, gtGroup);
      oGrp1.Children.Add('PV1', False, False, gtSingle);
      oGrp1.Children.Add('PV2', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('EXPERIENCE', False, True, gtGroup);
      oGrp1.Children.Add('PES', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('PEX_OBSERVATION', False, True, gtGroup);
        oGrp2.Children.Add('PEO', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('PEX_CAUSE', False, True, gtGroup);
          oGrp3.Children.Add('PCR', False, False, gtSingle);
          oGrp4 := oGrp3.Children.Add('RX_ORDER', True, False, gtGroup);
            oGrp4.Children.Add('RXE', False, False, gtSingle);
            oGrp4.Children.Add('RXR', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('RX_ADMINISTRATION', True, False, gtGroup);
            oGrp5 := oGrp4.Children.Add('', False, True, gtGroup);
              oGrp5.Children.Add('RXA', False, False, gtSingle);
              oGrp5.Children.Add('RXR', True, False, gtSingle);
          oGrp3.Children.Add('PRB', True, True, gtSingle);
          oGrp3.Children.Add('OBX', True, True, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('ASSOCIATED_PERSON', True, False, gtGroup);
            oGrp4.Children.Add('NK1', False, False, gtSingle);
            oGrp5 := oGrp4.Children.Add('ASSOCIATED_RX_ORDER', True, False, gtGroup);
              oGrp5.Children.Add('RXE', False, False, gtSingle);
              oGrp5.Children.Add('RXR', True, True, gtSingle);
            oGrp5 := oGrp4.Children.Add('ASSOCIATED_RX_ADMIN', True, False, gtGroup);
              oGrp6 := oGrp5.Children.Add('', False, True, gtGroup);
                oGrp6.Children.Add('RXA', False, False, gtSingle);
                oGrp6.Children.Add('RXR', True, False, gtSingle);
            oGrp4.Children.Add('PRB', True, True, gtSingle);
            oGrp4.Children.Add('OBX', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('STUDY', True, False, gtGroup);
            oGrp5 := oGrp4.Children.Add('', False, True, gtGroup);
              oGrp5.Children.Add('CSR', False, False, gtSingle);
              oGrp5.Children.Add('CSP', True, True, gtSingle);
  oStructure := oStructures.Add('PGL_PC6', '', 'PC6', 'PGL', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('PGL_PC6', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT_VISIT', True, False, gtGroup);
      oGrp1.Children.Add('PV1', False, False, gtSingle);
      oGrp1.Children.Add('PV2', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('GOAL', False, True, gtGroup);
      oGrp1.Children.Add('GOL', False, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp1.Children.Add('VAR', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('GOAL_ROLE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('ROL', False, False, gtSingle);
          oGrp3.Children.Add('VAR', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATHWAY', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('PTH', False, False, gtSingle);
          oGrp3.Children.Add('VAR', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('OBSERVATION', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('OBX', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PROBLEM', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('PRB', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
          oGrp3.Children.Add('VAR', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('PROBLEM_ROLE', True, False, gtGroup);
            oGrp5 := oGrp4.Children.Add('', False, True, gtGroup);
              oGrp5.Children.Add('ROL', False, False, gtSingle);
              oGrp5.Children.Add('VAR', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('PROBLEM_OBSERVATION', True, False, gtGroup);
            oGrp5 := oGrp4.Children.Add('', False, True, gtGroup);
              oGrp5.Children.Add('OBX', False, False, gtSingle);
              oGrp5.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('ORC', False, False, gtSingle);
          oGrp4 := oGrp3.Children.Add('ORDER_DETAIL', True, False, gtGroup);
            oGrp4.Children.Add('OBR', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
            oGrp4.Children.Add('VAR', True, True, gtSingle);
            oGrp5 := oGrp4.Children.Add('ORDER_OBSERVATION', True, False, gtGroup);
              oGrp6 := oGrp5.Children.Add('', False, True, gtGroup);
                oGrp6.Children.Add('OBX', False, False, gtSingle);
                oGrp6.Children.Add('NTE', True, True, gtSingle);
                oGrp6.Children.Add('VAR', True, True, gtSingle);
End;

procedure Definitions23LoadMessageStructures2(oStructures : THL7V2ModelMessageStructures);
Var
  oStructure : THL7V2ModelMessageStructure;
  oGrp1 : THL7V2ModelSegmentGroup;
  oGrp2 : THL7V2ModelSegmentGroup;
  oGrp3 : THL7V2ModelSegmentGroup;
  oGrp4 : THL7V2ModelSegmentGroup;
  oGrp5 : THL7V2ModelSegmentGroup;
  oGrp6 : THL7V2ModelSegmentGroup;
  oGrp7 : THL7V2ModelSegmentGroup;
  oGrp8 : THL7V2ModelSegmentGroup;
  oGrp9 : THL7V2ModelSegmentGroup;
Begin
  oStructure := oStructures.Add('PGL_PC7', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('PGL_PC7', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT_VISIT', True, False, gtGroup);
      oGrp1.Children.Add('PV1', False, False, gtSingle);
      oGrp1.Children.Add('PV2', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('GOAL', False, True, gtGroup);
      oGrp1.Children.Add('GOL', False, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp1.Children.Add('VAR', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('GOAL_ROLE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('ROL', False, False, gtSingle);
          oGrp3.Children.Add('VAR', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATHWAY', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('PTH', False, False, gtSingle);
          oGrp3.Children.Add('VAR', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('OBSERVATION', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('OBX', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PROBLEM', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('PRB', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
          oGrp3.Children.Add('VAR', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('PROBLEM_ROLE', True, False, gtGroup);
            oGrp5 := oGrp4.Children.Add('', False, True, gtGroup);
              oGrp5.Children.Add('ROL', False, False, gtSingle);
              oGrp5.Children.Add('VAR', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('PROBLEM_OBSERVATION', True, False, gtGroup);
            oGrp5 := oGrp4.Children.Add('', False, True, gtGroup);
              oGrp5.Children.Add('OBX', False, False, gtSingle);
              oGrp5.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('ORC', False, False, gtSingle);
          oGrp4 := oGrp3.Children.Add('ORDER_DETAIL', True, False, gtGroup);
            oGrp4.Children.Add('OBR', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
            oGrp4.Children.Add('VAR', True, True, gtSingle);
            oGrp5 := oGrp4.Children.Add('ORDER_OBSERVATION', True, False, gtGroup);
              oGrp6 := oGrp5.Children.Add('', False, True, gtGroup);
                oGrp6.Children.Add('OBX', False, False, gtSingle);
                oGrp6.Children.Add('NTE', True, True, gtSingle);
                oGrp6.Children.Add('VAR', True, True, gtSingle);
  oStructure := oStructures.Add('PGL_PC8', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('PGL_PC8', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT_VISIT', True, False, gtGroup);
      oGrp1.Children.Add('PV1', False, False, gtSingle);
      oGrp1.Children.Add('PV2', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('GOAL', False, True, gtGroup);
      oGrp1.Children.Add('GOL', False, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp1.Children.Add('VAR', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('GOAL_ROLE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('ROL', False, False, gtSingle);
          oGrp3.Children.Add('VAR', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATHWAY', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('PTH', False, False, gtSingle);
          oGrp3.Children.Add('VAR', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('OBSERVATION', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('OBX', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PROBLEM', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('PRB', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
          oGrp3.Children.Add('VAR', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('PROBLEM_ROLE', True, False, gtGroup);
            oGrp5 := oGrp4.Children.Add('', False, True, gtGroup);
              oGrp5.Children.Add('ROL', False, False, gtSingle);
              oGrp5.Children.Add('VAR', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('PROBLEM_OBSERVATION', True, False, gtGroup);
            oGrp5 := oGrp4.Children.Add('', False, True, gtGroup);
              oGrp5.Children.Add('OBX', False, False, gtSingle);
              oGrp5.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('ORC', False, False, gtSingle);
          oGrp4 := oGrp3.Children.Add('ORDER_DETAIL', True, False, gtGroup);
            oGrp4.Children.Add('OBR', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
            oGrp4.Children.Add('VAR', True, True, gtSingle);
            oGrp5 := oGrp4.Children.Add('ORDER_OBSERVATION', True, False, gtGroup);
              oGrp6 := oGrp5.Children.Add('', False, True, gtGroup);
                oGrp6.Children.Add('OBX', False, False, gtSingle);
                oGrp6.Children.Add('NTE', True, True, gtSingle);
                oGrp6.Children.Add('VAR', True, True, gtSingle);
  oStructure := oStructures.Add('PIN_I07', '', 'I07', 'PIN', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('PIN_I07', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROVIDER', False, True, gtGroup);
      oGrp1.Children.Add('PRD', False, False, gtSingle);
      oGrp1.Children.Add('CTD', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NK1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('GUARANTOR_INSURANCE', True, False, gtGroup);
      oGrp1.Children.Add('GT1', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('INSURANCE', False, True, gtGroup);
        oGrp2.Children.Add('IN1', False, False, gtSingle);
        oGrp2.Children.Add('IN2', True, False, gtSingle);
        oGrp2.Children.Add('IN3', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('PPG_PCG', '', 'PCG', 'PPG', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('PPG_PCG', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT_VISIT', True, False, gtGroup);
      oGrp1.Children.Add('PV1', False, False, gtSingle);
      oGrp1.Children.Add('PV2', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATHWAY', False, True, gtGroup);
      oGrp1.Children.Add('PTH', False, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp1.Children.Add('VAR', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATHWAY_ROLE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('ROL', False, False, gtSingle);
          oGrp3.Children.Add('VAR', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('GOAL', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('GOL', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
          oGrp3.Children.Add('VAR', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('GOAL_ROLE', True, False, gtGroup);
            oGrp5 := oGrp4.Children.Add('', False, True, gtGroup);
              oGrp5.Children.Add('ROL', False, False, gtSingle);
              oGrp5.Children.Add('VAR', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('GOAL_OBSERVATION', True, False, gtGroup);
            oGrp5 := oGrp4.Children.Add('', False, True, gtGroup);
              oGrp5.Children.Add('OBX', False, False, gtSingle);
              oGrp5.Children.Add('NTE', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('PROBLEM', True, False, gtGroup);
            oGrp5 := oGrp4.Children.Add('', False, True, gtGroup);
              oGrp5.Children.Add('PRB', False, False, gtSingle);
              oGrp5.Children.Add('NTE', True, True, gtSingle);
              oGrp5.Children.Add('VAR', True, True, gtSingle);
              oGrp6 := oGrp5.Children.Add('PROBLEM_ROLE', True, False, gtGroup);
                oGrp7 := oGrp6.Children.Add('', False, True, gtGroup);
                  oGrp7.Children.Add('ROL', False, False, gtSingle);
                  oGrp7.Children.Add('VAR', True, True, gtSingle);
              oGrp6 := oGrp5.Children.Add('PROBLEM_OBSERVATION', True, False, gtGroup);
                oGrp7 := oGrp6.Children.Add('', False, True, gtGroup);
                  oGrp7.Children.Add('OBX', False, False, gtSingle);
                  oGrp7.Children.Add('NTE', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('ORDER', True, False, gtGroup);
            oGrp5 := oGrp4.Children.Add('', False, True, gtGroup);
              oGrp5.Children.Add('ORC', False, False, gtSingle);
              oGrp6 := oGrp5.Children.Add('ORDER_DETAIL', True, False, gtGroup);
                oGrp6.Children.Add('OBR', False, False, gtSingle);
                oGrp6.Children.Add('NTE', True, True, gtSingle);
                oGrp6.Children.Add('VAR', True, True, gtSingle);
                oGrp7 := oGrp6.Children.Add('ORDER_OBSERVATION', True, False, gtGroup);
                  oGrp8 := oGrp7.Children.Add('', False, True, gtGroup);
                    oGrp8.Children.Add('OBX', False, False, gtSingle);
                    oGrp8.Children.Add('NTE', True, True, gtSingle);
                    oGrp8.Children.Add('VAR', True, True, gtSingle);
  oStructure := oStructures.Add('PPG_PCH', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('PPG_PCH', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT_VISIT', True, False, gtGroup);
      oGrp1.Children.Add('PV1', False, False, gtSingle);
      oGrp1.Children.Add('PV2', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATHWAY', False, True, gtGroup);
      oGrp1.Children.Add('PTH', False, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp1.Children.Add('VAR', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATHWAY_ROLE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('ROL', False, False, gtSingle);
          oGrp3.Children.Add('VAR', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('GOAL', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('GOL', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
          oGrp3.Children.Add('VAR', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('GOAL_ROLE', True, False, gtGroup);
            oGrp5 := oGrp4.Children.Add('', False, True, gtGroup);
              oGrp5.Children.Add('ROL', False, False, gtSingle);
              oGrp5.Children.Add('VAR', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('GOAL_OBSERVATION', True, False, gtGroup);
            oGrp5 := oGrp4.Children.Add('', False, True, gtGroup);
              oGrp5.Children.Add('OBX', False, False, gtSingle);
              oGrp5.Children.Add('NTE', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('PROBLEM', True, False, gtGroup);
            oGrp5 := oGrp4.Children.Add('', False, True, gtGroup);
              oGrp5.Children.Add('PRB', False, False, gtSingle);
              oGrp5.Children.Add('NTE', True, True, gtSingle);
              oGrp5.Children.Add('VAR', True, True, gtSingle);
              oGrp6 := oGrp5.Children.Add('PROBLEM_ROLE', True, False, gtGroup);
                oGrp7 := oGrp6.Children.Add('', False, True, gtGroup);
                  oGrp7.Children.Add('ROL', False, False, gtSingle);
                  oGrp7.Children.Add('VAR', True, True, gtSingle);
              oGrp6 := oGrp5.Children.Add('PROBLEM_OBSERVATION', True, False, gtGroup);
                oGrp7 := oGrp6.Children.Add('', False, True, gtGroup);
                  oGrp7.Children.Add('OBX', False, False, gtSingle);
                  oGrp7.Children.Add('NTE', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('ORDER', True, False, gtGroup);
            oGrp5 := oGrp4.Children.Add('', False, True, gtGroup);
              oGrp5.Children.Add('ORC', False, False, gtSingle);
              oGrp6 := oGrp5.Children.Add('ORDER_DETAIL', True, False, gtGroup);
                oGrp6.Children.Add('OBR', False, False, gtSingle);
                oGrp6.Children.Add('NTE', True, True, gtSingle);
                oGrp6.Children.Add('VAR', True, True, gtSingle);
                oGrp7 := oGrp6.Children.Add('ORDER_OBSERVATION', True, False, gtGroup);
                  oGrp8 := oGrp7.Children.Add('', False, True, gtGroup);
                    oGrp8.Children.Add('OBX', False, False, gtSingle);
                    oGrp8.Children.Add('NTE', True, True, gtSingle);
                    oGrp8.Children.Add('VAR', True, True, gtSingle);
  oStructure := oStructures.Add('PPG_PCJ', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('PPG_PCJ', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT_VISIT', True, False, gtGroup);
      oGrp1.Children.Add('PV1', False, False, gtSingle);
      oGrp1.Children.Add('PV2', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATHWAY', False, True, gtGroup);
      oGrp1.Children.Add('PTH', False, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp1.Children.Add('VAR', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATHWAY_ROLE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('ROL', False, False, gtSingle);
          oGrp3.Children.Add('VAR', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('GOAL', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('GOL', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
          oGrp3.Children.Add('VAR', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('GOAL_ROLE', True, False, gtGroup);
            oGrp5 := oGrp4.Children.Add('', False, True, gtGroup);
              oGrp5.Children.Add('ROL', False, False, gtSingle);
              oGrp5.Children.Add('VAR', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('GOAL_OBSERVATION', True, False, gtGroup);
            oGrp5 := oGrp4.Children.Add('', False, True, gtGroup);
              oGrp5.Children.Add('OBX', False, False, gtSingle);
              oGrp5.Children.Add('NTE', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('PROBLEM', True, False, gtGroup);
            oGrp5 := oGrp4.Children.Add('', False, True, gtGroup);
              oGrp5.Children.Add('PRB', False, False, gtSingle);
              oGrp5.Children.Add('NTE', True, True, gtSingle);
              oGrp5.Children.Add('VAR', True, True, gtSingle);
              oGrp6 := oGrp5.Children.Add('PROBLEM_ROLE', True, False, gtGroup);
                oGrp7 := oGrp6.Children.Add('', False, True, gtGroup);
                  oGrp7.Children.Add('ROL', False, False, gtSingle);
                  oGrp7.Children.Add('VAR', True, True, gtSingle);
              oGrp6 := oGrp5.Children.Add('PROBLEM_OBSERVATION', True, False, gtGroup);
                oGrp7 := oGrp6.Children.Add('', False, True, gtGroup);
                  oGrp7.Children.Add('OBX', False, False, gtSingle);
                  oGrp7.Children.Add('NTE', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('ORDER', True, False, gtGroup);
            oGrp5 := oGrp4.Children.Add('', False, True, gtGroup);
              oGrp5.Children.Add('ORC', False, False, gtSingle);
              oGrp6 := oGrp5.Children.Add('ORDER_DETAIL', True, False, gtGroup);
                oGrp6.Children.Add('OBR', False, False, gtSingle);
                oGrp6.Children.Add('NTE', True, True, gtSingle);
                oGrp6.Children.Add('VAR', True, True, gtSingle);
                oGrp7 := oGrp6.Children.Add('ORDER_OBSERVATION', True, False, gtGroup);
                  oGrp8 := oGrp7.Children.Add('', False, True, gtGroup);
                    oGrp8.Children.Add('OBX', False, False, gtSingle);
                    oGrp8.Children.Add('NTE', True, True, gtSingle);
                    oGrp8.Children.Add('VAR', True, True, gtSingle);
  oStructure := oStructures.Add('PPP_PCB', '', 'PCB', 'PPP', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('PPP_PCB', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT_VISIT', True, False, gtGroup);
      oGrp1.Children.Add('PV1', False, False, gtSingle);
      oGrp1.Children.Add('PV2', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATHWAY', False, True, gtGroup);
      oGrp1.Children.Add('PTH', False, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp1.Children.Add('VAR', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATHWAY_ROLE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('ROL', False, False, gtSingle);
          oGrp3.Children.Add('VAR', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PROBLEM', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('PRB', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
          oGrp3.Children.Add('VAR', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('PROBLEM_ROLE', True, False, gtGroup);
            oGrp5 := oGrp4.Children.Add('', False, True, gtGroup);
              oGrp5.Children.Add('ROL', False, False, gtSingle);
              oGrp5.Children.Add('VAR', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('PROBLEM_OBSERVATION', True, False, gtGroup);
            oGrp5 := oGrp4.Children.Add('', False, True, gtGroup);
              oGrp5.Children.Add('OBX', False, False, gtSingle);
              oGrp5.Children.Add('NTE', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('GOAL', True, False, gtGroup);
            oGrp5 := oGrp4.Children.Add('', False, True, gtGroup);
              oGrp5.Children.Add('GOL', False, False, gtSingle);
              oGrp5.Children.Add('NTE', True, True, gtSingle);
              oGrp5.Children.Add('VAR', True, True, gtSingle);
              oGrp6 := oGrp5.Children.Add('GOAL_ROLE', True, False, gtGroup);
                oGrp7 := oGrp6.Children.Add('', False, True, gtGroup);
                  oGrp7.Children.Add('ROL', False, False, gtSingle);
                  oGrp7.Children.Add('VAR', True, True, gtSingle);
              oGrp6 := oGrp5.Children.Add('GOAL_OBSERVATION', True, False, gtGroup);
                oGrp7 := oGrp6.Children.Add('', False, True, gtGroup);
                  oGrp7.Children.Add('OBX', False, False, gtSingle);
                  oGrp7.Children.Add('NTE', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('ORDER', True, False, gtGroup);
            oGrp5 := oGrp4.Children.Add('', False, True, gtGroup);
              oGrp5.Children.Add('ORC', False, False, gtSingle);
              oGrp6 := oGrp5.Children.Add('ORDER_DETAIL', True, False, gtGroup);
                oGrp6.Children.Add('OBR', False, False, gtSingle);
                oGrp6.Children.Add('NTE', True, True, gtSingle);
                oGrp6.Children.Add('VAR', True, True, gtSingle);
                oGrp7 := oGrp6.Children.Add('ORDER_OBSERVATION', True, False, gtGroup);
                  oGrp8 := oGrp7.Children.Add('', False, True, gtGroup);
                    oGrp8.Children.Add('OBX', False, False, gtSingle);
                    oGrp8.Children.Add('NTE', True, True, gtSingle);
                    oGrp8.Children.Add('VAR', True, True, gtSingle);
  oStructure := oStructures.Add('PPP_PCC', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('PPP_PCC', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT_VISIT', True, False, gtGroup);
      oGrp1.Children.Add('PV1', False, False, gtSingle);
      oGrp1.Children.Add('PV2', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATHWAY', False, True, gtGroup);
      oGrp1.Children.Add('PTH', False, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp1.Children.Add('VAR', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATHWAY_ROLE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('ROL', False, False, gtSingle);
          oGrp3.Children.Add('VAR', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PROBLEM', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('PRB', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
          oGrp3.Children.Add('VAR', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('PROBLEM_ROLE', True, False, gtGroup);
            oGrp5 := oGrp4.Children.Add('', False, True, gtGroup);
              oGrp5.Children.Add('ROL', False, False, gtSingle);
              oGrp5.Children.Add('VAR', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('PROBLEM_OBSERVATION', True, False, gtGroup);
            oGrp5 := oGrp4.Children.Add('', False, True, gtGroup);
              oGrp5.Children.Add('OBX', False, False, gtSingle);
              oGrp5.Children.Add('NTE', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('GOAL', True, False, gtGroup);
            oGrp5 := oGrp4.Children.Add('', False, True, gtGroup);
              oGrp5.Children.Add('GOL', False, False, gtSingle);
              oGrp5.Children.Add('NTE', True, True, gtSingle);
              oGrp5.Children.Add('VAR', True, True, gtSingle);
              oGrp6 := oGrp5.Children.Add('GOAL_ROLE', True, False, gtGroup);
                oGrp7 := oGrp6.Children.Add('', False, True, gtGroup);
                  oGrp7.Children.Add('ROL', False, False, gtSingle);
                  oGrp7.Children.Add('VAR', True, True, gtSingle);
              oGrp6 := oGrp5.Children.Add('GOAL_OBSERVATION', True, False, gtGroup);
                oGrp7 := oGrp6.Children.Add('', False, True, gtGroup);
                  oGrp7.Children.Add('OBX', False, False, gtSingle);
                  oGrp7.Children.Add('NTE', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('ORDER', True, False, gtGroup);
            oGrp5 := oGrp4.Children.Add('', False, True, gtGroup);
              oGrp5.Children.Add('ORC', False, False, gtSingle);
              oGrp6 := oGrp5.Children.Add('ORDER_DETAIL', True, False, gtGroup);
                oGrp6.Children.Add('OBR', False, False, gtSingle);
                oGrp6.Children.Add('NTE', True, True, gtSingle);
                oGrp6.Children.Add('VAR', True, True, gtSingle);
                oGrp7 := oGrp6.Children.Add('ORDER_OBSERVATION', True, False, gtGroup);
                  oGrp8 := oGrp7.Children.Add('', False, True, gtGroup);
                    oGrp8.Children.Add('OBX', False, False, gtSingle);
                    oGrp8.Children.Add('NTE', True, True, gtSingle);
                    oGrp8.Children.Add('VAR', True, True, gtSingle);
  oStructure := oStructures.Add('PPP_PCD', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('PPP_PCD', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT_VISIT', True, False, gtGroup);
      oGrp1.Children.Add('PV1', False, False, gtSingle);
      oGrp1.Children.Add('PV2', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATHWAY', False, True, gtGroup);
      oGrp1.Children.Add('PTH', False, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp1.Children.Add('VAR', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATHWAY_ROLE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('ROL', False, False, gtSingle);
          oGrp3.Children.Add('VAR', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PROBLEM', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('PRB', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
          oGrp3.Children.Add('VAR', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('PROBLEM_ROLE', True, False, gtGroup);
            oGrp5 := oGrp4.Children.Add('', False, True, gtGroup);
              oGrp5.Children.Add('ROL', False, False, gtSingle);
              oGrp5.Children.Add('VAR', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('PROBLEM_OBSERVATION', True, False, gtGroup);
            oGrp5 := oGrp4.Children.Add('', False, True, gtGroup);
              oGrp5.Children.Add('OBX', False, False, gtSingle);
              oGrp5.Children.Add('NTE', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('GOAL', True, False, gtGroup);
            oGrp5 := oGrp4.Children.Add('', False, True, gtGroup);
              oGrp5.Children.Add('GOL', False, False, gtSingle);
              oGrp5.Children.Add('NTE', True, True, gtSingle);
              oGrp5.Children.Add('VAR', True, True, gtSingle);
              oGrp6 := oGrp5.Children.Add('GOAL_ROLE', True, False, gtGroup);
                oGrp7 := oGrp6.Children.Add('', False, True, gtGroup);
                  oGrp7.Children.Add('ROL', False, False, gtSingle);
                  oGrp7.Children.Add('VAR', True, True, gtSingle);
              oGrp6 := oGrp5.Children.Add('GOAL_OBSERVATION', True, False, gtGroup);
                oGrp7 := oGrp6.Children.Add('', False, True, gtGroup);
                  oGrp7.Children.Add('OBX', False, False, gtSingle);
                  oGrp7.Children.Add('NTE', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('ORDER', True, False, gtGroup);
            oGrp5 := oGrp4.Children.Add('', False, True, gtGroup);
              oGrp5.Children.Add('ORC', False, False, gtSingle);
              oGrp6 := oGrp5.Children.Add('ORDER_DETAIL', True, False, gtGroup);
                oGrp6.Children.Add('OBR', False, False, gtSingle);
                oGrp6.Children.Add('NTE', True, True, gtSingle);
                oGrp6.Children.Add('VAR', True, True, gtSingle);
                oGrp7 := oGrp6.Children.Add('ORDER_OBSERVATION', True, False, gtGroup);
                  oGrp8 := oGrp7.Children.Add('', False, True, gtGroup);
                    oGrp8.Children.Add('OBX', False, False, gtSingle);
                    oGrp8.Children.Add('NTE', True, True, gtSingle);
                    oGrp8.Children.Add('VAR', True, True, gtSingle);
  oStructure := oStructures.Add('PPR_PC1', '', 'PC1', 'PPR', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('PPR_PC1', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT_VISIT', True, False, gtGroup);
      oGrp1.Children.Add('PV1', False, False, gtSingle);
      oGrp1.Children.Add('PV2', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROBLEM', False, True, gtGroup);
      oGrp1.Children.Add('PRB', False, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp1.Children.Add('VAR', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PROBLEM_ROLE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('ROL', False, False, gtSingle);
          oGrp3.Children.Add('VAR', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATHWAY', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('PTH', False, False, gtSingle);
          oGrp3.Children.Add('VAR', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PROBLEM_OBSERVATION', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('OBX', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('GOAL', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('GOL', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
          oGrp3.Children.Add('VAR', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('GOAL_ROLE', True, False, gtGroup);
            oGrp5 := oGrp4.Children.Add('', False, True, gtGroup);
              oGrp5.Children.Add('ROL', False, False, gtSingle);
              oGrp5.Children.Add('VAR', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('GOAL_OBSERVATION', True, False, gtGroup);
            oGrp5 := oGrp4.Children.Add('', False, True, gtGroup);
              oGrp5.Children.Add('OBX', False, False, gtSingle);
              oGrp5.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('ORC', False, False, gtSingle);
          oGrp4 := oGrp3.Children.Add('ORDER_DETAIL', True, False, gtGroup);
            oGrp4.Children.Add('OBR', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
            oGrp4.Children.Add('VAR', True, True, gtSingle);
            oGrp5 := oGrp4.Children.Add('ORDER_OBSERVATION', True, False, gtGroup);
              oGrp6 := oGrp5.Children.Add('', False, True, gtGroup);
                oGrp6.Children.Add('OBX', False, False, gtSingle);
                oGrp6.Children.Add('NTE', True, True, gtSingle);
                oGrp6.Children.Add('VAR', True, True, gtSingle);
  oStructure := oStructures.Add('PPR_PC2', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('PPR_PC2', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT_VISIT', True, False, gtGroup);
      oGrp1.Children.Add('PV1', False, False, gtSingle);
      oGrp1.Children.Add('PV2', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROBLEM', False, True, gtGroup);
      oGrp1.Children.Add('PRB', False, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp1.Children.Add('VAR', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PROBLEM_ROLE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('ROL', False, False, gtSingle);
          oGrp3.Children.Add('VAR', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATHWAY', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('PTH', False, False, gtSingle);
          oGrp3.Children.Add('VAR', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PROBLEM_OBSERVATION', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('OBX', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('GOAL', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('GOL', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
          oGrp3.Children.Add('VAR', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('GOAL_ROLE', True, False, gtGroup);
            oGrp5 := oGrp4.Children.Add('', False, True, gtGroup);
              oGrp5.Children.Add('ROL', False, False, gtSingle);
              oGrp5.Children.Add('VAR', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('GOAL_OBSERVATION', True, False, gtGroup);
            oGrp5 := oGrp4.Children.Add('', False, True, gtGroup);
              oGrp5.Children.Add('OBX', False, False, gtSingle);
              oGrp5.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('ORC', False, False, gtSingle);
          oGrp4 := oGrp3.Children.Add('ORDER_DETAIL', True, False, gtGroup);
            oGrp4.Children.Add('OBR', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
            oGrp4.Children.Add('VAR', True, True, gtSingle);
            oGrp5 := oGrp4.Children.Add('ORDER_OBSERVATION', True, False, gtGroup);
              oGrp6 := oGrp5.Children.Add('', False, True, gtGroup);
                oGrp6.Children.Add('OBX', False, False, gtSingle);
                oGrp6.Children.Add('NTE', True, True, gtSingle);
                oGrp6.Children.Add('VAR', True, True, gtSingle);
  oStructure := oStructures.Add('PPR_PC3', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('PPR_PC3', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT_VISIT', True, False, gtGroup);
      oGrp1.Children.Add('PV1', False, False, gtSingle);
      oGrp1.Children.Add('PV2', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROBLEM', False, True, gtGroup);
      oGrp1.Children.Add('PRB', False, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp1.Children.Add('VAR', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PROBLEM_ROLE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('ROL', False, False, gtSingle);
          oGrp3.Children.Add('VAR', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATHWAY', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('PTH', False, False, gtSingle);
          oGrp3.Children.Add('VAR', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PROBLEM_OBSERVATION', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('OBX', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('GOAL', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('GOL', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
          oGrp3.Children.Add('VAR', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('GOAL_ROLE', True, False, gtGroup);
            oGrp5 := oGrp4.Children.Add('', False, True, gtGroup);
              oGrp5.Children.Add('ROL', False, False, gtSingle);
              oGrp5.Children.Add('VAR', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('GOAL_OBSERVATION', True, False, gtGroup);
            oGrp5 := oGrp4.Children.Add('', False, True, gtGroup);
              oGrp5.Children.Add('OBX', False, False, gtSingle);
              oGrp5.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('ORC', False, False, gtSingle);
          oGrp4 := oGrp3.Children.Add('ORDER_DETAIL', True, False, gtGroup);
            oGrp4.Children.Add('OBR', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
            oGrp4.Children.Add('VAR', True, True, gtSingle);
            oGrp5 := oGrp4.Children.Add('ORDER_OBSERVATION', True, False, gtGroup);
              oGrp6 := oGrp5.Children.Add('', False, True, gtGroup);
                oGrp6.Children.Add('OBX', False, False, gtSingle);
                oGrp6.Children.Add('NTE', True, True, gtSingle);
                oGrp6.Children.Add('VAR', True, True, gtSingle);
  oStructure := oStructures.Add('PPT_PCL', '', 'PCL', 'PPT', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('PPT_PCL', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', False, True, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATIENT_VISIT', True, False, gtGroup);
        oGrp2.Children.Add('PV1', False, False, gtSingle);
        oGrp2.Children.Add('PV2', True, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATHWAY', False, True, gtGroup);
        oGrp2.Children.Add('PTH', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
        oGrp2.Children.Add('VAR', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('PATHWAY_ROLE', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('ROL', False, False, gtSingle);
            oGrp4.Children.Add('VAR', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('GOAL', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('GOL', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
            oGrp4.Children.Add('VAR', True, True, gtSingle);
            oGrp5 := oGrp4.Children.Add('GOAL_ROLE', True, False, gtGroup);
              oGrp6 := oGrp5.Children.Add('', False, True, gtGroup);
                oGrp6.Children.Add('ROL', False, False, gtSingle);
                oGrp6.Children.Add('VAR', True, True, gtSingle);
            oGrp5 := oGrp4.Children.Add('GOAL_OBSERVATION', True, False, gtGroup);
              oGrp6 := oGrp5.Children.Add('', False, True, gtGroup);
                oGrp6.Children.Add('OBX', False, False, gtSingle);
                oGrp6.Children.Add('NTE', True, True, gtSingle);
            oGrp5 := oGrp4.Children.Add('PROBLEM', True, False, gtGroup);
              oGrp6 := oGrp5.Children.Add('', False, True, gtGroup);
                oGrp6.Children.Add('PRB', False, False, gtSingle);
                oGrp6.Children.Add('NTE', True, True, gtSingle);
                oGrp6.Children.Add('VAR', True, True, gtSingle);
                oGrp7 := oGrp6.Children.Add('PROBLEM_ROLE', True, False, gtGroup);
                  oGrp8 := oGrp7.Children.Add('', False, True, gtGroup);
                    oGrp8.Children.Add('ROL', False, False, gtSingle);
                    oGrp8.Children.Add('VAR', True, True, gtSingle);
                oGrp7 := oGrp6.Children.Add('PROBLEM_OBSERVATION', True, False, gtGroup);
                  oGrp8 := oGrp7.Children.Add('', False, True, gtGroup);
                    oGrp8.Children.Add('OBX', False, False, gtSingle);
                    oGrp8.Children.Add('NTE', True, True, gtSingle);
            oGrp5 := oGrp4.Children.Add('ORDER', True, False, gtGroup);
              oGrp6 := oGrp5.Children.Add('', False, True, gtGroup);
                oGrp6.Children.Add('ORC', False, False, gtSingle);
                oGrp7 := oGrp6.Children.Add('ORDER_DETAIL', True, False, gtGroup);
                  oGrp7.Children.Add('OBR', False, False, gtSingle);
                  oGrp7.Children.Add('NTE', True, True, gtSingle);
                  oGrp7.Children.Add('VAR', True, True, gtSingle);
                  oGrp8 := oGrp7.Children.Add('ORDER_OBSERVATION', True, False, gtGroup);
                    oGrp9 := oGrp8.Children.Add('', False, True, gtGroup);
                      oGrp9.Children.Add('OBX', False, False, gtSingle);
                      oGrp9.Children.Add('NTE', True, True, gtSingle);
                      oGrp9.Children.Add('VAR', True, True, gtSingle);
  oStructure := oStructures.Add('PPV_PCA', '', 'PCA', 'PPV', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('PPV_PCA', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', False, True, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATIENT_VISIT', True, False, gtGroup);
        oGrp2.Children.Add('PV1', False, False, gtSingle);
        oGrp2.Children.Add('PV2', True, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('GOAL', False, True, gtGroup);
        oGrp2.Children.Add('GOL', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
        oGrp2.Children.Add('VAR', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('GOAL_ROLE', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('ROL', False, False, gtSingle);
            oGrp4.Children.Add('VAR', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('GOAL_PATHWAY', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('PTH', False, False, gtSingle);
            oGrp4.Children.Add('VAR', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('GOAL_OBSERVATION', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('OBX', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('PROBLEM', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('PRB', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
            oGrp4.Children.Add('VAR', True, True, gtSingle);
            oGrp5 := oGrp4.Children.Add('PROBLEM_ROLE', True, False, gtGroup);
              oGrp6 := oGrp5.Children.Add('', False, True, gtGroup);
                oGrp6.Children.Add('ROL', False, False, gtSingle);
                oGrp6.Children.Add('VAR', True, True, gtSingle);
            oGrp5 := oGrp4.Children.Add('PROBLEM_OBSERVATION', True, False, gtGroup);
              oGrp6 := oGrp5.Children.Add('', False, True, gtGroup);
                oGrp6.Children.Add('OBX', False, False, gtSingle);
                oGrp6.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('ORDER', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('ORC', False, False, gtSingle);
            oGrp5 := oGrp4.Children.Add('ORDER_DETAIL', True, False, gtGroup);
              oGrp5.Children.Add('OBR', False, False, gtSingle);
              oGrp5.Children.Add('NTE', True, True, gtSingle);
              oGrp5.Children.Add('VAR', True, True, gtSingle);
              oGrp6 := oGrp5.Children.Add('ORDER_OBSERVATION', True, False, gtGroup);
                oGrp7 := oGrp6.Children.Add('', False, True, gtGroup);
                  oGrp7.Children.Add('OBX', False, False, gtSingle);
                  oGrp7.Children.Add('NTE', True, True, gtSingle);
                  oGrp7.Children.Add('VAR', True, True, gtSingle);
  oStructure := oStructures.Add('PRR_PC5', '', 'PC5', 'PRR', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('PRR_PC5', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', False, True, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATIENT_VISIT', True, False, gtGroup);
        oGrp2.Children.Add('PV1', False, False, gtSingle);
        oGrp2.Children.Add('PV2', True, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('PROBLEM', False, True, gtGroup);
        oGrp2.Children.Add('PRB', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
        oGrp2.Children.Add('VAR', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('PROBLEM_ROLE', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('ROL', False, False, gtSingle);
            oGrp4.Children.Add('VAR', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('PROBLEM_PATHWAY', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('PTH', False, False, gtSingle);
            oGrp4.Children.Add('VAR', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('PROBLEM_OBSERVATION', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('OBX', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('GOAL', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('GOL', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
            oGrp4.Children.Add('VAR', True, True, gtSingle);
            oGrp5 := oGrp4.Children.Add('GOAL_ROLE', True, False, gtGroup);
              oGrp6 := oGrp5.Children.Add('', False, True, gtGroup);
                oGrp6.Children.Add('ROL', False, False, gtSingle);
                oGrp6.Children.Add('VAR', True, True, gtSingle);
            oGrp5 := oGrp4.Children.Add('GOAL_OBSERVATION', True, False, gtGroup);
              oGrp6 := oGrp5.Children.Add('', False, True, gtGroup);
                oGrp6.Children.Add('OBX', False, False, gtSingle);
                oGrp6.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('ORDER', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('ORC', False, False, gtSingle);
            oGrp5 := oGrp4.Children.Add('ORDER_DETAIL', True, False, gtGroup);
              oGrp5.Children.Add('OBR', False, False, gtSingle);
              oGrp5.Children.Add('NTE', True, True, gtSingle);
              oGrp5.Children.Add('VAR', True, True, gtSingle);
              oGrp6 := oGrp5.Children.Add('ORDER_OBSERVATION', True, False, gtGroup);
                oGrp7 := oGrp6.Children.Add('', False, True, gtGroup);
                  oGrp7.Children.Add('OBX', False, False, gtSingle);
                  oGrp7.Children.Add('NTE', True, True, gtSingle);
                  oGrp7.Children.Add('VAR', True, True, gtSingle);
  oStructure := oStructures.Add('PTR_PCF', '', 'PCF', 'PTR', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('PTR_PCF', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', False, True, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATIENT_VISIT', True, False, gtGroup);
        oGrp2.Children.Add('PV1', False, False, gtSingle);
        oGrp2.Children.Add('PV2', True, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATHWAY', False, True, gtGroup);
        oGrp2.Children.Add('PTH', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
        oGrp2.Children.Add('VAR', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('PATHWAY_ROLE', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('ROL', False, False, gtSingle);
            oGrp4.Children.Add('VAR', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('PROBLEM', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('PRB', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
            oGrp4.Children.Add('VAR', True, True, gtSingle);
            oGrp5 := oGrp4.Children.Add('PROBLEM_ROLE', True, False, gtGroup);
              oGrp6 := oGrp5.Children.Add('', False, True, gtGroup);
                oGrp6.Children.Add('ROL', False, False, gtSingle);
                oGrp6.Children.Add('VAR', True, True, gtSingle);
            oGrp5 := oGrp4.Children.Add('PROBLEM_OBSERVATION', True, False, gtGroup);
              oGrp6 := oGrp5.Children.Add('', False, True, gtGroup);
                oGrp6.Children.Add('OBX', False, False, gtSingle);
                oGrp6.Children.Add('NTE', True, True, gtSingle);
            oGrp5 := oGrp4.Children.Add('GOAL', True, False, gtGroup);
              oGrp6 := oGrp5.Children.Add('', False, True, gtGroup);
                oGrp6.Children.Add('GOL', False, False, gtSingle);
                oGrp6.Children.Add('NTE', True, True, gtSingle);
                oGrp6.Children.Add('VAR', True, True, gtSingle);
                oGrp7 := oGrp6.Children.Add('GOAL_ROLE', True, False, gtGroup);
                  oGrp8 := oGrp7.Children.Add('', False, True, gtGroup);
                    oGrp8.Children.Add('ROL', False, False, gtSingle);
                    oGrp8.Children.Add('VAR', True, True, gtSingle);
                oGrp7 := oGrp6.Children.Add('GOAL_OBSERVATION', True, False, gtGroup);
                  oGrp8 := oGrp7.Children.Add('', False, True, gtGroup);
                    oGrp8.Children.Add('OBX', False, False, gtSingle);
                    oGrp8.Children.Add('NTE', True, True, gtSingle);
            oGrp5 := oGrp4.Children.Add('ORDER', True, False, gtGroup);
              oGrp6 := oGrp5.Children.Add('', False, True, gtGroup);
                oGrp6.Children.Add('ORC', False, False, gtSingle);
                oGrp7 := oGrp6.Children.Add('ORDER_DETAIL', True, False, gtGroup);
                  oGrp7.Children.Add('OBR', False, False, gtSingle);
                  oGrp7.Children.Add('NTE', True, True, gtSingle);
                  oGrp7.Children.Add('VAR', True, True, gtSingle);
                  oGrp8 := oGrp7.Children.Add('ORDER_OBSERVATION', True, False, gtGroup);
                    oGrp9 := oGrp8.Children.Add('', False, True, gtGroup);
                      oGrp9.Children.Add('OBX', False, False, gtSingle);
                      oGrp9.Children.Add('NTE', True, True, gtSingle);
                      oGrp9.Children.Add('VAR', True, True, gtSingle);
  oStructure := oStructures.Add('QCK_Q02', '', 'Q02', 'QCK', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('QCK_Q02', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QAK', True, False, gtSingle);
  oStructure := oStructures.Add('QRY_A19', '', 'A19', 'QRY', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('QRY_A19', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRF', True, False, gtSingle);
  oStructure := oStructures.Add('QRY_PC4', '', 'PC4', 'QRY', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('QRY_PC4', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRF', True, False, gtSingle);
  oStructure := oStructures.Add('QRY_PC9', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('QRY_PC9', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRF', True, False, gtSingle);
  oStructure := oStructures.Add('QRY_PCE', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('QRY_PCE', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRF', True, False, gtSingle);
  oStructure := oStructures.Add('QRY_PCK', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('QRY_PCK', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRF', True, False, gtSingle);
  oStructure := oStructures.Add('QRY_Q01', '', 'Q01', 'QRY', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('QRY_Q01', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRF', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('QRY_Q02', '', 'Q02', 'QRY', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('QRY_Q02', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRF', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('QRY_R02', '', 'R02', 'QRY', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('QRY_R02', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRF', False, False, gtSingle);
  oStructure := oStructures.Add('QRY_T12', '', 'T12', 'QRY', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('QRY_T12', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRF', True, False, gtSingle);
  oStructure := oStructures.Add('RAR_RAR', '', 'RAR', 'RAR', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RAR_RAR', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('DEFINITION', False, True, gtGroup);
      oGrp1.Children.Add('QRD', False, False, gtSingle);
      oGrp1.Children.Add('QRF', True, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATIENT', True, False, gtGroup);
        oGrp2.Children.Add('PID', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER', False, True, gtGroup);
        oGrp2.Children.Add('ORC', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('ENCODING', True, False, gtGroup);
          oGrp3.Children.Add('RXE', False, False, gtSingle);
          oGrp3.Children.Add('RXR', False, True, gtSingle);
          oGrp3.Children.Add('RXC', True, True, gtSingle);
        oGrp2.Children.Add('RXA', False, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('RAS_O01', '', 'O01', 'RAS', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RAS_O01', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', True, False, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp1.Children.Add('PD1', True, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp1.Children.Add('AL1', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATIENT_VISIT', True, False, gtGroup);
        oGrp2.Children.Add('PV1', False, False, gtSingle);
        oGrp2.Children.Add('PV2', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('ORDER', False, True, gtGroup);
      oGrp1.Children.Add('ORC', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER_DETAIL', True, False, gtGroup);
        oGrp2.Children.Add('RXO', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('ORDER_DETAIL_SUPPLEMENT', True, False, gtGroup);
          oGrp3.Children.Add('NTE', False, True, gtSingle);
          oGrp3.Children.Add('RXR', False, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('COMPONENTS', True, False, gtGroup);
            oGrp4.Children.Add('RXC', False, True, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('ENCODING', True, False, gtGroup);
        oGrp2.Children.Add('RXE', False, False, gtSingle);
        oGrp2.Children.Add('RXR', False, True, gtSingle);
        oGrp2.Children.Add('RXC', True, True, gtSingle);
      oGrp1.Children.Add('RXA', False, True, gtSingle);
      oGrp1.Children.Add('RXR', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('OBSERVATION', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('OBX', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp1.Children.Add('CTI', True, True, gtSingle);
  oStructure := oStructures.Add('RAS_O02', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RAS_O02', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', True, False, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('RCI_I05', '', 'I05', 'RCI', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RCI_I05', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRF', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROVIDER', False, True, gtGroup);
      oGrp1.Children.Add('PRD', False, False, gtSingle);
      oGrp1.Children.Add('CTD', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DG1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DRG', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('AL1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('OBSERVATION', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('OBR', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('RESULTS', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('OBX', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('RCL_I06', '', 'I06', 'RCL', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RCL_I06', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRF', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROVIDER', False, True, gtGroup);
      oGrp1.Children.Add('PRD', False, False, gtSingle);
      oGrp1.Children.Add('CTD', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DG1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DRG', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('AL1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DSP', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('RDE_O01', '', 'O01', 'RDE', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RDE_O01', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', True, False, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp1.Children.Add('PD1', True, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATIENT_VISIT', True, False, gtGroup);
        oGrp2.Children.Add('PV1', False, False, gtSingle);
        oGrp2.Children.Add('PV2', True, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('INSURANCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('IN1', False, False, gtSingle);
          oGrp3.Children.Add('IN2', True, False, gtSingle);
          oGrp3.Children.Add('IN3', True, False, gtSingle);
      oGrp1.Children.Add('GT1', True, False, gtSingle);
      oGrp1.Children.Add('AL1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('ORDER', False, True, gtGroup);
      oGrp1.Children.Add('ORC', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER_DETAIL', True, False, gtGroup);
        oGrp2.Children.Add('RXO', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
        oGrp2.Children.Add('RXR', False, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('COMPONENT', True, False, gtGroup);
          oGrp3.Children.Add('RXC', False, True, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp1.Children.Add('RXE', False, False, gtSingle);
      oGrp1.Children.Add('RXR', False, True, gtSingle);
      oGrp1.Children.Add('RXC', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('OBSERVATION', False, True, gtGroup);
        oGrp2.Children.Add('OBX', True, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
      oGrp1.Children.Add('CTI', True, False, gtSingle);
  oStructure := oStructures.Add('RDO_O01', 'Pharmacy Treatment Order', 'O01', 'ORR', 'order');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RDO_O01', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', True, False, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp1.Children.Add('PD1', True, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATIENT_VISIT', True, False, gtGroup);
        oGrp2.Children.Add('PV1', False, False, gtSingle);
        oGrp2.Children.Add('PV2', True, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('INSURANCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('IN1', False, False, gtSingle);
          oGrp3.Children.Add('IN2', True, False, gtSingle);
          oGrp3.Children.Add('IN3', True, False, gtSingle);
      oGrp1.Children.Add('GT1', True, False, gtSingle);
      oGrp1.Children.Add('AL1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('ORDER', False, True, gtGroup);
      oGrp1.Children.Add('ORC', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER_DETAIL', True, False, gtGroup);
        oGrp2.Children.Add('RXO', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
        oGrp2.Children.Add('RXR', False, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('COMPONENT', True, False, gtGroup);
          oGrp3.Children.Add('RXC', False, True, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('OBSERVATION', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('OBX', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
      oGrp1.Children.Add('BLG', True, False, gtSingle);
  oStructure := oStructures.Add('RDR_RDR', '', 'RDR', 'RDR', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RDR_RDR', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('DEFINITION', False, True, gtGroup);
      oGrp1.Children.Add('QRD', False, False, gtSingle);
      oGrp1.Children.Add('QRF', True, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATIENT', True, False, gtGroup);
        oGrp2.Children.Add('PID', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER', False, True, gtGroup);
        oGrp2.Children.Add('ORC', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('ENCODING', True, False, gtGroup);
          oGrp3.Children.Add('RXE', False, False, gtSingle);
          oGrp3.Children.Add('RXR', False, False, gtSingle);
          oGrp3.Children.Add('RXC', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('DISPENSE', False, True, gtGroup);
          oGrp3.Children.Add('RXD', False, False, gtSingle);
          oGrp3.Children.Add('RXR', False, True, gtSingle);
          oGrp3.Children.Add('RXC', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('RDS_O01', '', 'O01', 'RDS', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RDS_O01', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', True, False, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp1.Children.Add('PD1', True, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp1.Children.Add('AL1', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATIENT_VISIT', True, False, gtGroup);
        oGrp2.Children.Add('PV1', False, False, gtSingle);
        oGrp2.Children.Add('PV2', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('ORDER', False, True, gtGroup);
      oGrp1.Children.Add('ORC', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER_DETAIL', True, False, gtGroup);
        oGrp2.Children.Add('RXO', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('ORDER_DETAIL_SUPPLEMENT', True, False, gtGroup);
          oGrp3.Children.Add('NTE', False, True, gtSingle);
          oGrp3.Children.Add('RXR', False, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('COMPONENT', True, False, gtGroup);
            oGrp4.Children.Add('RXC', False, True, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('ENCODING', True, False, gtGroup);
        oGrp2.Children.Add('RXE', False, False, gtSingle);
        oGrp2.Children.Add('RXR', False, True, gtSingle);
        oGrp2.Children.Add('RXC', True, True, gtSingle);
      oGrp1.Children.Add('RXD', False, False, gtSingle);
      oGrp1.Children.Add('RXR', False, True, gtSingle);
      oGrp1.Children.Add('RXC', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('OBSERVATION', False, True, gtGroup);
        oGrp2.Children.Add('OBX', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('REF_I12', '', 'I12', 'REF', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('REF_I12', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('RF1', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('AUTHORIZATION', True, False, gtGroup);
      oGrp1.Children.Add('AUT', False, False, gtSingle);
      oGrp1.Children.Add('CTD', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROVIDER', False, True, gtGroup);
      oGrp1.Children.Add('PRD', False, False, gtSingle);
      oGrp1.Children.Add('CTD', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NK1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('GT1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('INSURANCE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('IN1', False, False, gtSingle);
        oGrp2.Children.Add('IN2', True, False, gtSingle);
        oGrp2.Children.Add('IN3', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ACC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DG1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DRG', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('AL1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROCEDURE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('PR1', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('AUTHORIZATION', True, False, gtGroup);
          oGrp3.Children.Add('AUT', False, False, gtSingle);
          oGrp3.Children.Add('CTD', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('RESULTS', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('OBR', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('OBSERVATION', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('OBX', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('VISIT', True, False, gtGroup);
      oGrp1.Children.Add('PV1', False, False, gtSingle);
      oGrp1.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('REF_I13', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('REF_I13', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('RF1', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('AUTHORIZATION', True, False, gtGroup);
      oGrp1.Children.Add('AUT', False, False, gtSingle);
      oGrp1.Children.Add('CTD', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROVIDER', False, True, gtGroup);
      oGrp1.Children.Add('PRD', False, False, gtSingle);
      oGrp1.Children.Add('CTD', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NK1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('GT1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('INSURANCE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('IN1', False, False, gtSingle);
        oGrp2.Children.Add('IN2', True, False, gtSingle);
        oGrp2.Children.Add('IN3', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ACC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DG1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DRG', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('AL1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROCEDURE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('PR1', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('AUTHORIZATION', True, False, gtGroup);
          oGrp3.Children.Add('AUT', False, False, gtSingle);
          oGrp3.Children.Add('CTD', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('RESULTS', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('OBR', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('OBSERVATION', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('OBX', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('VISIT', True, False, gtGroup);
      oGrp1.Children.Add('PV1', False, False, gtSingle);
      oGrp1.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('REF_I14', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('REF_I14', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('RF1', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('AUTHORIZATION', True, False, gtGroup);
      oGrp1.Children.Add('AUT', False, False, gtSingle);
      oGrp1.Children.Add('CTD', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROVIDER', False, True, gtGroup);
      oGrp1.Children.Add('PRD', False, False, gtSingle);
      oGrp1.Children.Add('CTD', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NK1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('GT1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('INSURANCE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('IN1', False, False, gtSingle);
        oGrp2.Children.Add('IN2', True, False, gtSingle);
        oGrp2.Children.Add('IN3', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ACC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DG1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DRG', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('AL1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROCEDURE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('PR1', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('AUTHORIZATION', True, False, gtGroup);
          oGrp3.Children.Add('AUT', False, False, gtSingle);
          oGrp3.Children.Add('CTD', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('RESULTS', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('OBR', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('OBSERVATION', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('OBX', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('VISIT', True, False, gtGroup);
      oGrp1.Children.Add('PV1', False, False, gtSingle);
      oGrp1.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('REF_I15', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('REF_I15', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('RF1', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('AUTHORIZATION', True, False, gtGroup);
      oGrp1.Children.Add('AUT', False, False, gtSingle);
      oGrp1.Children.Add('CTD', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROVIDER', False, True, gtGroup);
      oGrp1.Children.Add('PRD', False, False, gtSingle);
      oGrp1.Children.Add('CTD', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NK1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('GT1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('INSURANCE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('IN1', False, False, gtSingle);
        oGrp2.Children.Add('IN2', True, False, gtSingle);
        oGrp2.Children.Add('IN3', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ACC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DG1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DRG', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('AL1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROCEDURE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('PR1', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('AUTHORIZATION', True, False, gtGroup);
          oGrp3.Children.Add('AUT', False, False, gtSingle);
          oGrp3.Children.Add('CTD', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('RESULTS', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('OBR', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('OBSERVATION', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('OBX', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('VISIT', True, False, gtGroup);
      oGrp1.Children.Add('PV1', False, False, gtSingle);
      oGrp1.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('RER_RER', '', 'RER', 'RER', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RER_RER', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('DEFINITION', False, True, gtGroup);
      oGrp1.Children.Add('QRD', False, False, gtSingle);
      oGrp1.Children.Add('QRF', True, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATIENT', True, False, gtGroup);
        oGrp2.Children.Add('PID', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER', False, True, gtGroup);
        oGrp2.Children.Add('ORC', False, False, gtSingle);
        oGrp2.Children.Add('RXE', False, False, gtSingle);
        oGrp2.Children.Add('RXR', False, True, gtSingle);
        oGrp2.Children.Add('RXC', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('RGR_RGR', '', 'RGR', 'RGR', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RGR_RGR', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('DEFINITION', False, True, gtGroup);
      oGrp1.Children.Add('QRD', False, False, gtSingle);
      oGrp1.Children.Add('QRF', True, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATIENT', True, False, gtGroup);
        oGrp2.Children.Add('PID', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER', False, True, gtGroup);
        oGrp2.Children.Add('ORC', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('ENCODING', True, False, gtGroup);
          oGrp3.Children.Add('RXE', False, False, gtSingle);
          oGrp3.Children.Add('RXR', False, True, gtSingle);
          oGrp3.Children.Add('RXC', True, True, gtSingle);
        oGrp2.Children.Add('RXG', False, True, gtSingle);
        oGrp2.Children.Add('RXR', False, True, gtSingle);
        oGrp2.Children.Add('RXC', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('RGV_O01', '', 'O01', 'RGV', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RGV_O01', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', True, False, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('xx: ok', True, False, gtGroup);
        oGrp2.Children.Add('AL1', False, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('PATIENT_VISIT', True, False, gtGroup);
          oGrp3.Children.Add('PV1', False, False, gtSingle);
          oGrp3.Children.Add('PV2', True, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER', False, True, gtGroup);
        oGrp2.Children.Add('ORC', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('ORDER_DETAIL', True, False, gtGroup);
          oGrp3.Children.Add('RXO', False, False, gtSingle);
          oGrp4 := oGrp3.Children.Add('ORDER_DETAIL_SUPPLEMENT', True, False, gtGroup);
            oGrp4.Children.Add('NTE', False, True, gtSingle);
            oGrp4.Children.Add('RXR', False, True, gtSingle);
            oGrp5 := oGrp4.Children.Add('COMPONENTS', True, False, gtGroup);
              oGrp5.Children.Add('RXC', False, True, gtSingle);
              oGrp5.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('ENCODING', True, False, gtGroup);
          oGrp3.Children.Add('RXE', False, False, gtSingle);
          oGrp3.Children.Add('RXR', False, True, gtSingle);
          oGrp3.Children.Add('RXC', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('GIVE', False, True, gtGroup);
          oGrp3.Children.Add('RXG', False, False, gtSingle);
          oGrp3.Children.Add('RXR', False, True, gtSingle);
          oGrp3.Children.Add('RXC', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('OBSERVATION', True, False, gtGroup);
            oGrp5 := oGrp4.Children.Add('', False, True, gtGroup);
              oGrp5.Children.Add('OBX', False, False, gtSingle);
              oGrp5.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('ROR_ROR', '', 'ROR', 'ROR', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ROR_ROR', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('DEFINITION', False, True, gtGroup);
      oGrp1.Children.Add('QRD', False, False, gtSingle);
      oGrp1.Children.Add('QRF', True, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATIENT', True, False, gtGroup);
        oGrp2.Children.Add('PID', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER', False, True, gtGroup);
        oGrp2.Children.Add('ORC', False, False, gtSingle);
        oGrp2.Children.Add('RXO', False, False, gtSingle);
        oGrp2.Children.Add('RXR', False, True, gtSingle);
        oGrp2.Children.Add('RXC', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('RPA_I08', '', 'I08', 'RPA', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RPA_I08', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('RF1', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('AUTHORIZATION', True, False, gtGroup);
      oGrp1.Children.Add('AUT', False, False, gtSingle);
      oGrp1.Children.Add('CTD', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROVIDER', False, True, gtGroup);
      oGrp1.Children.Add('PRD', False, False, gtSingle);
      oGrp1.Children.Add('CTD', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NK1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('GT1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('INSURANCE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('IN1', False, False, gtSingle);
        oGrp2.Children.Add('IN2', True, False, gtSingle);
        oGrp2.Children.Add('IN3', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ACC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DG1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DRG', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('AL1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROCEDURE', False, True, gtGroup);
      oGrp1.Children.Add('PR1', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('AUTHORIZATION', True, False, gtGroup);
        oGrp2.Children.Add('AUT', False, False, gtSingle);
        oGrp2.Children.Add('CTD', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('OBSERVATION', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('OBR', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('RESULTS', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('OBX', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('VISIT', True, False, gtGroup);
      oGrp1.Children.Add('PV1', False, False, gtSingle);
      oGrp1.Children.Add('PV2', True, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('RPA_I09', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RPA_I09', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('RF1', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('AUTHORIZATION', True, False, gtGroup);
      oGrp1.Children.Add('AUT', False, False, gtSingle);
      oGrp1.Children.Add('CTD', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROVIDER', False, True, gtGroup);
      oGrp1.Children.Add('PRD', False, False, gtSingle);
      oGrp1.Children.Add('CTD', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NK1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('GT1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('INSURANCE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('IN1', False, False, gtSingle);
        oGrp2.Children.Add('IN2', True, False, gtSingle);
        oGrp2.Children.Add('IN3', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ACC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DG1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DRG', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('AL1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROCEDURE', False, True, gtGroup);
      oGrp1.Children.Add('PR1', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('AUTHORIZATION', True, False, gtGroup);
        oGrp2.Children.Add('AUT', False, False, gtSingle);
        oGrp2.Children.Add('CTD', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('RESULTS', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('OBR', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('OBSERVATION', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('OBX', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('VISIT', True, False, gtGroup);
      oGrp1.Children.Add('PV1', False, False, gtSingle);
      oGrp1.Children.Add('PV2', True, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('RPA_I10', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RPA_I10', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('RF1', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('AUTHORIZATION', True, False, gtGroup);
      oGrp1.Children.Add('AUT', False, False, gtSingle);
      oGrp1.Children.Add('CTD', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROVIDER', False, True, gtGroup);
      oGrp1.Children.Add('PRD', False, False, gtSingle);
      oGrp1.Children.Add('CTD', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NK1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('GT1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('INSURANCE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('IN1', False, False, gtSingle);
        oGrp2.Children.Add('IN2', True, False, gtSingle);
        oGrp2.Children.Add('IN3', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ACC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DG1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DRG', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('AL1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROCEDURE', False, True, gtGroup);
      oGrp1.Children.Add('PR1', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('AUTHORIZATION', True, False, gtGroup);
        oGrp2.Children.Add('AUT', False, False, gtSingle);
        oGrp2.Children.Add('CTD', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('RESULTS', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('OBR', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('OBSERVATION', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('OBX', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('VISIT', True, False, gtGroup);
      oGrp1.Children.Add('PV1', False, False, gtSingle);
      oGrp1.Children.Add('PV2', True, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('RPA_I11', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RPA_I11', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('RF1', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('AUTHORIZATION', True, False, gtGroup);
      oGrp1.Children.Add('AUT', False, False, gtSingle);
      oGrp1.Children.Add('CTD', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROVIDER', False, True, gtGroup);
      oGrp1.Children.Add('PRD', False, False, gtSingle);
      oGrp1.Children.Add('CTD', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NK1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('GT1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('INSURANCE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('IN1', False, False, gtSingle);
        oGrp2.Children.Add('IN2', True, False, gtSingle);
        oGrp2.Children.Add('IN3', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ACC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DG1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DRG', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('AL1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROCEDURE', False, True, gtGroup);
      oGrp1.Children.Add('PR1', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('AUTHORIZATION', True, False, gtGroup);
        oGrp2.Children.Add('AUT', False, False, gtSingle);
        oGrp2.Children.Add('CTD', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('RESULTS', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('OBR', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('OBSERVATION', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('OBX', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('VISIT', True, False, gtGroup);
      oGrp1.Children.Add('PV1', False, False, gtSingle);
      oGrp1.Children.Add('PV2', True, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('RPI_I01', '', 'I01', 'RPI', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RPI_I01', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROVIDER', False, True, gtGroup);
      oGrp1.Children.Add('PRD', False, False, gtSingle);
      oGrp1.Children.Add('CTD', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NK1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('GUARANTOR_INSURANCE', True, False, gtGroup);
      oGrp1.Children.Add('GT1', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('INSURANCE', False, True, gtGroup);
        oGrp2.Children.Add('IN1', False, False, gtSingle);
        oGrp2.Children.Add('IN2', True, False, gtSingle);
        oGrp2.Children.Add('IN3', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('RPI_I04', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RPI_I04', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROVIDER', False, True, gtGroup);
      oGrp1.Children.Add('PRD', False, False, gtSingle);
      oGrp1.Children.Add('CTD', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NK1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('GUARANTOR_INSURANCE', True, False, gtGroup);
      oGrp1.Children.Add('GT1', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('INSURANCE', False, True, gtGroup);
        oGrp2.Children.Add('IN1', False, False, gtSingle);
        oGrp2.Children.Add('IN2', True, False, gtSingle);
        oGrp2.Children.Add('IN3', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('RPL_I02', '', 'I02', 'RPL', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RPL_I02', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROVIDER', False, True, gtGroup);
      oGrp1.Children.Add('PRD', False, False, gtSingle);
      oGrp1.Children.Add('CTD', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DSP', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('RPR_I03', '', 'I03', 'RPR', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RPR_I03', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROVIDER', False, True, gtGroup);
      oGrp1.Children.Add('PRD', False, False, gtSingle);
      oGrp1.Children.Add('CTD', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('RQA_I08', '', 'I08', 'RQA', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RQA_I08', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('RF1', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('AUTHORIZATION', True, False, gtGroup);
      oGrp1.Children.Add('AUT', False, False, gtSingle);
      oGrp1.Children.Add('CTD', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROVIDER', False, True, gtGroup);
      oGrp1.Children.Add('PRD', False, False, gtSingle);
      oGrp1.Children.Add('CTD', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NK1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('GUARANTOR_INSURANCE', True, False, gtGroup);
      oGrp1.Children.Add('GT1', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('INSURANCE', False, True, gtGroup);
        oGrp2.Children.Add('IN1', False, False, gtSingle);
        oGrp2.Children.Add('IN2', True, False, gtSingle);
        oGrp2.Children.Add('IN3', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ACC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DG1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DRG', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('AL1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROCEDURE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('PR1', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('AUTHORIZATION', True, False, gtGroup);
          oGrp3.Children.Add('AUT', False, False, gtSingle);
          oGrp3.Children.Add('CTD', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('OBSERVATION', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('OBR', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('RESULTS', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('OBX', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('VISIT', True, False, gtGroup);
      oGrp1.Children.Add('PV1', False, False, gtSingle);
      oGrp1.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('RQA_I09', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RQA_I09', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('RF1', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('AUTHORIZATION', True, False, gtGroup);
      oGrp1.Children.Add('AUT', False, False, gtSingle);
      oGrp1.Children.Add('CTD', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROVIDER', False, True, gtGroup);
      oGrp1.Children.Add('PRD', False, False, gtSingle);
      oGrp1.Children.Add('CTD', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NK1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('GUARANTOR_INSURANCE', True, False, gtGroup);
      oGrp1.Children.Add('GT1', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('INSURANCE', False, True, gtGroup);
        oGrp2.Children.Add('IN1', False, False, gtSingle);
        oGrp2.Children.Add('IN2', True, False, gtSingle);
        oGrp2.Children.Add('IN3', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ACC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DG1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DRG', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('AL1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROCEDURE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('PR1', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('AUTHORIZATION', True, False, gtGroup);
          oGrp3.Children.Add('AUT', False, False, gtSingle);
          oGrp3.Children.Add('CTD', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('RESULTS', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('OBR', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('OBSERVATION', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('OBX', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('VISIT', True, False, gtGroup);
      oGrp1.Children.Add('PV1', False, False, gtSingle);
      oGrp1.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('RQA_I10', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RQA_I10', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('RF1', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('AUTHORIZATION', True, False, gtGroup);
      oGrp1.Children.Add('AUT', False, False, gtSingle);
      oGrp1.Children.Add('CTD', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROVIDER', False, True, gtGroup);
      oGrp1.Children.Add('PRD', False, False, gtSingle);
      oGrp1.Children.Add('CTD', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NK1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('GUARANTOR_INSURANCE', True, False, gtGroup);
      oGrp1.Children.Add('GT1', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('INSURANCE', False, True, gtGroup);
        oGrp2.Children.Add('IN1', False, False, gtSingle);
        oGrp2.Children.Add('IN2', True, False, gtSingle);
        oGrp2.Children.Add('IN3', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ACC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DG1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DRG', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('AL1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROCEDURE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('PR1', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('AUTHORIZATION', True, False, gtGroup);
          oGrp3.Children.Add('AUT', False, False, gtSingle);
          oGrp3.Children.Add('CTD', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('RESULTS', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('OBR', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('OBSERVATION', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('OBX', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('VISIT', True, False, gtGroup);
      oGrp1.Children.Add('PV1', False, False, gtSingle);
      oGrp1.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('RQA_I11', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RQA_I11', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('RF1', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('AUTHORIZATION', True, False, gtGroup);
      oGrp1.Children.Add('AUT', False, False, gtSingle);
      oGrp1.Children.Add('CTD', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROVIDER', False, True, gtGroup);
      oGrp1.Children.Add('PRD', False, False, gtSingle);
      oGrp1.Children.Add('CTD', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NK1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('GUARANTOR_INSURANCE', True, False, gtGroup);
      oGrp1.Children.Add('GT1', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('INSURANCE', False, True, gtGroup);
        oGrp2.Children.Add('IN1', False, False, gtSingle);
        oGrp2.Children.Add('IN2', True, False, gtSingle);
        oGrp2.Children.Add('IN3', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ACC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DG1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DRG', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('AL1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROCEDURE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('PR1', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('AUTHORIZATION', True, False, gtGroup);
          oGrp3.Children.Add('AUT', False, False, gtSingle);
          oGrp3.Children.Add('CTD', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('RESULTS', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('OBR', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('OBSERVATION', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('OBX', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('VISIT', True, False, gtGroup);
      oGrp1.Children.Add('PV1', False, False, gtSingle);
      oGrp1.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('RQC_I05', '', 'I05', 'RQC', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RQC_I05', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRF', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROVIDER', False, True, gtGroup);
      oGrp1.Children.Add('PRD', False, False, gtSingle);
      oGrp1.Children.Add('CTD', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NK1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('GT1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('RQC_I06', '', 'I06', 'RQC', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RQC_I06', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRF', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROVIDER', False, True, gtGroup);
      oGrp1.Children.Add('PRD', False, False, gtSingle);
      oGrp1.Children.Add('CTD', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NK1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('GT1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('RQI_I01', '', 'I01', 'RQI', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RQI_I01', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROVIDER', False, True, gtGroup);
      oGrp1.Children.Add('PRD', False, False, gtSingle);
      oGrp1.Children.Add('CTD', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NK1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('GUARANTOR_INSURANCE', True, False, gtGroup);
      oGrp1.Children.Add('GT1', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('INSURANCE', False, True, gtGroup);
        oGrp2.Children.Add('IN1', False, False, gtSingle);
        oGrp2.Children.Add('IN2', True, False, gtSingle);
        oGrp2.Children.Add('IN3', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('RQI_I02', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RQI_I02', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROVIDER', False, True, gtGroup);
      oGrp1.Children.Add('PRD', False, False, gtSingle);
      oGrp1.Children.Add('CTD', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NK1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('GUARANTOR_INSURANCE', True, False, gtGroup);
      oGrp1.Children.Add('GT1', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('INSURANCE', False, True, gtGroup);
        oGrp2.Children.Add('IN1', False, False, gtSingle);
        oGrp2.Children.Add('IN2', True, False, gtSingle);
        oGrp2.Children.Add('IN3', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('RQI_I03', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RQI_I03', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROVIDER', False, True, gtGroup);
      oGrp1.Children.Add('PRD', False, False, gtSingle);
      oGrp1.Children.Add('CTD', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NK1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('GUARANTOR_INSURANCE', True, False, gtGroup);
      oGrp1.Children.Add('GT1', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('INSURANCE', False, True, gtGroup);
        oGrp2.Children.Add('IN1', False, False, gtSingle);
        oGrp2.Children.Add('IN2', True, False, gtSingle);
        oGrp2.Children.Add('IN3', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('RQP_I04', '', 'I04', 'RQP', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RQP_I04', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROVIDER', False, True, gtGroup);
      oGrp1.Children.Add('PRD', False, False, gtSingle);
      oGrp1.Children.Add('CTD', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NK1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('GT1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('RQQ_Q01', '', 'Q01', 'RQQ', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RQQ_Q01', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERQ', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('RRA_O02', '', 'O02', 'RRA', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RRA_O02', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('RESPONSE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('PATIENT', True, False, gtGroup);
        oGrp2.Children.Add('PID', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER', False, True, gtGroup);
        oGrp2.Children.Add('ORC', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('ADMINISTRATION', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('RXA', False, False, gtSingle);
            oGrp4.Children.Add('RXR', False, False, gtSingle);
  oStructure := oStructures.Add('RRD_O02', '', 'O02', 'RRD', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RRD_O02', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('RESPONSE', True, False, gtGroup);
        oGrp2.Children.Add('PID', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER', False, True, gtGroup);
        oGrp2.Children.Add('ORC', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('DISPENSE', True, False, gtGroup);
          oGrp3.Children.Add('RXD', False, False, gtSingle);
          oGrp3.Children.Add('RXR', False, True, gtSingle);
          oGrp3.Children.Add('RXC', True, True, gtSingle);
  oStructure := oStructures.Add('RRE_O01', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RRE_O01', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('RESPONSE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('PATIENT', True, False, gtGroup);
        oGrp2.Children.Add('PID', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER', False, True, gtGroup);
        oGrp2.Children.Add('ORC', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('ENCODING', True, False, gtGroup);
          oGrp3.Children.Add('RXE', False, False, gtSingle);
          oGrp3.Children.Add('RXR', False, True, gtSingle);
          oGrp3.Children.Add('RXC', True, True, gtSingle);
  oStructures.Add('RRE_O02', '', 'O02', 'RRE', '');
  oStructure := oStructures.Add('RRG_O02', '', 'O02', 'RRG', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RRG_O02', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('RESPONSE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('PATIENT', True, False, gtGroup);
        oGrp2.Children.Add('PID', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER', False, True, gtGroup);
        oGrp2.Children.Add('ORC', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('GIVE', True, False, gtGroup);
          oGrp3.Children.Add('RXG', False, False, gtSingle);
          oGrp3.Children.Add('RXR', False, True, gtSingle);
          oGrp3.Children.Add('RXC', True, True, gtSingle);
  oStructure := oStructures.Add('RRI_I12', '', 'I12', 'RRI', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RRI_I12', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('RF1', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('AUTHORIZATION', True, False, gtGroup);
      oGrp1.Children.Add('AUT', False, False, gtSingle);
      oGrp1.Children.Add('CTD', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROVIDER', False, True, gtGroup);
      oGrp1.Children.Add('PRD', False, False, gtSingle);
      oGrp1.Children.Add('CTD', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ACC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DG1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DRG', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('AL1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROCEDURE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('PR1', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('AUTHORIZATION', True, False, gtGroup);
          oGrp3.Children.Add('AUT', False, False, gtSingle);
          oGrp3.Children.Add('CTD', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('RESULTS', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('OBR', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('OBSERVATION', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('OBX', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('VISIT', True, False, gtGroup);
      oGrp1.Children.Add('PV1', False, False, gtSingle);
      oGrp1.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('RRI_I13', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RRI_I13', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('RF1', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('AUTHORIZATION', True, False, gtGroup);
      oGrp1.Children.Add('AUT', False, False, gtSingle);
      oGrp1.Children.Add('CTD', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROVIDER', False, True, gtGroup);
      oGrp1.Children.Add('PRD', False, False, gtSingle);
      oGrp1.Children.Add('CTD', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ACC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DG1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DRG', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('AL1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROCEDURE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('PR1', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('AUTHORIZATION', True, False, gtGroup);
          oGrp3.Children.Add('AUT', False, False, gtSingle);
          oGrp3.Children.Add('CTD', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('RESULTS', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('OBR', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('OBSERVATION', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('OBX', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('VISIT', True, False, gtGroup);
      oGrp1.Children.Add('PV1', False, False, gtSingle);
      oGrp1.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('RRI_I14', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RRI_I14', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('RF1', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('AUTHORIZATION', True, False, gtGroup);
      oGrp1.Children.Add('AUT', False, False, gtSingle);
      oGrp1.Children.Add('CTD', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROVIDER', False, True, gtGroup);
      oGrp1.Children.Add('PRD', False, False, gtSingle);
      oGrp1.Children.Add('CTD', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ACC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DG1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DRG', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('AL1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROCEDURE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('PR1', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('AUTHORIZATION', True, False, gtGroup);
          oGrp3.Children.Add('AUT', False, False, gtSingle);
          oGrp3.Children.Add('CTD', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('RESULTS', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('OBR', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('OBSERVATION', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('OBX', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('VISIT', True, False, gtGroup);
      oGrp1.Children.Add('PV1', False, False, gtSingle);
      oGrp1.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('RRI_I15', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RRI_I15', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('RF1', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('AUTHORIZATION', True, False, gtGroup);
      oGrp1.Children.Add('AUT', False, False, gtSingle);
      oGrp1.Children.Add('CTD', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROVIDER', False, True, gtGroup);
      oGrp1.Children.Add('PRD', False, False, gtSingle);
      oGrp1.Children.Add('CTD', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ACC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DG1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DRG', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('AL1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROCEDURE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('PR1', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('AUTHORIZATION', True, False, gtGroup);
          oGrp3.Children.Add('AUT', False, False, gtSingle);
          oGrp3.Children.Add('CTD', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('RESULTS', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('OBR', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('OBSERVATION', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('OBX', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('VISIT', True, False, gtGroup);
      oGrp1.Children.Add('PV1', False, False, gtSingle);
      oGrp1.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('RRO_O02', 'Pharmacx Treatment Response Message', 'O02', 'ORR', 'respond');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RRO_O02', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('RESPONSE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('PATIENT', True, False, gtGroup);
        oGrp2.Children.Add('PID', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER', False, True, gtGroup);
        oGrp2.Children.Add('ORC', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('ORDER_DETAIL', True, False, gtGroup);
          oGrp3.Children.Add('RXO', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
          oGrp3.Children.Add('RXR', False, True, gtSingle);
          oGrp3.Children.Add('RXC', True, True, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('SIU_S12', '', 'S12', 'SIU', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('SIU_S12', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SCH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('PID', False, False, gtSingle);
        oGrp2.Children.Add('PV1', True, False, gtSingle);
        oGrp2.Children.Add('PV2', True, False, gtSingle);
        oGrp2.Children.Add('OBX', True, True, gtSingle);
        oGrp2.Children.Add('DG1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('RESOURCES', False, True, gtGroup);
      oGrp1.Children.Add('RGS', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('SERVICE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIS', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('GENERAL_RESOURCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIG', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('LOCATION_RESOURCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIL', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PERSONNEL_RESOURCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIP', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('SIU_S13', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('SIU_S13', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SCH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('PID', False, False, gtSingle);
        oGrp2.Children.Add('PV1', True, False, gtSingle);
        oGrp2.Children.Add('PV2', True, False, gtSingle);
        oGrp2.Children.Add('OBX', True, True, gtSingle);
        oGrp2.Children.Add('DG1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('RESOURCES', False, True, gtGroup);
      oGrp1.Children.Add('RGS', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('SERVICE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIS', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('GENERAL_RESOURCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIG', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('LOCATION_RESOURCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIL', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PERSONNEL_RESOURCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIP', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('SIU_S14', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('SIU_S14', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SCH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('PID', False, False, gtSingle);
        oGrp2.Children.Add('PV1', True, False, gtSingle);
        oGrp2.Children.Add('PV2', True, False, gtSingle);
        oGrp2.Children.Add('OBX', True, True, gtSingle);
        oGrp2.Children.Add('DG1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('RESOURCES', False, True, gtGroup);
      oGrp1.Children.Add('RGS', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('SERVICE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIS', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('GENERAL_RESOURCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIG', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('LOCATION_RESOURCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIL', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PERSONNEL_RESOURCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIP', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('SIU_S15', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('SIU_S15', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SCH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('PID', False, False, gtSingle);
        oGrp2.Children.Add('PV1', True, False, gtSingle);
        oGrp2.Children.Add('PV2', True, False, gtSingle);
        oGrp2.Children.Add('OBX', True, True, gtSingle);
        oGrp2.Children.Add('DG1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('RESOURCES', False, True, gtGroup);
      oGrp1.Children.Add('RGS', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('SERVICE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIS', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('GENERAL_RESOURCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIG', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('LOCATION_RESOURCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIL', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PERSONNEL_RESOURCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIP', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('SIU_S16', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('SIU_S16', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SCH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('PID', False, False, gtSingle);
        oGrp2.Children.Add('PV1', True, False, gtSingle);
        oGrp2.Children.Add('PV2', True, False, gtSingle);
        oGrp2.Children.Add('OBX', True, True, gtSingle);
        oGrp2.Children.Add('DG1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('RESOURCES', False, True, gtGroup);
      oGrp1.Children.Add('RGS', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('SERVICE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIS', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('GENERAL_RESOURCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIG', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('LOCATIONL_RESOURCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIL', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PERSONNEL_RESOURCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIP', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('SIU_S17', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('SIU_S17', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SCH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('PID', False, False, gtSingle);
        oGrp2.Children.Add('PV1', True, False, gtSingle);
        oGrp2.Children.Add('PV2', True, False, gtSingle);
        oGrp2.Children.Add('OBX', True, True, gtSingle);
        oGrp2.Children.Add('DG1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('RESOURCES', False, True, gtGroup);
      oGrp1.Children.Add('RGS', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('SERVICE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIS', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('GENERAL_RESOURCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIG', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('LOCATION_RESOURCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIL', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PERSONNEL_RESOURCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIP', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('SIU_S18', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('SIU_S18', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SCH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('PID', False, False, gtSingle);
        oGrp2.Children.Add('PV1', True, False, gtSingle);
        oGrp2.Children.Add('PV2', True, False, gtSingle);
        oGrp2.Children.Add('OBX', True, True, gtSingle);
        oGrp2.Children.Add('DG1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('RESOURCES', False, True, gtGroup);
      oGrp1.Children.Add('RGS', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('SERVICE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIS', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('GENERAL_RESOURCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIG', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('LOCATION_RESOURCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIL', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PERSONNEL_RESOURCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIP', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('SIU_S19', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('SIU_S19', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SCH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('PID', False, False, gtSingle);
        oGrp2.Children.Add('PV1', True, False, gtSingle);
        oGrp2.Children.Add('PV2', True, False, gtSingle);
        oGrp2.Children.Add('OBX', True, True, gtSingle);
        oGrp2.Children.Add('DG1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('RESOURCES', False, True, gtGroup);
      oGrp1.Children.Add('RGS', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('SERVICE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIS', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('GENERAL_RESOURCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIG', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('LOCATION_RESOURCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIL', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PERSONNEL_RESOURCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIP', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('SIU_S20', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('SIU_S20', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SCH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('PID', False, False, gtSingle);
        oGrp2.Children.Add('PV1', True, False, gtSingle);
        oGrp2.Children.Add('PV2', True, False, gtSingle);
        oGrp2.Children.Add('OBX', True, True, gtSingle);
        oGrp2.Children.Add('DG1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('RESOURCES', False, True, gtGroup);
      oGrp1.Children.Add('RGS', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('SERVICE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIS', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('GENERAL_RESOURCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIG', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('LOCATION_RESOURCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIL', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PERSONNEL_RESOURCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIP', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('SIU_S21', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('SIU_S21', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SCH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('PID', False, False, gtSingle);
        oGrp2.Children.Add('PV1', True, False, gtSingle);
        oGrp2.Children.Add('PV2', True, False, gtSingle);
        oGrp2.Children.Add('OBX', True, True, gtSingle);
        oGrp2.Children.Add('DG1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('RESOURCES', False, True, gtGroup);
      oGrp1.Children.Add('RGS', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('SERVICE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIS', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('GENERAL_RESOURCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIG', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('LOCATION_RESOURCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIL', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PERSONNEL_RESOURCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIP', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('SIU_S22', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('SIU_S22', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SCH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('PID', False, False, gtSingle);
        oGrp2.Children.Add('PV1', True, False, gtSingle);
        oGrp2.Children.Add('PV2', True, False, gtSingle);
        oGrp2.Children.Add('OBX', True, True, gtSingle);
        oGrp2.Children.Add('DG1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('RESOURCES', False, True, gtGroup);
      oGrp1.Children.Add('RGS', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('SERVICE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIS', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('GENERAL_RESOURCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIG', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('LOCATION_RESOURCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIL', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PERSONNEL_RESOURCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIP', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('SIU_S23', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('SIU_S23', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SCH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('PID', False, False, gtSingle);
        oGrp2.Children.Add('PV1', True, False, gtSingle);
        oGrp2.Children.Add('PV2', True, False, gtSingle);
        oGrp2.Children.Add('OBX', True, True, gtSingle);
        oGrp2.Children.Add('DG1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('RESOURCES', False, True, gtGroup);
      oGrp1.Children.Add('RGS', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('SERVICE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIS', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('GENERAL_RESOURCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIG', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('LOCATION_RESOURCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIL', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PERSONNEL_RESOURCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIP', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('SIU_S24', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('SIU_S24', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SCH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('PID', False, False, gtSingle);
        oGrp2.Children.Add('PV1', True, False, gtSingle);
        oGrp2.Children.Add('PV2', True, False, gtSingle);
        oGrp2.Children.Add('OBX', True, True, gtSingle);
        oGrp2.Children.Add('DG1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('RESOURCES', False, True, gtGroup);
      oGrp1.Children.Add('RGS', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('SERVICE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIS', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('GENERAL_RESOURCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIG', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('LOCATION_RESOURCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIL', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PERSONNEL_RESOURCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIP', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('SIU_S26', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('SIU_S26', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SCH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('PID', False, False, gtSingle);
        oGrp2.Children.Add('PV1', True, False, gtSingle);
        oGrp2.Children.Add('PV2', True, False, gtSingle);
        oGrp2.Children.Add('OBX', True, True, gtSingle);
        oGrp2.Children.Add('DG1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('RESOURCES', False, True, gtGroup);
      oGrp1.Children.Add('RGS', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('SERVICE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIS', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('GENERAL_RESOURCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIG', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('LOCATION_RESOURCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIL', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PERSONNEL_RESOURCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIP', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('SPQ_Q01', '', 'Q01', 'SPQ', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('SPQ_Q01', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SPR', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('RDF', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('SQM_S25', '', 'S25', 'SQM', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('SQM_S25', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRF', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('REQUEST', True, False, gtGroup);
      oGrp1.Children.Add('ARQ', False, False, gtSingle);
      oGrp1.Children.Add('APR', True, False, gtSingle);
      oGrp1.Children.Add('PID', True, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('RESOURCES', False, True, gtGroup);
        oGrp2.Children.Add('RGS', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('SERVICE', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('AIS', False, False, gtSingle);
            oGrp4.Children.Add('APR', True, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('GENERAL_RESOURCE', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('AIG', False, False, gtSingle);
            oGrp4.Children.Add('APR', True, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('PERSONNEL_RESOURCE', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('AIP', False, False, gtSingle);
            oGrp4.Children.Add('APR', True, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('LOCATION_RESOURCE', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('AIL', False, False, gtSingle);
            oGrp4.Children.Add('APR', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('SQR_S25', '', 'S25', 'SQR', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('SQR_S25', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QAK', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('SCHEDULE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('SCH', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('PATIENT', True, False, gtGroup);
          oGrp3.Children.Add('PID', False, False, gtSingle);
          oGrp3.Children.Add('PV1', True, False, gtSingle);
          oGrp3.Children.Add('PV2', True, False, gtSingle);
          oGrp3.Children.Add('DG1', True, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('RESOURCES', False, True, gtGroup);
          oGrp3.Children.Add('RGS', False, False, gtSingle);
          oGrp4 := oGrp3.Children.Add('SERVICE', True, False, gtGroup);
            oGrp5 := oGrp4.Children.Add('', False, True, gtGroup);
              oGrp5.Children.Add('AIS', False, False, gtSingle);
              oGrp5.Children.Add('NTE', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('GENERAL_RESOURCE', True, False, gtGroup);
            oGrp5 := oGrp4.Children.Add('', False, True, gtGroup);
              oGrp5.Children.Add('AIG', False, False, gtSingle);
              oGrp5.Children.Add('NTE', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('PERSONNEL_RESOURCE', True, False, gtGroup);
            oGrp5 := oGrp4.Children.Add('', False, True, gtGroup);
              oGrp5.Children.Add('AIP', False, False, gtSingle);
              oGrp5.Children.Add('NTE', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('LOCATION_RESOURCE', True, False, gtGroup);
            oGrp5 := oGrp4.Children.Add('', False, True, gtGroup);
              oGrp5.Children.Add('AIL', False, False, gtSingle);
              oGrp5.Children.Add('NTE', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('SRM_S01', '', 'S01', 'SRM', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('SRM_S01', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ARQ', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('APR', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('PID', False, False, gtSingle);
        oGrp2.Children.Add('PV1', True, False, gtSingle);
        oGrp2.Children.Add('PV2', True, False, gtSingle);
        oGrp2.Children.Add('OBX', True, True, gtSingle);
        oGrp2.Children.Add('DG1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('RESOURCES', False, True, gtGroup);
      oGrp1.Children.Add('RGS', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('SERVICE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIS', False, False, gtSingle);
          oGrp3.Children.Add('APR', True, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('GENERAL_RESOURCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIG', False, False, gtSingle);
          oGrp3.Children.Add('APR', True, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('LOCATION_RESOURCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIL', False, False, gtSingle);
          oGrp3.Children.Add('APR', True, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PERSONNEL_RESOURCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIP', False, False, gtSingle);
          oGrp3.Children.Add('APR', True, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('SRM_S02', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('SRM_S02', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ARQ', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('APR', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('PID', False, False, gtSingle);
        oGrp2.Children.Add('PV1', True, False, gtSingle);
        oGrp2.Children.Add('PV2', True, False, gtSingle);
        oGrp2.Children.Add('OBX', True, True, gtSingle);
        oGrp2.Children.Add('DG1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('RESOURCES', False, True, gtGroup);
      oGrp1.Children.Add('RGS', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('SERVICE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIS', False, False, gtSingle);
          oGrp3.Children.Add('APR', True, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('GENERAL_RESOURCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIG', False, False, gtSingle);
          oGrp3.Children.Add('APR', True, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('LOCATION_RESOURCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIL', False, False, gtSingle);
          oGrp3.Children.Add('APR', True, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PERSONNEL_RESOURCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIP', False, False, gtSingle);
          oGrp3.Children.Add('APR', True, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('SRM_S03', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('SRM_S03', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ARQ', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('APR', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('PID', False, False, gtSingle);
        oGrp2.Children.Add('PV1', True, False, gtSingle);
        oGrp2.Children.Add('PV2', True, False, gtSingle);
        oGrp2.Children.Add('OBX', True, True, gtSingle);
        oGrp2.Children.Add('DG1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('RESOURCES', False, True, gtGroup);
      oGrp1.Children.Add('RGS', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('SERVICE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIS', False, False, gtSingle);
          oGrp3.Children.Add('APR', True, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('GENERAL_RESOURCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIG', False, False, gtSingle);
          oGrp3.Children.Add('APR', True, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('LOCATION_RESOURCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIL', False, False, gtSingle);
          oGrp3.Children.Add('APR', True, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PERSONNEL_RESOURCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIP', False, False, gtSingle);
          oGrp3.Children.Add('APR', True, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('SRM_S04', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('SRM_S04', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ARQ', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('APR', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('PID', False, False, gtSingle);
        oGrp2.Children.Add('PV1', True, False, gtSingle);
        oGrp2.Children.Add('PV2', True, False, gtSingle);
        oGrp2.Children.Add('OBX', True, True, gtSingle);
        oGrp2.Children.Add('DG1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('RESOURCES', False, True, gtGroup);
      oGrp1.Children.Add('RGS', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('SERVICE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIS', False, False, gtSingle);
          oGrp3.Children.Add('APR', True, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('GENERAL_RESOURCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIG', False, False, gtSingle);
          oGrp3.Children.Add('APR', True, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('LOCATION_RESOURCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIL', False, False, gtSingle);
          oGrp3.Children.Add('APR', True, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PERSONNEL_RESOURCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIP', False, False, gtSingle);
          oGrp3.Children.Add('APR', True, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('SRM_S05', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('SRM_S05', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ARQ', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('APR', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('PID', False, False, gtSingle);
        oGrp2.Children.Add('PV1', True, False, gtSingle);
        oGrp2.Children.Add('PV2', True, False, gtSingle);
        oGrp2.Children.Add('OBX', True, True, gtSingle);
        oGrp2.Children.Add('DG1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('RESOURCES', False, True, gtGroup);
      oGrp1.Children.Add('RGS', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('SERVICE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIS', False, False, gtSingle);
          oGrp3.Children.Add('APR', True, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('GENERAL_RESOURCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIG', False, False, gtSingle);
          oGrp3.Children.Add('APR', True, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('LOCATION_RESOURCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIL', False, False, gtSingle);
          oGrp3.Children.Add('APR', True, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PERSONNEL_RESOURCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIP', False, False, gtSingle);
          oGrp3.Children.Add('APR', True, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('SRM_S06', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('SRM_S06', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ARQ', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('APR', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('PID', False, False, gtSingle);
        oGrp2.Children.Add('PV1', True, False, gtSingle);
        oGrp2.Children.Add('PV2', True, False, gtSingle);
        oGrp2.Children.Add('OBX', True, True, gtSingle);
        oGrp2.Children.Add('DG1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('RESOURCES', False, True, gtGroup);
      oGrp1.Children.Add('RGS', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('SERVICE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIS', False, False, gtSingle);
          oGrp3.Children.Add('APR', True, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('GENERAL_RESOURCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIG', False, False, gtSingle);
          oGrp3.Children.Add('APR', True, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('LOCATION_RESOURCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIL', False, False, gtSingle);
          oGrp3.Children.Add('APR', True, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PERSONNEL_RESOURCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIP', False, False, gtSingle);
          oGrp3.Children.Add('APR', True, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('SRM_S07', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('SRM_S07', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ARQ', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('APR', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('PID', False, False, gtSingle);
        oGrp2.Children.Add('PV1', True, False, gtSingle);
        oGrp2.Children.Add('PV2', True, False, gtSingle);
        oGrp2.Children.Add('OBX', True, True, gtSingle);
        oGrp2.Children.Add('DG1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('RESOURCES', False, True, gtGroup);
      oGrp1.Children.Add('RGS', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('SERVICE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIS', False, False, gtSingle);
          oGrp3.Children.Add('APR', True, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('GENERAL_RESOURCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIG', False, False, gtSingle);
          oGrp3.Children.Add('APR', True, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('LOCATION_RESOURCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIL', False, False, gtSingle);
          oGrp3.Children.Add('APR', True, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PERSONNEL_RESOURCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIP', False, False, gtSingle);
          oGrp3.Children.Add('APR', True, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('SRM_S08', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('SRM_S08', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ARQ', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('APR', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('PID', False, False, gtSingle);
        oGrp2.Children.Add('PV1', True, False, gtSingle);
        oGrp2.Children.Add('PV2', True, False, gtSingle);
        oGrp2.Children.Add('OBX', True, True, gtSingle);
        oGrp2.Children.Add('DG1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('RESOURCES', False, True, gtGroup);
      oGrp1.Children.Add('RGS', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('SERVICE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIS', False, False, gtSingle);
          oGrp3.Children.Add('APR', True, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('GENERAL_RESOURCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIG', False, False, gtSingle);
          oGrp3.Children.Add('APR', True, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('LOCATION_RESOURCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIL', False, False, gtSingle);
          oGrp3.Children.Add('APR', True, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PERSONNEL_RESOURCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIP', False, False, gtSingle);
          oGrp3.Children.Add('APR', True, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('SRM_S09', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('SRM_S09', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ARQ', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('APR', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('PID', False, False, gtSingle);
        oGrp2.Children.Add('PV1', True, False, gtSingle);
        oGrp2.Children.Add('PV2', True, False, gtSingle);
        oGrp2.Children.Add('OBX', True, True, gtSingle);
        oGrp2.Children.Add('DG1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('RESOURCES', False, True, gtGroup);
      oGrp1.Children.Add('RGS', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('SERVICE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIS', False, False, gtSingle);
          oGrp3.Children.Add('APR', True, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('GENERAL_RESOURCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIG', False, False, gtSingle);
          oGrp3.Children.Add('APR', True, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('LOCATION_RESOURCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIL', False, False, gtSingle);
          oGrp3.Children.Add('APR', True, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PERSONNEL_RESOURCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIP', False, False, gtSingle);
          oGrp3.Children.Add('APR', True, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('SRM_S10', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('SRM_S10', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ARQ', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('APR', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('PID', False, False, gtSingle);
        oGrp2.Children.Add('PV1', True, False, gtSingle);
        oGrp2.Children.Add('PV2', True, False, gtSingle);
        oGrp2.Children.Add('OBX', True, True, gtSingle);
        oGrp2.Children.Add('DG1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('RESOURCES', False, True, gtGroup);
      oGrp1.Children.Add('RGS', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('SERVICE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIS', False, False, gtSingle);
          oGrp3.Children.Add('APR', True, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('GENERAL_RESOURCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIG', False, False, gtSingle);
          oGrp3.Children.Add('APR', True, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('LOCATION_RESOURCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIL', False, False, gtSingle);
          oGrp3.Children.Add('APR', True, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PERSONNEL_RESOURCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIP', False, False, gtSingle);
          oGrp3.Children.Add('APR', True, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('SRM_S11', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('SRM_S11', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ARQ', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('APR', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('PID', False, False, gtSingle);
        oGrp2.Children.Add('PV1', True, False, gtSingle);
        oGrp2.Children.Add('PV2', True, False, gtSingle);
        oGrp2.Children.Add('OBX', True, True, gtSingle);
        oGrp2.Children.Add('DG1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('RESOURCES', False, True, gtGroup);
      oGrp1.Children.Add('RGS', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('SERVICE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIS', False, False, gtSingle);
          oGrp3.Children.Add('APR', True, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('GENERAL_RESOURCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIG', False, False, gtSingle);
          oGrp3.Children.Add('APR', True, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('LOCATION_RESOURCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIL', False, False, gtSingle);
          oGrp3.Children.Add('APR', True, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PERSONNEL_RESOURCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIP', False, False, gtSingle);
          oGrp3.Children.Add('APR', True, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
  oStructures.Add('SRM_T12', '', 'T12', 'SRM', '');
  oStructure := oStructures.Add('SRR_S01', '', 'S01', 'SRR', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('SRR_S01', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('SCHEDULE', True, False, gtGroup);
      oGrp1.Children.Add('SCH', False, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATIENT', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('PID', False, False, gtSingle);
          oGrp3.Children.Add('PV1', True, False, gtSingle);
          oGrp3.Children.Add('PV2', True, False, gtSingle);
          oGrp3.Children.Add('DG1', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('RESOURCES', False, True, gtGroup);
        oGrp2.Children.Add('RGS', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('SERVICE', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('AIS', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('GENERAL_RESOURCE', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('AIG', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('LOCATION_RESOURCE', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('AIL', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('PERSONNEL_RESOURCE', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('AIP', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('SRR_S02', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('SRR_S02', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('SCHEDULE', True, False, gtGroup);
      oGrp1.Children.Add('SCH', False, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATIENT', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('PID', False, False, gtSingle);
          oGrp3.Children.Add('PV1', True, False, gtSingle);
          oGrp3.Children.Add('PV2', True, False, gtSingle);
          oGrp3.Children.Add('DG1', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('RESOURCES', False, True, gtGroup);
        oGrp2.Children.Add('RGS', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('SERVICE', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('AIS', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('GENERAL_RESOURCE', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('AIG', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('LOCATION_RESOURCE', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('AIL', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('PERSONNEL_RESOURCE', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('AIP', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('SRR_S03', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('SRR_S03', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('SCHEDULE', True, False, gtGroup);
      oGrp1.Children.Add('SCH', False, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATIENT', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('PID', False, False, gtSingle);
          oGrp3.Children.Add('PV1', True, False, gtSingle);
          oGrp3.Children.Add('PV2', True, False, gtSingle);
          oGrp3.Children.Add('DG1', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('RESOURCES', False, True, gtGroup);
        oGrp2.Children.Add('RGS', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('SERVICE', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('AIS', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('GENERAL_RESOURCE', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('AIG', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('LOCATION_RESOURCE', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('AIL', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('PERSONNEL_RESOURCE', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('AIP', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('SRR_S04', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('SRR_S04', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('SCHEDULE', True, False, gtGroup);
      oGrp1.Children.Add('SCH', False, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATIENT', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('PID', False, False, gtSingle);
          oGrp3.Children.Add('PV1', True, False, gtSingle);
          oGrp3.Children.Add('PV2', True, False, gtSingle);
          oGrp3.Children.Add('DG1', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('RESOURCES', False, True, gtGroup);
        oGrp2.Children.Add('RGS', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('SERVICE', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('AIS', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('GENERAL_RESOURCE', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('AIG', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('LOCATION_RESOURCE', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('AIL', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('PERSONNEL_RESOURCE', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('AIP', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('SRR_S05', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('SRR_S05', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('SCHEDULE', True, False, gtGroup);
      oGrp1.Children.Add('SCH', False, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATIENT', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('PID', False, False, gtSingle);
          oGrp3.Children.Add('PV1', True, False, gtSingle);
          oGrp3.Children.Add('PV2', True, False, gtSingle);
          oGrp3.Children.Add('DG1', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('RESOURCES', False, True, gtGroup);
        oGrp2.Children.Add('RGS', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('SERVICE', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('AIS', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('GENERAL_RESOURCE', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('AIG', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('LOCATION_RESOURCE', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('AIL', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('PERSONNEL_RESOURCE', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('AIP', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('SRR_S06', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('SRR_S06', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('SCHEDULE', True, False, gtGroup);
      oGrp1.Children.Add('SCH', False, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATIENT', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('PID', False, False, gtSingle);
          oGrp3.Children.Add('PV1', True, False, gtSingle);
          oGrp3.Children.Add('PV2', True, False, gtSingle);
          oGrp3.Children.Add('DG1', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('RESOURCES', False, True, gtGroup);
        oGrp2.Children.Add('RGS', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('SERVICE', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('AIS', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('GENERAL_RESOURCE', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('AIG', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('LOCATION_RESOURCE', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('AIL', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('PERSONNEL_RESOURCE', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('AIP', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('SRR_S07', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('SRR_S07', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('SCHEDULE', True, False, gtGroup);
      oGrp1.Children.Add('SCH', False, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATIENT', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('PID', False, False, gtSingle);
          oGrp3.Children.Add('PV1', True, False, gtSingle);
          oGrp3.Children.Add('PV2', True, False, gtSingle);
          oGrp3.Children.Add('DG1', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('RESOURCES', False, True, gtGroup);
        oGrp2.Children.Add('RGS', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('SERVICE', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('AIS', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('GENERAL_RESOURCE', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('AIG', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('LOCATION_RESOURCE', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('AIL', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('PERSONNEL_RESOURCE', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('AIP', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('SRR_S08', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('SRR_S08', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('SCHEDULE', True, False, gtGroup);
      oGrp1.Children.Add('SCH', False, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATIENT', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('PID', False, False, gtSingle);
          oGrp3.Children.Add('PV1', True, False, gtSingle);
          oGrp3.Children.Add('PV2', True, False, gtSingle);
          oGrp3.Children.Add('DG1', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('RESOURCES', False, True, gtGroup);
        oGrp2.Children.Add('RGS', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('SERVICE', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('AIS', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('GENERAL_RESOURCE', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('AIG', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('LOCATION_RESOURCE', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('AIL', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('PERSONNEL_RESOURCE', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('AIP', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('SRR_S09', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('SRR_S09', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('SCHEDULE', True, False, gtGroup);
      oGrp1.Children.Add('SCH', False, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATIENT', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('PID', False, False, gtSingle);
          oGrp3.Children.Add('PV1', True, False, gtSingle);
          oGrp3.Children.Add('PV2', True, False, gtSingle);
          oGrp3.Children.Add('DG1', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('RESOURCES', False, True, gtGroup);
        oGrp2.Children.Add('RGS', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('SERVICE', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('AIS', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('GENERAL_RESOURCE', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('AIG', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('LOCATION_RESOURCE', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('AIL', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('PERSONNEL_RESOURCE', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('AIP', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('SRR_S10', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('SRR_S10', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('SCHEDULE', True, False, gtGroup);
      oGrp1.Children.Add('SCH', False, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATIENT', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('PID', False, False, gtSingle);
          oGrp3.Children.Add('PV1', True, False, gtSingle);
          oGrp3.Children.Add('PV2', True, False, gtSingle);
          oGrp3.Children.Add('DG1', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('RESOURCES', False, True, gtGroup);
        oGrp2.Children.Add('RGS', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('SERVICE', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('AIS', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('GENERAL_RESOURCE', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('AIG', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('LOCATION_RESOURCE', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('AIL', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('PERSONNEL_RESOURCE', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('AIP', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('SRR_S11', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('SRR_S11', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('SCHEDULE', True, False, gtGroup);
      oGrp1.Children.Add('SCH', False, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATIENT', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('PID', False, False, gtSingle);
          oGrp3.Children.Add('PV1', True, False, gtSingle);
          oGrp3.Children.Add('PV2', True, False, gtSingle);
          oGrp3.Children.Add('DG1', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('RESOURCES', False, True, gtGroup);
        oGrp2.Children.Add('RGS', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('SERVICE', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('AIS', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('GENERAL_RESOURCE', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('AIG', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('LOCATION_RESOURCE', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('AIL', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('PERSONNEL_RESOURCE', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('AIP', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
  oStructures.Add('SRR_T12', '', 'T12', 'SRR', '');
  oStructure := oStructures.Add('SUR_P09', '', 'P09', 'SUR', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('SUR_P09', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('FACILITY', False, True, gtGroup);
      oGrp1.Children.Add('FAC', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('PRODUCT', False, True, gtGroup);
        oGrp2.Children.Add('PSH', False, False, gtSingle);
        oGrp2.Children.Add('PDC', False, False, gtSingle);
      oGrp1.Children.Add('PSH', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('FACILITY_DETAIL', False, True, gtGroup);
        oGrp2.Children.Add('FAC', False, False, gtSingle);
        oGrp2.Children.Add('PDC', False, False, gtSingle);
        oGrp2.Children.Add('NTE', False, False, gtSingle);
  oStructure := oStructures.Add('TBR_Q01', '', 'Q01', 'TBR', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('TBR_Q01', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QAK', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('RDF', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('RDT', False, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('UDM_Q05', '', 'Q05', 'UDM', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('UDM_Q05', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('URD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('URS', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DSP', False, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('VQQ_Q01', '', 'Q01', 'VQQ', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('VQQ_Q01', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('VTQ', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('RDF', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('VXQ_V01', 'Query Vaccine Record', 'V01', 'VXQ', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('VXQ_V01', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRF', True, False, gtSingle);
  oStructure := oStructures.Add('VXR_V03', 'Response Single', 'V03', 'VXR', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('VXR_V03', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRF', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NK1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT_VISIT', True, False, gtGroup);
      oGrp1.Children.Add('PV1', False, False, gtSingle);
      oGrp1.Children.Add('PV2', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('INSURANCE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('IN1', False, False, gtSingle);
        oGrp2.Children.Add('IN2', True, False, gtSingle);
        oGrp2.Children.Add('IN3', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('ORDER', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('ORC', True, False, gtSingle);
        oGrp2.Children.Add('RXA', False, False, gtSingle);
        oGrp2.Children.Add('RXR', True, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('OBSERVATION', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('OBX', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('VXU_V04', 'Unsolicited Update', 'V04', 'VXU', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('VXU_V04', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NK1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', True, False, gtGroup);
      oGrp1.Children.Add('PV1', False, False, gtSingle);
      oGrp1.Children.Add('PV2', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('INSURANCE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('IN1', False, False, gtSingle);
        oGrp2.Children.Add('IN2', True, False, gtSingle);
        oGrp2.Children.Add('IN3', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('ORDER', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('ORC', True, False, gtSingle);
        oGrp2.Children.Add('RXA', False, False, gtSingle);
        oGrp2.Children.Add('RXR', True, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('OBSERVATION', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('OBX', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('VXX_V02', 'Response Multiple', 'V02', 'VXX', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('VXX_V02', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRF', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', False, True, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp1.Children.Add('NK1', True, True, gtSingle);
End;

procedure Definitions23LoadEvents(oEvents : THL7V2ModelEvents);
Var
  oEvent : THL7V2ModelEvent;
Begin
  oEvent := oEvents.Add('A01', 'ADT/ACK - Admit/visit notification');
    oEvent.Messages.Add('ADT', 'ADT_A01', 'ACK', 'ACK');
  oEvent := oEvents.Add('A02', 'ADT/ACK -  Transfer a patient');
    oEvent.Messages.Add('ADT', 'ADT_A02', 'ACK', 'ACK');
  oEvent := oEvents.Add('A03', 'ADT/ACK -  Discharge a patient');
    oEvent.Messages.Add('ADT', 'ADT_A03', 'ACK', 'ACK');
  oEvent := oEvents.Add('A04', 'ADT/ACK -  Register a patient');
    oEvent.Messages.Add('ADT', 'ADT_A01', 'ACK', 'ACK');
  oEvent := oEvents.Add('A05', 'ADT/ACK -  Preadmit a patient');
    oEvent.Messages.Add('ADT', 'ADT_A01', 'ACK', 'ACK');
  oEvent := oEvents.Add('A06', 'ADT/ACK -  Transfer an outpatient to inpatient');
    oEvent.Messages.Add('ADT', 'ADT_A06', 'ACK', 'ACK');
  oEvent := oEvents.Add('A07', 'ADT/ACK -  Transfer an inpatient to outpatient');
    oEvent.Messages.Add('ADT', 'ADT_A06', 'ACK', 'ACK');
  oEvent := oEvents.Add('A08', 'ADT/ACK -  Update patient information');
    oEvent.Messages.Add('ADT', 'ADT_A01', 'ACK', 'ACK');
  oEvent := oEvents.Add('A09', 'ADT/ACK -  Patient departing');
    oEvent.Messages.Add('ADT', 'ADT_A09', 'ACK', 'ACK');
  oEvent := oEvents.Add('A10', 'ADT/ACK -  Patient arriving');
    oEvent.Messages.Add('ADT', 'ADT_A09', 'ACK', 'ACK');
  oEvent := oEvents.Add('A11', 'ADT/ACK -  Cancel admit');
    oEvent.Messages.Add('ADT', 'ADT_A09', 'ACK', 'ACK');
  oEvent := oEvents.Add('A12', 'ADT/ACK -  Cancel transfer');
    oEvent.Messages.Add('ADT', 'ADT_A12', 'ACK', 'ACK');
  oEvent := oEvents.Add('A13', 'ADT/ACK -  Cancel discharge');
    oEvent.Messages.Add('ADT', 'ADT_A01', 'ACK', 'ACK');
  oEvent := oEvents.Add('A14', 'ADT/ACK -  Pending admit');
    oEvent.Messages.Add('ADT', 'ADT_A01', 'ACK', 'ACK');
  oEvent := oEvents.Add('A15', 'ADT/ACK -  Pending transfer');
    oEvent.Messages.Add('ADT', 'ADT_A09', 'ACK', 'ACK');
  oEvent := oEvents.Add('A16', 'ADT/ACK -  Pending discharge');
    oEvent.Messages.Add('ADT', 'ADT_A16', 'ACK', 'ACK');
  oEvent := oEvents.Add('A17', 'ADT/ACK -  Swap patients');
    oEvent.Messages.Add('ADT', 'ADT_A17', 'ACK', 'ACK');
  oEvent := oEvents.Add('A18', 'ADT/ACK -  Merge patient information');
    oEvent.Messages.Add('ADT', 'ADT_A18', 'ACK', 'ACK');
  oEvent := oEvents.Add('A19', 'QRY/ACK -  Patient query');
    oEvent.Messages.Add('QRY', 'QRY_A19', 'ADR', 'ARD_A19');
  oEvent := oEvents.Add('A20', 'ADT/ACK -  Nursing/Census application updates');
    oEvent.Messages.Add('ADT', 'ADT_A20', 'ACK', 'ACK');
  oEvent := oEvents.Add('A21', 'ADT/ACK -  Leave of absence - out (leaving)');
    oEvent.Messages.Add('ADT', 'ADT_A02', 'ACK', 'ACK');
  oEvent := oEvents.Add('A22', 'ADT/ACK -  Leave of absence - in (returning)');
    oEvent.Messages.Add('ADT', 'ADT_A02', 'ACK', 'ACK');
  oEvent := oEvents.Add('A23', 'ADT/ACK -  Delete a patient record');
    oEvent.Messages.Add('ADT', 'ADT_A02', 'ACK', 'ACK');
  oEvent := oEvents.Add('A24', 'ADT/ACK -  Link patient information');
    oEvent.Messages.Add('ADT', 'ADT_A24', 'ACK', 'ACK');
  oEvent := oEvents.Add('A25', 'ADT/ACK -  Cancel pending discharge');
    oEvent.Messages.Add('ADT', 'ADT_A02', 'ACK', 'ACK');
  oEvent := oEvents.Add('A26', 'ADT/ACK -  Cancel pending transfer');
    oEvent.Messages.Add('ADT', 'ADT_A02', 'ACK', 'ACK');
  oEvent := oEvents.Add('A27', 'ADT/ACK -  Cancel pending admit');
    oEvent.Messages.Add('ADT', 'ADT_A02', 'ACK', 'ACK');
  oEvent := oEvents.Add('A28', 'ADT/ACK -  Add person information');
    oEvent.Messages.Add('ADT', 'ADT_A01', 'ACK', 'ACK');
  oEvent := oEvents.Add('A29', 'ADT/ACK -  Delete person information');
    oEvent.Messages.Add('ADT', 'ADT_A02', 'ACK', 'ACK');
  oEvent := oEvents.Add('A30', 'ADT/ACK -  Merge person information');
    oEvent.Messages.Add('ADT', 'ADT_A30', 'ACK', 'ACK');
  oEvent := oEvents.Add('A31', 'ADT/ACK -  Update person information');
    oEvent.Messages.Add('ADT', 'ADT_A01', 'ACK', 'ACK');
  oEvent := oEvents.Add('A32', 'ADT/ACK -  Cancel patient arriving');
    oEvent.Messages.Add('ADT', 'ADT_A02', 'ACK', 'ACK');
  oEvent := oEvents.Add('A33', 'ADT/ACK -  Cancel patient departing');
    oEvent.Messages.Add('ADT', 'ADT_A02', 'ACK', 'ACK');
  oEvent := oEvents.Add('A34', 'ADT/ACK -  Merge patient information - patient ID only');
    oEvent.Messages.Add('ADT', 'ADT_A30', 'ACK', 'ACK');
  oEvent := oEvents.Add('A35', 'ADT/ACK -  Merge patient information - account number only');
    oEvent.Messages.Add('ADT', 'ADT_A30', 'ACK', 'ACK');
  oEvent := oEvents.Add('A36', 'ADT/ACK -  Merge patient information - patient ID and account number');
    oEvent.Messages.Add('ADT', 'ADT_A30', 'ACK', 'ACK');
  oEvent := oEvents.Add('A37', 'ADT/ACK -  Unlink patient information');
    oEvent.Messages.Add('ADT', 'ADT_A24', 'ACK', 'ACK');
  oEvent := oEvents.Add('A38', 'ADT/ACK - Cancel pre-admit');
    oEvent.Messages.Add('ADT', 'ADT_A38', 'ACK', 'ACK');
  oEvent := oEvents.Add('A39', 'ADT/ACK - Merge person - external ID');
    oEvent.Messages.Add('ADT', 'ADT_A39', 'ACK', 'ACK');
  oEvent := oEvents.Add('A40', 'ADT/ACK - Merge patient - internal ID');
    oEvent.Messages.Add('ADT', 'ADT_A39', 'ACK', 'ACK');
  oEvent := oEvents.Add('A41', 'ADT/ACK - Merge account - patient account number');
    oEvent.Messages.Add('ADT', 'ADT_A39', 'ACK', 'ACK');
  oEvent := oEvents.Add('A42', 'ADT/ACK - Merge visit - visit number');
    oEvent.Messages.Add('ADT', 'ADT_A39', 'ACK', 'ACK');
  oEvent := oEvents.Add('A43', 'ADT/ACK - Move patient information - internal ID');
    oEvent.Messages.Add('ADT', 'ADT_A43', 'ACK', 'ACK');
  oEvent := oEvents.Add('A44', 'ADT/ACK - Move account information - internal ID');
    oEvent.Messages.Add('ADT', 'ADT_A43', 'ACK', 'ACK');
  oEvent := oEvents.Add('A45', 'ADT/ACK - Move visit information - visit number');
    oEvent.Messages.Add('ADT', 'ADT_A45', 'ACK', 'ACK');
  oEvent := oEvents.Add('A46', 'ADT/ACK - Change external ID');
    oEvent.Messages.Add('ADT', 'ADT_A30', 'ACK', 'ACK');
  oEvent := oEvents.Add('A47', 'ADT/ACK - Change internal ID');
    oEvent.Messages.Add('ADT', 'ADT_A30', 'ACK', 'ACK');
  oEvent := oEvents.Add('A48', 'ADT/ACK - Change alternate patient ID');
    oEvent.Messages.Add('ADT', 'ADT_A30', 'ACK', 'ACK');
  oEvent := oEvents.Add('A49', 'ADT/ACK - Change patient account number');
    oEvent.Messages.Add('ADT', 'ADT_A30', 'ACK', 'ACK');
  oEvent := oEvents.Add('A50', 'ADT/ACK - Change visit number');
    oEvent.Messages.Add('ADT', 'ADT_A50', 'ACK', 'ACK');
  oEvent := oEvents.Add('A51', 'ADT/ACK - Change alternate visit ID');
    oEvent.Messages.Add('ADT', 'ADT_A50', 'ACK', 'ACK');
  oEvent := oEvents.Add('C01', 'SRM - Register a patient on a clinical trial');
    oEvent.Messages.Add('CRM', 'CRM_C01', 'NUL', 'NUL');
  oEvent := oEvents.Add('C02', 'SRM - Cancel a patient registration on clin.trial (for clerical mistakes only)');
    oEvent.Messages.Add('CRM', 'CRM_C01', 'NUL', 'NUL');
  oEvent := oEvents.Add('C03', 'SRM - Correct/update registration information');
    oEvent.Messages.Add('CRM', 'CRM_C01', 'NUL', 'NUL');
  oEvent := oEvents.Add('C04', 'SRM - Patient has gone off a clinical trial');
    oEvent.Messages.Add('CRM', 'CRM_C01', 'NUL', 'NUL');
  oEvent := oEvents.Add('C05', 'SRM - Patient enters phase of clinical trial');
    oEvent.Messages.Add('CRM', 'CRM_C01', 'NUL', 'NUL');
  oEvent := oEvents.Add('C06', 'SRM - Cancel patient entering a phase (clerical mistake)');
    oEvent.Messages.Add('CRM', 'CRM_C01', 'NUL', 'NUL');
  oEvent := oEvents.Add('C07', 'SRM - Correct/update phase information');
    oEvent.Messages.Add('CRM', 'CRM_C01', 'NUL', 'NUL');
  oEvent := oEvents.Add('C08', 'SRM - Patient has gone off phase of clinical trial');
    oEvent.Messages.Add('CRM', 'CRM_C01', 'NUL', 'NUL');
  oEvent := oEvents.Add('C09', 'CSU - Automated time intervals for reporting, like monthly');
    oEvent.Messages.Add('CSU', 'CSU_C09', 'NUL', 'NUL');
  oEvent := oEvents.Add('C10', 'CSU - Patient completes the clinical trial');
    oEvent.Messages.Add('CSU', 'CSU_C09', 'NUL', 'NUL');
  oEvent := oEvents.Add('C11', 'CSU - Patient completes a phase of the clinical trial');
    oEvent.Messages.Add('CSU', 'CSU_C09', 'NUL', 'NUL');
  oEvent := oEvents.Add('C12', 'CSU - Update/correction of patient order/result information');
    oEvent.Messages.Add('CSU', 'CSU_C09', 'NUL', 'NUL');
  oEvents.Add('CNQ', 'QRY/EQQ/SPQ/VQQ/RQQ - Cancel query');
  oEvent := oEvents.Add('I01', 'RQI/RPI - Request for insurance information');
    oEvent.Messages.Add('RQI', 'RQI_I01', 'RPI', 'RPI_I01');
  oEvent := oEvents.Add('I02', 'RQI/RPL - Request/receipt of patient selection display list');
    oEvent.Messages.Add('RQI', 'RQI_I01', 'RPL', 'RPL_I02');
  oEvent := oEvents.Add('I03', 'RQI/RPR - Request/receipt of patient selection list');
    oEvent.Messages.Add('RQI', 'RQI_I01', 'RPR', 'RPL_I02');
  oEvent := oEvents.Add('I04', 'RQP/RPI - Request for patient demographic data');
    oEvent.Messages.Add('RQP', 'RQP_I04', 'RPI', 'RPI_I01');
  oEvent := oEvents.Add('I05', 'RQC/RCI - Request for patient clinical information');
    oEvent.Messages.Add('RQC', 'RQC_I05', 'RCI', 'RCI_I05');
  oEvent := oEvents.Add('I06', 'RQC/RCL - Request/receipt of clinical data listing');
    oEvent.Messages.Add('RQC', 'RQC_I06', 'RCL', 'RCL_I06');
  oEvent := oEvents.Add('I07', 'PIN/ACK - Unsolicited insurance information');
    oEvent.Messages.Add('PIN', 'PIN_I07', 'ACK', 'ACK');
  oEvent := oEvents.Add('I08', 'RQA/RPA - Request for treatment authorization information');
    oEvent.Messages.Add('RQA', 'RQA_I08', 'RPA', 'RPA_I08');
  oEvent := oEvents.Add('I09', 'RQA/RPA - Request for modification to an authorization');
    oEvent.Messages.Add('RQA', 'RQA_I08', 'RPA', 'RPA_I08');
  oEvent := oEvents.Add('I10', 'RQA/RPA - Request for resubmission of an authorization');
    oEvent.Messages.Add('RQA', 'RQA_I08', 'RPA', 'RPA_I08');
  oEvent := oEvents.Add('I11', 'RQA/RPA - Request for cancellation of an authorization');
    oEvent.Messages.Add('RQA', 'RQA_I08', 'RPA', 'RPA_I08');
  oEvent := oEvents.Add('I12', 'REF/RRI -  Patient referral');
    oEvent.Messages.Add('REF', 'REF_I12', 'RRI', 'RRI_I12');
  oEvent := oEvents.Add('I13', 'REF/RRI - Modify patient referral');
    oEvent.Messages.Add('REF', 'REF_I12', 'RRI', 'RRI_I12');
  oEvent := oEvents.Add('I14', 'REF/RRI - Cancel patient referral');
    oEvent.Messages.Add('REF', 'REF_I12', 'RRI', 'RRI_I12');
  oEvent := oEvents.Add('I15', 'REF/RRI - Request patient referral status');
    oEvent.Messages.Add('REF', 'REF_I12', 'RRI', 'RRI_I12');
  oEvent := oEvents.Add('M01', 'MFN/MFK - Master file not otherwise specified (for backward comp.only)');
    oEvent.Messages.Add('MFN', 'MFN_M01', 'MFK', 'MFK_M01');
  oEvent := oEvents.Add('M02', 'MFN/MFK - Master file - Staff Practioner');
    oEvent.Messages.Add('MFN', 'MFN_M02', 'MFK', '?');
  oEvent := oEvents.Add('M03', 'MFN/MFK - Master file - Test/Observation');
    oEvent.Messages.Add('MFN', 'MFN_M03', 'MFK', 'MFK_M01');
  oEvent := oEvents.Add('M04', 'MFN/MFK - Charge description master file');
    oEvent.Messages.Add('MFN', 'MFN_M06', 'MFK', 'MFK_M01');
  oEvent := oEvents.Add('M05', 'MFN/MFK - Patient location master file');
    oEvent.Messages.Add('MFN', 'MFN_M05', 'MFK', 'MFK_M01');
  oEvent := oEvents.Add('M06', 'MFN/MFK - Clinical study master file');
    oEvent.Messages.Add('MFN', 'MFN_M06', 'MFK', 'MFK_M01');
  oEvent := oEvents.Add('M07', 'MFN/MFK - Clinical study without phases but with schedules master file');
    oEvent.Messages.Add('MFN', 'MFN_M07', 'MFK', 'MFK_M01');
  oEvent := oEvents.Add('M08', 'MFN/MFK - Test/Observation (Numeric) master file');
    oEvent.Messages.Add('MFN', 'MFN_M08', 'MFK', 'MFK_M01');
  oEvent := oEvents.Add('M09', 'MFN/MFK - Test/Observation (Categorical) master file');
    oEvent.Messages.Add('MFN', 'MFN_M09', 'MFK', 'MFK_M01');
  oEvent := oEvents.Add('M10', 'MFN/MFK - Test/Observation batteries master file');
    oEvent.Messages.Add('MFN', 'MFN_M10', 'MFK', 'MFK_M01');
  oEvent := oEvents.Add('M11', 'MFN/MFK - Test/calculated observation master file');
    oEvent.Messages.Add('MFN', 'MFN_M11', 'MFK', 'MFK_M01');
  oEvent := oEvents.Add('O01', 'ORM - Order message (also RDE, RDS, RGV, RAS,');
    oEvent.Messages.Add('ORM', 'ORM_O01', 'NUL', 'NUL');
    oEvent.Messages.Add('ORM', 'OMD_O01', 'NUL', 'NUL');
    oEvent.Messages.Add('ORM', 'OMN_O01', 'NUL', 'NUL');
    oEvent.Messages.Add('ORM', 'OMS_O01', 'NUL', 'NUL');
    oEvent.Messages.Add('ORM', 'RDO_O01', 'NUL', 'NUL');
    oEvent.Messages.Add('RDE', 'RDE_O01', 'NUL', 'NUL');
    oEvent.Messages.Add('RDS', 'RDS_O01', 'NUL', 'NUL');
    oEvent.Messages.Add('RGV', 'RGV_O01', 'NUL', 'NUL');
    oEvent.Messages.Add('RAS', 'RAS_O01', 'NUL', 'NUL');
  oEvent := oEvents.Add('O02', 'ORR - Order response (also RRE, RRD, RRG, RRA,');
    oEvent.Messages.Add('ORR', 'ORR_O02', 'NUL', 'NUL');
    oEvent.Messages.Add('ORR', 'ORN_O02', 'NUL', 'NUL');
    oEvent.Messages.Add('ORR', 'ORS_O02', 'NUL', 'NUL');
    oEvent.Messages.Add('ORR', 'ORD_O02', 'NUL', 'NUL');
    oEvent.Messages.Add('ORR', 'RRO_O02', 'NUL', 'NUL');
    oEvent.Messages.Add('RRE', 'RRE_O02', 'NUL', 'NUL');
    oEvent.Messages.Add('RRD', 'RRD_O02', 'NUL', 'NUL');
    oEvent.Messages.Add('RRG', 'RRG_O02', 'NUL', 'NUL');
    oEvent.Messages.Add('RRA', 'RRA_O02', 'NUL', 'NUL');
  oEvent := oEvents.Add('P01', 'BAR/ACK - Add patient account');
    oEvent.Messages.Add('BAR', 'BAR_P01', 'ACK', 'ACK');
  oEvent := oEvents.Add('P02', 'BAR/ACK - Purge patient account');
    oEvent.Messages.Add('BAR', 'BAR_P02', 'ACK', 'ACK');
  oEvent := oEvents.Add('P03', 'DFT/ACK - Post detail financial transaction');
    oEvent.Messages.Add('DFT', 'DFT_P03', 'ACK', 'ACK');
  oEvent := oEvents.Add('P04', 'QRY/DSP - Generate bill and accounts receivable statements');
    oEvent.Messages.Add('QRY', '?', 'DSR', '?');
  oEvent := oEvents.Add('P05', 'BAR/ACK - Update account');
    oEvent.Messages.Add('BAR', 'BAR_P01', 'ACK', 'ACK');
  oEvent := oEvents.Add('P06', 'BAR/ACK - End account');
    oEvent.Messages.Add('BAR', 'BAR_P06', 'ACK', 'ACK');
  oEvent := oEvents.Add('P07', 'PEX - Unsolicited initial individual product experience report');
    oEvent.Messages.Add('PEX', 'PEX_P07', 'NUL', 'NUL');
  oEvent := oEvents.Add('P08', 'PEX - Unsolicited update individual product experience report');
    oEvent.Messages.Add('PEX', 'PEX_P07', 'NUL', 'NUL');
  oEvent := oEvents.Add('P09', 'SUR - Summary product experience report');
    oEvent.Messages.Add('SUR', 'SUR_P09', 'ACK', 'ACK');
  oEvent := oEvents.Add('PC1', 'PPR - PC/Problem Add');
    oEvent.Messages.Add('PPR', 'PPR_PC1', 'ACK', 'ACK');
  oEvent := oEvents.Add('PC2', 'PPR - PC/Problem Update');
    oEvent.Messages.Add('PPR', 'PPR_PC1', 'ACK', 'ACK');
  oEvent := oEvents.Add('PC3', 'PPR - PC/Problem Delete');
    oEvent.Messages.Add('PPR', 'PPR_PC1', 'ACK', 'ACK');
  oEvent := oEvents.Add('PC4', 'PPR - PC/Problem Query');
    oEvent.Messages.Add('QRY', 'QRY_PC4', 'ACK', 'ACK');
  oEvent := oEvents.Add('PC5', 'PPR - PC/Problem Reponse');
    oEvent.Messages.Add('PRR', 'PRR_PC5', 'ACK', 'ACK');
  oEvent := oEvents.Add('PC6', 'PGL - PC/Goal Add');
    oEvent.Messages.Add('PGL', 'PGL_PC6', 'ACK', 'ACK');
  oEvent := oEvents.Add('PC7', 'PGL - PC/Goal Update');
    oEvent.Messages.Add('PGL', 'PGL_PC6', 'ACK', 'ACK');
  oEvent := oEvents.Add('PC8', 'PGL - PC/Goal Delete');
    oEvent.Messages.Add('PGL', 'PGL_PC6', 'ACK', 'ACK');
  oEvent := oEvents.Add('PC9', 'PGL - PC/Goal Query');
    oEvent.Messages.Add('QRY', 'QRY_PC4', 'ACK', 'ACK');
  oEvent := oEvents.Add('PCA', 'PGL - PC/Goal Response');
    oEvent.Messages.Add('PPV', 'PPV_PCA', 'ACK', 'ACK');
  oEvent := oEvents.Add('PCB', 'PPP - PC/Pathway (Problem Oriented) Add');
    oEvent.Messages.Add('PPP', 'PPP_PCB', 'ACK', 'ACK');
  oEvent := oEvents.Add('PCC', 'PPP - PC/Pathway (Problem Oriented) Update');
    oEvent.Messages.Add('PPP', 'PPP_PCB', 'ACK', 'ACK');
  oEvent := oEvents.Add('PCD', 'PPP - PC/Pathway (Problem Oriented) Delete');
    oEvent.Messages.Add('PPP', 'PPP_PCB', 'ACK', 'ACK');
  oEvent := oEvents.Add('PCE', 'PPP - PC/Pathway (Problem Oriented) Query');
    oEvent.Messages.Add('QRY', 'QRY_PC4', 'ACK', 'ACK');
  oEvent := oEvents.Add('PCF', 'PPP - PC/Pathway (Problem Oriented) Query Response');
    oEvent.Messages.Add('PTR', 'PTR_PCF', 'ACK', 'ACK');
  oEvent := oEvents.Add('PCG', 'PPP - PC/Pathway (Goal Oriented) Add');
    oEvent.Messages.Add('PPG', 'PPG_PCG', 'ACK', 'ACK');
  oEvent := oEvents.Add('PCH', 'PPP - PC/Pathway (Goal Oriented) Update');
    oEvent.Messages.Add('PPG', 'PPG_PCG', 'ACK', 'ACK');
  oEvent := oEvents.Add('PCJ', 'PPP - PC/Pathway (Goal Oriented) Delete');
    oEvent.Messages.Add('PPG', 'PPG_PCG', 'ACK', 'ACK');
  oEvent := oEvents.Add('PCK', 'PPP - PC/Pathway (Goal Oriented) Query');
    oEvent.Messages.Add('QRY', 'QRY_PC4', 'ACK', 'ACK');
  oEvent := oEvents.Add('PCL', 'PPP - PC/Pathway (Goal Oriented) Query Response');
    oEvent.Messages.Add('PPT', 'PPT_PCL', 'ACK', 'ACK');
  oEvent := oEvents.Add('Q01', 'QRY/DSR - Query sent for immediate response');
    oEvent.Messages.Add('QRY', 'QRY_Q01', 'DSR', 'DSR_Q01');
    oEvent.Messages.Add('EQQ', 'EQQ_Q01', 'NUL', 'NUL');
    oEvent.Messages.Add('VQQ', 'VQQ_Q01', 'NUL', 'NUL');
    oEvent.Messages.Add('SPQ', 'SPQ_Q01', 'NUL', 'NUL');
    oEvent.Messages.Add('RQQ', 'RQQ_Q01', 'NUL', 'NUL');
    oEvent.Messages.Add('EDR', 'EDR_Q01', 'NUL', 'NUL');
    oEvent.Messages.Add('TBR', 'TBR_Q01', 'NUL', 'NUL');
    oEvent.Messages.Add('ERP', 'ERP_Q01', 'NUL', 'NUL');
  oEvent := oEvents.Add('Q02', 'QRY/ACK - Query sent for deferred response');
    oEvent.Messages.Add('QRY', 'QRY_Q02', 'QCK', 'QCK_Q02');
  oEvent := oEvents.Add('Q03', 'DSR/ACK - Deferred response to a query');
    oEvent.Messages.Add('DSR', 'DSR_Q03', 'ACK', 'ACK');
  oEvent := oEvents.Add('Q05', 'UDM/ACK - Unsolicited display update');
    oEvent.Messages.Add('UDM', 'UDM_Q05', 'ACK', 'ACK');
  oEvent := oEvents.Add('Q06', 'OSQ/OSR - Query for order status');
    oEvent.Messages.Add('OSQ', 'OSQ_Q06', 'OSR', 'OSR_Q06');
  oEvent := oEvents.Add('R01', 'ORU/ACK - Unsolicited transmission of an observation');
    oEvent.Messages.Add('ORU', 'ORU_R01', 'ACK', 'ACK');
  oEvent := oEvents.Add('R02', 'QRY - Query for results of observation');
    oEvent.Messages.Add('QRY', 'QRY_R02', 'NUL', 'NUL');
  oEvent := oEvents.Add('R03', 'Display-oriented results, query/unsol. update (for backward comp.only)');
    oEvent.Messages.Add('ORU', '?', 'ACK', 'ACK');
  oEvent := oEvents.Add('R04', 'ORF - Response to query; transmission of requested observation');
    oEvent.Messages.Add('NUL', 'NUL', 'ORF', 'ORF_R04');
  oEvent := oEvents.Add('R05', 'QRY/DSR- query for display results');
    oEvent.Messages.Add('QRY', '?', 'DSR', '?');
  oEvents.Add('R06', 'UDM-unsolicited update/display results');
  oEvent := oEvents.Add('RAR', 'RAR - Pharmacy administration information query response');
    oEvent.Messages.Add('RAR', 'RAR_RAR', 'NUL', 'NUL');
  oEvent := oEvents.Add('RDR', 'RDR - Pharmacy dispense information query response');
    oEvent.Messages.Add('RDR', 'RDR_RDR', 'NUL', 'NUL');
  oEvent := oEvents.Add('RER', 'RER - Pharmacy encoded order information query response');
    oEvent.Messages.Add('RER', 'RER_RER', 'NUL', 'NUL');
  oEvent := oEvents.Add('RGR', 'RGR - Pharmacy dose information query response');
    oEvent.Messages.Add('RGR', 'RGR_RGR', 'NUL', 'NUL');
  oEvent := oEvents.Add('ROR', 'ROR - Pharmacy prescription order query response');
    oEvent.Messages.Add('ROR', 'ROR_ROR', 'NUL', 'NUL');
  oEvent := oEvents.Add('S01', 'SRM/SRR - Request new appointment booking');
    oEvent.Messages.Add('SRM', 'SRM_S01', 'SRR', 'SRR_S01');
  oEvent := oEvents.Add('S02', 'SRM/SRR - Request appointment rescheduling');
    oEvent.Messages.Add('SRM', 'SRM_S01', 'SRR', 'SRR_S01');
  oEvent := oEvents.Add('S03', 'SRM/SRR - Request appointment modification');
    oEvent.Messages.Add('SRM', 'SRM_S01', 'SRR', 'SRR_S01');
  oEvent := oEvents.Add('S04', 'SRM/SRR - Request appointment cancellation');
    oEvent.Messages.Add('SRM', 'SRM_S01', 'SRR', 'SRR_S01');
  oEvent := oEvents.Add('S05', 'SRM/SRR - Request appointment discontinuation');
    oEvent.Messages.Add('SRM', 'SRM_S01', 'SRR', 'SRR_S01');
  oEvent := oEvents.Add('S06', 'SRM/SRR - Request appointment deletion');
    oEvent.Messages.Add('SRM', 'SRM_S01', 'SRR', 'SRR_S01');
  oEvent := oEvents.Add('S07', 'SRM/SRR - Request addition of service/resource on appointment');
    oEvent.Messages.Add('SRM', 'SRM_S01', 'SRR', 'SRR_S01');
  oEvent := oEvents.Add('S08', 'SRM/SRR - Request modification of service/resource on appointment');
    oEvent.Messages.Add('SRM', 'SRM_S01', 'SRR', 'SRR_S01');
  oEvent := oEvents.Add('S09', 'SRM/SRR - Request cancellation of servic/resource on appointment');
    oEvent.Messages.Add('SRM', 'SRM_S01', 'SRR', 'SRR_S01');
  oEvent := oEvents.Add('S10', 'SRM/SRR - Request discontinuation of servic/resource on appointment');
    oEvent.Messages.Add('SRM', 'SRM_S01', 'SRR', 'SRR_S01');
  oEvent := oEvents.Add('S11', 'SRM/SRR - Request deletion of servic/resource on appointment');
    oEvent.Messages.Add('SRM', 'SRM_S01', 'SRR', 'SRR_S01');
  oEvent := oEvents.Add('S12', 'SIU/ACK - Notification of new appointment booking');
    oEvent.Messages.Add('SIU', 'SIU_S12', 'ACK', 'ACK');
  oEvent := oEvents.Add('S13', 'SIU/ACK - Notification of appointment rescheduling');
    oEvent.Messages.Add('SIU', 'SIU_S12', 'ACK', 'ACK');
  oEvent := oEvents.Add('S14', 'SIU/ACK - Notification of appointment modification');
    oEvent.Messages.Add('SIU', 'SIU_S12', 'ACK', 'ACK');
  oEvent := oEvents.Add('S15', 'SIU/ACK - Notification of appointment cancellation');
    oEvent.Messages.Add('SIU', 'SIU_S12', 'ACK', 'ACK');
  oEvent := oEvents.Add('S16', 'SIU/ACK - Notification of appointment discontinuation');
    oEvent.Messages.Add('SIU', 'SIU_S12', 'ACK', 'ACK');
  oEvent := oEvents.Add('S17', 'SIU/ACK - Notification of appointment deletion');
    oEvent.Messages.Add('SIU', 'SIU_S12', 'ACK', 'ACK');
  oEvent := oEvents.Add('S18', 'SIU/ACK - Notification of addition of service/resource on appointment');
    oEvent.Messages.Add('SIU', 'SIU_S12', 'ACK', 'ACK');
  oEvent := oEvents.Add('S19', 'SIU/ACK - Notification of modification of service/resource on appointment');
    oEvent.Messages.Add('SIU', 'SIU_S12', 'ACK', 'ACK');
  oEvent := oEvents.Add('S20', 'SIU/ACK - Notification of cancellation of service/resource on appointment');
    oEvent.Messages.Add('SIU', 'SIU_S12', 'ACK', 'ACK');
  oEvent := oEvents.Add('S21', 'SIU/ACK - Notification of discontinuation of service/resource on appointment');
    oEvent.Messages.Add('SIU', 'SIU_S12', 'ACK', 'ACK');
  oEvent := oEvents.Add('S22', 'SIU/ACK - Notification of deletion of service/resource on appointment');
    oEvent.Messages.Add('SIU', 'SIU_S12', 'ACK', 'ACK');
  oEvent := oEvents.Add('S23', 'SIU/ACK - Notification of blocked schedule time slot(s)');
    oEvent.Messages.Add('SIU', 'SIU_S12', 'ACK', 'ACK');
  oEvent := oEvents.Add('S24', 'SIU/ACK - Notification of open ("unblocked") schedule time slot(s)');
    oEvent.Messages.Add('SIU', 'SIU_S12', 'ACK', 'ACK');
  oEvent := oEvents.Add('S25', 'SQM/SQR - Query schedule information');
    oEvent.Messages.Add('SQM', 'SQM_S25', 'SQR', 'SQR_S25');
  oEvent := oEvents.Add('S26', 'notification that patient did not show up for schedule appointment');
    oEvent.Messages.Add('SIU', 'SIU_S12', 'ACK', 'ACK');
  oEvent := oEvents.Add('T01', 'MDM/ACK - Original document notification');
    oEvent.Messages.Add('MDM', 'MDM_T01', 'ACK', 'ACK');
  oEvent := oEvents.Add('T02', 'MDM/ACK - Original document notification and content');
    oEvent.Messages.Add('MDM', 'MDM_T02', 'ACK', 'ACK');
  oEvent := oEvents.Add('T03', 'MDM/ACK - Document status change notification');
    oEvent.Messages.Add('MDM', 'MDM_T01', 'ACK', 'ACK');
  oEvent := oEvents.Add('T04', 'MDM/ACK - Document status change notification and content');
    oEvent.Messages.Add('MDM', 'MDM_T02', 'ACK', 'ACK');
  oEvent := oEvents.Add('T05', 'MDM/ACK - Document addendum notification');
    oEvent.Messages.Add('MDM', 'MDM_T01', 'ACK', 'ACK');
  oEvent := oEvents.Add('T06', 'MDM/ACK - Document addendum notification and content');
    oEvent.Messages.Add('MDM', 'MDM_T02', 'ACK', 'ACK');
  oEvent := oEvents.Add('T07', 'MDM/ACK - Document edit notification');
    oEvent.Messages.Add('MDM', 'MDM_T01', 'ACK', 'ACK');
  oEvent := oEvents.Add('T08', 'MDM/ACK - Document edit notification and content');
    oEvent.Messages.Add('MDM', 'MDM_T02', 'ACK', 'ACK');
  oEvent := oEvents.Add('T09', 'MDM/ACK - Document replace notification');
    oEvent.Messages.Add('MDM', 'MDM_T01', 'ACK', 'ACK');
  oEvent := oEvents.Add('T10', 'MDM/ACK - Document replacement notification and content');
    oEvent.Messages.Add('MDM', 'MDM_T02', 'ACK', 'ACK');
  oEvent := oEvents.Add('T11', 'MDM/ACK - Document cancel notification');
    oEvent.Messages.Add('MDM', 'MDM_T01', 'ACK', 'ACK');
  oEvent := oEvents.Add('T12', 'QRY/DOC - Document query');
    oEvent.Messages.Add('QRY', 'QRY_T12', 'DOC', 'DOC_T12');
  oEvent := oEvents.Add('V01', 'VXQ - Query for vaccination record');
    oEvent.Messages.Add('VXQ', 'VXQ_V01', 'NUL', 'NUL');
  oEvent := oEvents.Add('V02', 'VXX - Response to vaccination query returning multiple PID matches');
    oEvent.Messages.Add('VXX', 'VXX_V02', 'NUL', 'NUL');
  oEvent := oEvents.Add('V03', 'VXR - Vaccination record response');
    oEvent.Messages.Add('VXR', 'VXR_V03', 'NUL', 'NUL');
  oEvent := oEvents.Add('V04', 'VXU - Unsolicited vaccination record update');
    oEvent.Messages.Add('VXU', 'VXU_V04', 'NUL', 'NUL');
  oEvent := oEvents.Add('W01', 'ORU - Waveform result, unsolicited transmission of requested information');
    oEvent.Messages.Add('ORU', 'ORU_W01', 'NUL', 'NUL');
  oEvents.Add('W02', 'QRF - Waveform result, response to query');
  oEvents.Add('X01', 'PEX - Product experience');
End;

procedure Definitions23LoadMessageStructures(oStructures : THL7V2ModelMessageStructures);
begin
  Definitions23LoadMessageStructures1(oStructures);
  Definitions23LoadMessageStructures2(oStructures);
end;


End.

