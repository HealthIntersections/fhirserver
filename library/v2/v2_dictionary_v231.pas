Unit v2_dictionary_v231;

{
Copyright (c) 2011+, HL7 and Health Intersections Pty Ltd (http://www.healthintersections.com.au)
All rights reserved.

Redistribution and use in source and binary forms, with or without modification,
are permitted provided that the following conditions are met:

 * Redistributions of source code must retain the above copyright notice, this
   list of conditions and the following disclaimer.
 * Redistributions in binary form must reproduce the above copyright notice,
   this list of conditions and the following disclaimer in the documentation
   and/or other materials provided with the distribution.
 * Neither the name of HL7 nor the names of its contributors may be used to
   endorse or promote products derived from this software without specific
   prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS' AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
POSSIBILITY OF SUCH DAMAGE.
}

{$I fhir.inc}
{ WARNING: This is generated code. Do not make any changes here }

Interface

Uses
  v2_dictionary;

procedure Definitions231LoadTables(oTables : THL7V2ModelTables);
procedure Definitions231LoadComponents(oComponents : THL7V2ModelComponents);
procedure Definitions231LoadDataElements(oDataElements : THL7V2ModelDataElements);
procedure Definitions231LoadDataTypes(oDataTypes : THL7V2ModelDataTypes);
procedure Definitions231LoadEvents(oEvents : THL7V2ModelEvents);
procedure Definitions231LoadStructures(oStructures : THL7V2ModelStructures; oComponents : THL7V2ModelComponents);
procedure Definitions231LoadSegments(oSegments : THL7V2ModelSegments);
procedure Definitions231LoadMessageStructures(oStructures : THL7V2ModelMessageStructures);

Implementation

procedure LoadTable0(oTables : THL7V2ModelTables);
Begin
  oTables.Add(0, 'no table');
End;

procedure LoadTable1(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(1, 'Sex');
    oTable.Items.Add(1, 'F', 'Female');
    oTable.Items.Add(2, 'M', 'Male');
    oTable.Items.Add(3, 'O', 'Other');
    oTable.Items.Add(4, 'U', 'Unknown');
End;

procedure LoadTable2(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(2, 'Marital status');
    oTable.Items.Add(1, 'A', 'Separated');
    oTable.Items.Add(2, 'D', 'Divorced');
    oTable.Items.Add(3, 'M', 'Married');
    oTable.Items.Add(4, 'S', 'Single');
    oTable.Items.Add(5, 'W', 'Widowed');
End;

procedure LoadTable3(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(3, 'Event type');
    oTable.Items.Add(1, 'A01', 'ADT/ACK - Admit/visit notification');
    oTable.Items.Add(2, 'A02', 'ADT/ACK - Transfer a patient');
    oTable.Items.Add(3, 'A03', 'ADT/ACK -  Discharge/end visit');
    oTable.Items.Add(4, 'A04', 'ADT/ACK -  Register a patient');
    oTable.Items.Add(5, 'A05', 'ADT/ACK -  Pre-admit a patient');
    oTable.Items.Add(6, 'A06', 'ADT/ACK -  Change an outpatient to an inpatient');
    oTable.Items.Add(7, 'A07', 'ADT/ACK -  Change an inpatient to an outpatient');
    oTable.Items.Add(8, 'A08', 'ADT/ACK -  Update patient information');
    oTable.Items.Add(9, 'A09', 'ADT/ACK -  Patient departing - tracking');
    oTable.Items.Add(10, 'A10', 'ADT/ACK -  Patient arriving - tracking');
    oTable.Items.Add(11, 'A11', 'ADT/ACK -  Cancel admit/visit notification');
    oTable.Items.Add(12, 'A12', 'ADT/ACK -  Cancel transfer');
    oTable.Items.Add(13, 'A13', 'ADT/ACK -  Cancel discharge/end visit');
    oTable.Items.Add(14, 'A14', 'ADT/ACK -  Pending admit');
    oTable.Items.Add(15, 'A15', 'ADT/ACK -  Pending transfer');
    oTable.Items.Add(16, 'A16', 'ADT/ACK -  Pending discharge');
    oTable.Items.Add(17, 'A17', 'ADT/ACK -  Swap patients');
    oTable.Items.Add(18, 'A18', 'ADT/ACK -  Merge patient information');
    oTable.Items.Add(19, 'A19', 'QRY/ADR -  Patient query');
    oTable.Items.Add(20, 'A20', 'ADT/ACK -  Bed status update');
    oTable.Items.Add(21, 'A21', 'ADT/ACK -  Patient goes on a '#147'leave of absence'#148);
    oTable.Items.Add(22, 'A22', 'ADT/ACK -  Patient returns from a '#147'leave of absence'#148);
    oTable.Items.Add(23, 'A23', 'ADT/ACK -  Delete a patient record');
    oTable.Items.Add(24, 'A24', 'ADT/ACK -  Link patient information');
    oTable.Items.Add(25, 'A25', 'ADT/ACK -  Cancel pending discharge');
    oTable.Items.Add(26, 'A26', 'ADT/ACK -  Cancel pending transfer');
    oTable.Items.Add(27, 'A27', 'ADT/ACK -  Cancel pending admit');
    oTable.Items.Add(28, 'A28', 'ADT/ACK -  Add person information');
    oTable.Items.Add(29, 'A29', 'ADT/ACK -  Delete person information');
    oTable.Items.Add(30, 'A30', 'ADT/ACK -  Merge person information');
    oTable.Items.Add(31, 'A31', 'ADT/ACK -  Update person information');
    oTable.Items.Add(32, 'A32', 'ADT/ACK -  Cancel patient arriving - tracking');
    oTable.Items.Add(33, 'A33', 'ADT/ACK -  Cancel patient departing - tracking');
    oTable.Items.Add(34, 'A34', 'ADT/ACK -  Merge patient information - patient ID only');
    oTable.Items.Add(35, 'A35', 'ADT/ACK -  Merge patient information - account number only');
    oTable.Items.Add(36, 'A36', 'ADT/ACK -  Merge patient information - patient ID and account number');
    oTable.Items.Add(37, 'A37', 'ADT/ACK -  Unlink patient information');
    oTable.Items.Add(38, 'A38', 'ADT/ACK - Cancel pre-admit');
    oTable.Items.Add(39, 'A39', 'ADT/ACK - Merge person '#150' patient ID');
    oTable.Items.Add(40, 'A40', 'ADT/ACK - Merge patient - patient identifier list');
    oTable.Items.Add(41, 'A41', 'ADT/ACK - Merge account - patient account number');
    oTable.Items.Add(42, 'A42', 'ADT/ACK - Merge visit - visit number');
    oTable.Items.Add(43, 'A43', 'ADT/ACK - Move patient information '#150' patient identifier list');
    oTable.Items.Add(44, 'A44', 'ADT/ACK - Move account information - patient account number');
    oTable.Items.Add(45, 'A45', 'ADT/ACK - Move visit information - visit number');
    oTable.Items.Add(46, 'A46', 'ADT/ACK - Change patient ID');
    oTable.Items.Add(47, 'A47', 'ADT/ACK - Change patient identifier list');
    oTable.Items.Add(48, 'A48', 'ADT/ACK - Change alternate patient ID');
    oTable.Items.Add(49, 'A49', 'ADT/ACK - Change patient account number');
    oTable.Items.Add(50, 'A50', 'ADT/ACK - Change visit number');
    oTable.Items.Add(51, 'A51', 'ADT/ACK - Change alternate visit ID');
    oTable.Items.Add(52, 'C01', 'CRM - Register a patient on a clinical trial');
    oTable.Items.Add(53, 'C02', 'CRM - Cancel a patient registration on clinical trial (for clerical mistakes only)');
    oTable.Items.Add(54, 'C03', 'CRM - Correct/update registration information');
    oTable.Items.Add(55, 'C04', 'CRM - Patient has gone off a clinical trial');
    oTable.Items.Add(56, 'C05', 'CRM - Patient enters phase of clinical trial');
    oTable.Items.Add(57, 'C06', 'CRM - Cancel patient entering a phase (clerical mistake)');
    oTable.Items.Add(58, 'C07', 'CRM - Correct/update phase information');
    oTable.Items.Add(59, 'C08', 'CRM - Patient has gone off phase of clinical trial');
    oTable.Items.Add(60, 'C09', 'CSU - Automated time intervals for reporting, like monthly');
    oTable.Items.Add(61, 'C10', 'CSU - Patient completes the clinical trial');
    oTable.Items.Add(62, 'C11', 'CSU - Patient completes a phase of the clinical trial');
    oTable.Items.Add(63, 'C12', 'CSU - Update/correction of patient order/result information');
    oTable.Items.Add(64, 'CNQ', 'QRY/EQQ/SPQ/VQQ/RQQ - Cancel query');
    oTable.Items.Add(65, 'I01', 'RQI/RPI - Request for insurance information');
    oTable.Items.Add(66, 'I02', 'RQI/RPL - Request/receipt of patient selection display list');
    oTable.Items.Add(67, 'I03', 'RQI/RPR - Request/receipt of patient selection list');
    oTable.Items.Add(68, 'I04', 'RQD/RPI - Request for patient demographic data');
    oTable.Items.Add(69, 'I05', 'RQC/RCI - Request for patient clinical information');
    oTable.Items.Add(70, 'I06', 'RQC/RCL - Request/receipt of clinical data listing');
    oTable.Items.Add(71, 'I07', 'PIN/ACK - Unsolicited insurance information');
    oTable.Items.Add(72, 'I08', 'RQA/RPA - Request for treatment authorization information');
    oTable.Items.Add(73, 'I09', 'RQA/RPA - Request for modification to an authorization');
    oTable.Items.Add(74, 'I10', 'RQA/RPA - Request for resubmission of an authorization');
    oTable.Items.Add(75, 'I11', 'RQA/RPA - Request for cancellation of an authorization');
    oTable.Items.Add(76, 'I12', 'REF/RRI - Patient referral');
    oTable.Items.Add(77, 'I13', 'REF/RRI - Modify patient referral');
    oTable.Items.Add(78, 'I14', 'REF/RRI - Cancel patient referral');
    oTable.Items.Add(79, 'I15', 'REF/RRI - Request patient referral status');
    oTable.Items.Add(80, 'M01', 'MFN/MFK - Master file not otherwise specified (for backward compatibility only)');
    oTable.Items.Add(81, 'M02', 'MFN/MFK - Master file - staff practitioner');
    oTable.Items.Add(82, 'M03', 'MFN/MFK - Master file - test/observation (for backward compatibility only)');
    oTable.Items.Add(84, 'M04', 'MFN/MFK - Master files charge description');
    oTable.Items.Add(85, 'M05', 'MFN/MFK - Patient location master file');
    oTable.Items.Add(86, 'M06', 'MFN/MFK - Clinical study with phases and schedules master file');
    oTable.Items.Add(87, 'M07', 'MFN/MFK - Clinical study without phases but with schedules master file');
    oTable.Items.Add(88, 'M08', 'MFN/MFK - Test/observation (numeric) master file');
    oTable.Items.Add(89, 'M09', 'MFN/MFK - Test/observation (categorical) master file');
    oTable.Items.Add(90, 'M10', 'MFN/MFK - Test /observation batteries master file');
    oTable.Items.Add(91, 'M11', 'MFN/MFK - Test/calculated observations master file');
    oTable.Items.Add(92, 'O01', 'ORM - Order message (also RDE, RDS, RGV, RAS)');
    oTable.Items.Add(93, 'O02', 'ORR - Order response (also RRE, RRD, RRG, RRA)');
    oTable.Items.Add(94, 'P01', 'BAR/ACK - Add patient accounts');
    oTable.Items.Add(95, 'P02', 'BAR/ACK - Purge patient accounts');
    oTable.Items.Add(96, 'P03', 'DFT/ACK - Post detail financial transaction');
    oTable.Items.Add(97, 'P04', 'QRY/DSP '#150' Generate bill and A/R statements');
    oTable.Items.Add(98, 'P05', 'BAR/ACK '#150' Update account');
    oTable.Items.Add(99, 'P06', 'BAR/ACK - End account');
    oTable.Items.Add(100, 'P07', 'PEX - Unsolicited initial individual product experience report');
    oTable.Items.Add(101, 'P08', 'PEX - Unsolicited update individual product experience report');
    oTable.Items.Add(102, 'P09', 'SUR - Summary product experience report');
    oTable.Items.Add(103, 'PC1', 'PPR - PC/ Problem Add');
    oTable.Items.Add(104, 'PC2', 'PPR - PC/ Problem Update');
    oTable.Items.Add(105, 'PC3', 'PPR - PC/ Problem Delete');
    oTable.Items.Add(106, 'PC4', 'QRY - PC/ Problem Query');
    oTable.Items.Add(107, 'PC5', 'PRR - PC/ Problem Response');
    oTable.Items.Add(108, 'PC6', 'PGL - PC/ Goal Add');
    oTable.Items.Add(109, 'PC7', 'PGL - PC/ Goal Update');
    oTable.Items.Add(110, 'PC8', 'PGL - PC/ Goal Delete');
    oTable.Items.Add(111, 'PC9', 'QRY - PC/ Goal Query');
    oTable.Items.Add(112, 'PCA', 'PPV - PC/ Goal Response');
    oTable.Items.Add(113, 'PCB', 'PPP - PC/ Pathway (Problem-Oriented) Add');
    oTable.Items.Add(114, 'PCC', 'PPP - PC/ Pathway (Problem-Oriented) Update');
    oTable.Items.Add(115, 'PCD', 'PPP - PC/ Pathway (Problem-Oriented) Delete');
    oTable.Items.Add(116, 'PCE', 'QRY - PC/ Pathway (Problem-Oriented) Query');
    oTable.Items.Add(117, 'PCF', 'PTR - PC/ Pathway (Problem-Oriented) Query Response');
    oTable.Items.Add(118, 'PCG', 'PPG - PC/ Pathway (Goal-Oriented) Add');
    oTable.Items.Add(119, 'PCH', 'PPG - PC/ Pathway (Goal-Oriented) Update');
    oTable.Items.Add(120, 'PCJ', 'PPG - PC/ Pathway (Goal-Oriented) Delete');
    oTable.Items.Add(121, 'PCK', 'QRY - PC/ Pathway (Goal-Oriented) Query');
    oTable.Items.Add(122, 'PCL', 'PPT - PC/ Pathway (Goal-Oriented) Query Response');
    oTable.Items.Add(123, 'Q01', 'QRY/DSR - Query sent for immediate response');
    oTable.Items.Add(124, 'Q02', 'QRY/QCK - Query sent for deferred response');
    oTable.Items.Add(125, 'Q03', 'DSR/ACK - Deferred response to a query');
    oTable.Items.Add(126, 'Q04', 'EQQ '#150' Embedded query language query');
    oTable.Items.Add(127, 'Q05', 'UDM/ACK - Unsolicited display update message');
    oTable.Items.Add(128, 'Q06', 'OSQ/OSR - Query for order status');
    oTable.Items.Add(129, 'Q07', 'VQQ '#150' Virtual table query');
    oTable.Items.Add(130, 'Q08', 'SPQ '#150' Stored procedure request');
    oTable.Items.Add(131, 'Q09', 'RQQ '#150' event replay query');
    oTable.Items.Add(132, 'R01', 'ORU/ACK - Unsolicited transmission of an observation message');
    oTable.Items.Add(133, 'R02', 'QRY - Query for results of observation');
    oTable.Items.Add(134, 'R03', 'QRY/DSR Display-oriented results, query/unsol. update (for backward compatibility only)');
    oTable.Items.Add(135, 'R04', 'ORF - Response to query; transmission of requested observation');
    oTable.Items.Add(136, 'R05', 'QRY/DSR - query for display results');
    oTable.Items.Add(137, 'R06', 'UDM - unsolicited update/display results');
    oTable.Items.Add(138, 'R07', 'EDR '#150' enhanced display response');
    oTable.Items.Add(139, 'R08', 'TBR '#150' tabular data response');
    oTable.Items.Add(140, 'R09', 'ERP '#150' event replay response');
    oTable.Items.Add(145, 'R0R', 'R0R - Pharmacy prescription order query response');
    oTable.Items.Add(141, 'RAR', 'RAR - Pharmacy administration information query response');
    oTable.Items.Add(142, 'RDR', 'RDR - Pharmacy dispense information query response');
    oTable.Items.Add(143, 'RER', 'RER - Pharmacy encoded order information query response');
    oTable.Items.Add(144, 'RGR', 'RGR - Pharmacy dose information query response');
    oTable.Items.Add(146, 'S01', 'SRM/SRR - Request new appointment booking');
    oTable.Items.Add(147, 'S02', 'SRM/SRR - Request appointment rescheduling');
    oTable.Items.Add(148, 'S03', 'SRM/SRR - Request appointment modification');
    oTable.Items.Add(149, 'S04', 'SRM/SRR - Request appointment cancellation');
    oTable.Items.Add(150, 'S05', 'SRM/SRR - Request appointment discontinuation');
    oTable.Items.Add(151, 'S06', 'SRM/SRR - Request appointment deletion');
    oTable.Items.Add(152, 'S07', 'SRM/SRR - Request addition of service/resource on appointment');
    oTable.Items.Add(153, 'S08', 'SRM/SRR - Request modification of service/resource on appointment');
    oTable.Items.Add(154, 'S09', 'SRM/SRR - Request cancellation of service/resource on appointment');
    oTable.Items.Add(155, 'S10', 'SRM/SRR - Request discontinuation of service/resource on appointment');
    oTable.Items.Add(156, 'S11', 'SRM/SRR - Request deletion of service/resource on appointment');
    oTable.Items.Add(157, 'S12', 'SIU/ACK - Notification of new appointment booking');
    oTable.Items.Add(158, 'S13', 'SIU/ACK - Notification of appointment rescheduling');
    oTable.Items.Add(159, 'S14', 'SIU/ACK - Notification of appointment modification');
    oTable.Items.Add(160, 'S15', 'SIU/ACK - Notification of appointment cancellation');
    oTable.Items.Add(161, 'S16', 'SIU/ACK - Notification of appointment discontinuation');
    oTable.Items.Add(162, 'S17', 'SIU/ACK - Notification of appointment deletion');
    oTable.Items.Add(163, 'S18', 'SIU/ACK - Notification of addition of service/resource on appointment');
    oTable.Items.Add(164, 'S19', 'SIU/ACK - Notification of modification of service/resource on appointment');
    oTable.Items.Add(165, 'S20', 'SIU/ACK - Notification of cancellation of service/resource on appointment');
    oTable.Items.Add(166, 'S21', 'SIU/ACK - Notification of discontinuation of service/resource on appointment');
    oTable.Items.Add(167, 'S22', 'SIU/ACK - Notification of deletion of service/resource on appointment');
    oTable.Items.Add(168, 'S23', 'SIU/ACK - Notification of blocked schedule time slot(s)');
    oTable.Items.Add(169, 'S24', 'SIU/ACK - Notification of opened ('#147'unblocked'#148') schedule time slot(s)');
    oTable.Items.Add(170, 'S25', 'SQM/SQR - Schedule query message and response');
    oTable.Items.Add(171, 'S26', 'SIU/ACK Notification that patient did not show up for schedule appointment');
    oTable.Items.Add(172, 'T01', 'MDM/ACK - Original document notification');
    oTable.Items.Add(173, 'T02', 'MDM/ACK - Original document notification and content');
    oTable.Items.Add(174, 'T03', 'MDM/ACK - Document status change notification');
    oTable.Items.Add(175, 'T04', 'MDM/ACK - Document status change notification and content');
    oTable.Items.Add(176, 'T05', 'MDM/ACK - Document addendum notification');
    oTable.Items.Add(177, 'T06', 'MDM/ACK - Document addendum notification and content');
    oTable.Items.Add(178, 'T07', 'MDM/ACK - Document edit notification');
    oTable.Items.Add(179, 'T08', 'MDM/ACK - Document edit notification and content');
    oTable.Items.Add(180, 'T09', 'MDM/ACK - Document replacement notification');
    oTable.Items.Add(181, 'T10', 'MDM/ACK - Document replacement notification and content');
    oTable.Items.Add(182, 'T11', 'MDM/ACK - Document cancel notification');
    oTable.Items.Add(183, 'T12', 'QRY/DOC - Document query');
    oTable.Items.Add(184, 'V01', 'VXQ - Query for vaccination record');
    oTable.Items.Add(185, 'V02', 'VXX - Response to vaccination query returning multiple PID matches');
    oTable.Items.Add(186, 'V03', 'VXR - Vaccination record response');
    oTable.Items.Add(187, 'V04', 'VXU - Unsolicited vaccination record update');
    oTable.Items.Add(83, 'varies', 'MFQ/MFR - Master files query (use event same as asking for e.g., M05 - location)');
    oTable.Items.Add(188, 'W01', 'ORU - Waveform result, unsolicited transmission of requested information');
    oTable.Items.Add(189, 'W02', 'QRF - Waveform result, response to query');
End;

procedure LoadTable4(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(4, 'Patient class');
    oTable.Items.Add(6, 'B', 'Obstetrics');
    oTable.Items.Add(1, 'E', 'Emergency');
    oTable.Items.Add(2, 'I', 'Inpatient');
    oTable.Items.Add(3, 'O', 'Outpatient');
    oTable.Items.Add(4, 'P', 'Preadmit');
    oTable.Items.Add(5, 'R', 'Recurring patient');
End;

procedure LoadTable5(oTables : THL7V2ModelTables);
Begin
  oTables.Add(5, 'Race');
End;

procedure LoadTable6(oTables : THL7V2ModelTables);
Begin
  oTables.Add(6, 'Religion');
End;

procedure LoadTable7(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(7, 'Admission type');
    oTable.Items.Add(1, 'A', 'Accident');
    oTable.Items.Add(2, 'E', 'Emergency');
    oTable.Items.Add(3, 'L', 'Labor and Delivery');
    oTable.Items.Add(4, 'R', 'Routine');
End;

procedure LoadTable8(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(8, 'Acknowledgment code');
    oTable.Items.Add(1, 'AA', 'Original mode: Application Accept - Enhanced mode: Application acknowledgment: Accept');
    oTable.Items.Add(2, 'AE', 'Original mode: Application Error - Enhanced mode: Application acknowledgment: Error');
    oTable.Items.Add(3, 'AR', 'Original mode: Application Reject - Enhanced mode: Application acknowledgment: Reject');
    oTable.Items.Add(4, 'CA', 'Enhanced mode: Accept acknowledgment: Commit Accept');
    oTable.Items.Add(5, 'CE', 'Enhanced mode: Accept acknowledgment: Commit Error');
    oTable.Items.Add(6, 'CR', 'Enhanced mode: Accept acknowledgment: Commit Reject');
End;

procedure LoadTable9(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(9, 'Ambulatory status');
    oTable.Items.Add(1, 'A0', 'No functional limitations');
    oTable.Items.Add(2, 'A1', 'Ambulates with assistive device');
    oTable.Items.Add(3, 'A2', 'Wheelchair/stretcher bound');
    oTable.Items.Add(4, 'A3', 'Comatose; non-responsive');
    oTable.Items.Add(5, 'A4', 'Disoriented');
    oTable.Items.Add(6, 'A5', 'Vision impaired');
    oTable.Items.Add(7, 'A6', 'Hearing impaired');
    oTable.Items.Add(8, 'A7', 'Speech impaired');
    oTable.Items.Add(9, 'A8', 'Non-English speaking');
    oTable.Items.Add(10, 'A9', 'Functional level unknown');
    oTable.Items.Add(11, 'B1', 'Oxygen therapy');
    oTable.Items.Add(12, 'B2', 'Special equipment (tubes, IVs, catheters)');
    oTable.Items.Add(13, 'B3', 'Amputee');
    oTable.Items.Add(14, 'B4', 'Mastectomy');
    oTable.Items.Add(15, 'B5', 'Paraplegic');
    oTable.Items.Add(16, 'B6', 'Pregnant');
End;

procedure LoadTable10(oTables : THL7V2ModelTables);
Begin
  oTables.Add(10, 'Physician ID');
End;

procedure LoadTable17(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(17, 'Transaction Type');
    oTable.Items.Add(4, 'AJ', 'Adjustment');
    oTable.Items.Add(2, 'CD', 'Credit');
    oTable.Items.Add(1, 'CG', 'Charge');
    oTable.Items.Add(3, 'PY', 'Payment');
End;

procedure LoadTable18(oTables : THL7V2ModelTables);
Begin
  oTables.Add(18, 'Patient Type');
End;

procedure LoadTable19(oTables : THL7V2ModelTables);
Begin
  oTables.Add(19, 'Anesthesia Code');
End;

procedure LoadTable21(oTables : THL7V2ModelTables);
Begin
  oTables.Add(21, 'Bad Debt Agency Code');
End;

procedure LoadTable22(oTables : THL7V2ModelTables);
Begin
  oTables.Add(22, 'Billing Status');
End;

procedure LoadTable23(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(23, 'Admit source');
    oTable.Items.Add(1, '1', 'Physician referral');
    oTable.Items.Add(2, '2', 'Clinic referral');
    oTable.Items.Add(3, '3', 'HMO referral');
    oTable.Items.Add(4, '4', 'Transfer from a hospital');
    oTable.Items.Add(5, '5', 'Transfer from a skilled nursing facility');
    oTable.Items.Add(6, '6', 'Transfer from another health care facility');
    oTable.Items.Add(7, '7', 'Emergency room');
    oTable.Items.Add(8, '8', 'Court/law enforcement');
    oTable.Items.Add(9, '9', 'Information not available');
End;

procedure LoadTable24(oTables : THL7V2ModelTables);
Begin
  oTables.Add(24, 'Fee Schedule');
End;

procedure LoadTable27(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(27, 'Priority');
    oTable.Items.Add(2, 'A', 'As soon as possible (a priority lower than stat)');
    oTable.Items.Add(4, 'P', 'Preoperative (to be done prior to surgery)');
    oTable.Items.Add(3, 'R', 'Routine');
    oTable.Items.Add(1, 'S', 'Stat (do immediately)');
    oTable.Items.Add(5, 'T', 'Timing critical (do as near as possible to requested time)');
End;

procedure LoadTable32(oTables : THL7V2ModelTables);
Begin
  oTables.Add(32, 'Charge/Price Indicator');
End;

procedure LoadTable38(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(38, 'Order status');
    oTable.Items.Add(1, 'A', 'Some, but not all, results available');
    oTable.Items.Add(2, 'CA', 'Order was canceled');
    oTable.Items.Add(3, 'CM', 'Order is completed');
    oTable.Items.Add(4, 'DC', 'Order was discontinued');
    oTable.Items.Add(5, 'ER', 'Error, order not found');
    oTable.Items.Add(6, 'HD', 'Order is on hold');
    oTable.Items.Add(7, 'IP', 'In process, unspecified');
    oTable.Items.Add(8, 'RP', 'Order has been replaced');
    oTable.Items.Add(9, 'SC', 'In process, scheduled');
End;

procedure LoadTable42(oTables : THL7V2ModelTables);
Begin
  oTables.Add(42, 'Company Plan Code');
End;

procedure LoadTable43(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(43, 'Condition code');
    oTable.Items.Add(1, '01', 'Military service related');
    oTable.Items.Add(2, '02', 'Condition is employment related');
    oTable.Items.Add(3, '03', 'Patient covered by insurance not reflected here');
    oTable.Items.Add(4, '04', 'HMO enrollee');
    oTable.Items.Add(5, '05', 'Lien has been filed');
    oTable.Items.Add(6, '06', 'ESRD patient in first 18 months of entitlement covered by employer group health insurance');
    oTable.Items.Add(7, '07', 'Treatment of non-terminal condition for hospice patient');
    oTable.Items.Add(8, '08', 'Beneficiary would not provide information concerning other insurance coverage');
    oTable.Items.Add(9, '09', 'Neither patient nor spouse is employed');
    oTable.Items.Add(10, '10', 'Patient and/or spouse is employed but no EGHP exists');
    oTable.Items.Add(11, '11', 'Disabled beneficiary but no LGHP');
    oTable.Items.Add(12, '12 ... 16', 'Payer codes.');
    oTable.Items.Add(13, '18', 'Maiden name retained');
    oTable.Items.Add(14, '19', 'Child retains mother'#146's name');
    oTable.Items.Add(15, '20', 'Beneficiary requested billing');
    oTable.Items.Add(16, '21', 'Billing for Denial Notice');
    oTable.Items.Add(17, '26', 'VA eligible patient chooses to receive services in a medicare certified facility');
    oTable.Items.Add(18, '27', 'Patient referred to a sole community hospital for a diagnostic laboratory test');
    oTable.Items.Add(19, '28', 'Patient and/or spouse'#146's EGHP is secondary to Medicare');
    oTable.Items.Add(20, '29', 'Disabled beneficiary and/or family member'#146's LGHP is secondary to Medicare');
    oTable.Items.Add(21, '31', 'Patient is student (full time-day)');
    oTable.Items.Add(22, '32', 'Patient is student (cooperative/work study program)');
    oTable.Items.Add(23, '33', 'Patient is student (full time-night)');
    oTable.Items.Add(24, '34', 'Patient is student (Part time)');
    oTable.Items.Add(25, '36', 'General care patient in a special unit');
    oTable.Items.Add(26, '37', 'Ward accommodation as patient request');
    oTable.Items.Add(27, '38', 'Semi-private room not available');
    oTable.Items.Add(28, '39', 'Private room medically necessary');
    oTable.Items.Add(29, '40', 'Same day transfer');
    oTable.Items.Add(30, '41', 'Partial hospitalization');
    oTable.Items.Add(31, '46', 'Non-availability statement on file');
    oTable.Items.Add(32, '48', 'Psychiatric residential treatment centers for children and adolescents');
    oTable.Items.Add(33, '55', 'SNF bed not available');
    oTable.Items.Add(34, '56', 'Medical appropriateness');
    oTable.Items.Add(35, '57', 'SNF readmission');
    oTable.Items.Add(36, '60', 'Day outlier');
    oTable.Items.Add(37, '61', 'Cost outlier');
    oTable.Items.Add(38, '62', 'Payer code');
    oTable.Items.Add(39, '66', 'Provider does not wish cost outlier payment');
    oTable.Items.Add(40, '67', 'Beneficiary elects not to use life time reserve (LTR) days');
    oTable.Items.Add(41, '68', 'Beneficiary elects to use life time reserve (LTR) days');
    oTable.Items.Add(42, '70', 'Self-administered EPO');
    oTable.Items.Add(43, '71', 'Full care in unit');
    oTable.Items.Add(44, '72', 'Self-care in unit');
    oTable.Items.Add(45, '73', 'Self-care training');
    oTable.Items.Add(46, '74', 'Home');
    oTable.Items.Add(47, '75', 'Home - 100% reimbursement');
    oTable.Items.Add(48, '76', 'Back-up in facility dialysis');
    oTable.Items.Add(49, '77', 'Provider accepts or is obligated/required due to a contractual arrangement or law to accept payment by a primary payer as payment in full');
    oTable.Items.Add(50, '78', 'New coverage not implemented by HMO');
    oTable.Items.Add(51, '79', 'Corf services provided off-site');
    oTable.Items.Add(52, '80', 'Pregnant');
End;

procedure LoadTable44(oTables : THL7V2ModelTables);
Begin
  oTables.Add(44, 'Contract Code');
End;

procedure LoadTable45(oTables : THL7V2ModelTables);
Begin
  oTables.Add(45, 'Courtesy Code');
End;

procedure LoadTable46(oTables : THL7V2ModelTables);
Begin
  oTables.Add(46, 'Credit Rating');
End;

procedure LoadTable48(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(48, 'What subject filter');
    oTable.Items.Add(1, 'ADV', 'Advice/diagnosis');
    oTable.Items.Add(2, 'ANU', 'Nursing unit lookup (returns patients in beds, excluding empty beds)');
    oTable.Items.Add(7, 'APA', 'Account number query, return matching visit');
    oTable.Items.Add(6, 'APM', 'Medical record number query, returns visits for a medical record number');
    oTable.Items.Add(3, 'APN', 'Patient name lookup');
    oTable.Items.Add(4, 'APP', 'Physician lookup');
    oTable.Items.Add(5, 'ARN', 'Nursing unit lookup (returns patients in beds, including empty beds)');
    oTable.Items.Add(8, 'CAN', 'Cancel.  Used to cancel a query');
    oTable.Items.Add(9, 'DEM', 'Demographics');
    oTable.Items.Add(10, 'FIN', 'Financial');
    oTable.Items.Add(11, 'GOL', 'Goals');
    oTable.Items.Add(12, 'MRI', 'Most recent inpatient');
    oTable.Items.Add(13, 'MRO', 'Most recent outpatient');
    oTable.Items.Add(14, 'NCK', 'Network clock');
    oTable.Items.Add(15, 'NSC', 'Network status change');
    oTable.Items.Add(16, 'NST', 'Network statistic');
    oTable.Items.Add(17, 'ORD', 'Order');
    oTable.Items.Add(18, 'OTH', 'Other');
    oTable.Items.Add(19, 'PRB', 'Problems');
    oTable.Items.Add(20, 'PRO', 'Procedure');
    oTable.Items.Add(22, 'RAR', 'Pharmacy administration information');
    oTable.Items.Add(24, 'RDR', 'Pharmacy dispense information');
    oTable.Items.Add(23, 'RER', 'Pharmacy encoded order information');
    oTable.Items.Add(21, 'RES', 'Result');
    oTable.Items.Add(25, 'RGR', 'Pharmacy give information');
    oTable.Items.Add(26, 'ROR', 'Pharmacy prescription information');
    oTable.Items.Add(27, 'SAL', 'All schedule related information, including open slots, booked slots, blocked slots');
    oTable.Items.Add(28, 'SBK', 'Booked slots on the identified schedule');
    oTable.Items.Add(29, 'SBL', 'Blocked slots on the identified schedule');
    oTable.Items.Add(30, 'SOP', 'Open slots on the identified schedule');
    oTable.Items.Add(31, 'SSA', 'Time slots available for a single appointment');
    oTable.Items.Add(32, 'SSR', 'Time slots available for a recurring appointment');
    oTable.Items.Add(33, 'STA', 'Status');
    oTable.Items.Add(34, 'VXI', 'Vaccine Information');
End;

procedure LoadTable49(oTables : THL7V2ModelTables);
Begin
  oTables.Add(49, 'Department Code');
End;

procedure LoadTable50(oTables : THL7V2ModelTables);
Begin
  oTables.Add(50, 'Accident Code');
End;

procedure LoadTable51(oTables : THL7V2ModelTables);
Begin
  oTables.Add(51, 'Diagnosis Code');
End;

procedure LoadTable52(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(52, 'Diagnosis Type');
    oTable.Items.Add(1, 'A', 'Admitting');
    oTable.Items.Add(3, 'F', 'Final');
    oTable.Items.Add(2, 'W', 'Working');
End;

procedure LoadTable53(oTables : THL7V2ModelTables);
Begin
  oTables.Add(53, 'Diagnosis Coding Methed');
End;

procedure LoadTable55(oTables : THL7V2ModelTables);
Begin
  oTables.Add(55, 'Diagnostic Related Group');
End;

procedure LoadTable56(oTables : THL7V2ModelTables);
Begin
  oTables.Add(56, 'DRG Grouper Review Code');
End;

procedure LoadTable59(oTables : THL7V2ModelTables);
Begin
  oTables.Add(59, 'Consent Code');
End;

procedure LoadTable61(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(61, 'Check digit scheme');
    oTable.Items.Add(3, 'ISO', 'ISO 7064: 1983');
    oTable.Items.Add(1, 'M10', 'Mod 10 algorithm');
    oTable.Items.Add(2, 'M11', 'Mod 11 algorithm');
    oTable.Items.Add(4, 'NPI', 'Check digit algorithm in the US National Provider Identifier');
End;

procedure LoadTable62(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(62, 'Event reason');
    oTable.Items.Add(1, '01', 'Patient request');
    oTable.Items.Add(2, '02', 'Physician order');
    oTable.Items.Add(3, '03', 'Census management');
End;

procedure LoadTable63(oTables : THL7V2ModelTables);
Begin
  oTables.Add(63, 'Relationship');
End;

procedure LoadTable64(oTables : THL7V2ModelTables);
Begin
  oTables.Add(64, 'Financial Class');
End;

procedure LoadTable65(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(65, 'Specimen action code');
    oTable.Items.Add(1, 'A', 'Add ordered tests to the existing specimen');
    oTable.Items.Add(2, 'G', 'Generated order; reflex order');
    oTable.Items.Add(3, 'L', 'Lab to obtain specimen from patient');
    oTable.Items.Add(4, 'O', 'Specimen obtained by service other than Lab');
    oTable.Items.Add(5, 'P', 'Pending specimen; Order sent prior to delivery');
    oTable.Items.Add(6, 'R', 'Revised order');
    oTable.Items.Add(7, 'S', 'Schedule the tests specified below');
End;

procedure LoadTable66(oTables : THL7V2ModelTables);
Begin
  oTables.Add(66, 'Employment Status');
End;

procedure LoadTable68(oTables : THL7V2ModelTables);
Begin
  oTables.Add(68, 'Guarantor Type');
End;

procedure LoadTable69(oTables : THL7V2ModelTables);
Begin
  oTables.Add(69, 'Hospital Service');
End;

procedure LoadTable70(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(70, 'Specimen source codes');
    oTable.Items.Add(1, 'ABS', 'Abscess');
    oTable.Items.Add(2, 'AMN', 'Amniotic fluid');
    oTable.Items.Add(3, 'ASP', 'Aspirate');
    oTable.Items.Add(7, 'BBL', 'Blood bag');
    oTable.Items.Add(117, 'BDY', 'Whole body');
    oTable.Items.Add(5, 'BIFL', 'Bile fluid');
    oTable.Items.Add(116, 'BLD', 'Whole blood');
    oTable.Items.Add(6, 'BLDA', 'Blood  arterial');
    oTable.Items.Add(8, 'BLDC', 'Blood  capillary');
    oTable.Items.Add(10, 'BLDV', 'Blood  venous');
    oTable.Items.Add(11, 'BON', 'Bone');
    oTable.Items.Add(4, 'BPH', 'Basophils');
    oTable.Items.Add(9, 'BPU', 'Blood product unit');
    oTable.Items.Add(14, 'BRN', 'Burn');
    oTable.Items.Add(13, 'BRO', 'Bronchial');
    oTable.Items.Add(12, 'BRTH', 'Breath (use EXHLD)');
    oTable.Items.Add(15, 'CALC', 'Calculus (=Stone)');
    oTable.Items.Add(23, 'CBLD', 'Cord blood');
    oTable.Items.Add(16, 'CDM', 'Cardiac muscle');
    oTable.Items.Add(24, 'CNJT', 'Conjunctiva');
    oTable.Items.Add(17, 'CNL', 'Cannula');
    oTable.Items.Add(22, 'COL', 'Colostrum');
    oTable.Items.Add(19, 'CSF', 'Cerebral spinal fluid');
    oTable.Items.Add(18, 'CTP', 'Catheter tip');
    oTable.Items.Add(25, 'CUR', 'Curettage');
    oTable.Items.Add(20, 'CVM', 'Cervical mucus');
    oTable.Items.Add(21, 'CVX', 'Cervix');
    oTable.Items.Add(26, 'CYST', 'Cyst');
    oTable.Items.Add(27, 'DIAF', 'Dialysis fluid');
    oTable.Items.Add(28, 'DOSE', 'Dose med or substance');
    oTable.Items.Add(29, 'DRN', 'Drain');
    oTable.Items.Add(30, 'DUFL', 'Duodenal fluid');
    oTable.Items.Add(31, 'EAR', 'Ear');
    oTable.Items.Add(32, 'EARW', 'Ear wax (cerumen)');
    oTable.Items.Add(33, 'ELT', 'Electrode');
    oTable.Items.Add(34, 'ENDC', 'Endocardium');
    oTable.Items.Add(35, 'ENDM', 'Endometrium');
    oTable.Items.Add(36, 'EOS', 'Eosinophils');
    oTable.Items.Add(39, 'EXHLD', 'Exhaled gas (=breath)');
    oTable.Items.Add(38, 'EYE', 'Eye');
    oTable.Items.Add(40, 'FIB', 'Fibroblasts');
    oTable.Items.Add(42, 'FIST', 'Fistula');
    oTable.Items.Add(41, 'FLT', 'Filter');
    oTable.Items.Add(43, 'FLU', 'Body fluid, unsp');
    oTable.Items.Add(44, 'GAS', 'Gas');
    oTable.Items.Add(45, 'GAST', 'Gastric fluid/contents');
    oTable.Items.Add(46, 'GEN', 'Genital');
    oTable.Items.Add(47, 'GENC', 'Genital cervix');
    oTable.Items.Add(48, 'GENL', 'Genital lochia');
    oTable.Items.Add(49, 'GENV', 'Genital vaginal');
    oTable.Items.Add(50, 'HAR', 'Hair');
    oTable.Items.Add(51, 'IHG', 'Inhaled Gas');
    oTable.Items.Add(53, 'ISLT', 'Isolate');
    oTable.Items.Add(52, 'IT', 'Intubation tube');
    oTable.Items.Add(54, 'LAM', 'Lamella');
    oTable.Items.Add(59, 'LIQ', 'Liquid NOS');
    oTable.Items.Add(56, 'LN', 'Line');
    oTable.Items.Add(57, 'LNA', 'Line arterial');
    oTable.Items.Add(58, 'LNV', 'Line venous');
    oTable.Items.Add(60, 'LYM', 'Lymphocytes');
    oTable.Items.Add(61, 'MAC', 'Macrophages');
    oTable.Items.Add(62, 'MAR', 'Marrow');
    oTable.Items.Add(64, 'MBLD', 'Menstrual blood');
    oTable.Items.Add(63, 'MEC', 'Meconium');
    oTable.Items.Add(66, 'MILK', 'Breast milk');
    oTable.Items.Add(65, 'MLK', 'Milk');
    oTable.Items.Add(67, 'NAIL', 'Nail');
    oTable.Items.Add(68, 'NOS', 'Nose (nasal passage)');
    oTable.Items.Add(69, 'ORH', 'Other');
    oTable.Items.Add(70, 'PAFL', 'Pancreatic fluid');
    oTable.Items.Add(71, 'PAT', 'Patient');
    oTable.Items.Add(74, 'PLAS', 'Plasma');
    oTable.Items.Add(75, 'PLB', 'Plasma bag');
    oTable.Items.Add(73, 'PLC', 'Placenta');
    oTable.Items.Add(76, 'PLR', 'Pleural fluid (thoracentesis fld)');
    oTable.Items.Add(77, 'PMN', 'Polymorphonuclear neutrophils');
    oTable.Items.Add(78, 'PPP', 'Patelet poor plasma');
    oTable.Items.Add(79, 'PRP', 'Platelet rich plasma');
    oTable.Items.Add(72, 'PRT', 'Peritoneal fluid /ascites');
    oTable.Items.Add(80, 'PUS', 'Pus');
    oTable.Items.Add(37, 'RBC', 'Erythrocytes');
    oTable.Items.Add(81, 'RT', 'Route of medicine');
    oTable.Items.Add(82, 'SAL', 'Saliva');
    oTable.Items.Add(83, 'SEM', 'Seminal fluid');
    oTable.Items.Add(84, 'SER', 'Serum');
    oTable.Items.Add(86, 'SKM', 'Skeletal muscle');
    oTable.Items.Add(85, 'SKN', 'Skin');
    oTable.Items.Add(94, 'SNV', 'Synovial fluid (Joint fluid)');
    oTable.Items.Add(87, 'SPRM', 'Spermatozoa');
    oTable.Items.Add(88, 'SPT', 'Sputum');
    oTable.Items.Add(89, 'SPTC', 'Sputum - coughed');
    oTable.Items.Add(90, 'SPTT', 'Sputum - tracheal aspirate');
    oTable.Items.Add(92, 'STL', 'Stool = Fecal');
    oTable.Items.Add(91, 'STON', 'Stone (use CALC)');
    oTable.Items.Add(93, 'SWT', 'Sweat');
    oTable.Items.Add(95, 'TEAR', 'Tears');
    oTable.Items.Add(97, 'THRB', 'Thrombocyte (platelet)');
    oTable.Items.Add(96, 'THRT', 'Throat');
    oTable.Items.Add(99, 'TISG', 'Tissue gall bladder');
    oTable.Items.Add(102, 'TISPL', 'Tissue placenta');
    oTable.Items.Add(98, 'TISS', 'Tissue');
    oTable.Items.Add(104, 'TISU', 'Tissue ulcer');
    oTable.Items.Add(100, 'TLGI', 'Tissue large intestine');
    oTable.Items.Add(101, 'TLNG', 'Tissue lung');
    oTable.Items.Add(103, 'TSMI', 'Tissue small intestine');
    oTable.Items.Add(105, 'TUB', 'Tube NOS');
    oTable.Items.Add(106, 'ULC', 'Ulcer');
    oTable.Items.Add(107, 'UMB', 'Umbilical blood');
    oTable.Items.Add(108, 'UMED', 'Unknown medicine');
    oTable.Items.Add(110, 'UR', 'Urine');
    oTable.Items.Add(111, 'URC', 'Urine clean catch');
    oTable.Items.Add(113, 'URNS', 'Urine sediment');
    oTable.Items.Add(112, 'URT', 'Urine catheter');
    oTable.Items.Add(109, 'URTH', 'Urethra');
    oTable.Items.Add(114, 'USUB', 'Unknown substance');
    oTable.Items.Add(115, 'VOM', 'Vomitus');
    oTable.Items.Add(118, 'WAT', 'Water');
    oTable.Items.Add(55, 'WBC', 'Leukocytes');
    oTable.Items.Add(119, 'WICK', 'Wick');
    oTable.Items.Add(120, 'WND', 'Wound');
    oTable.Items.Add(121, 'WNDA', 'Wound abscess');
    oTable.Items.Add(123, 'WNDD', 'Wound drainage');
    oTable.Items.Add(122, 'WNDE', 'Wound exudate');
    oTable.Items.Add(124, 'XXX', 'To be specified in another part of the 422.3.10070message');
End;

procedure LoadTable72(oTables : THL7V2ModelTables);
Begin
  oTables.Add(72, 'Insurance Plan ID');
End;

procedure LoadTable73(oTables : THL7V2ModelTables);
Begin
  oTables.Add(73, 'Interest Rate Code');
End;

procedure LoadTable74(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(74, 'Diagnostic service section ID');
    oTable.Items.Add(1, 'AU', 'Audiology');
    oTable.Items.Add(2, 'BG', 'Blood Gases');
    oTable.Items.Add(3, 'BLB', 'Blood Bank');
    oTable.Items.Add(7, 'CH', 'Chemistry');
    oTable.Items.Add(8, 'CP', 'Cytopathology');
    oTable.Items.Add(6, 'CT', 'CAT Scan');
    oTable.Items.Add(5, 'CTH', 'Cardiac Catheterization');
    oTable.Items.Add(4, 'CUS', 'Cardiac Ultrasound');
    oTable.Items.Add(9, 'EC', 'Electrocardiac (e.g., EKG,  EEC, Holter)');
    oTable.Items.Add(10, 'EN', 'Electroneuro (EEG, EMG,EP,PSG)');
    oTable.Items.Add(11, 'HM', 'Hematology');
    oTable.Items.Add(12, 'ICU', 'Bedside ICU Monitoring');
    oTable.Items.Add(13, 'IMM', 'Immunology');
    oTable.Items.Add(14, 'LAB', 'Laboratory');
    oTable.Items.Add(15, 'MB', 'Microbiology');
    oTable.Items.Add(16, 'MCB', 'Mycobacteriology');
    oTable.Items.Add(17, 'MYC', 'Mycology');
    oTable.Items.Add(19, 'NMR', 'Nuclear Magnetic Resonance');
    oTable.Items.Add(18, 'NMS', 'Nuclear Medicine Scan');
    oTable.Items.Add(20, 'NRS', 'Nursing Service Measures');
    oTable.Items.Add(24, 'OSL', 'Outside Lab');
    oTable.Items.Add(22, 'OT', 'Occupational Therapy');
    oTable.Items.Add(23, 'OTH', 'Other');
    oTable.Items.Add(21, 'OUS', 'OB Ultrasound');
    oTable.Items.Add(28, 'PF', 'Pulmonary Function');
    oTable.Items.Add(25, 'PHR', 'Pharmacy');
    oTable.Items.Add(27, 'PHY', 'Physician (Hx. Dx, admission note, etc.l)');
    oTable.Items.Add(26, 'PT', 'Physical Therapy');
    oTable.Items.Add(29, 'RAD', 'Radiology');
    oTable.Items.Add(32, 'RC', 'Respiratory Care (therapy)');
    oTable.Items.Add(33, 'RT', 'Radiation Therapy');
    oTable.Items.Add(31, 'RUS', 'Radiology Ultrasound');
    oTable.Items.Add(30, 'RX', 'Radiograph');
    oTable.Items.Add(35, 'SP', 'Surgical Pathology');
    oTable.Items.Add(34, 'SR', 'Serology');
    oTable.Items.Add(36, 'TX', 'Toxicology');
    oTable.Items.Add(38, 'VR', 'Virology');
    oTable.Items.Add(37, 'VUS', 'Vascular Ultrasound');
    oTable.Items.Add(39, 'XRC', 'Cineradiograph');
End;

procedure LoadTable76(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(76, 'Message type');
    oTable.Items.Add(1, 'ACK', 'General acknowledgment message');
    oTable.Items.Add(2, 'ADR', 'ADT response');
    oTable.Items.Add(4, 'ADT', 'ADT message');
    oTable.Items.Add(3, 'ARD', 'Ancillary RPT (display) (for backward compatibility only)');
    oTable.Items.Add(5, 'BAR', 'Add/change billing account');
    oTable.Items.Add(6, 'CRM', 'Clinical study registration');
    oTable.Items.Add(7, 'CSU', 'Unsolicited clinical study data');
    oTable.Items.Add(8, 'DFT', 'Detail financial transaction');
    oTable.Items.Add(9, 'DOC', 'Document query');
    oTable.Items.Add(10, 'DSR', 'Display response');
    oTable.Items.Add(11, 'EDR', 'Enhanced display response');
    oTable.Items.Add(12, 'EQQ', 'Embedded query language query');
    oTable.Items.Add(13, 'ERP', 'Event replay response');
    oTable.Items.Add(14, 'MCF', 'Delayed acknowledgment');
    oTable.Items.Add(15, 'MDM', 'Documentation message');
    oTable.Items.Add(18, 'MFD', 'Master files delayed application acknowledgment');
    oTable.Items.Add(17, 'MFK', 'Master files application acknowledgment');
    oTable.Items.Add(16, 'MFN', 'Master files notification');
    oTable.Items.Add(19, 'MFQ', 'Master files query');
    oTable.Items.Add(20, 'MFR', 'Master files query response');
    oTable.Items.Add(21, 'NMD', 'Network management data');
    oTable.Items.Add(22, 'NMQ', 'Network management query');
    oTable.Items.Add(23, 'NMR', 'Network management response');
    oTable.Items.Add(24, 'ORF', 'Observ. result/record response');
    oTable.Items.Add(25, 'ORM', 'Order message');
    oTable.Items.Add(26, 'ORR', 'Order acknowledgment message');
    oTable.Items.Add(27, 'ORU', 'Observ result/unsolicited');
    oTable.Items.Add(28, 'OSQ', 'Order status query');
    oTable.Items.Add(29, 'OSR', 'Order status response');
    oTable.Items.Add(30, 'PEX', 'Product experience');
    oTable.Items.Add(31, 'PGL', 'Patient goal');
    oTable.Items.Add(32, 'PIN', 'Patient insurance information');
    oTable.Items.Add(33, 'PPG', 'Patient pathway (goal-oriented) message');
    oTable.Items.Add(34, 'PPP', 'Patient pathway (problem-oriented) message');
    oTable.Items.Add(35, 'PPR', 'Patient problem');
    oTable.Items.Add(36, 'PPT', 'Patient pathway (goal oriented) response');
    oTable.Items.Add(37, 'PPV', 'Patient goal response');
    oTable.Items.Add(38, 'PRR', 'Patient problem response');
    oTable.Items.Add(39, 'PTR', 'Patient pathway (problem-oriented) response');
    oTable.Items.Add(40, 'QCK', 'Query general acknowledgment');
    oTable.Items.Add(41, 'QRY', 'Query, original mode');
    oTable.Items.Add(42, 'RAR', 'Pharmacy administration information');
    oTable.Items.Add(43, 'RAS', 'Pharmacy administration message');
    oTable.Items.Add(44, 'RCI', 'Return clinical information');
    oTable.Items.Add(45, 'RCL', 'Return clinical list');
    oTable.Items.Add(46, 'RDE', 'Pharmacy encoded order message');
    oTable.Items.Add(47, 'RDR', 'Pharmacy dispense information');
    oTable.Items.Add(48, 'RDS', 'Pharmacy dispense message');
    oTable.Items.Add(49, 'REF', 'Patient referral');
    oTable.Items.Add(50, 'RER', 'Pharmacy encoded order information');
    oTable.Items.Add(52, 'RGR', 'Pharmacy dose information');
    oTable.Items.Add(51, 'RGV', 'Pharmacy give message');
    oTable.Items.Add(53, 'ROR', 'Pharmacy prescription order response');
    oTable.Items.Add(54, 'RPA', 'Return patient authorization');
    oTable.Items.Add(55, 'RPI', 'Return patient information');
    oTable.Items.Add(56, 'RPL', 'Return patient display list');
    oTable.Items.Add(57, 'RPR', 'Return patient list');
    oTable.Items.Add(58, 'RQA', 'Request patient authorization');
    oTable.Items.Add(59, 'RQC', 'Request clinical information');
    oTable.Items.Add(60, 'RQI', 'Request patient information');
    oTable.Items.Add(61, 'RQP', 'Request patient demographics');
    oTable.Items.Add(62, 'RQQ', 'Event replay query');
    oTable.Items.Add(63, 'RRA', 'Pharmacy administration acknowledgment');
    oTable.Items.Add(64, 'RRD', 'Pharmacy dispense acknowledgment');
    oTable.Items.Add(65, 'RRE', 'Pharmacy encoded order acknowledgment');
    oTable.Items.Add(66, 'RRG', 'Pharmacy give acknowledgment');
    oTable.Items.Add(67, 'RRI', 'Return patient referral');
    oTable.Items.Add(68, 'SIU', 'Schedule information unsolicited');
    oTable.Items.Add(69, 'SPQ', 'Stored procedure request');
    oTable.Items.Add(70, 'SQM', 'Schedule query');
    oTable.Items.Add(71, 'SQR', 'Schedule query response');
    oTable.Items.Add(72, 'SRM', 'Schedule request');
    oTable.Items.Add(73, 'SRR', 'Scheduled request response');
    oTable.Items.Add(74, 'SUR', 'Summary product experience report');
    oTable.Items.Add(75, 'TBR', 'Tabular data response');
    oTable.Items.Add(76, 'UDM', 'Unsolicited display message');
    oTable.Items.Add(77, 'VQQ', 'Virtual table query');
    oTable.Items.Add(78, 'VXQ', 'Query for vaccination record');
    oTable.Items.Add(80, 'VXR', 'Vaccination query record response');
    oTable.Items.Add(81, 'VXU', 'Unsolicited vaccination record update');
    oTable.Items.Add(79, 'VXX', 'Vaccination query response with multiple PID matches');
End;

procedure LoadTable78(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(78, 'Abnormal flags');
    oTable.Items.Add(5, '<', 'Below absolute low-off instrument scale');
    oTable.Items.Add(6, '>', 'Above absolute high-off instrument scale');
    oTable.Items.Add(8, 'A', 'Abnormal (applies to non-numeric results)');
    oTable.Items.Add(9, 'AA', 'Very abnormal (applies to non-numeric units, analogous to panic limits for numeric units)');
    oTable.Items.Add(13, 'B', 'Better--use when direction not relevant');
    oTable.Items.Add(12, 'D', 'Significant change down');
    oTable.Items.Add(2, 'H', 'Above high normal');
    oTable.Items.Add(4, 'HH', 'Above upper panic limits');
    oTable.Items.Add(18, 'I', 'Intermediate*');
    oTable.Items.Add(1, 'L', 'Below low normal');
    oTable.Items.Add(3, 'LL', 'Below lower panic limits');
    oTable.Items.Add(19, 'MS', 'Moderately susceptible*');
    oTable.Items.Add(7, 'N', 'Normal (applies to non-numeric results)');
    oTable.Items.Add(10, 'null', 'No range defined, or normal ranges don''t apply');
    oTable.Items.Add(17, 'R', 'Resistant*');
    oTable.Items.Add(16, 'S', 'Susceptible*');
    oTable.Items.Add(11, 'U', 'Significant change up');
    oTable.Items.Add(20, 'VS', 'Very susceptible*');
    oTable.Items.Add(14, 'W', 'Worse--use when direction not relevant');
End;

procedure LoadTable80(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(80, 'Nature of abnormal testing');
    oTable.Items.Add(1, 'A', 'An age-based population');
    oTable.Items.Add(2, 'N', 'None - generic normal range');
    oTable.Items.Add(3, 'R', 'A race-based population');
    oTable.Items.Add(4, 'S', 'A sex-based population');
End;

procedure LoadTable83(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(83, 'Outlier Type');
    oTable.Items.Add(2, 'C', 'Outlier cost');
    oTable.Items.Add(1, 'D', 'Outlier days');
End;

procedure LoadTable84(oTables : THL7V2ModelTables);
Begin
  oTables.Add(84, 'Performed By Code');
End;

procedure LoadTable85(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(85, 'Observation result status codes interpretation');
    oTable.Items.Add(1, 'C', 'Record coming over is a correction and thus replaces a final result');
    oTable.Items.Add(2, 'D', 'Deletes the OBX record');
    oTable.Items.Add(3, 'F', 'Final results; Can only be changed with a corrected result.');
    oTable.Items.Add(4, 'I', 'Specimen in lab; results pending');
    oTable.Items.Add(5, 'N', 'Not asked; used to affirmatively document that the observation identified in the OBX was not sought when the universal service ID in OBR-4 implies that it would be sought.');
    oTable.Items.Add(6, 'O', 'Order detail description only (no result)');
    oTable.Items.Add(7, 'P', 'Preliminary results');
    oTable.Items.Add(8, 'R', 'Results entered -- not verified');
    oTable.Items.Add(9, 'S', 'Partial results');
    oTable.Items.Add(11, 'U', 'Results status change to final without retransmitting results already sent as '#145'preliminary.'#146'  E.g., radiology changes status from preliminary to final');
    oTable.Items.Add(12, 'W', 'Post original as wrong, e.g., transmitted for wrong patient');
    oTable.Items.Add(10, 'X', 'Results cannot be obtained for this observation');
End;

procedure LoadTable86(oTables : THL7V2ModelTables);
Begin
  oTables.Add(86, 'Plan Type');
End;

procedure LoadTable87(oTables : THL7V2ModelTables);
Begin
  oTables.Add(87, 'Preadmit Test Indicator');
End;

procedure LoadTable88(oTables : THL7V2ModelTables);
Begin
  oTables.Add(88, 'Procedure Code');
End;

procedure LoadTable89(oTables : THL7V2ModelTables);
Begin
  oTables.Add(89, 'Procedure Coding Method');
End;

procedure LoadTable91(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(91, 'Query priority');
    oTable.Items.Add(1, 'D', 'Deferred');
    oTable.Items.Add(2, 'I', 'Immediate');
End;

procedure LoadTable92(oTables : THL7V2ModelTables);
Begin
  oTables.Add(92, 'Re-admission Indicator');
End;

procedure LoadTable93(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(93, 'Release information');
    oTable.Items.Add(2, 'N', 'No');
    oTable.Items.Add(1, 'Y', 'Yes');
End;

procedure LoadTable98(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(98, 'Type of agreement');
    oTable.Items.Add(3, 'M', 'Maternity');
    oTable.Items.Add(1, 'S', 'Standard');
    oTable.Items.Add(2, 'U', 'Unified');
End;

procedure LoadTable99(oTables : THL7V2ModelTables);
Begin
  oTables.Add(99, 'VIP Indicator');
End;

procedure LoadTable100(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(100, 'When to charge');
    oTable.Items.Add(1, 'D', 'On discharge');
    oTable.Items.Add(2, 'O', 'On receipt of order');
    oTable.Items.Add(3, 'R', 'At time service is completed');
    oTable.Items.Add(4, 'S', 'At time service is started');
    oTable.Items.Add(5, 'T', 'At a designated date/time');
End;

procedure LoadTable102(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(102, 'Delayed acknowledgment type');
    oTable.Items.Add(1, 'D', 'Message received, stored for later processing');
    oTable.Items.Add(2, 'F', 'Acknowledgment after processing');
End;

procedure LoadTable103(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(103, 'Processing ID');
    oTable.Items.Add(1, 'D', 'Debugging');
    oTable.Items.Add(2, 'P', 'Production');
    oTable.Items.Add(3, 'T', 'Training');
End;

procedure LoadTable104(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(104, 'Version ID');
    oTable.Items.Add(1, '2.0', 'Release 2.0');
    oTable.Items.Add(2, '2.0D', 'Demo 2.0');
    oTable.Items.Add(3, '2.1', 'Release 2. 1');
    oTable.Items.Add(4, '2.2', 'Release 2.2');
    oTable.Items.Add(5, '2.3', 'Release 2.3');
    oTable.Items.Add(6, '2.3.1', 'Release 2.3.1');
    oTable.Items.Add(7, '2.3.2', 'Release 2.3.2');
End;

procedure LoadTable105(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(105, 'Source of comment');
    oTable.Items.Add(1, 'L', 'Ancillary (filler) department is source of comment');
    oTable.Items.Add(3, 'O', 'Other system is source of comment');
    oTable.Items.Add(2, 'P', 'Orderer (placer) is source of comment');
End;

procedure LoadTable106(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(106, 'Query/response format code');
    oTable.Items.Add(1, 'D', 'Response is in display format');
    oTable.Items.Add(2, 'R', 'Response is in record-oriented format');
    oTable.Items.Add(3, 'T', 'Response is in tabular format');
End;

procedure LoadTable107(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(107, 'Deferred response type');
    oTable.Items.Add(1, 'B', 'Before the Date/Time specified');
    oTable.Items.Add(2, 'L', 'Later than the Date/Time specified');
End;

procedure LoadTable108(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(108, 'Query results level');
    oTable.Items.Add(1, 'O', 'Order plus order status');
    oTable.Items.Add(2, 'R', 'Results without bulk text');
    oTable.Items.Add(3, 'S', 'Status only');
    oTable.Items.Add(4, 'T', 'Full results');
End;

procedure LoadTable109(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(109, 'Report priority');
    oTable.Items.Add(1, 'R', 'Routine');
    oTable.Items.Add(2, 'S', 'Stat');
End;

procedure LoadTable110(oTables : THL7V2ModelTables);
Begin
  oTables.Add(110, 'Transfer to Bad Debt Code');
End;

procedure LoadTable111(oTables : THL7V2ModelTables);
Begin
  oTables.Add(111, 'Delete Account Code');
End;

procedure LoadTable112(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(112, 'Discharge disposition');
    oTable.Items.Add(1, '01', 'Discharged to home or self care (routine discharge)');
    oTable.Items.Add(2, '02', 'Discharged/transferred to another short term general hospital for inpatient care');
    oTable.Items.Add(3, '03', 'Discharged/transferred to skilled nursing facility (SNF)');
    oTable.Items.Add(4, '04', 'Discharged/transferred to an intermediate care facility (ICF)');
    oTable.Items.Add(5, '05', 'Discharged/transferred to another type of institution for inpatient care or referred for outpatient services to another institution');
    oTable.Items.Add(6, '06', 'Discharged/transferred to home under care of organized home health service organization');
    oTable.Items.Add(7, '07', 'Left against medical advice or discontinued care');
    oTable.Items.Add(8, '08', 'Discharged/transferred to home under care of Home IV provider');
    oTable.Items.Add(9, '09', 'Admitted as an inpatient to this hospital');
    oTable.Items.Add(10, '10', 'Discharge to be defined at state level, if necessary');
    oTable.Items.Add(11, '11', 'Discharge to be defined at state level, if necessary');
    oTable.Items.Add(12, '12', 'Discharge to be defined at state level, if necessary');
    oTable.Items.Add(13, '13', 'Discharge to be defined at state level, if necessary');
    oTable.Items.Add(14, '14', 'Discharge to be defined at state level, if necessary');
    oTable.Items.Add(15, '15', 'Discharge to be defined at state level, if necessary');
    oTable.Items.Add(16, '16', 'Discharge to be defined at state level, if necessary');
    oTable.Items.Add(17, '17', 'Discharge to be defined at state level, if necessary');
    oTable.Items.Add(18, '18', 'Discharge to be defined at state level, if necessary');
    oTable.Items.Add(19, '19', 'Discharge to be defined at state level, if necessary');
    oTable.Items.Add(20, '20', 'Expired');
    oTable.Items.Add(21, '21', 'Expired to be defined at state level, if necessary');
    oTable.Items.Add(22, '22', 'Expired to be defined at state level, if necessary');
    oTable.Items.Add(23, '23', 'Expired to be defined at state level, if necessary');
    oTable.Items.Add(24, '24', 'Expired to be defined at state level, if necessary');
    oTable.Items.Add(25, '25', 'Expired to be defined at state level, if necessary');
    oTable.Items.Add(26, '26', 'Expired to be defined at state level, if necessary');
    oTable.Items.Add(27, '27', 'Expired to be defined at state level, if necessary');
    oTable.Items.Add(28, '28', 'Expired to be defined at state level, if necessary');
    oTable.Items.Add(29, '29', 'Expired to be defined at state level, if necessary');
    oTable.Items.Add(30, '30', 'Still patient or expected to return for outpatient services');
    oTable.Items.Add(31, '31', 'Still patient to be defined at state level, if necessary');
    oTable.Items.Add(32, '32', 'Still patient to be defined at state level, if necessary');
    oTable.Items.Add(33, '33', 'Still patient to be defined at state level, if necessary');
    oTable.Items.Add(34, '34', 'Still patient to be defined at state level, if necessary');
    oTable.Items.Add(35, '35', 'Still patient to be defined at state level, if necessary');
    oTable.Items.Add(36, '36', 'Still patient to be defined at state level, if necessary');
    oTable.Items.Add(37, '37', 'Still patient to be defined at state level, if necessary');
    oTable.Items.Add(38, '38', 'Still patient to be defined at state level, if necessary');
    oTable.Items.Add(39, '39', 'Still patient to be defined at state level, if necessary');
    oTable.Items.Add(40, '40', 'Expired at home');
    oTable.Items.Add(41, '41', 'Expired in a medical facility; e.g., hospital, SNF, ICF, or free standing hospice');
    oTable.Items.Add(42, '42', 'Expired - place unknown');
End;

procedure LoadTable113(oTables : THL7V2ModelTables);
Begin
  oTables.Add(113, 'Discharged to Location');
End;

procedure LoadTable114(oTables : THL7V2ModelTables);
Begin
  oTables.Add(114, 'Diet Type');
End;

procedure LoadTable115(oTables : THL7V2ModelTables);
Begin
  oTables.Add(115, 'Servicing Facility');
End;

procedure LoadTable116(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(116, 'Bed status');
    oTable.Items.Add(1, 'C', 'Closed');
    oTable.Items.Add(2, 'H', 'Housekeeping');
    oTable.Items.Add(6, 'I', 'Isolated');
    oTable.Items.Add(5, 'K', 'Contaminated');
    oTable.Items.Add(3, 'O', 'Occupied');
    oTable.Items.Add(4, 'U', 'Unoccupied');
End;

procedure LoadTable117(oTables : THL7V2ModelTables);
Begin
  oTables.Add(117, 'Account Status');
End;

procedure LoadTable118(oTables : THL7V2ModelTables);
Begin
  oTables.Add(118, 'Major Diagnostic Category');
End;

procedure LoadTable119(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(119, 'Order control codes and their meaning');
    oTable.Items.Add(50, 'AF', 'Order refill request approval (O02)');
    oTable.Items.Add(5, 'CA', 'Cancel order request (O01)');
    oTable.Items.Add(32, 'CH', 'Child order (O01/ORU)');
    oTable.Items.Add(47, 'CN', 'Combined result (R01)');
    oTable.Items.Add(7, 'CR', 'Canceled as requested (O02)');
    oTable.Items.Add(10, 'DC', 'Discontinue order request (O01)');
    oTable.Items.Add(39, 'DE', 'Data errors (O01/O02)');
    oTable.Items.Add(51, 'DF', 'Order refill request denied (O02)');
    oTable.Items.Add(12, 'DR', 'Discontinued as requested (O02)');
    oTable.Items.Add(52, 'FU', 'Order refilled, unsolicited (O01)');
    oTable.Items.Add(15, 'HD', 'Hold order request (O01)');
    oTable.Items.Add(18, 'HR', 'On hold as requested (O02)');
    oTable.Items.Add(55, 'LI', 'Link order to patient care problem or goal');
    oTable.Items.Add(46, 'NA', 'Number assigned (O02)');
    oTable.Items.Add(1, 'NW', 'New order (O01)');
    oTable.Items.Add(6, 'OC', 'Order canceled (O01)');
    oTable.Items.Add(11, 'OD', 'Order discontinued (O01)');
    oTable.Items.Add(21, 'OE', 'Order released (O01)');
    oTable.Items.Add(53, 'OF', 'Order refilled as requested (O02)');
    oTable.Items.Add(16, 'OH', 'Order held (O01)');
    oTable.Items.Add(2, 'OK', 'Order accepted & OK (O02)');
    oTable.Items.Add(22, 'OR', 'Released as requested');
    oTable.Items.Add(31, 'PA', 'Parent order (O01/ORU)');
    oTable.Items.Add(40, 'RE', 'Observations to follow (O01/R01)');
    oTable.Items.Add(49, 'RF', 'Refill order request (O01)');
    oTable.Items.Add(20, 'RL', 'Release previous hold (O01)');
    oTable.Items.Add(27, 'RO', 'Replacement order (O01)');
    oTable.Items.Add(25, 'RP', 'Order replace request (O01)');
    oTable.Items.Add(28, 'RQ', 'Replaced as requested (O02)');
    oTable.Items.Add(41, 'RR', 'Request received (O02)');
    oTable.Items.Add(26, 'RU', 'Replaced unsolicited (O01)');
    oTable.Items.Add(44, 'SC', 'Status changed (O01)');
    oTable.Items.Add(45, 'SN', 'Send order number (O01)');
    oTable.Items.Add(42, 'SR', 'Response to send order status request (O02(Q06)');
    oTable.Items.Add(43, 'SS', 'Send order status request (O01)');
    oTable.Items.Add(3, 'UA', 'Unable to accept order (O02/ORR)');
    oTable.Items.Add(8, 'UC', 'Unable to cancel (O02)');
    oTable.Items.Add(13, 'UD', 'Unable to discontinue (O02)');
    oTable.Items.Add(54, 'UF', 'Unable to refill (O02)');
    oTable.Items.Add(17, 'UH', 'Unable to put on hold (O02)');
    oTable.Items.Add(29, 'UM', 'Unable to replace (O02)');
    oTable.Items.Add(56, 'UN', 'Unlink order from patient care problem or goal');
    oTable.Items.Add(23, 'UR', 'Unable to release (O02)');
    oTable.Items.Add(36, 'UX', 'Unable to change (O02)');
    oTable.Items.Add(34, 'XO', 'Change order request (O01)');
    oTable.Items.Add(37, 'XR', 'Changed as requested (O02)');
    oTable.Items.Add(35, 'XX', 'Order changed, unsol. (O01)');
End;

procedure LoadTable121(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(121, 'Response flag');
    oTable.Items.Add(3, 'D', 'Same as R, also other associated segments');
    oTable.Items.Add(1, 'E', 'Report exceptions only');
    oTable.Items.Add(4, 'F', 'Same as D, plus confirmations explicitly');
    oTable.Items.Add(5, 'N', 'Only the MSA segment is returned');
    oTable.Items.Add(2, 'R', 'Same as E, also Replacement and Parent-Child');
End;

procedure LoadTable122(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(122, 'Charge type');
    oTable.Items.Add(1, 'CH', 'Charge');
    oTable.Items.Add(2, 'CO', 'Contract');
    oTable.Items.Add(3, 'CR', 'Credit');
    oTable.Items.Add(4, 'DP', 'Department');
    oTable.Items.Add(5, 'GR', 'Grant');
    oTable.Items.Add(6, 'NC', 'No Charge');
    oTable.Items.Add(7, 'PC', 'Professional');
    oTable.Items.Add(8, 'RS', 'Research');
End;

procedure LoadTable123(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(123, 'Result status');
    oTable.Items.Add(4, 'A', 'Some, but not all, results available');
    oTable.Items.Add(6, 'C', 'Correction to results');
    oTable.Items.Add(8, 'F', 'Final results; results stored and verified.  Can only be changed with a corrected result.');
    oTable.Items.Add(2, 'I', 'No results available; specimen received, procedure incomplete');
    oTable.Items.Add(1, 'O', 'Order received; specimen not yet received');
    oTable.Items.Add(5, 'P', 'Preliminary: A verified early result is available, final results not yet obtained');
    oTable.Items.Add(7, 'R', 'Results stored; not yet verified');
    oTable.Items.Add(3, 'S', 'No results available; procedure scheduled, but not done');
    oTable.Items.Add(9, 'X', 'No results available; Order canceled.');
    oTable.Items.Add(10, 'Y', 'No order on record for this test.  (Used only on queries)');
    oTable.Items.Add(11, 'Z', 'No record of this patient. (Used only on queries)');
End;

procedure LoadTable124(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(124, 'Transportation mode');
    oTable.Items.Add(1, 'CART', 'Cart - patient travels on cart or gurney');
    oTable.Items.Add(2, 'PORT', 'The examining device goes to patient'#146's location');
    oTable.Items.Add(3, 'WALK', 'Patient walks to diagnostic service');
    oTable.Items.Add(4, 'WHLC', 'Wheelchair');
End;

procedure LoadTable125(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(125, 'Value type');
    oTable.Items.Add(1, 'AD', 'Address');
    oTable.Items.Add(2, 'CE', 'Coded Entry');
    oTable.Items.Add(3, 'CF', 'Coded Element With Formatted Values');
    oTable.Items.Add(4, 'CK', 'Composite ID With Check Digit');
    oTable.Items.Add(5, 'CN', 'Composite ID And Name');
    oTable.Items.Add(6, 'CP', 'Composite Price');
    oTable.Items.Add(7, 'CX', 'Extended Composite ID With Check Digit');
    oTable.Items.Add(8, 'DT', 'Date');
    oTable.Items.Add(9, 'ED', 'Encapsulated Data');
    oTable.Items.Add(10, 'FT', 'Formatted Text (Display)');
    oTable.Items.Add(11, 'MO', 'Money');
    oTable.Items.Add(12, 'NM', 'Numeric');
    oTable.Items.Add(13, 'PN', 'Person Name');
    oTable.Items.Add(14, 'RP', 'Reference Pointer');
    oTable.Items.Add(15, 'SN', 'Structured Numeric');
    oTable.Items.Add(16, 'ST', 'String Data.');
    oTable.Items.Add(17, 'TM', 'Time');
    oTable.Items.Add(18, 'TN', 'Telephone Number');
    oTable.Items.Add(19, 'TS', 'Time Stamp (Date & Time)');
    oTable.Items.Add(20, 'TX', 'Text Data (Display)');
    oTable.Items.Add(21, 'XAD', 'Extended Address');
    oTable.Items.Add(22, 'XCN', 'Extended Composite Name And Number For Persons');
    oTable.Items.Add(23, 'XON', 'Extended Composite Name And Number For Organizations');
    oTable.Items.Add(24, 'XPN', 'Extended Person Name');
    oTable.Items.Add(25, 'XTN', 'Extended Telecommunications Number');
End;

procedure LoadTable126(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(126, 'Quantity limited request');
    oTable.Items.Add(1, 'CH', 'Characters');
    oTable.Items.Add(2, 'LI', 'Lines');
    oTable.Items.Add(3, 'PG', 'Pages');
    oTable.Items.Add(4, 'RD', 'Records');
    oTable.Items.Add(5, 'ZO', 'Locally defined');
End;

procedure LoadTable127(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(127, 'Allergy type');
    oTable.Items.Add(1, 'DA', 'Drug allergy');
    oTable.Items.Add(2, 'FA', 'Food allergy');
    oTable.Items.Add(3, 'MA', 'Miscellaneous allergy');
    oTable.Items.Add(4, 'MC', 'Miscellaneous contraindication');
End;

procedure LoadTable128(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(128, 'Allergy severity');
    oTable.Items.Add(3, 'MI', 'Mild');
    oTable.Items.Add(2, 'MO', 'Moderate');
    oTable.Items.Add(1, 'SV', 'Severe');
End;

procedure LoadTable129(oTables : THL7V2ModelTables);
Begin
  oTables.Add(129, 'Accommodation Code');
End;

procedure LoadTable130(oTables : THL7V2ModelTables);
Begin
  oTables.Add(130, 'Visit User Code');
End;

procedure LoadTable131(oTables : THL7V2ModelTables);
Begin
  oTables.Add(131, 'Contact Role');
End;

procedure LoadTable132(oTables : THL7V2ModelTables);
Begin
  oTables.Add(132, 'Transaction Code');
End;

procedure LoadTable133(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(133, 'Procedure practitioner identifier code type');
    oTable.Items.Add(1, 'AN', 'Anesthesiologist');
    oTable.Items.Add(9, 'AS', 'Assistant Surgeon');
    oTable.Items.Add(6, 'CM', 'Certified Nurse Midwife');
    oTable.Items.Add(5, 'NP', 'Nurse Practitioner');
    oTable.Items.Add(2, 'PR', 'Procedure MD (surgeon)');
    oTable.Items.Add(8, 'PS', 'Primary Surgeon');
    oTable.Items.Add(3, 'RD', 'Radiologist');
    oTable.Items.Add(4, 'RS', 'Resident');
    oTable.Items.Add(7, 'SN', 'Scrub Nurse');
End;

procedure LoadTable135(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(135, 'Assignment of benefits');
    oTable.Items.Add(3, 'M', 'Modified assignment');
    oTable.Items.Add(2, 'N', 'No');
    oTable.Items.Add(1, 'Y', 'Yes');
End;

procedure LoadTable136(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(136, 'Yes/no indicator');
    oTable.Items.Add(2, 'N', 'No');
    oTable.Items.Add(1, 'Y', 'Yes');
End;

procedure LoadTable137(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(137, 'Mail claim party');
    oTable.Items.Add(1, 'E', 'Employer');
    oTable.Items.Add(2, 'G', 'Guarantor');
    oTable.Items.Add(3, 'I', 'Insurance company');
    oTable.Items.Add(4, 'O', 'Other');
    oTable.Items.Add(5, 'P', 'Patient');
End;

procedure LoadTable139(oTables : THL7V2ModelTables);
Begin
  oTables.Add(139, 'Employer Information Data');
End;

procedure LoadTable140(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(140, 'Military service');
    oTable.Items.Add(8, 'NATO', 'North Atlantic Treaty Organization');
    oTable.Items.Add(7, 'NOAA', 'National Oceanic and Atmospheric Administration');
    oTable.Items.Add(1, 'USA', 'U.S. Army');
    oTable.Items.Add(3, 'USAF', 'U.S. Air Force');
    oTable.Items.Add(5, 'USCG', 'U.S. Coast Guard');
    oTable.Items.Add(4, 'USMC', 'U.S. Marines');
    oTable.Items.Add(2, 'USN', 'U.S. Navy');
    oTable.Items.Add(6, 'USPHS', 'U.S. Public Health Service');
End;

procedure LoadTable141(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(141, 'Military rank/grade');
    oTable.Items.Add(1, 'E1 ... E9', 'Enlisted');
    oTable.Items.Add(2, 'O1 ... O10', 'Officers');
    oTable.Items.Add(3, 'W1 ... W4', 'Warrant Officers');
End;

procedure LoadTable142(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(142, 'Military status');
    oTable.Items.Add(1, 'ACT', 'Active duty');
    oTable.Items.Add(3, 'DEC', 'Deceased');
    oTable.Items.Add(2, 'RET', 'Retired');
End;

procedure LoadTable143(oTables : THL7V2ModelTables);
Begin
  oTables.Add(143, 'Non-covered Insurance Code');
End;

procedure LoadTable144(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(144, 'Eligibility source');
    oTable.Items.Add(1, '1', 'Insurance company');
    oTable.Items.Add(2, '2', 'Employer');
    oTable.Items.Add(3, '3', 'Insured presented policy');
    oTable.Items.Add(4, '4', 'Insured presented card');
    oTable.Items.Add(5, '5', 'Signed statement on file');
    oTable.Items.Add(6, '6', 'Verbal information');
    oTable.Items.Add(7, '7', 'None');
End;

procedure LoadTable145(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(145, 'Room type');
    oTable.Items.Add(6, '2ICU', 'Second intensive care unit');
    oTable.Items.Add(2, '2PRI', 'Second private room');
    oTable.Items.Add(4, '2SPR', 'Second semi-private room');
    oTable.Items.Add(5, 'ICU', 'Intensive care unit');
    oTable.Items.Add(1, 'PRI', 'Private room');
    oTable.Items.Add(3, 'SPR', 'Semi-private room');
End;

procedure LoadTable146(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(146, 'Amount type');
    oTable.Items.Add(1, 'DF', 'Differential');
    oTable.Items.Add(2, 'LM', 'Limit');
    oTable.Items.Add(3, 'PC', 'Percentage');
    oTable.Items.Add(4, 'RT', 'Rate');
    oTable.Items.Add(5, 'UL', 'Unlimited');
End;

procedure LoadTable147(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(147, 'Policy type');
    oTable.Items.Add(2, '2ANC', 'Second ancillary');
    oTable.Items.Add(4, '2MMD', 'Second major medical');
    oTable.Items.Add(5, '3MMD', 'Third major medical');
    oTable.Items.Add(1, 'ANC', 'Ancillary');
    oTable.Items.Add(3, 'MMD', 'Major medical');
End;

procedure LoadTable148(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(148, 'Penalty type');
    oTable.Items.Add(1, 'AT', 'Currency amount');
    oTable.Items.Add(2, 'PC', 'Percentage');
End;

procedure LoadTable149(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(149, 'Day type');
    oTable.Items.Add(1, 'AP', 'Approved');
    oTable.Items.Add(2, 'DE', 'Denied');
    oTable.Items.Add(3, 'PE', 'Pending');
End;

procedure LoadTable150(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(150, 'Pre-certification patient type');
    oTable.Items.Add(1, 'ER', 'Emergency');
    oTable.Items.Add(2, 'IPE', 'Inpatient elective');
    oTable.Items.Add(3, 'OPE', 'Outpatient elective');
    oTable.Items.Add(4, 'UR', 'Urgent');
End;

procedure LoadTable151(oTables : THL7V2ModelTables);
Begin
  oTables.Add(151, 'Second Opinion Status');
End;

procedure LoadTable152(oTables : THL7V2ModelTables);
Begin
  oTables.Add(152, 'Second Opinion Documentation Received');
End;

procedure LoadTable153(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(153, 'Value code');
    oTable.Items.Add(1, '01', 'Most common semi-private rate');
    oTable.Items.Add(2, '02', 'Hospital has no semi-private rooms');
    oTable.Items.Add(3, '04', 'Inpatient professional component charges which are combined billed');
    oTable.Items.Add(4, '05', 'Professional component included in charges and also billed separate to carrier');
    oTable.Items.Add(5, '06', 'Medicare blood deductible');
    oTable.Items.Add(6, '08', 'Medicare life time reserve amount in the first calendar year');
    oTable.Items.Add(7, '09', 'Medicare co-insurance amount in the first calendar year');
    oTable.Items.Add(8, '10', 'Lifetime reserve amount in the second calendar year');
    oTable.Items.Add(9, '11', 'Co-insurance amount in the second calendar year');
    oTable.Items.Add(10, '12', 'Working aged beneficiary/spouse with employer group health plan');
    oTable.Items.Add(11, '13', 'ESRD beneficiary in a Medicare coordination period with an employer group health plan');
    oTable.Items.Add(12, '14', 'No Fault including auto/other');
    oTable.Items.Add(13, '15', 'Worker'#146's Compensation');
    oTable.Items.Add(14, '16', 'PHS, or other federal agency');
    oTable.Items.Add(15, '17', 'Payer code');
    oTable.Items.Add(16, '21', 'Catastrophic');
    oTable.Items.Add(17, '22', 'Surplus');
    oTable.Items.Add(18, '23', 'Recurring monthly incode');
    oTable.Items.Add(19, '24', 'Medicaid rate code');
    oTable.Items.Add(20, '30', 'Pre-admission testing');
    oTable.Items.Add(21, '31', 'Patient liability amount');
    oTable.Items.Add(22, '37', 'Pints of blood furnished');
    oTable.Items.Add(23, '38', 'Blood deductible pints');
    oTable.Items.Add(24, '39', 'Pints of blood replaced');
    oTable.Items.Add(25, '40', 'New coverage not implemented by HMO (for inpatient service only)');
    oTable.Items.Add(26, '41', 'Black lung');
    oTable.Items.Add(27, '42', 'VA');
    oTable.Items.Add(28, '43', 'Disabled beneficiary under age 64 with LGHP');
    oTable.Items.Add(29, '44', 'Amount provider agreed to accept from primary payer when this amount is less than charges but higher than payment received,, then a Medicare secondary payment is due');
    oTable.Items.Add(30, '45', 'Accident hour');
    oTable.Items.Add(31, '46', 'Number of grace days');
    oTable.Items.Add(32, '47', 'Any liability insurance');
    oTable.Items.Add(33, '48', 'Hemoglobin reading');
    oTable.Items.Add(34, '49', 'Hematocrit reading');
    oTable.Items.Add(35, '50', 'Physical therapy visits');
    oTable.Items.Add(36, '51', 'Occupational therapy visits');
    oTable.Items.Add(37, '52', 'Speech therapy visits');
    oTable.Items.Add(38, '53', 'Cardiac rehab visits');
    oTable.Items.Add(39, '56', 'Skilled nurse - home visit hours');
    oTable.Items.Add(40, '57', 'Home health aide - home visit hours');
    oTable.Items.Add(41, '58', 'Arterial blood gas');
    oTable.Items.Add(42, '59', 'Oxygen saturation');
    oTable.Items.Add(43, '60', 'HHA branch MSA');
    oTable.Items.Add(44, '67', 'Peritoneal dialysis');
    oTable.Items.Add(45, '68', 'EPO-drug');
    oTable.Items.Add(46, '70 ... 72', 'Payer codes');
    oTable.Items.Add(47, '75 ... 79', 'Payer codes');
    oTable.Items.Add(48, '80', 'Psychiatric visits');
    oTable.Items.Add(49, '81', 'Visits subject to co-payment');
    oTable.Items.Add(50, 'A1', 'Deductible payer A');
    oTable.Items.Add(51, 'A2', 'Coinsurance payer A');
    oTable.Items.Add(52, 'A3', 'Estimated responsibility payer A');
    oTable.Items.Add(53, 'X0', 'Service excluded on primary policy');
    oTable.Items.Add(54, 'X4', 'Supplemental coverage');
End;

procedure LoadTable155(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(155, 'Accept/application acknowledgment conditions');
    oTable.Items.Add(1, 'AL', 'Always');
    oTable.Items.Add(3, 'ER', 'Error/reject conditions only');
    oTable.Items.Add(2, 'NE', 'Never');
    oTable.Items.Add(4, 'SU', 'Successful completion only');
End;

procedure LoadTable156(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(156, 'Which date/time qualifier');
    oTable.Items.Add(1, 'ANY', 'Any date/time within a range');
    oTable.Items.Add(2, 'COL', 'Collection date/time, equivalent to film or sample collection date/time');
    oTable.Items.Add(3, 'ORD', 'Order date/time');
    oTable.Items.Add(4, 'RCT', 'Specimen receipt date/time, receipt of specimen in filling ancillary (Lab)');
    oTable.Items.Add(5, 'REP', 'Report date/time, report date/time at filing ancillary (i.e., Lab)');
    oTable.Items.Add(6, 'SCHED', 'Schedule date/time');
End;

procedure LoadTable157(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(157, 'Which date/time status qualifier');
    oTable.Items.Add(1, 'ANY', 'Any status');
    oTable.Items.Add(2, 'CFN', 'Current final value, whether final or corrected');
    oTable.Items.Add(3, 'COR', 'Corrected only (no final with corrections)');
    oTable.Items.Add(4, 'FIN', 'Final only (no corrections)');
    oTable.Items.Add(5, 'PRE', 'Preliminary');
    oTable.Items.Add(6, 'REP', 'Report completion date/time');
End;

procedure LoadTable158(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(158, 'Date/time selection qualifier');
    oTable.Items.Add(1, '1ST', 'First value within range');
    oTable.Items.Add(2, 'ALL', 'All values within the range');
    oTable.Items.Add(3, 'LST', 'Last value within the range');
    oTable.Items.Add(4, 'REV', 'All values within the range returned in reverse chronological order (This is the default if not otherwise specified.)');
End;

procedure LoadTable159(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(159, 'Diet code specification type');
    oTable.Items.Add(1, 'D', 'Diet');
    oTable.Items.Add(3, 'P', 'Preference');
    oTable.Items.Add(2, 'S', 'Supplement');
End;

procedure LoadTable160(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(160, 'Tray type');
    oTable.Items.Add(1, 'EARLY', 'Early tray');
    oTable.Items.Add(3, 'GUEST', 'Guest tray');
    oTable.Items.Add(2, 'LATE', 'Late tray');
    oTable.Items.Add(5, 'MSG', 'Tray message only');
    oTable.Items.Add(4, 'NO', 'No tray');
End;

procedure LoadTable161(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(161, 'Allow substitution');
    oTable.Items.Add(2, 'G', 'Allow generic substitutions.');
    oTable.Items.Add(1, 'N', 'Substitutions are NOT authorized.  (This is the default - null.)');
    oTable.Items.Add(3, 'T', 'Allow therapeutic substitutions');
End;

procedure LoadTable162(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(162, 'Route of administration');
    oTable.Items.Add(1, 'AP', 'Apply Externally');
    oTable.Items.Add(2, 'B', 'Buccal');
    oTable.Items.Add(3, 'DT', 'Dental');
    oTable.Items.Add(4, 'EP', 'Epidural');
    oTable.Items.Add(5, 'ET', 'Endotrachial Tube*');
    oTable.Items.Add(6, 'GTT', 'Gastrostomy Tube');
    oTable.Items.Add(7, 'GU', 'GU Irrigant');
    oTable.Items.Add(9, 'IA', 'Intra-arterial');
    oTable.Items.Add(10, 'IB', 'Intrabursal');
    oTable.Items.Add(11, 'IC', 'Intracardiac');
    oTable.Items.Add(12, 'ICV', 'Intracervical (uterus)');
    oTable.Items.Add(13, 'ID', 'Intradermal');
    oTable.Items.Add(14, 'IH', 'Inhalation');
    oTable.Items.Add(15, 'IHA', 'Intrahepatic Artery');
    oTable.Items.Add(16, 'IM', 'Intramuscular');
    oTable.Items.Add(8, 'IMR', 'Immerse (Soak) Body Part');
    oTable.Items.Add(17, 'IN', 'Intranasal');
    oTable.Items.Add(18, 'IO', 'Intraocular');
    oTable.Items.Add(19, 'IP', 'Intraperitoneal');
    oTable.Items.Add(20, 'IS', 'Intrasynovial');
    oTable.Items.Add(21, 'IT', 'Intrathecal');
    oTable.Items.Add(22, 'IU', 'Intrauterine');
    oTable.Items.Add(23, 'IV', 'Intravenous');
    oTable.Items.Add(25, 'MM', 'Mucous Membrane');
    oTable.Items.Add(24, 'MTH', 'Mouth/Throat');
    oTable.Items.Add(27, 'NG', 'Nasogastric');
    oTable.Items.Add(28, 'NP', 'Nasal Prongs*');
    oTable.Items.Add(26, 'NS', 'Nasal');
    oTable.Items.Add(29, 'NT', 'Nasotrachial Tube');
    oTable.Items.Add(30, 'OP', 'Ophthalmic');
    oTable.Items.Add(31, 'OT', 'Otic');
    oTable.Items.Add(32, 'OTH', 'Other/Miscellaneous');
    oTable.Items.Add(33, 'PF', 'Perfusion');
    oTable.Items.Add(34, 'PO', 'Oral');
    oTable.Items.Add(35, 'PR', 'Rectal');
    oTable.Items.Add(36, 'RM', 'Rebreather Mask*');
    oTable.Items.Add(38, 'SC', 'Subcutaneous');
    oTable.Items.Add(37, 'SD', 'Soaked Dressing');
    oTable.Items.Add(39, 'SL', 'Sublingual');
    oTable.Items.Add(42, 'TD', 'Transdermal');
    oTable.Items.Add(43, 'TL', 'Translingual');
    oTable.Items.Add(40, 'TP', 'Topical');
    oTable.Items.Add(41, 'TRA', 'Tracheostomy*');
    oTable.Items.Add(44, 'UR', 'Urethral');
    oTable.Items.Add(45, 'VG', 'Vaginal');
    oTable.Items.Add(46, 'VM', 'Ventimask');
    oTable.Items.Add(47, 'WND', 'Wound');
End;

procedure LoadTable163(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(163, 'Administrative site');
    oTable.Items.Add(1, 'BE', 'Bilateral Ears');
    oTable.Items.Add(3, 'BN', 'Bilateral Nares');
    oTable.Items.Add(4, 'BU', 'Buttock');
    oTable.Items.Add(5, 'CT', 'Chest Tube');
    oTable.Items.Add(6, 'LA', 'Left Arm');
    oTable.Items.Add(7, 'LAC', 'Left Anterior Chest');
    oTable.Items.Add(8, 'LACF', 'Left Antecubital Fossa');
    oTable.Items.Add(9, 'LD', 'Left Deltoid');
    oTable.Items.Add(10, 'LE', 'Left Ear');
    oTable.Items.Add(11, 'LEJ', 'Left External Jugular');
    oTable.Items.Add(13, 'LF', 'Left Foot');
    oTable.Items.Add(14, 'LG', 'Left Gluteus Medius');
    oTable.Items.Add(15, 'LH', 'Left Hand');
    oTable.Items.Add(16, 'LIJ', 'Left Internal Jugular');
    oTable.Items.Add(17, 'LLAQ', 'Left Lower Abd Quadrant');
    oTable.Items.Add(18, 'LLFA', 'Left Lower Forearm');
    oTable.Items.Add(19, 'LMFA', 'Left Mid Forearm');
    oTable.Items.Add(20, 'LN', 'Left Naris');
    oTable.Items.Add(21, 'LPC', 'Left Posterior Chest');
    oTable.Items.Add(22, 'LSC', 'Left Subclavian');
    oTable.Items.Add(23, 'LT', 'Left Thigh');
    oTable.Items.Add(24, 'LUA', 'Left Upper Arm');
    oTable.Items.Add(25, 'LUAQ', 'Left Upper Abd Quadrant');
    oTable.Items.Add(26, 'LUFA', 'Left Upper Forearm');
    oTable.Items.Add(27, 'LVG', 'Left Ventragluteal');
    oTable.Items.Add(28, 'LVL', 'Left Vastus Lateralis');
    oTable.Items.Add(29, 'NB', 'Nebulized');
    oTable.Items.Add(38, 'OD', 'Right Eye');
    oTable.Items.Add(12, 'OS', 'Left Eye');
    oTable.Items.Add(2, 'OU', 'Bilateral Eyes');
    oTable.Items.Add(30, 'PA', 'Perianal');
    oTable.Items.Add(31, 'PERIN', 'Perineal');
    oTable.Items.Add(32, 'RA', 'Right Arm');
    oTable.Items.Add(33, 'RAC', 'Right Anterior Chest');
    oTable.Items.Add(34, 'RACF', 'Right Antecubital Fossa');
    oTable.Items.Add(35, 'RD', 'Right Deltoid');
    oTable.Items.Add(36, 'RE', 'Right Ear');
    oTable.Items.Add(37, 'REJ', 'Right External Jugular');
    oTable.Items.Add(39, 'RF', 'Right Foot');
    oTable.Items.Add(40, 'RG', 'Right Gluteus Medius');
    oTable.Items.Add(41, 'RH', 'Right Hand');
    oTable.Items.Add(42, 'RIJ', 'Right Internal Jugular');
    oTable.Items.Add(43, 'RLAQ', 'Rt Lower Abd Quadrant');
    oTable.Items.Add(44, 'RLFA', 'Right Lower Forearm');
    oTable.Items.Add(45, 'RMFA', 'Right Mid Forearm');
    oTable.Items.Add(46, 'RN', 'Right Naris');
    oTable.Items.Add(47, 'RPC', 'Right Posterior Chest');
    oTable.Items.Add(48, 'RSC', 'Right Subclavian');
    oTable.Items.Add(49, 'RT', 'Right Thigh');
    oTable.Items.Add(50, 'RUA', 'Right Upper Arm');
    oTable.Items.Add(51, 'RUAQ', 'Right Upper Abd Quadrant');
    oTable.Items.Add(52, 'RUFA', 'Right Upper Forearm');
    oTable.Items.Add(54, 'RVG', 'Right Ventragluteal');
    oTable.Items.Add(53, 'RVL', 'Right Vastus Lateralis');
End;

procedure LoadTable164(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(164, 'Administration device');
    oTable.Items.Add(1, 'AP', 'Applicator');
    oTable.Items.Add(2, 'BT', 'Buretrol');
    oTable.Items.Add(3, 'HL', 'Heparin Lock');
    oTable.Items.Add(4, 'IPPB', 'IPPB');
    oTable.Items.Add(5, 'IVP', 'IV Pump');
    oTable.Items.Add(6, 'IVS', 'IV Soluset');
    oTable.Items.Add(7, 'MI', 'Metered Inhaler');
    oTable.Items.Add(8, 'NEB', 'Nebulizer');
    oTable.Items.Add(9, 'PCA', 'PCA Pump');
End;

procedure LoadTable165(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(165, 'Administration method');
    oTable.Items.Add(1, 'CH', 'Chew');
    oTable.Items.Add(2, 'DI', 'Dissolve');
    oTable.Items.Add(3, 'DU', 'Dust');
    oTable.Items.Add(4, 'IF', 'Infiltrate');
    oTable.Items.Add(6, 'IR', 'Irrigate');
    oTable.Items.Add(5, 'IS', 'Insert');
    oTable.Items.Add(8, 'IVP', 'IV Push');
    oTable.Items.Add(7, 'IVPB', 'IV Piggyback');
    oTable.Items.Add(9, 'NB', 'Nebulized');
    oTable.Items.Add(11, 'PF', 'Perfuse');
    oTable.Items.Add(10, 'PT', 'Pain');
    oTable.Items.Add(12, 'SH', 'Shampoo');
    oTable.Items.Add(13, 'SO', 'Soak');
    oTable.Items.Add(14, 'WA', 'Wash');
    oTable.Items.Add(15, 'WI', 'Wipe');
End;

procedure LoadTable166(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(166, 'RX component type');
    oTable.Items.Add(2, 'A', 'Additive');
    oTable.Items.Add(1, 'B', 'Base');
End;

procedure LoadTable167(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(167, 'Substitution status');
    oTable.Items.Add(4, '0', 'No product selection indicated');
    oTable.Items.Add(5, '1', 'Substitution not allowed by prescriber');
    oTable.Items.Add(6, '2', 'Substitution allowed - patient requested product dispensed');
    oTable.Items.Add(7, '3', 'Substitution allowed - pharmacist selected product dispensed');
    oTable.Items.Add(8, '4', 'Substitution allowed - generic drug not in stock');
    oTable.Items.Add(9, '5', 'Substitution allowed - brand drug dispensed as a generic');
    oTable.Items.Add(10, '7', 'Substitution not allowed - brand drug mandated by law');
    oTable.Items.Add(11, '8', 'Substitution allowed - generic drug not available in marketplace');
    oTable.Items.Add(2, 'G', 'A generic substitution was dispensed.');
    oTable.Items.Add(1, 'N', 'No substitute was dispensed.  This is equivalent to the default (null) value.');
    oTable.Items.Add(3, 'T', 'A therapeutic substitution was dispensed.');
End;

procedure LoadTable168(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(168, 'Processing priority');
    oTable.Items.Add(2, 'A', 'As soon as possible (a priority lower than stat)');
    oTable.Items.Add(7, 'B', 'Do at bedside or portable (may be used with other codes)');
    oTable.Items.Add(6, 'C', 'Measure continuously (e.g., arterial line blood pressure)');
    oTable.Items.Add(4, 'P', 'Preoperative (to be done prior to surgery)');
    oTable.Items.Add(3, 'R', 'Routine');
    oTable.Items.Add(1, 'S', 'Stat (do immediately)');
    oTable.Items.Add(5, 'T', 'Timing critical (do as near as possible to requested time)');
End;

procedure LoadTable169(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(169, 'Reporting priority');
    oTable.Items.Add(1, 'C', 'Call back results');
    oTable.Items.Add(2, 'R', 'Rush reporting');
End;

procedure LoadTable170(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(170, 'Derived specimen');
    oTable.Items.Add(2, 'C', 'Child Observation');
    oTable.Items.Add(3, 'N', 'Not Applicable');
    oTable.Items.Add(1, 'P', 'Parent Observation');
End;

procedure LoadTable171(oTables : THL7V2ModelTables);
Begin
  oTables.Add(171, 'Citizenship');
End;

procedure LoadTable172(oTables : THL7V2ModelTables);
Begin
  oTables.Add(172, 'Veterans Military Status');
End;

procedure LoadTable173(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(173, 'Coordination of benefits');
    oTable.Items.Add(1, 'CO', 'Coordination');
    oTable.Items.Add(2, 'IN', 'Independent');
End;

procedure LoadTable174(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(174, 'Nature of test/observation');
    oTable.Items.Add(3, 'A', 'Atomic test/observation (test code or treatment code)');
    oTable.Items.Add(5, 'C', 'Single observation calculated via a rule or formula from other independent observations (e.g., Alveolar--arterial ratio, cardiac output)');
    oTable.Items.Add(2, 'F', 'Functional procedure that may consist of one or more interrelated measures (e.g., glucose tolerance test, creatine clearance), usually done at different times and/or on different specimens');
    oTable.Items.Add(1, 'P', 'Profile or battery consisting of many independent atomic observations (e.g., SMA12, electrolytes), usually done at one instrument on one specimen');
    oTable.Items.Add(4, 'S', 'Superset--a set of batteries or procedures ordered under a single code unit but processed as separate batteries (e.g., routines = CBC, UA, electrolytes)');
End;

procedure LoadTable175(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(175, 'Master file identifier code');
    oTable.Items.Add(1, 'CDM', 'Charge description master file');
    oTable.Items.Add(2, 'CMA', 'Clinical study with phases and scheduled master file');
    oTable.Items.Add(3, 'CMB', 'Clinical study without phases but with scheduled master file');
    oTable.Items.Add(4, 'LOC', 'Location master file');
    oTable.Items.Add(5, 'OMA', 'Numerical observation master file');
    oTable.Items.Add(6, 'OMB', 'Categorical observation master file');
    oTable.Items.Add(7, 'OMC', 'Observation batteries master file');
    oTable.Items.Add(8, 'OMD', 'Calculated observations master file');
    oTable.Items.Add(9, 'PRA', 'Practitioner master file');
    oTable.Items.Add(10, 'STF', 'Staff master file');
End;

procedure LoadTable177(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(177, 'Confidentiality code');
    oTable.Items.Add(8, 'AID', 'AIDS patient');
    oTable.Items.Add(4, 'EMP', 'Employee');
    oTable.Items.Add(10, 'ETH', 'Alcohol/drug treatment patient');
    oTable.Items.Add(9, 'HIV', 'HIV(+) patient');
    oTable.Items.Add(7, 'PSY', 'Psychiatric patient');
    oTable.Items.Add(2, 'R', 'Restricted');
    oTable.Items.Add(3, 'U', 'Usual control');
    oTable.Items.Add(5, 'UWM', 'Unwed mother');
    oTable.Items.Add(1, 'V', 'Very restricted');
    oTable.Items.Add(6, 'VIP', 'Very important person or celebrity');
End;

procedure LoadTable178(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(178, 'File level event code');
    oTable.Items.Add(1, 'REP', 'Replace current version of this master file with the version contained in this message');
    oTable.Items.Add(2, 'UPD', 'Change file records as defined in the record-level event codes for each record that follows');
End;

procedure LoadTable179(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(179, 'Response level');
    oTable.Items.Add(3, 'AL', 'Always.  All MFA segments (whether denoting errors or not) must be returned via the application-level  acknowledgment message');
    oTable.Items.Add(2, 'ER', 'Error/Reject conditions only.  Only MFA segments denoting errors must be returned via the application-level acknowledgment for this message');
    oTable.Items.Add(1, 'NE', 'Never.  No application-level response needed');
    oTable.Items.Add(4, 'SU', 'Success.  Only MFA segments denoting success must be returned via the application-level acknowledgment for this message');
End;

procedure LoadTable180(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(180, 'Record-level event code');
    oTable.Items.Add(5, 'MAC', 'Reactivate deactivated record');
    oTable.Items.Add(1, 'MAD', 'Add record to master file');
    oTable.Items.Add(4, 'MDC', 'Deactivate: discontinue using record in master file, but do not delete from database');
    oTable.Items.Add(2, 'MDL', 'Delete record from master file');
    oTable.Items.Add(3, 'MUP', 'Update record for master file');
End;

procedure LoadTable181(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(181, 'MFN record-level error return');
    oTable.Items.Add(1, 'S', 'Successful posting of the record defined by the MFE segment');
    oTable.Items.Add(2, 'U', 'Unsuccessful posting of the record defined by the MFE segment');
End;

procedure LoadTable182(oTables : THL7V2ModelTables);
Begin
  oTables.Add(182, 'Staff Type');
End;

procedure LoadTable183(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(183, 'Active/inactive');
    oTable.Items.Add(1, 'A', 'Active Staff');
    oTable.Items.Add(2, 'I', 'Inactive Staff');
End;

procedure LoadTable184(oTables : THL7V2ModelTables);
Begin
  oTables.Add(184, 'Department');
End;

procedure LoadTable185(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(185, 'Preferred method of contact');
    oTable.Items.Add(5, 'B', 'Beeper Number');
    oTable.Items.Add(4, 'C', 'Cellular Phone Number');
    oTable.Items.Add(6, 'E', 'E-Mail Address (for backward compatibility)');
    oTable.Items.Add(3, 'F', 'FAX Number');
    oTable.Items.Add(1, 'H', 'Home Phone Number');
    oTable.Items.Add(2, 'O', 'Office Phone Number');
End;

procedure LoadTable186(oTables : THL7V2ModelTables);
Begin
  oTables.Add(186, 'Practioner Category');
End;

procedure LoadTable187(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(187, 'Provider billing');
    oTable.Items.Add(2, 'I', 'Institution bills for provider');
    oTable.Items.Add(1, 'P', 'Provider does own billing');
End;

procedure LoadTable188(oTables : THL7V2ModelTables);
Begin
  oTables.Add(188, 'Operator ID');
End;

procedure LoadTable189(oTables : THL7V2ModelTables);
Begin
  oTables.Add(189, 'Ethnic Group');
End;

procedure LoadTable190(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(190, 'Address type');
    oTable.Items.Add(4, 'B', 'Firm/Business');
    oTable.Items.Add(13, 'BA', 'Bad address');
    oTable.Items.Add(8, 'BDL', 'Birth delivery location (address where birth occurred)');
    oTable.Items.Add(9, 'BR', 'Residence  at birth (home address at time of birth)');
    oTable.Items.Add(1, 'C', 'Current Or Temporary');
    oTable.Items.Add(10, 'F', 'Country Of Origin');
    oTable.Items.Add(6, 'H', 'Home');
    oTable.Items.Add(11, 'L', 'Legal Address');
    oTable.Items.Add(3, 'M', 'Mailing');
    oTable.Items.Add(7, 'N', 'Birth (nee) (birth address, not otherwise specified)');
    oTable.Items.Add(5, 'O', 'Office');
    oTable.Items.Add(2, 'P', 'Permanent');
    oTable.Items.Add(12, 'RH', 'Registry home.  Refers to the information system, typically managed by a public health agency, that  stores patient information such as immunization histories or cancer data, regardless of where the patient obtains services.');
End;

procedure LoadTable191(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(191, 'Type of referenced data');
    oTable.Items.Add(8, 'AP', 'Other application data, typically uninterpreted binary data  (new with HL7 v 2.3)');
    oTable.Items.Add(10, 'Application', 'Other application data, typically uninterpreted binary data  (HL7 V2.3 and later)');
    oTable.Items.Add(7, 'AU', 'Audio data  (new with HL7 v 2.3)');
    oTable.Items.Add(9, 'Audio', 'Audio data  (HL7 V2.3 and later)');
    oTable.Items.Add(5, 'FT', 'Formatted text (HL7 V2.2 only)');
    oTable.Items.Add(6, 'IM', 'Image data  (new  with HL7 v 2.3)');
    oTable.Items.Add(8, 'Image', 'Image data  (HL7 V2.3 and later)');
    oTable.Items.Add(2, 'NS', 'Non-scanned image (HL7 V2.2 only)');
    oTable.Items.Add(3, 'SD', 'Scanned document (HL7 V2.2 only)');
    oTable.Items.Add(7, 'SGML', 'Structured Generalized Markup Language (HL7 V2.3 and later)');
    oTable.Items.Add(1, 'SI', 'Scanned image (HL7 V2.2 only)');
    oTable.Items.Add(6, 'TEXT', 'Machine readable text document (HL7 V2.3.1 and later)');
    oTable.Items.Add(4, 'TX', 'Machine readable text document (HL7 V2.2 only)');
End;

procedure LoadTable193(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(193, 'Amount class');
    oTable.Items.Add(1, 'AT', 'Amount');
    oTable.Items.Add(2, 'LM', 'Limit');
    oTable.Items.Add(3, 'PC', 'Percentage');
    oTable.Items.Add(4, 'UL', 'Unlimited');
End;

procedure LoadTable200(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(200, 'Name type');
    oTable.Items.Add(1, 'A', 'Alias Name');
    oTable.Items.Add(6, 'B', 'Name at Birth');
    oTable.Items.Add(5, 'C', 'Adopted Name');
    oTable.Items.Add(3, 'D', 'Display Name');
    oTable.Items.Add(2, 'L', 'Legal Name');
    oTable.Items.Add(4, 'M', 'Maiden Name');
    oTable.Items.Add(7, 'P', 'Name of Partner/Spouse');
    oTable.Items.Add(8, 'S', 'Coded Pseudo-Name to ensure anonymity');
    oTable.Items.Add(9, 'T', 'Tribal/Community Name');
    oTable.Items.Add(10, 'U', 'Unspecified');
End;

procedure LoadTable201(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(201, 'Telecommunication use code');
    oTable.Items.Add(5, 'ASN', 'Answering Service Number');
    oTable.Items.Add(8, 'BPN', 'Beeper Number');
    oTable.Items.Add(6, 'EMR', 'Emergency Number');
    oTable.Items.Add(7, 'NET', 'Network (email) Address');
    oTable.Items.Add(2, 'ORN', 'Other Residence Number');
    oTable.Items.Add(1, 'PRN', 'Primary Residence Number');
    oTable.Items.Add(4, 'VHN', 'Vacation Home Number');
    oTable.Items.Add(3, 'WPN', 'Work Number');
End;

procedure LoadTable202(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(202, 'Telecommunication equipment type');
    oTable.Items.Add(5, 'BP', 'Beeper');
    oTable.Items.Add(4, 'CP', 'Cellular Phone');
    oTable.Items.Add(2, 'FX', 'Fax');
    oTable.Items.Add(6, 'Internet', 'Internet Address: Use Only If Telecommunication Use Code Is NET');
    oTable.Items.Add(3, 'MD', 'Modem');
    oTable.Items.Add(1, 'PH', 'Telephone');
    oTable.Items.Add(7, 'X.400', 'X.400 email address: Use Only If Telecommunication Use Code Is NET');
End;

procedure LoadTable203(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(203, 'Identifier type');
    oTable.Items.Add(1, 'AM', 'American Express');
    oTable.Items.Add(2, 'AN', 'Account number');
    oTable.Items.Add(3, 'BR', 'Birth registry number');
    oTable.Items.Add(4, 'DI', 'Diner'#146's Club card');
    oTable.Items.Add(5, 'DL', 'Driver'#146's license number');
    oTable.Items.Add(6, 'DN', 'Doctor number');
    oTable.Items.Add(7, 'DS', 'Discover Card');
    oTable.Items.Add(8, 'EI', 'Employee number');
    oTable.Items.Add(9, 'EN', 'Employer number');
    oTable.Items.Add(10, 'FI', 'Facility ID');
    oTable.Items.Add(11, 'GI', 'Guarantor internal identifier');
    oTable.Items.Add(12, 'GN', 'Guarantor external  identifier');
    oTable.Items.Add(13, 'LN', 'License number');
    oTable.Items.Add(14, 'LR', 'Local Registry ID');
    oTable.Items.Add(16, 'MA', 'Medicaid number');
    oTable.Items.Add(17, 'MC', 'Medicare number');
    oTable.Items.Add(18, 'MR', 'Medical record number');
    oTable.Items.Add(15, 'MS', 'MasterCard');
    oTable.Items.Add(19, 'NE', 'National employer identifier');
    oTable.Items.Add(21, 'NH', 'National Health Plan Identifier');
    oTable.Items.Add(20, 'NI', 'National unique individual identifier');
    oTable.Items.Add(22, 'NNxxx', 'National Person Identifier where the xxx is the ISO table 3166  3-character (alphabetic) country  code');
    oTable.Items.Add(23, 'NPI', 'National provider identifier');
    oTable.Items.Add(24, 'PI', 'Patient internal identifier');
    oTable.Items.Add(25, 'PN', 'Person number');
    oTable.Items.Add(26, 'PRN', 'Provider number');
    oTable.Items.Add(27, 'PT', 'Patient external identifier');
    oTable.Items.Add(29, 'RR', 'Railroad Retirement number');
    oTable.Items.Add(28, 'RRI', 'Regional registry ID');
    oTable.Items.Add(30, 'SL', 'State license');
    oTable.Items.Add(31, 'SR', 'State registry ID');
    oTable.Items.Add(32, 'SS', 'Social Security number');
    oTable.Items.Add(33, 'U', 'Unspecified');
    oTable.Items.Add(34, 'UPIN', 'Medicare/HCFA'#146's Universal Physician Identification numbers');
    oTable.Items.Add(36, 'VN', 'Visit number');
    oTable.Items.Add(35, 'VS', 'VISA');
    oTable.Items.Add(37, 'WC', 'WIC identifier');
    oTable.Items.Add(38, 'XX', 'Organization identifier');
End;

procedure LoadTable204(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(204, 'Organizational name type');
    oTable.Items.Add(1, 'A', 'Alias name');
    oTable.Items.Add(3, 'D', 'Display name');
    oTable.Items.Add(2, 'L', 'Legal name');
    oTable.Items.Add(4, 'SL', 'Stock exchange listing name');
End;

procedure LoadTable205(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(205, 'Price type');
    oTable.Items.Add(1, 'AP', 'administrative price or handling fee');
    oTable.Items.Add(5, 'DC', 'direct unit cost');
    oTable.Items.Add(6, 'IC', 'indirect unit cost');
    oTable.Items.Add(2, 'PF', 'professional fee for performing provider');
    oTable.Items.Add(4, 'TF', 'technology fee for use of equipment');
    oTable.Items.Add(7, 'TP', 'total price');
    oTable.Items.Add(3, 'UP', 'unit price, may be based on length of procedure or service');
End;

procedure LoadTable206(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(206, 'Segment action code');
    oTable.Items.Add(1, 'A', 'Add/Insert');
    oTable.Items.Add(2, 'D', 'Delete');
    oTable.Items.Add(3, 'U', 'Update');
End;

procedure LoadTable207(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(207, 'Processing mode');
    oTable.Items.Add(1, 'A', 'Archive');
    oTable.Items.Add(3, 'I', 'Initial load');
    oTable.Items.Add(5, 'not present', 'Not present (the default, meaning current  processing)');
    oTable.Items.Add(2, 'R', 'Restore from archive');
    oTable.Items.Add(4, 'T', 'Current processing, transmitted at intervals (scheduled or on demand)');
End;

procedure LoadTable208(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(208, 'Query response status');
    oTable.Items.Add(3, 'AE', 'Application error');
    oTable.Items.Add(4, 'AR', 'Application reject');
    oTable.Items.Add(2, 'NF', 'No data found, no errors');
    oTable.Items.Add(1, 'OK', 'Data found, no errors (this is the default)');
End;

procedure LoadTable209(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(209, 'Relational Operator');
    oTable.Items.Add(7, 'CT', 'Contains');
    oTable.Items.Add(1, 'EQ', 'Equal');
    oTable.Items.Add(6, 'GE', 'Greater than or equal');
    oTable.Items.Add(8, 'GN', 'Generic');
    oTable.Items.Add(4, 'GT', 'Greater than');
    oTable.Items.Add(5, 'LE', 'Less than or equal');
    oTable.Items.Add(3, 'LT', 'Less than');
    oTable.Items.Add(2, 'NE', 'Not Equal');
End;

procedure LoadTable210(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(210, 'Relational Conjunction');
    oTable.Items.Add(1, 'AND', 'Default');
    oTable.Items.Add(2, 'OR', '');
End;

procedure LoadTable211(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(211, 'Alternate character sets');
    oTable.Items.Add(2, '8859/1', 'The printable characters from the ISO 8859/1 Character set');
    oTable.Items.Add(3, '8859/2', 'The printable characters from the ISO 8859/2 Character set');
    oTable.Items.Add(4, '8859/3', 'The printable characters from the ISO 8859/3 Character set');
    oTable.Items.Add(5, '8859/4', 'The printable characters from the ISO 8859/4 Character set');
    oTable.Items.Add(6, '8859/5', 'The printable characters from the ISO 8859/5 Character set');
    oTable.Items.Add(7, '8859/6', 'The printable characters from the ISO 8859/6 Character set');
    oTable.Items.Add(8, '8859/7', 'The printable characters from the ISO 8859/7 Character set');
    oTable.Items.Add(9, '8859/8', 'The printable characters from the ISO 8859/8 Character set');
    oTable.Items.Add(10, '8859/9', 'The printable characters from the ISO 8859/9 Character set');
    oTable.Items.Add(1, 'ASCII', 'The printable 7-bit ASCII character set . (This is the default if this field is omitted)');
    oTable.Items.Add(11, 'ISO IR14', 'Code for Information Exchange (one byte)(JIS X 0201-1976),  Note that the code contains a  space, i.e. "ISO IR14".');
    oTable.Items.Add(13, 'ISO IR159', 'Code of the supplementary Japanese Graphic Character set for information interchange (JIS X  0212-1990), Note that the code contains a space, i.e. "ISO IR159".');
    oTable.Items.Add(12, 'ISO IR87', 'Code for the Japanese Graphic Character set for information interchange (JIS X 0208-1990), Note that the code contains a space, i.e. "ISO IR87".');
    oTable.Items.Add(14, 'UNICODE', 'The world wide character standard from ISO/IEC 10646-1-1993');
End;

procedure LoadTable212(oTables : THL7V2ModelTables);
Begin
  oTables.Add(212, 'Nationality');
End;

procedure LoadTable213(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(213, 'Purge status');
    oTable.Items.Add(2, 'D', 'The visit is marked for deletion and the user cannot enter new data against it.');
    oTable.Items.Add(3, 'I', 'The visit is marked inactive and the user cannot enter new data against it.');
    oTable.Items.Add(1, 'P', 'Marked for purge.  User is no longer able to update the visit.');
End;

procedure LoadTable214(oTables : THL7V2ModelTables);
Begin
  oTables.Add(214, 'Special Program Codes');
End;

procedure LoadTable215(oTables : THL7V2ModelTables);
Begin
  oTables.Add(215, 'Publicity Code');
End;

procedure LoadTable216(oTables : THL7V2ModelTables);
Begin
  oTables.Add(216, 'Patient Status Code');
End;

procedure LoadTable217(oTables : THL7V2ModelTables);
Begin
  oTables.Add(217, 'Visit Priority Code');
End;

procedure LoadTable218(oTables : THL7V2ModelTables);
Begin
  oTables.Add(218, 'Patient Charge Adjustment Code');
End;

procedure LoadTable219(oTables : THL7V2ModelTables);
Begin
  oTables.Add(219, 'Recurring Service Code');
End;

procedure LoadTable220(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(220, 'Living arrangement');
    oTable.Items.Add(1, 'A', 'Alone');
    oTable.Items.Add(2, 'F', 'Family');
    oTable.Items.Add(3, 'I', 'Institution');
    oTable.Items.Add(4, 'R', 'Relative');
    oTable.Items.Add(6, 'S', 'Spouse Only');
    oTable.Items.Add(5, 'U', 'Unknown');
End;

procedure LoadTable222(oTables : THL7V2ModelTables);
Begin
  oTables.Add(222, 'Contact Reason');
End;

procedure LoadTable223(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(223, 'Living dependency');
    oTable.Items.Add(5, 'CB', 'Common Bath');
    oTable.Items.Add(1, 'D', 'Spouse dependent');
    oTable.Items.Add(2, 'M', 'Medical Supervision Required');
    oTable.Items.Add(3, 'S', 'Small children');
    oTable.Items.Add(4, 'WU', 'Walk up');
End;

procedure LoadTable224(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(224, 'Transport arranged');
    oTable.Items.Add(1, 'A', 'Arranged');
    oTable.Items.Add(2, 'N', 'Not Arranged');
    oTable.Items.Add(3, 'U', 'Unknown');
End;

procedure LoadTable225(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(225, 'Escort required');
    oTable.Items.Add(2, 'N', 'Not Required');
    oTable.Items.Add(1, 'R', 'Required');
    oTable.Items.Add(3, 'U', 'Unknown');
End;

procedure LoadTable227(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(227, 'Manufacturers of vaccines (code=MVX)');
    oTable.Items.Add(1, 'AB', 'Abbott Laboratories');
    oTable.Items.Add(2, 'AD', 'Adams Laboratories');
    oTable.Items.Add(3, 'ALP', 'Alpha Therapeutic Corporation');
    oTable.Items.Add(4, 'AR', 'Armour (Inactive '#150' use CEN)');
    oTable.Items.Add(5, 'AVI', 'Aviron');
    oTable.Items.Add(6, 'BA', 'Baxter Healthcare Corporation');
    oTable.Items.Add(7, 'BAY', 'Bayer Corporation (includes Miles, Inc. and Cutter Laboratories)');
    oTable.Items.Add(8, 'BP', 'Berna Products (Inactive '#150' use BPC)');
    oTable.Items.Add(9, 'BPC', 'Berna Products Corporation (includes Swiss Serum and Vaccine Institute Berna)');
    oTable.Items.Add(10, 'CEN', 'Centeon L.L.C. (includes Armour Pharmaceutical Company)');
    oTable.Items.Add(11, 'CHI', 'Chiron Corporation');
    oTable.Items.Add(12, 'CON', 'Connaught (inactive '#150' use PMC)');
    oTable.Items.Add(13, 'EVN', 'Evans Medical Limited');
    oTable.Items.Add(14, 'GRE', 'Greer Laboratories, Inc.');
    oTable.Items.Add(15, 'IAG', 'Immuno International AG');
    oTable.Items.Add(16, 'IM', 'Merieux (inactive '#150' Use PMC)');
    oTable.Items.Add(17, 'IUS', 'Immuno-US, Inc.');
    oTable.Items.Add(18, 'JPN', 'The Research Foundation for Microbial Diseases of Osaka University (BIKEN)');
    oTable.Items.Add(19, 'KGC', 'Korea Green Cross Corporation');
    oTable.Items.Add(20, 'LED', 'Lederle (inactive '#150' use WAL)');
    oTable.Items.Add(21, 'MA', 'Massachusetts Public Health Biologic Laboratories)');
    oTable.Items.Add(22, 'MED', 'Medimmune, Inc.');
    oTable.Items.Add(23, 'MIL', 'Miles (inactive '#150' use BAY)');
    oTable.Items.Add(24, 'MIP', 'Michigan Biologic Products Institute');
    oTable.Items.Add(25, 'MSD', 'Merck & Co., Inc.');
    oTable.Items.Add(26, 'NAB', 'NABI (formerly North American Biologicals, Inc.)');
    oTable.Items.Add(28, 'NAV', 'North American Vaccine, Inc.');
    oTable.Items.Add(29, 'NOV', 'Novartis Pharmaceutical Corporation');
    oTable.Items.Add(27, 'NYB', 'New York Blood Center');
    oTable.Items.Add(31, 'ORT', 'Ortho Diagnostic Systems, Inc.');
    oTable.Items.Add(30, 'OTC', 'Organon Teknika Corporation');
    oTable.Items.Add(41, 'OTH', 'Other');
    oTable.Items.Add(32, 'PD', 'Parkdale Pharmaceuticals (formerly Parke-Davis)');
    oTable.Items.Add(33, 'PMC', 'Pasteur Merieux Connaught (includes Connaught Laboratories and Pasteur Merieux)');
    oTable.Items.Add(34, 'PRX', 'Praxis Biologics (inactive '#150' use WAL)');
    oTable.Items.Add(35, 'SCL', 'Sclavo, Inc.');
    oTable.Items.Add(36, 'SI', 'Swiss Serum and Vaccine Inst. (inactive '#150' use BPC)');
    oTable.Items.Add(37, 'SKB', 'SmithKline Beecham');
    oTable.Items.Add(42, 'UNK', 'Unknown manufacturer');
    oTable.Items.Add(38, 'USA', 'United States Army Medical Research and Materiel Command');
    oTable.Items.Add(39, 'WA', 'Wyeth-Ayerst (inactive '#150' use WAL)');
    oTable.Items.Add(40, 'WAL', 'Wyeth-Ayerst (includes Wyeth-Lederle Vaccines and Pediatrics, Wyeth Laboratories, Lederle Laboratories, and Praxis Biologics)');
End;

procedure LoadTable228(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(228, 'Diagnosis classification');
    oTable.Items.Add(1, 'C', 'Consultation');
    oTable.Items.Add(2, 'D', 'Diagnosis');
    oTable.Items.Add(8, 'I', 'Invasive procedure not classified elsewhere (I.V., catheter, etc.)');
    oTable.Items.Add(3, 'M', 'Medication (antibiotic)');
    oTable.Items.Add(4, 'O', 'Other');
    oTable.Items.Add(5, 'R', 'Radiological scheduling (not using ICDA codes)');
    oTable.Items.Add(6, 'S', 'Sign and symptom');
    oTable.Items.Add(7, 'T', 'Tissue diagnosis');
End;

procedure LoadTable229(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(229, 'DRG payor');
    oTable.Items.Add(2, 'C', 'Champus');
    oTable.Items.Add(3, 'G', 'Managed Care Organization');
    oTable.Items.Add(1, 'M', 'Medicare');
End;

procedure LoadTable230(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(230, 'Procedure functional type');
    oTable.Items.Add(1, 'A', 'Anesthesia');
    oTable.Items.Add(4, 'D', 'Diagnostic procedure');
    oTable.Items.Add(3, 'I', 'Invasive procedure not classified elsewhere (e.g., IV, catheter, etc.)');
    oTable.Items.Add(2, 'P', 'Procedure for treatment (therapeutic, including operations)');
End;

procedure LoadTable231(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(231, 'Student status');
    oTable.Items.Add(1, 'F', 'Full-time student');
    oTable.Items.Add(3, 'N', 'Not a student');
    oTable.Items.Add(2, 'P', 'Part-time student');
End;

procedure LoadTable232(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(232, 'Insurance company contact reason');
    oTable.Items.Add(1, '01', 'Medicare claim status');
    oTable.Items.Add(2, '02', 'Medicaid claim status');
    oTable.Items.Add(3, '03', 'Name/address change');
End;

procedure LoadTable233(oTables : THL7V2ModelTables);
Begin
  oTables.Add(233, 'Non-concur Code/Description');
End;

procedure LoadTable234(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(234, 'Report timing');
    oTable.Items.Add(8, '10D', '10 day report');
    oTable.Items.Add(9, '15D', '15 day report');
    oTable.Items.Add(10, '30D', '30 day report');
    oTable.Items.Add(6, '3D', '3 day report');
    oTable.Items.Add(7, '7D', '7 day report');
    oTable.Items.Add(2, 'AD', 'Additional information');
    oTable.Items.Add(1, 'CO', 'Correction');
    oTable.Items.Add(4, 'DE', 'Device evaluation');
    oTable.Items.Add(5, 'PD', 'Periodic');
    oTable.Items.Add(3, 'RQ', 'Requested information');
End;

procedure LoadTable235(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(235, 'Report source');
    oTable.Items.Add(1, 'C', 'Clinical trial');
    oTable.Items.Add(5, 'D', 'Database/registry/poison control center');
    oTable.Items.Add(9, 'E', 'Distributor');
    oTable.Items.Add(3, 'H', 'Health professional');
    oTable.Items.Add(2, 'L', 'Literature');
    oTable.Items.Add(8, 'M', 'Manufacturer/marketing authority holder');
    oTable.Items.Add(6, 'N', 'Non-healthcare professional');
    oTable.Items.Add(10, 'O', 'Other');
    oTable.Items.Add(7, 'P', 'Patient');
    oTable.Items.Add(4, 'R', 'Regulatory agency');
End;

procedure LoadTable236(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(236, 'Event reported to');
    oTable.Items.Add(4, 'D', 'Distributor');
    oTable.Items.Add(2, 'L', 'Local facility/user facility');
    oTable.Items.Add(1, 'M', 'Manufacturer');
    oTable.Items.Add(3, 'R', 'Regulatory agency');
End;

procedure LoadTable237(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(237, 'Event qualification');
    oTable.Items.Add(3, 'A', 'Abuse');
    oTable.Items.Add(8, 'B', 'Unexpected beneficial effect');
    oTable.Items.Add(5, 'D', 'Dependency');
    oTable.Items.Add(1, 'I', 'Interaction');
    oTable.Items.Add(6, 'L', 'Lack of expect therapeutic effect');
    oTable.Items.Add(4, 'M', 'Misuse');
    oTable.Items.Add(2, 'O', 'Overdose');
    oTable.Items.Add(7, 'W', 'Drug withdrawal');
End;

procedure LoadTable238(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(238, 'Event seriousness');
    oTable.Items.Add(3, 'N', 'No');
    oTable.Items.Add(2, 'S', 'Significant');
    oTable.Items.Add(1, 'Y', 'Yes');
End;

procedure LoadTable239(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(239, 'Event expected');
    oTable.Items.Add(2, 'N', 'No');
    oTable.Items.Add(3, 'U', 'Unknown');
    oTable.Items.Add(1, 'Y', 'Yes');
End;

procedure LoadTable240(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(240, 'Event consequence');
    oTable.Items.Add(5, 'C', 'Congenital anomaly/birth defect');
    oTable.Items.Add(1, 'D', 'Death');
    oTable.Items.Add(3, 'H', 'Caused hospitalized');
    oTable.Items.Add(6, 'I', 'Incapacity which is significant, persistent or permanent');
    oTable.Items.Add(7, 'J', 'Disability which is significant, persistent or permanent');
    oTable.Items.Add(2, 'L', 'Life threatening');
    oTable.Items.Add(9, 'O', 'Other');
    oTable.Items.Add(4, 'P', 'Prolonged hospitalization');
    oTable.Items.Add(8, 'R', 'Required intervention to prevent permanent impairment/damage');
End;

procedure LoadTable241(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(241, 'Patient outcome');
    oTable.Items.Add(1, 'D', 'Died');
    oTable.Items.Add(6, 'F', 'Fully recovered');
    oTable.Items.Add(3, 'N', 'Not recovering/unchanged');
    oTable.Items.Add(2, 'R', 'Recovering');
    oTable.Items.Add(5, 'S', 'Sequelae');
    oTable.Items.Add(7, 'U', 'Unknown');
    oTable.Items.Add(4, 'W', 'Worsening');
End;

procedure LoadTable242(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(242, 'Primary observer'#146's qualification');
    oTable.Items.Add(5, 'C', 'Health care consumer/patient');
    oTable.Items.Add(4, 'H', 'Other health professional');
    oTable.Items.Add(6, 'L', 'Lawyer/attorney');
    oTable.Items.Add(3, 'M', 'Mid-level professional (nurse, nurse practitioner, physician''s assistant)');
    oTable.Items.Add(7, 'O', 'Other non-health professional');
    oTable.Items.Add(1, 'P', 'Physician (osteopath, homeopath)');
    oTable.Items.Add(2, 'R', 'Pharmacist');
End;

procedure LoadTable243(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(243, 'Identity may be divulged');
    oTable.Items.Add(2, 'N', 'No');
    oTable.Items.Add(3, 'NA', 'Not applicable');
    oTable.Items.Add(1, 'Y', 'Yes');
End;

procedure LoadTable244(oTables : THL7V2ModelTables);
Begin
  oTables.Add(244, 'Single Use Device');
End;

procedure LoadTable245(oTables : THL7V2ModelTables);
Begin
  oTables.Add(245, 'Product Problem');
End;

procedure LoadTable246(oTables : THL7V2ModelTables);
Begin
  oTables.Add(246, 'Product Available For Inspection');
End;

procedure LoadTable247(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(247, 'Status of evaluation');
    oTable.Items.Add(5, 'A', 'Evaluation anticipated, but not yet begun');
    oTable.Items.Add(7, 'C', 'Product received in condition which made analysis impossible');
    oTable.Items.Add(6, 'D', 'Product discarded -- unable to follow up');
    oTable.Items.Add(8, 'I', 'Product remains implanted -- unable to follow up');
    oTable.Items.Add(3, 'K', 'Problem already known, no evaluation necessary');
    oTable.Items.Add(12, 'O', 'Other');
    oTable.Items.Add(2, 'P', 'Evaluation in progress');
    oTable.Items.Add(10, 'Q', 'Product under quarantine -- unable to follow up');
    oTable.Items.Add(11, 'R', 'Product under recall/corrective action');
    oTable.Items.Add(9, 'U', 'Product unavailable for follow up investigation');
    oTable.Items.Add(4, 'X', 'Product not made by company');
    oTable.Items.Add(1, 'Y', 'Evaluation completed');
End;

procedure LoadTable248(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(248, 'Product source');
    oTable.Items.Add(1, 'A', 'Actual product involved in incident was evaluated');
    oTable.Items.Add(2, 'L', 'A product from the same lot as the actual product involved was evaluated');
    oTable.Items.Add(4, 'N', 'A product from a controlled/non-related inventory was evaluated');
    oTable.Items.Add(3, 'R', 'A product from a reserve sample was evaluated');
End;

procedure LoadTable249(oTables : THL7V2ModelTables);
Begin
  oTables.Add(249, 'Generic Product');
End;

procedure LoadTable250(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(250, 'Relatedness assessment');
    oTable.Items.Add(1, 'H', 'Highly probable');
    oTable.Items.Add(4, 'I', 'Improbable');
    oTable.Items.Add(2, 'M', 'Moderately probable');
    oTable.Items.Add(5, 'N', 'Not related');
    oTable.Items.Add(3, 'S', 'Somewhat probable');
End;

procedure LoadTable251(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(251, 'Action taken in response to the event');
    oTable.Items.Add(4, 'DI', 'Product dose or frequency of use increased');
    oTable.Items.Add(3, 'DR', 'Product dose or frequency of use reduced');
    oTable.Items.Add(6, 'N', 'None');
    oTable.Items.Add(5, 'OT', 'Other');
    oTable.Items.Add(1, 'WP', 'Product withdrawn permanently');
    oTable.Items.Add(2, 'WT', 'Product withdrawn temporarily');
End;

procedure LoadTable252(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(252, 'Causality observations');
    oTable.Items.Add(1, 'AW', 'Abatement of event after product withdrawn');
    oTable.Items.Add(2, 'BE', 'Event recurred after product reintroduced');
    oTable.Items.Add(8, 'DR', 'Dose response observed');
    oTable.Items.Add(5, 'EX', 'Alternative explanations for the event available');
    oTable.Items.Add(4, 'IN', 'Event occurred after product introduced');
    oTable.Items.Add(3, 'LI', 'Literature reports association of product with event');
    oTable.Items.Add(10, 'OE', 'Occurrence of event was confirmed by objective evidence');
    oTable.Items.Add(11, 'OT', 'Other');
    oTable.Items.Add(6, 'PL', 'Effect observed when patient receives placebo');
    oTable.Items.Add(9, 'SE', 'Similar events in past for this patient');
    oTable.Items.Add(7, 'TC', 'Toxic levels of product documented in blood or body fluids');
End;

procedure LoadTable253(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(253, 'Indirect exposure mechanism');
    oTable.Items.Add(1, 'B', 'Breast milk');
    oTable.Items.Add(3, 'F', 'Father');
    oTable.Items.Add(5, 'O', 'Other');
    oTable.Items.Add(2, 'P', 'Transplacental');
    oTable.Items.Add(4, 'X', 'Blood product');
End;

procedure LoadTable254(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(254, 'Kind of quantity');
    oTable.Items.Add(51, 'ABS', 'Absorbance');
    oTable.Items.Add(40, 'ACNC', 'Concentration, Arbitrary Substance');
    oTable.Items.Add(52, 'ACT', '*Activity');
    oTable.Items.Add(53, 'APER', 'Appearance');
    oTable.Items.Add(54, 'ARB', '*Arbitrary');
    oTable.Items.Add(55, 'AREA', 'Area');
    oTable.Items.Add(56, 'ASPECT', 'Aspect');
    oTable.Items.Add(1, 'CACT', '*Catalytic Activity');
    oTable.Items.Add(4, 'CCNT', '*Catalytic Content');
    oTable.Items.Add(3, 'CCRTO', 'Catalytic Concentration Ratio');
    oTable.Items.Add(5, 'CFR', '*Catalytic Fraction');
    oTable.Items.Add(57, 'CLAS', 'Class');
    oTable.Items.Add(2, 'CNC', '*Catalytic Concentration');
    oTable.Items.Add(58, 'CNST', '*Constant');
    oTable.Items.Add(59, 'COEF', '*Coefficient');
    oTable.Items.Add(60, 'COLOR', 'Color');
    oTable.Items.Add(61, 'CONS', 'Consistency');
    oTable.Items.Add(6, 'CRAT', '*Catalytic Rate');
    oTable.Items.Add(7, 'CRTO', 'Catalytic Ratio');
    oTable.Items.Add(62, 'DEN', 'Density');
    oTable.Items.Add(63, 'DEV', 'Device');
    oTable.Items.Add(64, 'DIFF', '*Difference');
    oTable.Items.Add(65, 'ELAS', 'Elasticity');
    oTable.Items.Add(66, 'ELPOT', 'Electrical Potential (Voltage)');
    oTable.Items.Add(67, 'ELRAT', 'Electrical current (amperage)');
    oTable.Items.Add(68, 'ELRES', 'Electrical Resistance');
    oTable.Items.Add(69, 'ENGR', 'Energy');
    oTable.Items.Add(8, 'ENT', '*Entitic');
    oTable.Items.Add(10, 'ENTCAT', '*Entitic Catalytic Activity');
    oTable.Items.Add(11, 'ENTNUM', '*Entitic Number');
    oTable.Items.Add(9, 'ENTSUB', '*Entitic Substance of Amount');
    oTable.Items.Add(12, 'ENTVOL', '*Entitic Volume');
    oTable.Items.Add(70, 'EQL', 'Equilibrium');
    oTable.Items.Add(71, 'FORCE', 'Mechanical force');
    oTable.Items.Add(72, 'FREQ', 'Frequency');
    oTable.Items.Add(73, 'IMP', 'Impression/ interpretation of study');
    oTable.Items.Add(74, 'KINV', '*Kinematic Viscosity');
    oTable.Items.Add(75, 'LEN', 'Length');
    oTable.Items.Add(76, 'LINC', '*Length Increment');
    oTable.Items.Add(77, 'LIQ', '*Liquifaction');
    oTable.Items.Add(13, 'MASS', '*Mass');
    oTable.Items.Add(14, 'MCNC', '*Mass Concentration');
    oTable.Items.Add(16, 'MCNT', 'Mass Content');
    oTable.Items.Add(15, 'MCRTO', '*Mass Concentration Ratio');
    oTable.Items.Add(17, 'MFR', '*Mass Fraction');
    oTable.Items.Add(78, 'MGFLUX', 'Magnetic flux');
    oTable.Items.Add(18, 'MINC', '*Mass Increment');
    oTable.Items.Add(79, 'MORPH', 'Morphology');
    oTable.Items.Add(80, 'MOTIL', 'Motility');
    oTable.Items.Add(19, 'MRAT', '*Mass Rate');
    oTable.Items.Add(20, 'MRTO', '*Mass Ratio');
    oTable.Items.Add(22, 'NCNC', '*Number Concentration');
    oTable.Items.Add(23, 'NCNT', '*Number Content');
    oTable.Items.Add(24, 'NFR', '*Number Fraction');
    oTable.Items.Add(25, 'NRTO', '*Number Ratio');
    oTable.Items.Add(21, 'NUM', '*Number');
    oTable.Items.Add(81, 'OD', 'Optical density');
    oTable.Items.Add(82, 'OSMOL', '*Osmolality');
    oTable.Items.Add(84, 'PRES', '*Pressure (Partial)');
    oTable.Items.Add(83, 'PRID', 'Presence/Identity/Existence');
    oTable.Items.Add(85, 'PWR', 'Power (wattage)');
    oTable.Items.Add(86, 'RANGE', '*Ranges');
    oTable.Items.Add(87, 'RATIO', '*Ratios');
    oTable.Items.Add(49, 'RCRLTM', '*Reciprocal Relative Time');
    oTable.Items.Add(88, 'RDEN', '*Relative Density');
    oTable.Items.Add(89, 'REL', '*Relative');
    oTable.Items.Add(41, 'RLMCNC', '*Relative Mass Concentration');
    oTable.Items.Add(42, 'RLSCNC', '*Relative Substance Concentration');
    oTable.Items.Add(50, 'RLTM', '*Relative Time');
    oTable.Items.Add(90, 'SATFR', '*Saturation Fraction');
    oTable.Items.Add(27, 'SCNC', '*Substance Concentration');
    oTable.Items.Add(32, 'SCNCIN', '*Substance Concentration Increment');
    oTable.Items.Add(29, 'SCNT', '*Substance Content');
    oTable.Items.Add(30, 'SCNTR', '*Substance Content Rate');
    oTable.Items.Add(28, 'SCRTO', '*Substance Concentration Ratio');
    oTable.Items.Add(31, 'SFR', '*Substance Fraction');
    oTable.Items.Add(91, 'SHAPE', 'Shape');
    oTable.Items.Add(92, 'SMELL', 'Smell');
    oTable.Items.Add(33, 'SRAT', '*Substance Rate');
    oTable.Items.Add(34, 'SRTO', '*Substance Ratio');
    oTable.Items.Add(26, 'SUB', '*Substance Amount');
    oTable.Items.Add(93, 'SUSC', '*Susceptibility');
    oTable.Items.Add(94, 'TASTE', 'Taste');
    oTable.Items.Add(95, 'TEMP', '*Temperature');
    oTable.Items.Add(96, 'TEMPDF', '*Temperature Difference');
    oTable.Items.Add(97, 'TEMPIN', '*Temperature Increment');
    oTable.Items.Add(43, 'THRMCNC', '*Threshold Mass Concentration');
    oTable.Items.Add(44, 'THRSCNC', '*Threshold Substance Concentration');
    oTable.Items.Add(45, 'TIME', '*Time (e.g. seconds)');
    oTable.Items.Add(98, 'TITR', '*Dilution Factor (Titer)');
    oTable.Items.Add(46, 'TMDF', '*Time Difference');
    oTable.Items.Add(47, 'TMSTP', '*Time Stamp -- Date and Time');
    oTable.Items.Add(48, 'TRTO', '*Time Ratio');
    oTable.Items.Add(99, 'TYPE', '*Type');
    oTable.Items.Add(36, 'VCNT', '*Volume Content');
    oTable.Items.Add(100, 'VEL', '*Velocity');
    oTable.Items.Add(101, 'VELRT', '*Velocity Ratio');
    oTable.Items.Add(37, 'VFR', '*Volume Fraction');
    oTable.Items.Add(102, 'VISC', '*Viscosity');
    oTable.Items.Add(35, 'VOL', '*Volume');
    oTable.Items.Add(38, 'VRAT', '*Volume Rate');
    oTable.Items.Add(39, 'VRTO', '*Volume Ratio');
End;

procedure LoadTable255(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(255, 'Duration categories');
    oTable.Items.Add(2, '* (star)', 'Life of the "unit."  Used for blood products.');
    oTable.Items.Add(13, '12H', '12 hours');
    oTable.Items.Add(4, '1H', '1 hour');
    oTable.Items.Add(24, '1L', '1 months (30 days)');
    oTable.Items.Add(20, '1W', '1 week');
    oTable.Items.Add(6, '2.5H', '2'#189' hours');
    oTable.Items.Add(14, '24H', '24 hours');
    oTable.Items.Add(15, '2D', '2 days');
    oTable.Items.Add(5, '2H', '2 hours');
    oTable.Items.Add(25, '2L', '2 months');
    oTable.Items.Add(21, '2W', '2 weeks');
    oTable.Items.Add(3, '30M', '30 minutes');
    oTable.Items.Add(16, '3D', '3 days');
    oTable.Items.Add(7, '3H', '3 hours');
    oTable.Items.Add(26, '3L', '3 months');
    oTable.Items.Add(22, '3W', '3 weeks');
    oTable.Items.Add(17, '4D', '4 days');
    oTable.Items.Add(8, '4H', '4 hours');
    oTable.Items.Add(23, '4W', '4 weeks');
    oTable.Items.Add(18, '5D', '5 days');
    oTable.Items.Add(9, '5H', '5 hours');
    oTable.Items.Add(19, '6D', '6 days');
    oTable.Items.Add(10, '6H', '6 hours');
    oTable.Items.Add(11, '7H', '7 hours');
    oTable.Items.Add(12, '8H', '8 hours');
    oTable.Items.Add(1, 'PT', 'To identify measures at a point in time.  This is a synonym for "spot" or "random" as applied to urine measurements.');
End;

procedure LoadTable256(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(256, 'Time delay post challenge');
    oTable.Items.Add(38, '10D', '10 days');
    oTable.Items.Add(14, '10M', '10 minutes post challenge');
    oTable.Items.Add(29, '12H', '12 hours post challenge');
    oTable.Items.Add(15, '15M', '15 minutes post challenge');
    oTable.Items.Add(19, '1H', '1 hour post challenge');
    oTable.Items.Add(42, '1L', '1 month (30 days) post challenge');
    oTable.Items.Add(5, '1M', '1 minute post challenge');
    oTable.Items.Add(37, '1W', '1 week');
    oTable.Items.Add(21, '2.5H', '2 1/2 hours post challenge');
    oTable.Items.Add(16, '20M', '20 minutes post challenge');
    oTable.Items.Add(30, '24H', '24 hours post challenge');
    oTable.Items.Add(17, '25M', '25 minutes post challenge');
    oTable.Items.Add(31, '2D', '2 days');
    oTable.Items.Add(20, '2H', '2 hours post challenge');
    oTable.Items.Add(43, '2L', '2 months (60 days) post challenge');
    oTable.Items.Add(6, '2M', '2 minutes post challenge');
    oTable.Items.Add(39, '2W', '2 weeks');
    oTable.Items.Add(18, '30M', '30 minutes post challenge');
    oTable.Items.Add(32, '3D', '3 days');
    oTable.Items.Add(22, '3H', '3 hours post challenge');
    oTable.Items.Add(44, '3L', '3 months (90 days) post challenge');
    oTable.Items.Add(7, '3M', '3 minutes post challenge');
    oTable.Items.Add(40, '3W', '3 weeks');
    oTable.Items.Add(33, '4D', '4 days');
    oTable.Items.Add(23, '4H', '4 hours post challenge');
    oTable.Items.Add(8, '4M', '4 minutes post challenge');
    oTable.Items.Add(41, '4W', '4 weeks');
    oTable.Items.Add(34, '5D', '5 days');
    oTable.Items.Add(24, '5H', '5  hours post challenge');
    oTable.Items.Add(9, '5M', '5 minutes post challenge');
    oTable.Items.Add(35, '6D', '6 days');
    oTable.Items.Add(25, '6H', '6 hours post challenge');
    oTable.Items.Add(10, '6M', '6 minutes post challenge');
    oTable.Items.Add(36, '7D', '7 days');
    oTable.Items.Add(26, '7H', '7 hours post challenge');
    oTable.Items.Add(11, '7M', '7 minutes post challenge');
    oTable.Items.Add(27, '8H', '8 hours post challenge');
    oTable.Items.Add(28, '8H SHIFT', '8 hours aligned on nursing shifts');
    oTable.Items.Add(12, '8M', '8 minutes post challenge');
    oTable.Items.Add(13, '9M', '9 minutes post challenge');
    oTable.Items.Add(1, 'BS', 'Baseline (time just before the challenge)');
    oTable.Items.Add(2, 'PEAK', 'The time post drug dose at which the highest drug level is reached (differs by drug)');
    oTable.Items.Add(4, 'RANDOM', 'Time from the challenge, or dose not specified. (random)');
    oTable.Items.Add(3, 'TROUGH', 'The time post drug dose at which the lowest drug level is reached (varies with drug)');
End;

procedure LoadTable257(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(257, 'Nature of challenge');
    oTable.Items.Add(1, 'CFST', 'Fasting (no calorie intake) for the period specified in the time component of the term, e.g., 1H POST  CFST');
    oTable.Items.Add(2, 'EXCZ', 'Exercise undertaken as challenge (can be quantified)');
    oTable.Items.Add(3, 'FFST', 'No fluid intake for the period specified in the time component of the term');
End;

procedure LoadTable258(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(258, 'Relationship modifier');
    oTable.Items.Add(4, 'BPU', 'Blood product unit');
    oTable.Items.Add(1, 'CONTROL', 'Control');
    oTable.Items.Add(3, 'DONOR', 'Donor');
    oTable.Items.Add(2, 'PATIENT', 'Patient');
End;

procedure LoadTable259(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(259, 'Modality');
    oTable.Items.Add(1, 'AS', 'Angioscopy');
    oTable.Items.Add(2, 'BS', 'Biomagnetic imaging');
    oTable.Items.Add(3, 'CD', 'Color flow doppler');
    oTable.Items.Add(4, 'CP', 'Colposcopy');
    oTable.Items.Add(5, 'CR', 'Computed radiography');
    oTable.Items.Add(6, 'CS', 'Cystoscopy');
    oTable.Items.Add(7, 'CT', 'Computed tomography');
    oTable.Items.Add(8, 'DD', 'Duplex doppler');
    oTable.Items.Add(9, 'DG', 'Diapanography');
    oTable.Items.Add(10, 'DM', 'Digital microscopy');
    oTable.Items.Add(11, 'EC', 'Echocardiography');
    oTable.Items.Add(12, 'ES', 'Endoscopy');
    oTable.Items.Add(13, 'FA', 'Fluorescein angiography');
    oTable.Items.Add(14, 'FS', 'Fundoscopy');
    oTable.Items.Add(15, 'LP', 'Laparoscopy');
    oTable.Items.Add(16, 'LS', 'Laser surface scan');
    oTable.Items.Add(17, 'MA', 'Magnetic resonance angiography');
    oTable.Items.Add(18, 'MS', 'Magnetic resonance spectroscopy');
    oTable.Items.Add(19, 'NM', 'Nuclear Medicine (radioisotope study)');
    oTable.Items.Add(20, 'OT', 'Other');
    oTable.Items.Add(21, 'PT', 'Positron emission tomography (PET)');
    oTable.Items.Add(22, 'RF', 'Radio fluoroscopy');
    oTable.Items.Add(23, 'ST', 'Single photon emission computed tomography (SPECT)');
    oTable.Items.Add(24, 'TG', 'Thermography');
    oTable.Items.Add(25, 'US', 'Ultrasound');
    oTable.Items.Add(26, 'XA', 'X-ray Angiography');
End;

procedure LoadTable260(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(260, 'Patient location type');
    oTable.Items.Add(3, 'B', 'Bed');
    oTable.Items.Add(6, 'C', 'Clinic');
    oTable.Items.Add(7, 'D', 'Department');
    oTable.Items.Add(4, 'E', 'Exam Room');
    oTable.Items.Add(8, 'L', 'Other Location');
    oTable.Items.Add(1, 'N', 'Nursing Unit');
    oTable.Items.Add(5, 'O', 'Operating Room');
    oTable.Items.Add(2, 'R', 'Room');
End;

procedure LoadTable261(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(261, 'Location equipment');
    oTable.Items.Add(6, 'EEG', 'Electro-Encephalogram');
    oTable.Items.Add(7, 'EKG', 'Electro-Cardiogram');
    oTable.Items.Add(4, 'INF', 'Infusion pump');
    oTable.Items.Add(5, 'IVP', 'IV pump');
    oTable.Items.Add(1, 'OXY', 'Oxygen');
    oTable.Items.Add(2, 'SUC', 'Suction');
    oTable.Items.Add(8, 'VEN', 'Ventilator');
    oTable.Items.Add(3, 'VIT', 'Vital signs monitor');
End;

procedure LoadTable262(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(262, 'Privacy level');
    oTable.Items.Add(1, 'F', 'Isolation');
    oTable.Items.Add(3, 'J', 'Private room - medically justified');
    oTable.Items.Add(2, 'P', 'Private room');
    oTable.Items.Add(4, 'Q', 'Private room - due to overflow');
    oTable.Items.Add(5, 'S', 'Semi-private room');
    oTable.Items.Add(6, 'W', 'Ward');
End;

procedure LoadTable263(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(263, 'Level of care');
    oTable.Items.Add(1, 'A', 'Ambulatory');
    oTable.Items.Add(5, 'C', 'Critical care');
    oTable.Items.Add(2, 'E', 'Emergency');
    oTable.Items.Add(3, 'F', 'Isolation');
    oTable.Items.Add(4, 'N', 'Intensive care');
    oTable.Items.Add(6, 'R', 'Routine');
    oTable.Items.Add(7, 'S', 'Surgery');
End;

procedure LoadTable264(oTables : THL7V2ModelTables);
Begin
  oTables.Add(264, 'Location Department');
End;

procedure LoadTable265(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(265, 'Specialty type');
    oTable.Items.Add(21, 'ALC', 'Allergy');
    oTable.Items.Add(1, 'AMB', 'Ambulatory');
    oTable.Items.Add(24, 'CAN', 'Cancer');
    oTable.Items.Add(13, 'CAR', 'Coronary/cardiac care');
    oTable.Items.Add(15, 'CCR', 'Critical care');
    oTable.Items.Add(23, 'CHI', 'Chiropractic');
    oTable.Items.Add(12, 'EDI', 'Education');
    oTable.Items.Add(17, 'EMR', 'Emergency');
    oTable.Items.Add(22, 'FPC', 'Family planning');
    oTable.Items.Add(9, 'INT', 'Intensive care');
    oTable.Items.Add(6, 'ISO', 'Isolation');
    oTable.Items.Add(25, 'NAT', 'Naturopathic');
    oTable.Items.Add(14, 'NBI', 'Newborn, nursery, infants');
    oTable.Items.Add(7, 'OBG', 'Obstetrics, gynecology');
    oTable.Items.Add(18, 'OBS', 'Observation');
    oTable.Items.Add(26, 'OTH', 'Other specialty');
    oTable.Items.Add(16, 'PED', 'Pediatrics');
    oTable.Items.Add(20, 'PHY', 'General/family practice');
    oTable.Items.Add(8, 'PIN', 'Pediatric/neonatal intensive care');
    oTable.Items.Add(3, 'PPS', 'Pediatric psychiatric');
    oTable.Items.Add(5, 'PRE', 'Pediatric rehabilitation');
    oTable.Items.Add(11, 'PSI', 'Psychiatric intensive care');
    oTable.Items.Add(2, 'PSY', 'Psychiatric');
    oTable.Items.Add(4, 'REH', 'Rehabilitation');
    oTable.Items.Add(10, 'SUR', 'Surgery');
    oTable.Items.Add(19, 'WIC', 'Walk-in clinic');
End;

procedure LoadTable267(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(267, 'Days of the Week');
    oTable.Items.Add(7, 'FRI', 'Friday');
    oTable.Items.Add(3, 'MON', 'Monday');
    oTable.Items.Add(1, 'SAT', 'Saturday');
    oTable.Items.Add(2, 'SUN', 'Sunday');
    oTable.Items.Add(6, 'THU', 'Thursday');
    oTable.Items.Add(4, 'TUE', 'Tuesday');
    oTable.Items.Add(5, 'WED', 'Wednesday');
End;

procedure LoadTable268(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(268, 'Override');
    oTable.Items.Add(2, 'A', 'Override allowed');
    oTable.Items.Add(3, 'R', 'Override required');
    oTable.Items.Add(1, 'X', 'Override not allowed');
End;

procedure LoadTable269(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(269, 'Charge on indicator');
    oTable.Items.Add(1, 'O', 'Charge on Order');
    oTable.Items.Add(2, 'R', 'Charge on Result');
End;

procedure LoadTable270(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(270, 'Document type');
    oTable.Items.Add(1, 'AR', 'Autopsy report');
    oTable.Items.Add(2, 'CD', 'Cardiodiagnostics');
    oTable.Items.Add(3, 'CN', 'Consultation');
    oTable.Items.Add(4, 'DI', 'Diagnostic imaging');
    oTable.Items.Add(5, 'DS', 'Discharge summary');
    oTable.Items.Add(6, 'ED', 'Emergency department report');
    oTable.Items.Add(7, 'HP', 'History and physical examination');
    oTable.Items.Add(8, 'OP', 'Operative report');
    oTable.Items.Add(9, 'PC', 'Psychiatric consultation');
    oTable.Items.Add(10, 'PH', 'Psychiatric history and physical examination');
    oTable.Items.Add(11, 'PN', 'Procedure note');
    oTable.Items.Add(12, 'PR', 'Progress note');
    oTable.Items.Add(13, 'SP', 'Surgical pathology');
    oTable.Items.Add(14, 'TS', 'Transfer summary');
End;

procedure LoadTable271(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(271, 'Document completion status');
    oTable.Items.Add(6, 'AU', 'Authenticated');
    oTable.Items.Add(1, 'DI', 'Dictated');
    oTable.Items.Add(2, 'DO', 'Documented');
    oTable.Items.Add(4, 'IN', 'Incomplete');
    oTable.Items.Add(3, 'IP', 'In Progress');
    oTable.Items.Add(7, 'LA', 'Legally authenticated');
    oTable.Items.Add(5, 'PA', 'Pre-authenticated');
End;

procedure LoadTable272(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(272, 'Document confidentiality status');
    oTable.Items.Add(2, 'R', 'Restricted');
    oTable.Items.Add(3, 'U', 'Usual control');
    oTable.Items.Add(1, 'V', 'Very restricted');
End;

procedure LoadTable273(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(273, 'Document availability status');
    oTable.Items.Add(1, 'AV', 'Available for patient care');
    oTable.Items.Add(2, 'CA', 'Deleted');
    oTable.Items.Add(3, 'OB', 'Obsolete');
    oTable.Items.Add(4, 'UN', 'Unavailable for patient care');
End;

procedure LoadTable275(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(275, 'Document storage status');
    oTable.Items.Add(2, 'AA', 'Active and archived');
    oTable.Items.Add(1, 'AC', 'Active');
    oTable.Items.Add(3, 'AR', 'Archived (not active)');
    oTable.Items.Add(4, 'PU', 'Purged');
End;

procedure LoadTable276(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(276, 'Appointment reason codes');
    oTable.Items.Add(3, 'CHECKUP', 'A routine check-up, such as an annual physical');
    oTable.Items.Add(5, 'EMERGENCY', 'Emergency appointment');
    oTable.Items.Add(4, 'FOLLOWUP', 'A follow up visit from a previous appointment');
    oTable.Items.Add(1, 'ROUTINE', 'Routine appointment - default if not valued');
    oTable.Items.Add(2, 'WALKIN', 'A previously unscheduled walk-in visit');
End;

procedure LoadTable277(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(277, 'Appointment type codes');
    oTable.Items.Add(3, 'Complete', 'A request to add a completed appointment, used to maintain records of completed appointments');
    oTable.Items.Add(1, 'Normal', 'Routine schedule request type - default if not valued');
    oTable.Items.Add(2, 'Tentative', 'A request for a tentative (e.g., '#147'penciled in'#148') appointment');
End;

procedure LoadTable278(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(278, 'Filler status codes');
    oTable.Items.Add(9, 'Blocked', 'The indicated time slot(s) is(are) blocked');
    oTable.Items.Add(3, 'Booked', 'The indicated appointment is booked');
    oTable.Items.Add(6, 'Cancelled', 'T7he indicated appointment was stopped from occurring (canceled prior to starting)');
    oTable.Items.Add(5, 'Complete', 'The indicated appointment has completed normally (was not discontinued, canceled, or deleted)');
    oTable.Items.Add(7, 'Dc', 'The indicated appointment was discontinued (DC'#146'ed while in progress, discontinued parent appointment, or discontinued child appointment)');
    oTable.Items.Add(8, 'Deleted', 'The indicated appointment was deleted from the filler application');
    oTable.Items.Add(10, 'Overbook', 'The appointment has been confirmed; however it is confirmed in an overbooked state');
    oTable.Items.Add(1, 'Pending', 'Appointment has not yet been confirmed');
    oTable.Items.Add(4, 'Started', 'The indicated appointment has begun and is currently in progress');
    oTable.Items.Add(2, 'Waitlist', 'Appointment has been placed on a waiting list for a particular slot, or set of slots');
End;

procedure LoadTable279(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(279, 'Allow substitution codes');
    oTable.Items.Add(2, 'Confirm', 'Contact the Placer Contact Person prior to making any substitutions of this resource');
    oTable.Items.Add(1, 'No', 'Substitution of this resource is not allowed');
    oTable.Items.Add(3, 'Notify', 'Notify the Placer Contact Person, through normal institutional procedures, that a substitution of this resource has been made');
    oTable.Items.Add(4, 'Yes', 'Substitution of this resource is allowed');
End;

procedure LoadTable280(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(280, 'Referral priority');
    oTable.Items.Add(2, 'A', 'ASAP');
    oTable.Items.Add(3, 'R', 'Routine');
    oTable.Items.Add(1, 'S', 'STAT');
End;

procedure LoadTable281(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(281, 'Referral type');
    oTable.Items.Add(6, 'Hom', 'Home Care');
    oTable.Items.Add(1, 'Lab', 'Laboratory');
    oTable.Items.Add(3, 'Med', 'Medical');
    oTable.Items.Add(5, 'Psy', 'Psychiatric');
    oTable.Items.Add(2, 'Rad', 'Radiology');
    oTable.Items.Add(4, 'Skn', 'Skilled Nursing');
End;

procedure LoadTable282(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(282, 'Referral disposition');
    oTable.Items.Add(3, 'AM', 'Assume Management');
    oTable.Items.Add(2, 'RP', 'Return Patient After Evaluation');
    oTable.Items.Add(4, 'SO', 'Second Opinion');
    oTable.Items.Add(1, 'WR', 'Send Written Report');
End;

procedure LoadTable283(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(283, 'Referral Status');
    oTable.Items.Add(1, 'A', 'Accepted');
    oTable.Items.Add(4, 'E', 'Expired');
    oTable.Items.Add(2, 'P', 'Pending');
    oTable.Items.Add(3, 'R', 'Rejected');
End;

procedure LoadTable284(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(284, 'Referral category');
    oTable.Items.Add(3, 'A', 'Ambulatory');
    oTable.Items.Add(4, 'E', 'Emergency');
    oTable.Items.Add(1, 'I', 'Inpatient');
    oTable.Items.Add(2, 'O', 'Outpatient');
End;

procedure LoadTable285(oTables : THL7V2ModelTables);
Begin
  oTables.Add(285, 'Insurance company ID codes');
End;

procedure LoadTable286(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(286, 'Provider role');
    oTable.Items.Add(3, 'CP', 'Consulting Provider');
    oTable.Items.Add(2, 'PP', 'Primary Care Provider');
    oTable.Items.Add(1, 'RP', 'Referring Provider');
    oTable.Items.Add(4, 'RT', 'Referred to Provider');
End;

procedure LoadTable287(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(287, 'Problem/Goal Action code');
    oTable.Items.Add(1, 'AD', 'ADD');
    oTable.Items.Add(2, 'CO', 'CORRECT');
    oTable.Items.Add(3, 'DE', 'DELETE');
    oTable.Items.Add(4, 'LI', 'LINK');
    oTable.Items.Add(5, 'UC', 'UNCHANGED *');
    oTable.Items.Add(6, 'UN', 'UNLINK');
    oTable.Items.Add(7, 'UP', 'UPDATE');
End;

procedure LoadTable288(oTables : THL7V2ModelTables);
Begin
  oTables.Add(288, 'Census Tract');
End;

procedure LoadTable289(oTables : THL7V2ModelTables);
Begin
  oTables.Add(289, 'County Code');
End;

procedure LoadTable290(oTables : THL7V2ModelTables);
Begin
  oTables.Add(290, 'MIME base64 encoding characters');
End;

procedure LoadTable291(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(291, 'Subtype of referenced data');
    oTable.Items.Add(6, 'BASIC', 'ISDN PCM audio data');
    oTable.Items.Add(3, 'DICOM', 'Digital Imaging and Communications in Medicine');
    oTable.Items.Add(4, 'FAX', 'Facsimile data');
    oTable.Items.Add(10, 'GIF', 'Graphics Interchange Format');
    oTable.Items.Add(11, 'HTML', 'Hypertext Markup Language');
    oTable.Items.Add(5, 'JOT', 'Electronic ink data (Jot 1.0 standard)');
    oTable.Items.Add(9, 'JPEG', 'Joint Photographic Experts Group');
    oTable.Items.Add(7, 'Octet-stream', 'Uninterpreted binary data');
    oTable.Items.Add(2, 'PICT', 'PICT format image data');
    oTable.Items.Add(8, 'PostScript', 'PostScript program');
    oTable.Items.Add(14, 'RTF', 'Rich Text Format');
    oTable.Items.Add(12, 'SGML', 'Structured General Markup Language (HL7 V2.3.1 and later)');
    oTable.Items.Add(1, 'TIFF', 'TIFF image data');
    oTable.Items.Add(13, 'XML', 'Extensible Markup Language (HL7 V2.3.1 and later)');
End;

procedure LoadTable292(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(292, 'Vaccines administered (code = CVX)(parenteral, unless oral is noted)');
    oTable.Items.Add(14, '01', 'DTP');
    oTable.Items.Add(46, '02', 'OPV');
    oTable.Items.Add(53, '03', 'MMR');
    oTable.Items.Add(54, '04', 'M/R');
    oTable.Items.Add(56, '05', 'Measles');
    oTable.Items.Add(73, '06', 'Rubella');
    oTable.Items.Add(59, '07', 'Mumps');
    oTable.Items.Add(23, '08', 'Hep B, adolescent or pediatric');
    oTable.Items.Add(77, '09', 'Td (Adult)');
    oTable.Items.Add(45, '10', 'IPV');
    oTable.Items.Add(61, '11', 'Pertussis');
    oTable.Items.Add(10, '12', 'Diphtheria antitoxin');
    oTable.Items.Add(80, '13', 'TIG');
    oTable.Items.Add(41, '14', 'IG, NOS');
    oTable.Items.Add(42, '15', 'Influenza'#151'split (incl. purified surface antigen)');
    oTable.Items.Add(43, '16', 'Influenza'#151'whole');
    oTable.Items.Add(35, '17', 'Hib,  NOS');
    oTable.Items.Add(65, '18', 'Rabies, intramuscular injection');
    oTable.Items.Add(5, '19', 'BCG');
    oTable.Items.Add(12, '20', 'DTaP');
    oTable.Items.Add(87, '21', 'Varicella');
    oTable.Items.Add(15, '22', 'DTP-Hib');
    oTable.Items.Add(62, '23', 'Plague');
    oTable.Items.Add(4, '24', 'Anthrax');
    oTable.Items.Add(82, '25', 'Typhoid'#151'oral');
    oTable.Items.Add(7, '26', 'Cholera');
    oTable.Items.Add(6, '27', 'Botulinum antitoxin');
    oTable.Items.Add(11, '28', 'DT(pediatric)');
    oTable.Items.Add(8, '29', 'CMVIG');
    oTable.Items.Add(22, '30', 'HBIG');
    oTable.Items.Add(20, '31', 'Hep A, pediatric, NOS');
    oTable.Items.Add(58, '32', 'Meningococcal');
    oTable.Items.Add(63, '33', 'Pneumococcal');
    oTable.Items.Add(70, '34', 'RIG');
    oTable.Items.Add(78, '35', 'Tetanus toxoid');
    oTable.Items.Add(91, '36', 'VZIG');
    oTable.Items.Add(92, '37', 'Yellow fever');
    oTable.Items.Add(74, '38', 'Rubella/Mumps');
    oTable.Items.Add(48, '39', 'Japanese encephalitis');
    oTable.Items.Add(66, '40', 'Rabies, intradermal injection');
    oTable.Items.Add(83, '41', 'Typhoid'#151'parenteral');
    oTable.Items.Add(24, '42', 'Hep B, adolescent/high risk infant');
    oTable.Items.Add(25, '43', 'Hep B, adult');
    oTable.Items.Add(26, '44', 'Hep B, dialysis');
    oTable.Items.Add(27, '45', 'Hep B,  NOS');
    oTable.Items.Add(31, '46', 'Hib (PRP-D)');
    oTable.Items.Add(32, '47', 'Hib (HbOC)');
    oTable.Items.Add(33, '48', 'Hib (PRP-T)');
    oTable.Items.Add(34, '49', 'Hib (PRP-OMP)');
    oTable.Items.Add(13, '50', 'DtaP-Hib');
    oTable.Items.Add(36, '51', 'Hib-Hep B');
    oTable.Items.Add(17, '52', 'Hep A - adult');
    oTable.Items.Add(84, '53', 'Typhoid, parenteral, AKD (U.S. military)');
    oTable.Items.Add(1, '54', 'Adenovirus, type 4');
    oTable.Items.Add(2, '55', 'Adenovirus, type 7');
    oTable.Items.Add(9, '56', 'Dengue fever');
    oTable.Items.Add(16, '57', 'Hantavirus');
    oTable.Items.Add(28, '58', 'Hep C');
    oTable.Items.Add(29, '59', 'Hep E');
    oTable.Items.Add(30, '60', 'Herpes simplex 2');
    oTable.Items.Add(37, '61', 'HIV');
    oTable.Items.Add(38, '62', 'HPV');
    oTable.Items.Add(49, '63', 'Junin virus');
    oTable.Items.Add(50, '64', 'Leishmaniasis');
    oTable.Items.Add(51, '65', 'Leprosy');
    oTable.Items.Add(52, '66', 'Lyme disease');
    oTable.Items.Add(55, '67', 'Malaria');
    oTable.Items.Add(57, '68', 'Melanoma');
    oTable.Items.Add(60, '69', 'Parainfluenza-3');
    oTable.Items.Add(64, '70', 'Q fever');
    oTable.Items.Add(72, '71', 'RSV-IGIV');
    oTable.Items.Add(68, '72', 'Rheumatic fever');
    oTable.Items.Add(69, '73', 'Rift Valley fever');
    oTable.Items.Add(71, '74', 'Rotavirus');
    oTable.Items.Add(75, '75', 'Smallpox');
    oTable.Items.Add(76, '76', 'Staphylococcus bacterio lysate');
    oTable.Items.Add(79, '77', 'Tick-borne encephalitis');
    oTable.Items.Add(81, '78', 'Tularemia vaccine');
    oTable.Items.Add(86, '79', 'Vaccinia immune globulin');
    oTable.Items.Add(89, '80', 'VEE, live');
    oTable.Items.Add(88, '81', 'VEE, inactivated');
    oTable.Items.Add(3, '82', 'Adenovirus, NOS');
    oTable.Items.Add(18, '83', 'Hep A, ped/adol, 2 dose');
    oTable.Items.Add(19, '84', 'Hep A, ped/adol, 3 dose');
    oTable.Items.Add(21, '85', 'Hep A, NOS');
    oTable.Items.Add(39, '86', 'IG');
    oTable.Items.Add(40, '87', 'IGIV');
    oTable.Items.Add(44, '88', 'Influenza, NOS');
    oTable.Items.Add(47, '89', 'Polio, NOS');
    oTable.Items.Add(67, '90', 'Rabies, NOS');
    oTable.Items.Add(85, '91', 'Typhoid, NOS');
    oTable.Items.Add(90, '92', 'VEE, NOS');
End;

procedure LoadTable293(oTables : THL7V2ModelTables);
Begin
  oTables.Add(293, 'Billing Category');
End;

procedure LoadTable294(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(294, 'Time selection criteria parameter class codes');
    oTable.Items.Add(7, 'FRI', 'An indicator that Friday is or is not preferred for the day on which the appointment will occur.  OK =  Preferred appointment day NO = Day is not preferred');
    oTable.Items.Add(3, 'MON', 'An indicator that Monday is or is not preferred for the day on which the appointment will occur.  OK = Preferred appointment day NO = Day is not preferred');
    oTable.Items.Add(2, 'PREFEND', 'The preferred end time for the appointment request, service or resource.  Any legal time specification in the format HHMM, using 24-hour clock notation');
    oTable.Items.Add(1, 'PREFSTART', 'The preferred start time for the appointment request, service or resource.   Any legal time specification in the format HHMM, using 24-hour clock notation');
    oTable.Items.Add(8, 'SAT', 'An indicator that Saturday is or is not preferred for the day on which the appointment will occur.  OK =  Preferred appointment day NO = Day is not preferred');
    oTable.Items.Add(9, 'SUN', 'An indicator that Sunday is or is not preferred for the day on which the appointment will occur.  OK = Preferred appointment day NO = Day is not preferred');
    oTable.Items.Add(6, 'THU', 'An indicator that Thursday is or is not preferred for the day on which the appointment will occur.  OK = Preferred appointment day NO = Day is not preferred');
    oTable.Items.Add(4, 'TUE', 'An indicator that Tuesday is or is not preferred for the day on which the appointment will occur.  OK = Preferred appointment day NO = Day is not preferred');
    oTable.Items.Add(5, 'WED', 'An indicator that Wednesday is or is not preferred for the day on which the appointment will occur. OK = Preferred appointment day NO = Day is not preferred');
End;

procedure LoadTable295(oTables : THL7V2ModelTables);
Begin
  oTables.Add(295, 'Handicap');
End;

procedure LoadTable296(oTables : THL7V2ModelTables);
Begin
  oTables.Add(296, 'Primary Language');
End;

procedure LoadTable297(oTables : THL7V2ModelTables);
Begin
  oTables.Add(297, 'CN ID source');
End;

procedure LoadTable298(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(298, 'CP range type');
    oTable.Items.Add(2, 'F', 'Flat-rate.  Apply the entire price to this interval, do not pro-rate the price if the full interval has not occurred/been consumed');
    oTable.Items.Add(1, 'P', 'Pro-rate.  Apply this price to this interval, pro-rated by whatever portion of the interval has occurred/been consumed');
End;

procedure LoadTable299(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(299, 'Encoding');
    oTable.Items.Add(1, 'A', 'no encoding - data are displayable ASCII characters.');
    oTable.Items.Add(3, 'Base64', 'encoding as defined by MIME (Multipurpose Internet Mail Extensions) standard RFC 1521.  Four consecutive ASCII characters represent three consecutive octets of binary data.  Base64 utilizes a 65-character subset of US-ASCII, consisting of both the upper a');
    oTable.Items.Add(2, 'Hex', 'hexadecimal encoding - consecutive pairs of hexadecimal digits represent consecutive single octets.');
End;

procedure LoadTable300(oTables : THL7V2ModelTables);
Begin
  oTables.Add(300, 'Namespace ID');
End;

procedure LoadTable301(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(301, 'Universal ID type');
    oTable.Items.Add(1, 'DNS', 'An Internet dotted name. Either in ASCII or as integers');
    oTable.Items.Add(2, 'GUID', 'Same as UUID.');
    oTable.Items.Add(3, 'HCD', 'The CEN Healthcare Coding Scheme Designator. (Identifiers used in DICOM follow this assignment scheme.)');
    oTable.Items.Add(4, 'HL7', 'Reserved for future HL7 registration schemes');
    oTable.Items.Add(5, 'ISO', 'An International Standards Organization Object Identifier');
    oTable.Items.Add(6, 'L,M,N', 'These are reserved for locally defined coding schemes.');
    oTable.Items.Add(7, 'Random', 'Usually a base64 encoded string of random bits.  The uniqueness depends on the length of the bits.  Mail systems often generate ASCII string  "unique names," from a  combination of random bits and system names.  Obviously, such identifiers will not be con');
    oTable.Items.Add(8, 'UUID', 'The DCE Universal Unique Identifier');
    oTable.Items.Add(9, 'x400', 'An X.400 MHS format identifier');
    oTable.Items.Add(10, 'x500', 'An X.500 directory name');
End;

procedure LoadTable302(oTables : THL7V2ModelTables);
Begin
  oTables.Add(302, 'Point Of Care');
End;

procedure LoadTable303(oTables : THL7V2ModelTables);
Begin
  oTables.Add(303, 'Room');
End;

procedure LoadTable304(oTables : THL7V2ModelTables);
Begin
  oTables.Add(304, 'Bed');
End;

procedure LoadTable305(oTables : THL7V2ModelTables);
Begin
  oTables.Add(305, 'Person Location Type');
End;

procedure LoadTable306(oTables : THL7V2ModelTables);
Begin
  oTables.Add(306, 'Location Status');
End;

procedure LoadTable307(oTables : THL7V2ModelTables);
Begin
  oTables.Add(307, 'Building');
End;

procedure LoadTable308(oTables : THL7V2ModelTables);
Begin
  oTables.Add(308, 'Floor');
End;

procedure LoadTable309(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(309, 'Coverage type');
    oTable.Items.Add(3, 'B', 'Both hospital and physician');
    oTable.Items.Add(1, 'H', 'Hospital/institutional');
    oTable.Items.Add(2, 'P', 'Physician/professional');
End;

procedure LoadTable311(oTables : THL7V2ModelTables);
Begin
  oTables.Add(311, 'Job Status');
End;

procedure LoadTable312(oTables : THL7V2ModelTables);
Begin
  oTables.Add(312, 'Policy Scope');
End;

procedure LoadTable313(oTables : THL7V2ModelTables);
Begin
  oTables.Add(313, 'Policy Source');
End;

procedure LoadTable315(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(315, 'Living will');
    oTable.Items.Add(2, 'F', 'Yes, patient has a living will but it is not on file');
    oTable.Items.Add(4, 'I', 'No, patient does not have a living will but information was provided');
    oTable.Items.Add(3, 'N', 'No, patient does not have a living will and no information was provided');
    oTable.Items.Add(5, 'U', 'Unknown');
    oTable.Items.Add(1, 'Y', 'Yes, patient has a living will');
End;

procedure LoadTable316(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(316, 'Organ donor');
    oTable.Items.Add(2, 'F', 'Yes, patient is a donor, but card is not on file');
    oTable.Items.Add(3, 'I', 'No, patient does not have a living will but information was provided');
    oTable.Items.Add(4, 'U', 'Unknown');
    oTable.Items.Add(1, 'Y', 'Yes, patient is a donor and card is on file');
End;

procedure LoadTable317(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(317, 'Annotations');
    oTable.Items.Add(1, '9900', 'Pace spike');
    oTable.Items.Add(2, '9901', 'SAS marker');
    oTable.Items.Add(3, '9902', 'Sense marker');
    oTable.Items.Add(4, '9903', 'Beat marker');
    oTable.Items.Add(5, '9904', 'etc.');
End;

procedure LoadTable319(oTables : THL7V2ModelTables);
Begin
  oTables.Add(319, 'Department Cost Center');
End;

procedure LoadTable320(oTables : THL7V2ModelTables);
Begin
  oTables.Add(320, 'Item Natural Account Code');
End;

procedure LoadTable321(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(321, 'Dispense method');
    oTable.Items.Add(4, 'AD', 'Automatic Dispensing');
    oTable.Items.Add(3, 'F', 'Floor Stock');
    oTable.Items.Add(1, 'TR', 'Traditional');
    oTable.Items.Add(2, 'UD', 'Unit Dose');
End;

procedure LoadTable322(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(322, 'Completion status');
    oTable.Items.Add(1, 'CP', 'Complete');
    oTable.Items.Add(3, 'NA', 'Not Administered');
    oTable.Items.Add(4, 'PA', 'Partially Administered');
    oTable.Items.Add(2, 'RE', 'Refused');
End;

procedure LoadTable323(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(323, 'Action code');
    oTable.Items.Add(1, 'A', 'Add');
    oTable.Items.Add(2, 'D', 'Delete');
    oTable.Items.Add(3, 'U', 'Update');
End;

procedure LoadTable324(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(324, 'Location characteristic ID');
    oTable.Items.Add(11, 'GEN', 'Gender of patient(s)');
    oTable.Items.Add(3, 'IMP', 'Implant: can be used for radiation implant patients');
    oTable.Items.Add(5, 'INF', 'Infectious disease: this location can be used for isolation');
    oTable.Items.Add(7, 'LCR', 'Level of care');
    oTable.Items.Add(2, 'LIC', 'Licensed');
    oTable.Items.Add(8, 'OVR', 'Overflow');
    oTable.Items.Add(6, 'PRL', 'Privacy level: indicating the level of private versus non-private room');
    oTable.Items.Add(10, 'SET', 'Bed is set up');
    oTable.Items.Add(4, 'SHA', 'Shadow: a temporary holding location that does not physically exist');
    oTable.Items.Add(1, 'SMK', 'Smoking');
    oTable.Items.Add(9, 'STF', 'Bed is staffed');
    oTable.Items.Add(12, 'TEA', 'Teaching location');
End;

procedure LoadTable325(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(325, 'Location relationship ID');
    oTable.Items.Add(6, 'ALI', 'Location Alias(es)');
    oTable.Items.Add(5, 'DTY', 'Nearest  dietary');
    oTable.Items.Add(3, 'LAB', 'Nearest  lab');
    oTable.Items.Add(4, 'LB2', 'Second lab');
    oTable.Items.Add(7, 'PAR', 'Parent location');
    oTable.Items.Add(1, 'RX', 'Nearest  pharmacy');
    oTable.Items.Add(2, 'RX2', 'Second pharmacy');
End;

procedure LoadTable326(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(326, 'Visit indicator');
    oTable.Items.Add(1, 'A', 'Account level (default)');
    oTable.Items.Add(2, 'V', 'Visit level');
End;

procedure LoadTable327(oTables : THL7V2ModelTables);
Begin
  oTables.Add(327, 'Job Code/Class');
End;

procedure LoadTable328(oTables : THL7V2ModelTables);
Begin
  oTables.Add(328, 'Employee Classification');
End;

procedure LoadTable329(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(329, 'Quantity method');
    oTable.Items.Add(1, 'A', 'Actual count');
    oTable.Items.Add(2, 'E', 'Estimated (see comment)');
End;

procedure LoadTable330(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(330, 'Marketing basis');
    oTable.Items.Add(2, '510E', '510 (K) exempt');
    oTable.Items.Add(1, '510K', '510 (K)');
    oTable.Items.Add(6, '522S', 'Post marketing study (522)');
    oTable.Items.Add(3, 'PMA', 'Premarketing authorization');
    oTable.Items.Add(4, 'PRE', 'Preamendment');
    oTable.Items.Add(5, 'TXN', 'Transitional');
End;

procedure LoadTable331(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(331, 'Facility type');
    oTable.Items.Add(4, 'A', 'Agent for a foreign manufacturer');
    oTable.Items.Add(3, 'D', 'Distributor');
    oTable.Items.Add(2, 'M', 'Manufacturer');
    oTable.Items.Add(1, 'U', 'User');
End;

procedure LoadTable332(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(332, 'Network source type');
    oTable.Items.Add(2, 'A', 'Accept');
    oTable.Items.Add(1, 'I', 'Initiate');
End;

procedure LoadTable333(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(333, 'Network change type');
    oTable.Items.Add(3, 'M', 'Migrates to different CPU');
    oTable.Items.Add(2, 'SD', 'Shut down');
    oTable.Items.Add(1, 'SU', 'Start up');
End;

procedure LoadTable334(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(334, 'Disabled person');
    oTable.Items.Add(4, 'AP', 'Associated party');
    oTable.Items.Add(2, 'GT', 'Guarantor');
    oTable.Items.Add(3, 'IN', 'Insured');
    oTable.Items.Add(1, 'PT', 'Patient');
End;

procedure LoadTable335(oTables : THL7V2ModelTables);
Begin
  oTables.Add(335, 'Repeat Pattern');
End;

procedure LoadTable336(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(336, 'Referral reason');
    oTable.Items.Add(3, 'O', 'Provider Ordered');
    oTable.Items.Add(2, 'P', 'Patient Preference');
    oTable.Items.Add(1, 'S', 'Second Opinion');
    oTable.Items.Add(4, 'W', 'Work Load');
End;

procedure LoadTable337(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(337, 'Certification Status');
    oTable.Items.Add(2, 'C', 'Certified');
    oTable.Items.Add(1, 'E', 'Eligible');
End;

procedure LoadTable338(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(338, 'Practitioner ID number type');
    oTable.Items.Add(5, 'CY', 'County number');
    oTable.Items.Add(7, 'DEA', 'Drug Enforcement Agency no.');
    oTable.Items.Add(4, 'GL', 'General ledger number');
    oTable.Items.Add(9, 'L&I', 'Labor and industries number');
    oTable.Items.Add(3, 'MCD', 'Medicaid number');
    oTable.Items.Add(8, 'MCR', 'Medicare number');
    oTable.Items.Add(10, 'QA', 'QA number');
    oTable.Items.Add(2, 'SL', 'State license number');
    oTable.Items.Add(6, 'TAX', 'Tax ID number');
    oTable.Items.Add(11, 'TRL', 'Training license number');
    oTable.Items.Add(1, 'UPIN', 'Unique physician ID no.');
End;

procedure LoadTable339(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(339, 'Advanced Beneficiary Notice Code');
    oTable.Items.Add(1, '1', 'Service is subject to medical necessity procedures');
    oTable.Items.Add(2, '2', 'Patient has been informed of responsibility, and agrees to pay for service');
    oTable.Items.Add(3, '3', 'Patient has been informed of responsibility, and asks that the payer be billed');
    oTable.Items.Add(4, '4', 'Advanced Beneficiary Notice has not been signed');
End;

procedure LoadTable340(oTables : THL7V2ModelTables);
Begin
  oTables.Add(340, 'Procedure Code Modifier');
End;

procedure LoadTable341(oTables : THL7V2ModelTables);
Begin
  oTables.Add(341, 'Guarantor Credit Rating Code');
End;

procedure LoadTable342(oTables : THL7V2ModelTables);
Begin
  oTables.Add(342, 'Dependent Of Military Recipient');
End;

procedure LoadTable343(oTables : THL7V2ModelTables);
Begin
  oTables.Add(343, 'Military Handicapped Program');
End;

procedure LoadTable344(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(344, 'Patient'#146's relationship to insured');
    oTable.Items.Add(1, '01', 'Patient is insured');
    oTable.Items.Add(2, '02', 'Spouse');
    oTable.Items.Add(3, '03', 'Natural child/insured financial responsibility');
    oTable.Items.Add(4, '04', 'Natural child/Insured does not have financial responsibility');
    oTable.Items.Add(5, '05', 'Step child');
    oTable.Items.Add(6, '06', 'Foster child');
    oTable.Items.Add(7, '07', 'Ward of the court');
    oTable.Items.Add(8, '08', 'Employee');
    oTable.Items.Add(9, '09', 'Unknown');
    oTable.Items.Add(10, '10', 'Handicapped dependent');
    oTable.Items.Add(11, '11', 'Organ donor');
    oTable.Items.Add(12, '12', 'Cadaver donor');
    oTable.Items.Add(13, '13', 'Grandchild');
    oTable.Items.Add(14, '14', 'Niece/nephew');
    oTable.Items.Add(15, '15', 'Injured plaintiff');
    oTable.Items.Add(16, '16', 'Sponsored dependent');
    oTable.Items.Add(17, '17', 'Minor dependent of a minor dependent');
    oTable.Items.Add(18, '18', 'Parent');
    oTable.Items.Add(19, '19', 'Grandparent');
End;

procedure LoadTable345(oTables : THL7V2ModelTables);
Begin
  oTables.Add(345, 'Appeal Reason');
End;

procedure LoadTable346(oTables : THL7V2ModelTables);
Begin
  oTables.Add(346, 'Certification Agency');
End;

procedure LoadTable347(oTables : THL7V2ModelTables);
Begin
  oTables.Add(347, 'Auto Accident State');
End;

procedure LoadTable348(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(348, 'Special program indicator');
    oTable.Items.Add(1, '01', 'EPSDT-CHAP');
    oTable.Items.Add(2, '02', 'Physically handicapped children'#146's program');
    oTable.Items.Add(3, '03', 'Special federal funding');
    oTable.Items.Add(4, '04', 'Family planning');
    oTable.Items.Add(5, '05', 'Disability');
    oTable.Items.Add(6, '06', 'PPV/Medicare 100% payment');
    oTable.Items.Add(7, '07', 'Induced abortion-danger to life');
    oTable.Items.Add(8, '08', 'Induced abortion victim rape/incest');
End;

procedure LoadTable349(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(349, 'PSRO/UR approval indicator');
    oTable.Items.Add(1, '1', 'Approved by the PSRO/UR as billed');
    oTable.Items.Add(2, '2', 'Automatic approval as billed based on focused review');
    oTable.Items.Add(3, '3', 'Partial approval');
    oTable.Items.Add(4, '4', 'Admission denied');
    oTable.Items.Add(5, '5', 'Postpayment review applicable');
End;

procedure LoadTable350(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(350, 'Occurrence code');
    oTable.Items.Add(1, '01', 'Auto accident');
    oTable.Items.Add(2, '02', 'No fault insurance involved-including auto accident/other');
    oTable.Items.Add(3, '03', 'Accident/tort liability');
    oTable.Items.Add(4, '04', 'Accident/employment related');
    oTable.Items.Add(5, '05', 'Other accident');
    oTable.Items.Add(6, '06', 'Crime victim');
    oTable.Items.Add(7, '09', 'Start of infertility treatment cycle');
    oTable.Items.Add(8, '10', 'Last menstrual period');
    oTable.Items.Add(9, '11', 'Onset of symptoms/illness');
    oTable.Items.Add(10, '12', 'Date of onset for a chronically dependent individual');
    oTable.Items.Add(11, '17', 'Date outpatient occupational therapy plan established or last reviewed');
    oTable.Items.Add(12, '18', 'Date of retirement patient/beneficiary');
    oTable.Items.Add(13, '19', 'Date of retirement spouse');
    oTable.Items.Add(14, '20', 'Guarantee of payment began');
    oTable.Items.Add(15, '21', 'UR notice received');
    oTable.Items.Add(16, '22', 'Date active care ended');
    oTable.Items.Add(17, '24', 'Date insurance denied');
    oTable.Items.Add(18, '25', 'Date benefits terminated by primary payor');
    oTable.Items.Add(19, '26', 'Date SNF bed available');
    oTable.Items.Add(20, '27', 'Date home health plan established');
    oTable.Items.Add(21, '28', 'Spouse'#146's date of birth');
    oTable.Items.Add(22, '29', 'Date outpatient physical therapy plan established or last reviewed');
    oTable.Items.Add(23, '30', 'Date outpatient speech pathology plan established or last reviewed');
    oTable.Items.Add(24, '31', 'Date beneficiary notified of intent to bill (accommodations)');
    oTable.Items.Add(25, '32', 'Date beneficiary notified of intent to bill (procedures or treatments)');
    oTable.Items.Add(26, '33', 'First day of the Medicare coordination period for ESRD beneficiaries covered by EGHP');
    oTable.Items.Add(27, '34', 'Date of election of extended care facilities');
    oTable.Items.Add(28, '35', 'Date treatment started for P.T.');
    oTable.Items.Add(29, '36', 'Date of inpatient hospital discharge for covered transplant patients');
    oTable.Items.Add(30, '37', 'Date of inpatient hospital discharge for non-covered transplant patient');
    oTable.Items.Add(31, '40', 'Scheduled date of admission');
    oTable.Items.Add(32, '41', 'Date of first test for pre-admission testing');
    oTable.Items.Add(33, '42', 'Date of discharge');
    oTable.Items.Add(34, '43', 'Scheduled date of canceled surgery');
    oTable.Items.Add(35, '44', 'Date treatment started for O.T.');
    oTable.Items.Add(36, '45', 'Date treatment started for S.T.');
    oTable.Items.Add(37, '46', 'Date treatment started for cardiac rehab.');
    oTable.Items.Add(38, '47 ... 49', 'Payer codes');
    oTable.Items.Add(39, '50', 'Date lien released');
    oTable.Items.Add(40, '51', 'Date treatment started for psychiatric care');
    oTable.Items.Add(41, '70 ... 99', 'Occurrence span codes and dates');
    oTable.Items.Add(42, 'A1', 'Birthdate - insured A');
    oTable.Items.Add(43, 'A2', 'Effective date - insured A policy');
    oTable.Items.Add(44, 'A3', 'Benefits exhausted payer A');
End;

procedure LoadTable351(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(351, 'Occurrence span');
    oTable.Items.Add(1, '70', 'Qualifying stay dates for SNF');
    oTable.Items.Add(2, '71', 'Prior stay dates');
    oTable.Items.Add(3, '72', 'First/last visit');
    oTable.Items.Add(4, '73', 'Benefit eligibility period');
    oTable.Items.Add(5, '74', 'Non-covered level of care');
    oTable.Items.Add(6, '75', 'SNF level of care');
    oTable.Items.Add(7, '76', 'Patient liability');
    oTable.Items.Add(8, '77', 'Provider liability period');
    oTable.Items.Add(9, '78', 'SNF prior stay dates');
    oTable.Items.Add(10, '79', 'Payer code');
    oTable.Items.Add(11, 'M0', 'PRO/UR approved stay dates');
End;

procedure LoadTable353(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(353, 'CWE statuses');
    oTable.Items.Add(4, 'NA', 'Not applicable');
    oTable.Items.Add(5, 'NASK', 'Not asked');
    oTable.Items.Add(3, 'NAV', 'Not available');
    oTable.Items.Add(1, 'U', 'Unknown');
    oTable.Items.Add(2, 'UASK', 'Asked but Unknown');
End;

procedure LoadTable354(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(354, 'Message structure');
    oTable.Items.Add(0, 'ACK', '');
    oTable.Items.Add(1, 'ADT_A01', 'A01, A04, A05, A08, A13, A14, A28, A31');
    oTable.Items.Add(2, 'ADT_A02', 'A02, A21, A22, A23, A25, A26, A27, A29, A32, A33');
    oTable.Items.Add(3, 'ADT_A03', 'A03');
    oTable.Items.Add(4, 'ADT_A06', 'A06, A07');
    oTable.Items.Add(5, 'ADT_A09', 'A09, A10, A11, A15');
    oTable.Items.Add(6, 'ADT_A12', 'A12');
    oTable.Items.Add(7, 'ADT_A16', 'A16');
    oTable.Items.Add(8, 'ADT_A17', 'A17');
    oTable.Items.Add(9, 'ADT_A18', 'A18');
    oTable.Items.Add(10, 'ADT_A20', 'A20');
    oTable.Items.Add(11, 'ADT_A24', 'A24');
    oTable.Items.Add(12, 'ADT_A28', 'A28, A31');
    oTable.Items.Add(13, 'ADT_A30', 'A30, A34, A35, 136, A46, A47, A48, A49');
    oTable.Items.Add(14, 'ADT_A37', 'A37');
    oTable.Items.Add(15, 'ADT_A38', 'A38');
    oTable.Items.Add(16, 'ADT_A39', 'A39, A40, A41, A42');
    oTable.Items.Add(17, 'ADT_A43', 'A43, A44');
    oTable.Items.Add(18, 'ADT_A45', 'A45');
    oTable.Items.Add(19, 'ADT_A50', 'A50, A51');
    oTable.Items.Add(20, 'ARD_A19', 'A19');
    oTable.Items.Add(21, 'BAR_P01', 'P01, P05');
    oTable.Items.Add(22, 'BAR_P02', 'P02');
    oTable.Items.Add(23, 'BAR_P06', 'P06');
    oTable.Items.Add(24, 'CRM_C01', 'C01, C02, C03, C04, C05, C06, C07, C08');
    oTable.Items.Add(25, 'CSU_C09', 'C09, C10, C11, C12');
    oTable.Items.Add(26, 'DFT_P03', 'P03');
    oTable.Items.Add(27, 'DOC_T12', 'T12');
    oTable.Items.Add(28, 'DSR_Q01', 'Q01');
    oTable.Items.Add(29, 'DSR_Q03', 'Q03');
    oTable.Items.Add(30, 'EDR_R07', 'R07');
    oTable.Items.Add(31, 'EQQ_Q04', 'Q04');
    oTable.Items.Add(32, 'ERP_R09', 'R09');
    oTable.Items.Add(33, 'MDM_T01', 'T01, T03, T05, T07, T09, T11');
    oTable.Items.Add(34, 'MDM_T02', 'T02, T04, T06, T08, T10');
    oTable.Items.Add(35, 'MFD_P09', 'P09');
    oTable.Items.Add(36, 'MFK_M01', 'M01, M03, M05, M06, M07, M08, M09, M10, M11');
    oTable.Items.Add(37, 'MFN_M01', 'M01');
    oTable.Items.Add(38, 'MFN_M02', 'M02');
    oTable.Items.Add(39, 'MFN_M03', 'M03');
    oTable.Items.Add(40, 'MFN_M05', 'M05');
    oTable.Items.Add(41, 'MFN_M06', 'M06');
    oTable.Items.Add(42, 'MFN_M07', 'M07');
    oTable.Items.Add(43, 'MFN_M08', 'M08');
    oTable.Items.Add(44, 'MFN_M09', 'M09');
    oTable.Items.Add(45, 'MFN_M10', 'M10');
    oTable.Items.Add(46, 'MFN_M11', 'M11');
    oTable.Items.Add(47, 'NUL', 'Null');
    oTable.Items.Add(0, 'OMD_O01', '');
    oTable.Items.Add(0, 'OMN_O01', '');
    oTable.Items.Add(0, 'OMS_O01', '');
    oTable.Items.Add(0, 'ORD_O02', '');
    oTable.Items.Add(48, 'ORF_R02', 'R02, R04');
    oTable.Items.Add(49, 'ORM_O01', 'O01');
    oTable.Items.Add(50, 'ORM_Q06', 'Q06');
    oTable.Items.Add(0, 'ORN_O02', '');
    oTable.Items.Add(51, 'ORR_O02', 'O02');
    oTable.Items.Add(52, 'ORR_Q06', 'Q06');
    oTable.Items.Add(0, 'ORS_O02', '');
    oTable.Items.Add(53, 'ORU_R01', 'R01');
    oTable.Items.Add(54, 'ORU_W01', 'W01');
    oTable.Items.Add(55, 'OSQ_Q06', 'Q06');
    oTable.Items.Add(56, 'OSR_Q06', 'Q06');
    oTable.Items.Add(57, 'PEX_P07', 'P07, P08');
    oTable.Items.Add(58, 'PGL_PC6', 'PC6, PC7, PC8');
    oTable.Items.Add(59, 'PIN_I07', 'I07');
    oTable.Items.Add(60, 'PPG_PCG', 'PCC, PCH, PCJ');
    oTable.Items.Add(61, 'PPP_PCB', 'PCB, PCD');
    oTable.Items.Add(62, 'PPR_PC1', 'PC1, PC2, PC3');
    oTable.Items.Add(63, 'PPT_PCL', 'PCL');
    oTable.Items.Add(64, 'PPV_PCA', 'PCA');
    oTable.Items.Add(65, 'PRR_PC5', 'PC5');
    oTable.Items.Add(66, 'PTR_PCF', 'PCF');
    oTable.Items.Add(67, 'QCK_Q02', 'Q02');
    oTable.Items.Add(68, 'QRY_A19', 'A19');
    oTable.Items.Add(69, 'QRY_PC4', 'PC4, PC9, PCE, PCK');
    oTable.Items.Add(70, 'QRY_Q01', 'Q01');
    oTable.Items.Add(71, 'QRY_Q02', 'Q02');
    oTable.Items.Add(72, 'QRY_R02', 'R02, R04');
    oTable.Items.Add(73, 'QRY_T12', 'T12');
    oTable.Items.Add(74, 'RAR_RAR', 'RAR');
    oTable.Items.Add(75, 'RAS_O01', 'O01');
    oTable.Items.Add(76, 'RAS_O02', 'O022');
    oTable.Items.Add(77, 'RCI_I05', 'I05');
    oTable.Items.Add(78, 'RCL_I06', 'I06');
    oTable.Items.Add(79, 'RDE_O01', 'O01');
    oTable.Items.Add(0, 'RDO_O01', '');
    oTable.Items.Add(80, 'RDR_RDR', 'RDR');
    oTable.Items.Add(81, 'RDS_O01', 'O01');
    oTable.Items.Add(82, 'REF_I12', 'I12, I13, I14, I15');
    oTable.Items.Add(83, 'RER_RER', 'RER');
    oTable.Items.Add(84, 'RGR_RGR', 'RGR');
    oTable.Items.Add(85, 'RGV_O01', 'O01');
    oTable.Items.Add(86, 'ROR_ROR', 'ROR');
    oTable.Items.Add(87, 'RPA_I08', 'I08, I09. I10, 1II');
    oTable.Items.Add(88, 'RPI_I0I', 'I01, I04');
    oTable.Items.Add(89, 'RPL_I02', 'I02');
    oTable.Items.Add(90, 'RPR_I03', 'I03');
    oTable.Items.Add(91, 'RQA_I08', 'I08, I09, I10, I11');
    oTable.Items.Add(92, 'RQC_I05', 'I05');
    oTable.Items.Add(93, 'RQC_I06', 'I06');
    oTable.Items.Add(94, 'RQI_I0I', 'I01, I02, I03');
    oTable.Items.Add(95, 'RQP_I04', 'I04');
    oTable.Items.Add(96, 'RQQ_Q09', 'Q09');
    oTable.Items.Add(97, 'RRA_O02', 'O02');
    oTable.Items.Add(98, 'RRD_O02', 'O02');
    oTable.Items.Add(99, 'RRE_O02', 'O02');
    oTable.Items.Add(100, 'RRG_O02', 'O02');
    oTable.Items.Add(101, 'RRI_I12', 'I12, I13, I14, I15');
    oTable.Items.Add(0, 'RRO_O02', '');
    oTable.Items.Add(102, 'SIU_S12', 'S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S26');
    oTable.Items.Add(103, 'SPQ_Q08', 'Q08');
    oTable.Items.Add(104, 'SQM_S25', 'S25');
    oTable.Items.Add(105, 'SQR_S25', 'S25');
    oTable.Items.Add(106, 'SRM_S01', 'S01, S02, S03, S04, S05, S06, S07, S08, S09, S10, S11');
    oTable.Items.Add(107, 'SRM_T12', 'T12');
    oTable.Items.Add(108, 'SRR_S01', 'S01, S02, S03, S04, S05, S06, S07, S08, S09, S10, S11');
    oTable.Items.Add(109, 'SRR_T12', 'T12');
    oTable.Items.Add(110, 'SUR_P09', 'P09');
    oTable.Items.Add(111, 'TBR_R09', 'R09');
    oTable.Items.Add(112, 'UDM_Q05', 'Q05');
    oTable.Items.Add(113, 'VQQ_Q07', 'Q07');
    oTable.Items.Add(114, 'VXQ_V01', 'V01');
    oTable.Items.Add(115, 'VXR_V03', 'V03');
    oTable.Items.Add(116, 'VXU_V04', 'V04');
    oTable.Items.Add(117, 'VXX_V02', 'V02');
End;

procedure LoadTable355(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(355, 'Primary key value type');
    oTable.Items.Add(2, 'CE', 'Coded element');
    oTable.Items.Add(1, 'PL', 'Person location');
End;

procedure LoadTable356(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(356, 'Alternate character set handling scheme');
    oTable.Items.Add(5, '<null>', 'This is the default, indicating that there is no character set switching occurring in this message.');
    oTable.Items.Add(1, 'ISO 2022-199', 'This standard is titled "Information Technology - Character Code Structure  and Extension Technique". This standard specifies an escape sequence from basic one byte character set to specified other character set, and  vice versa.  The escape sequence expl');
End;

procedure LoadTable357(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(357, 'Message error condition  codes');
    oTable.Items.Add(2, '0', 'Message accepted');
    oTable.Items.Add(4, '100', 'Segment sequence error');
    oTable.Items.Add(5, '101', 'Required field missing');
    oTable.Items.Add(6, '102', 'Data type error');
    oTable.Items.Add(7, '103', 'Table value not found');
    oTable.Items.Add(9, '200', 'Unsupported message type');
    oTable.Items.Add(10, '201', 'Unsupported event code');
    oTable.Items.Add(11, '202', 'Unsupported processing id');
    oTable.Items.Add(12, '203', 'Unsupported version id');
    oTable.Items.Add(13, '204', 'Unknown key identifier');
    oTable.Items.Add(14, '205', 'Duplicate key identifier');
    oTable.Items.Add(15, '206', 'Application record locked');
    oTable.Items.Add(16, '207', 'Application internal error');
End;

procedure LoadTable358(oTables : THL7V2ModelTables);
Begin
  oTables.Add(358, 'Practitioner Group');
End;

procedure LoadTable359(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(359, 'Diagnosis priority');
    oTable.Items.Add(1, '0', 'not included in diagnosis ranking');
    oTable.Items.Add(2, '1', 'the primary diagnosis');
    oTable.Items.Add(3, '2 and higher', 'for ranked secondary diagnoses');
End;

procedure LoadTable360(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(360, 'Degree');
    oTable.Items.Add(2, 'AA', 'Associate of Arts');
    oTable.Items.Add(1, 'AAS', 'Associate of Applied Science');
    oTable.Items.Add(3, 'ABA', 'Associate of Business Administration');
    oTable.Items.Add(4, 'AE', 'Associate of Engineering');
    oTable.Items.Add(5, 'AS', 'Associate of Science');
    oTable.Items.Add(6, 'BA', 'Bachelor of Arts');
    oTable.Items.Add(7, 'BBA', 'Bachelor of Business Administration');
    oTable.Items.Add(8, 'BE', 'Bachelor or Engineering');
    oTable.Items.Add(9, 'BFA', 'Bachelor of Fine Arts');
    oTable.Items.Add(10, 'BN', 'Bachelor of Nursing');
    oTable.Items.Add(11, 'BS', 'Bachelor of Science');
    oTable.Items.Add(12, 'BSL', 'Bachelor of Science '#150' Law');
    oTable.Items.Add(13, 'BT', 'Bachelor of Theology');
    oTable.Items.Add(14, 'CER', 'Certificate');
    oTable.Items.Add(16, 'DBA', 'Doctor of Business Administration');
    oTable.Items.Add(17, 'DED', 'Doctor of Education');
    oTable.Items.Add(15, 'DIP', 'Diploma');
    oTable.Items.Add(22, 'DO', 'Doctor of Osteopathy');
    oTable.Items.Add(23, 'HS', 'High School Graduate');
    oTable.Items.Add(24, 'JD', 'Juris Doctor');
    oTable.Items.Add(25, 'MA', 'Master of Arts');
    oTable.Items.Add(26, 'MBA', 'Master of Business Administration');
    oTable.Items.Add(27, 'MCE', 'Master of Civil Engineering');
    oTable.Items.Add(21, 'MD', 'Doctor of Medicine');
    oTable.Items.Add(28, 'MDI', 'Master of Divinity');
    oTable.Items.Add(31, 'ME', 'Master of Engineering');
    oTable.Items.Add(29, 'MED', 'Master of Education');
    oTable.Items.Add(30, 'MEE', 'Master of Electrical Engineering');
    oTable.Items.Add(32, 'MFA', 'Master of Fine Arts');
    oTable.Items.Add(33, 'MME', 'Master of Mechanical Engineering');
    oTable.Items.Add(34, 'MS', 'Master of Science');
    oTable.Items.Add(35, 'MSL', 'Master of Science '#150' Law');
    oTable.Items.Add(36, 'MT', 'Master of Theology');
    oTable.Items.Add(37, 'NG', 'Non-Graduate');
    oTable.Items.Add(19, 'PHD', 'Doctor of Philosophy');
    oTable.Items.Add(18, 'PHE', 'Doctor of Engineering');
    oTable.Items.Add(20, 'PHS', 'Doctor of Science');
    oTable.Items.Add(38, 'SEC', 'Secretarial Certificate');
    oTable.Items.Add(39, 'TS', 'Trade School Graduate');
End;

procedure LoadTable361(oTables : THL7V2ModelTables);
Begin
  oTables.Add(361, 'Sending/receiving application');
End;

procedure LoadTable362(oTables : THL7V2ModelTables);
Begin
  oTables.Add(362, 'Sending/receiving facility');
End;

procedure LoadTable363(oTables : THL7V2ModelTables);
Begin
  oTables.Add(363, 'Assigning Authority');
End;

procedure LoadTable364(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(364, 'Comment type');
    oTable.Items.Add(4, '1R', 'Primary Reason');
    oTable.Items.Add(5, '2R', 'Secondary Reason');
    oTable.Items.Add(2, 'AI', 'Ancillary Instructions,');
    oTable.Items.Add(8, 'DR', 'Duplicate/Interaction Reason');
    oTable.Items.Add(3, 'GI', 'General Instructions');
    oTable.Items.Add(6, 'GR', 'General Reason');
    oTable.Items.Add(1, 'PI', 'Patient Instructions');
    oTable.Items.Add(7, 'RE', 'Remark');
End;

procedure LoadTable4000(oTables : THL7V2ModelTables);
Var
  oTable : THL7V2ModelTable;
Begin
  oTable := oTables.Add(4000, 'Name/address representation');
    oTable.Items.Add(2, 'A', 'Alphabetic (i.e., Default or some single-byte)');
    oTable.Items.Add(1, 'I', 'Ideographic (i.e., Kanji)');
    oTable.Items.Add(3, 'P', 'Phonetic (i.e., ASCII, Katakana, Hiragana, etc.)');
End;

procedure Definitions231LoadTables(oTables : THL7V2ModelTables);
Begin
  LoadTable0(oTables);
  LoadTable1(oTables);
  LoadTable2(oTables);
  LoadTable3(oTables);
  LoadTable4(oTables);
  LoadTable5(oTables);
  LoadTable6(oTables);
  LoadTable7(oTables);
  LoadTable8(oTables);
  LoadTable9(oTables);
  LoadTable10(oTables);
  LoadTable17(oTables);
  LoadTable18(oTables);
  LoadTable19(oTables);
  LoadTable21(oTables);
  LoadTable22(oTables);
  LoadTable23(oTables);
  LoadTable24(oTables);
  LoadTable27(oTables);
  LoadTable32(oTables);
  LoadTable38(oTables);
  LoadTable42(oTables);
  LoadTable43(oTables);
  LoadTable44(oTables);
  LoadTable45(oTables);
  LoadTable46(oTables);
  LoadTable48(oTables);
  LoadTable49(oTables);
  LoadTable50(oTables);
  LoadTable51(oTables);
  LoadTable52(oTables);
  LoadTable53(oTables);
  LoadTable55(oTables);
  LoadTable56(oTables);
  LoadTable59(oTables);
  LoadTable61(oTables);
  LoadTable62(oTables);
  LoadTable63(oTables);
  LoadTable64(oTables);
  LoadTable65(oTables);
  LoadTable66(oTables);
  LoadTable68(oTables);
  LoadTable69(oTables);
  LoadTable70(oTables);
  LoadTable72(oTables);
  LoadTable73(oTables);
  LoadTable74(oTables);
  LoadTable76(oTables);
  LoadTable78(oTables);
  LoadTable80(oTables);
  LoadTable83(oTables);
  LoadTable84(oTables);
  LoadTable85(oTables);
  LoadTable86(oTables);
  LoadTable87(oTables);
  LoadTable88(oTables);
  LoadTable89(oTables);
  LoadTable91(oTables);
  LoadTable92(oTables);
  LoadTable93(oTables);
  LoadTable98(oTables);
  LoadTable99(oTables);
  LoadTable100(oTables);
  LoadTable102(oTables);
  LoadTable103(oTables);
  LoadTable104(oTables);
  LoadTable105(oTables);
  LoadTable106(oTables);
  LoadTable107(oTables);
  LoadTable108(oTables);
  LoadTable109(oTables);
  LoadTable110(oTables);
  LoadTable111(oTables);
  LoadTable112(oTables);
  LoadTable113(oTables);
  LoadTable114(oTables);
  LoadTable115(oTables);
  LoadTable116(oTables);
  LoadTable117(oTables);
  LoadTable118(oTables);
  LoadTable119(oTables);
  LoadTable121(oTables);
  LoadTable122(oTables);
  LoadTable123(oTables);
  LoadTable124(oTables);
  LoadTable125(oTables);
  LoadTable126(oTables);
  LoadTable127(oTables);
  LoadTable128(oTables);
  LoadTable129(oTables);
  LoadTable130(oTables);
  LoadTable131(oTables);
  LoadTable132(oTables);
  LoadTable133(oTables);
  LoadTable135(oTables);
  LoadTable136(oTables);
  LoadTable137(oTables);
  LoadTable139(oTables);
  LoadTable140(oTables);
  LoadTable141(oTables);
  LoadTable142(oTables);
  LoadTable143(oTables);
  LoadTable144(oTables);
  LoadTable145(oTables);
  LoadTable146(oTables);
  LoadTable147(oTables);
  LoadTable148(oTables);
  LoadTable149(oTables);
  LoadTable150(oTables);
  LoadTable151(oTables);
  LoadTable152(oTables);
  LoadTable153(oTables);
  LoadTable155(oTables);
  LoadTable156(oTables);
  LoadTable157(oTables);
  LoadTable158(oTables);
  LoadTable159(oTables);
  LoadTable160(oTables);
  LoadTable161(oTables);
  LoadTable162(oTables);
  LoadTable163(oTables);
  LoadTable164(oTables);
  LoadTable165(oTables);
  LoadTable166(oTables);
  LoadTable167(oTables);
  LoadTable168(oTables);
  LoadTable169(oTables);
  LoadTable170(oTables);
  LoadTable171(oTables);
  LoadTable172(oTables);
  LoadTable173(oTables);
  LoadTable174(oTables);
  LoadTable175(oTables);
  LoadTable177(oTables);
  LoadTable178(oTables);
  LoadTable179(oTables);
  LoadTable180(oTables);
  LoadTable181(oTables);
  LoadTable182(oTables);
  LoadTable183(oTables);
  LoadTable184(oTables);
  LoadTable185(oTables);
  LoadTable186(oTables);
  LoadTable187(oTables);
  LoadTable188(oTables);
  LoadTable189(oTables);
  LoadTable190(oTables);
  LoadTable191(oTables);
  LoadTable193(oTables);
  LoadTable200(oTables);
  LoadTable201(oTables);
  LoadTable202(oTables);
  LoadTable203(oTables);
  LoadTable204(oTables);
  LoadTable205(oTables);
  LoadTable206(oTables);
  LoadTable207(oTables);
  LoadTable208(oTables);
  LoadTable209(oTables);
  LoadTable210(oTables);
  LoadTable211(oTables);
  LoadTable212(oTables);
  LoadTable213(oTables);
  LoadTable214(oTables);
  LoadTable215(oTables);
  LoadTable216(oTables);
  LoadTable217(oTables);
  LoadTable218(oTables);
  LoadTable219(oTables);
  LoadTable220(oTables);
  LoadTable222(oTables);
  LoadTable223(oTables);
  LoadTable224(oTables);
  LoadTable225(oTables);
  LoadTable227(oTables);
  LoadTable228(oTables);
  LoadTable229(oTables);
  LoadTable230(oTables);
  LoadTable231(oTables);
  LoadTable232(oTables);
  LoadTable233(oTables);
  LoadTable234(oTables);
  LoadTable235(oTables);
  LoadTable236(oTables);
  LoadTable237(oTables);
  LoadTable238(oTables);
  LoadTable239(oTables);
  LoadTable240(oTables);
  LoadTable241(oTables);
  LoadTable242(oTables);
  LoadTable243(oTables);
  LoadTable244(oTables);
  LoadTable245(oTables);
  LoadTable246(oTables);
  LoadTable247(oTables);
  LoadTable248(oTables);
  LoadTable249(oTables);
  LoadTable250(oTables);
  LoadTable251(oTables);
  LoadTable252(oTables);
  LoadTable253(oTables);
  LoadTable254(oTables);
  LoadTable255(oTables);
  LoadTable256(oTables);
  LoadTable257(oTables);
  LoadTable258(oTables);
  LoadTable259(oTables);
  LoadTable260(oTables);
  LoadTable261(oTables);
  LoadTable262(oTables);
  LoadTable263(oTables);
  LoadTable264(oTables);
  LoadTable265(oTables);
  LoadTable267(oTables);
  LoadTable268(oTables);
  LoadTable269(oTables);
  LoadTable270(oTables);
  LoadTable271(oTables);
  LoadTable272(oTables);
  LoadTable273(oTables);
  LoadTable275(oTables);
  LoadTable276(oTables);
  LoadTable277(oTables);
  LoadTable278(oTables);
  LoadTable279(oTables);
  LoadTable280(oTables);
  LoadTable281(oTables);
  LoadTable282(oTables);
  LoadTable283(oTables);
  LoadTable284(oTables);
  LoadTable285(oTables);
  LoadTable286(oTables);
  LoadTable287(oTables);
  LoadTable288(oTables);
  LoadTable289(oTables);
  LoadTable290(oTables);
  LoadTable291(oTables);
  LoadTable292(oTables);
  LoadTable293(oTables);
  LoadTable294(oTables);
  LoadTable295(oTables);
  LoadTable296(oTables);
  LoadTable297(oTables);
  LoadTable298(oTables);
  LoadTable299(oTables);
  LoadTable300(oTables);
  LoadTable301(oTables);
  LoadTable302(oTables);
  LoadTable303(oTables);
  LoadTable304(oTables);
  LoadTable305(oTables);
  LoadTable306(oTables);
  LoadTable307(oTables);
  LoadTable308(oTables);
  LoadTable309(oTables);
  LoadTable311(oTables);
  LoadTable312(oTables);
  LoadTable313(oTables);
  LoadTable315(oTables);
  LoadTable316(oTables);
  LoadTable317(oTables);
  LoadTable319(oTables);
  LoadTable320(oTables);
  LoadTable321(oTables);
  LoadTable322(oTables);
  LoadTable323(oTables);
  LoadTable324(oTables);
  LoadTable325(oTables);
  LoadTable326(oTables);
  LoadTable327(oTables);
  LoadTable328(oTables);
  LoadTable329(oTables);
  LoadTable330(oTables);
  LoadTable331(oTables);
  LoadTable332(oTables);
  LoadTable333(oTables);
  LoadTable334(oTables);
  LoadTable335(oTables);
  LoadTable336(oTables);
  LoadTable337(oTables);
  LoadTable338(oTables);
  LoadTable339(oTables);
  LoadTable340(oTables);
  LoadTable341(oTables);
  LoadTable342(oTables);
  LoadTable343(oTables);
  LoadTable344(oTables);
  LoadTable345(oTables);
  LoadTable346(oTables);
  LoadTable347(oTables);
  LoadTable348(oTables);
  LoadTable349(oTables);
  LoadTable350(oTables);
  LoadTable351(oTables);
  LoadTable353(oTables);
  LoadTable354(oTables);
  LoadTable355(oTables);
  LoadTable356(oTables);
  LoadTable357(oTables);
  LoadTable358(oTables);
  LoadTable359(oTables);
  LoadTable360(oTables);
  LoadTable361(oTables);
  LoadTable362(oTables);
  LoadTable363(oTables);
  LoadTable364(oTables);
  LoadTable4000(oTables);
End;

procedure Definitions231LoadDataTypes(oDataTypes : THL7V2ModelDataTypes);
Begin
  oDataTypes.Add('*', 'varies', 0);
  oDataTypes.Add('AD', 'Address', 0);
  oDataTypes.Add('AUI', 'authorization information', 0);
  oDataTypes.Add('CCD', 'charge time', 0);
  oDataTypes.Add('CCP', 'calibration parameters', 0);
  oDataTypes.Add('CD', 'Channel definition', 0);
  oDataTypes.Add('CE', 'Coded element', 0);
  oDataTypes.Add('CF', 'Coded element with formatted values', 0);
  oDataTypes.Add('CK', 'Composite ID with check digit', 0);
  oDataTypes.Add('CN', 'Composite ID number and name', 0);
  oDataTypes.Add('CNE', 'Coded with no exceptions', 0);
  oDataTypes.Add('CNS', 'Composite ID number and Name simplified', 0);
  oDataTypes.Add('CP', 'Composite price', 0);
  oDataTypes.Add('CQ', 'Composite quantity with units', 0);
  oDataTypes.Add('CSU', 'channel sensitivity units', 0);
  oDataTypes.Add('CWE', 'Coded with exceptions', 0);
  oDataTypes.Add('CX', 'Extended composite ID with check digit', 0);
  oDataTypes.Add('DDI', 'daily deductible', 0);
  oDataTypes.Add('DIN', 'activation date', 0);
  oDataTypes.Add('DLD', 'discharge location', 0);
  oDataTypes.Add('DLN', 'Driver'#146's license number', 0);
  oDataTypes.Add('DLT', 'delta check', 0);
  oDataTypes.Add('DR', 'Date/time range', 0);
  oDataTypes.Add('DT', 'Date', 0);
  oDataTypes.Add('DTN', 'Day Type and Number', 0);
  oDataTypes.Add('ED', 'Encapsulated data', 0);
  oDataTypes.Add('EI', 'Entity identifier', 0);
  oDataTypes.Add('EIP', 'parent order', 0);
  oDataTypes.Add('ELD', 'error', 0);
  oDataTypes.Add('FC', 'Financial class', 0);
  oDataTypes.Add('FN', 'Family Name', 0);
  oDataTypes.Add('FT', 'Formatted text', 0);
  oDataTypes.Add('HD', 'Hierarchic designator', 0);
  oDataTypes.Add('ID', 'Coded values for HL7 tables', 0);
  oDataTypes.Add('IS', 'Coded value for user-defined tables', 0);
  oDataTypes.Add('JCC', 'Job code/class', 0);
  oDataTypes.Add('LA1', 'Location with address information (variant 1)', 0);
  oDataTypes.Add('LA2', 'Location with address information (variant 2)', 0);
  oDataTypes.Add('MA', 'Multiplexed array', 0);
  oDataTypes.Add('MO', 'Money', 0);
  oDataTypes.Add('MOC', 'Charge To Practise', 0);
  oDataTypes.Add('MOP', 'money or percentage', 0);
  oDataTypes.Add('MSG', 'Message Type', 0);
  oDataTypes.Add('NA', 'Numeric array', 0);
  oDataTypes.Add('NDL', 'observing practitioner', 0);
  oDataTypes.Add('NM', 'Numeric', 0);
  oDataTypes.Add('NR', 'numeric range', 0);
  oDataTypes.Add('OCD', 'occurence', 0);
  oDataTypes.Add('OSD', 'order sequence', 0);
  oDataTypes.Add('OSP', 'occurence span', 0);
  oDataTypes.Add('PCF', 'Pre-certification required', 0);
  oDataTypes.Add('PI', 'person identifier', 0);
  oDataTypes.Add('PIP', 'Privileges', 0);
  oDataTypes.Add('PL', 'Person location', 0);
  oDataTypes.Add('PLN', 'Practitioner ID Numbers', 0);
  oDataTypes.Add('PN', 'Person name', 0);
  oDataTypes.Add('PPN', 'Performing person time stamp', 0);
  oDataTypes.Add('PRL', 'parent result link', 0);
  oDataTypes.Add('PT', 'Processing type', 0);
  oDataTypes.Add('PTA', 'Policy Type', 0);
  oDataTypes.Add('QIP', 'Query input parameter list', 0);
  oDataTypes.Add('QSC', 'Query selection criteria', 0);
  oDataTypes.Add('RCD', 'Row column definition', 0);
  oDataTypes.Add('RFR', 'reference range', 0);
  oDataTypes.Add('RI', 'Repeat interval', 0);
  oDataTypes.Add('RMC', 'Room Coverage', 0);
  oDataTypes.Add('RP', 'Reference pointer', 0);
  oDataTypes.Add('SCV', 'Scheduling class value pair', 0);
  oDataTypes.Add('SI', 'Sequence ID', 0);
  oDataTypes.Add('SN', 'Structured numeric', 0);
  oDataTypes.Add('SPD', 'Specialty', 0);
  oDataTypes.Add('SPS', 'specimen source', 0);
  oDataTypes.Add('ST', 'String', 0);
  oDataTypes.Add('TM', 'Time', 0);
  oDataTypes.Add('TN', 'Telephone number', 0);
  oDataTypes.Add('TQ', 'Timing/quantity', 0);
  oDataTypes.Add('TS', 'Time stamp', 0);
  oDataTypes.Add('TX', 'Text data', 0);
  oDataTypes.Add('UVC', 'Value code and amount', 0);
  oDataTypes.Add('VH', 'Visiting hours', 0);
  oDataTypes.Add('VID', 'Version identifier', 0);
  oDataTypes.Add('VR', 'value qualifier', 0);
  oDataTypes.Add('WVI', 'channel identifier', 0);
  oDataTypes.Add('WVS', 'wavefrom source', 0);
  oDataTypes.Add('XAD', 'Extended address', 0);
  oDataTypes.Add('XCN', 'Extended composite ID number and name', 0);
  oDataTypes.Add('XON', 'Extended composite name and ID number for organizations', 0);
  oDataTypes.Add('XPN', 'Extended person name', 0);
  oDataTypes.Add('XTN', 'Extended telecommunications number', 0);
End;

procedure Definitions231LoadComponents(oComponents : THL7V2ModelComponents);
Begin
  oComponents.Add('trigger event', 'ID', 3, 2);
  oComponents.Add('identifier', 'ST', 0, 3);
  oComponents.Add('text', 'ST', 0, 4);
  oComponents.Add('name of coding system', 'ST', 0, 5);
  oComponents.Add('alternate identifier', 'ST', 0, 6);
  oComponents.Add('alternate text', 'ST', 0, 7);
  oComponents.Add('name of alternate coding system', 'ST', 0, 8);
  oComponents.Add('sequence', 'NM', 0, 10);
  oComponents.Add('first data code value', 'ST', 0, 13);
  oComponents.Add('Last data code calue', 'ST', 0, 14);
  oComponents.Add('check digit', 'NM', 0, 18);
  oComponents.Add('check digit scheme', 'ID', 0, 19);
  oComponents.Add('given name', 'ST', 0, 22);
  oComponents.Add('middle initial or name', 'ST', 0, 23);
  oComponents.Add('street address', 'ST', 0, 27);
  oComponents.Add('other designation', 'ST', 0, 28);
  oComponents.Add('city', 'ST', 0, 29);
  oComponents.Add('state or province', 'ST', 0, 30);
  oComponents.Add('zip or postal code', 'ST', 0, 31);
  oComponents.Add('country', 'ID', 0, 32);
  oComponents.Add('type', 'ID', 0, 33);
  oComponents.Add('other geographic designation', 'ST', 0, 34);
  oComponents.Add('room', 'IS', 303, 38);
  oComponents.Add('bed', 'IS', 304, 39);
  oComponents.Add('facility ID', 'ID', 0, 40);
  oComponents.Add('effective date', 'TS', 0, 51);
  oComponents.Add('discharge location', 'IS', 0, 53);
  oComponents.Add('job code', 'IS', 327, 54);
  oComponents.Add('employee classification', 'ID', 0, 55);
  oComponents.Add('account number', 'NM', 0, 56);
  oComponents.Add('placer application ID', 'ID', 0, 62);
  oComponents.Add('quantity', 'CQ', 0, 63);
  oComponents.Add('interval', 'RI', 0, 64);
  oComponents.Add('duration', 'ST', 0, 65);
  oComponents.Add('start date/time', 'TS', 0, 66);
  oComponents.Add('end date/time', 'TS', 0, 67);
  oComponents.Add('priority', 'ST', 0, 68);
  oComponents.Add('condition', 'ST', 0, 69);
  oComponents.Add('conjunction', 'ST', 0, 71);
  oComponents.Add('order sequencing', 'OSD', 0, 72);
  oComponents.Add('parent''s placer order number', 'EI', 0, 73);
  oComponents.Add('parent''s filler order number', 'EI', 0, 74);
  oComponents.Add('date/time', 'TS', 0, 78);
  oComponents.Add('quantity', 'NM', 0, 80);
  oComponents.Add('units', 'CE', 0, 81);
  oComponents.Add('specimen source name or code', 'CE', 70, 82);
  oComponents.Add('additives', 'TX', 0, 83);
  oComponents.Add('freetext', 'TX', 0, 84);
  oComponents.Add('body site', 'CE', 0, 85);
  oComponents.Add('site modifier', 'CE', 0, 86);
  oComponents.Add('dollar amount', 'MO', 0, 87);
  oComponents.Add('charge code', 'CE', 0, 88);
  oComponents.Add('authorization number', 'ST', 0, 97);
  oComponents.Add('source', 'ST', 0, 99);
  oComponents.Add('amount type', 'IS', 146, 101);
  oComponents.Add('coverage amount', 'NM', 0, 102);
  oComponents.Add('policy type', 'IS', 147, 103);
  oComponents.Add('amount class', 'IS', 193, 104);
  oComponents.Add('delay days', 'NM', 0, 110);
  oComponents.Add('money or percentage indicator', 'IS', 148, 111);
  oComponents.Add('pre-certification patient type', 'IS', 150, 112);
  oComponents.Add('occurrence code', 'ID', 0, 114);
  oComponents.Add('value code', 'IS', 153, 115);
  oComponents.Add('occurrence span code', 'CE', 0, 116);
  oComponents.Add('date', 'TS', 0, 117);
  oComponents.Add('specialty name', 'ST', 0, 118);
  oComponents.Add('ID number (NM)', 'NM', 0, 119);
  oComponents.Add('privilege', 'CE', 0, 120);
  oComponents.Add('amount', 'NM', 0, 122);
  oComponents.Add('number of days', 'NM', 0, 123);
  oComponents.Add('money or percentage quantity', 'NM', 0, 124);
  oComponents.Add('value amount', 'NM', 0, 127);
  oComponents.Add('occurrence date', 'DT', 0, 128);
  oComponents.Add('occurrence span start date', 'DT', 0, 129);
  oComponents.Add('occurrence span stop date', 'DT', 0, 130);
  oComponents.Add('institution name', 'CE', 0, 131);
  oComponents.Add('governing board', 'ST', 0, 132);
  oComponents.Add('eligible or certified', 'ID', 0, 133);
  oComponents.Add('date of certification', 'DT', 0, 134);
  oComponents.Add('type of ID number (ID)', 'ID', 0, 135);
  oComponents.Add('privilege class', 'CE', 0, 137);
  oComponents.Add('expiration date', 'DT', 0, 138);
  oComponents.Add('activation date', 'DT', 0, 139);
  oComponents.Add('day type', 'IS', 149, 140);
  oComponents.Add('repeat pattern', 'IS', 335, 142);
  oComponents.Add('Low Value', 'NM', 0, 153);
  oComponents.Add('High Value', 'NM', 0, 154);
  oComponents.Add('Range', 'NR', 0, 155);
  oComponents.Add('Numeric Change', 'NM', 0, 156);
  oComponents.Add('Percent per Change', 'NM', 0, 157);
  oComponents.Add('Days', 'NM', 0, 158);
  oComponents.Add('family name', 'ST', 0, 201);
  oComponents.Add('address type', 'ID', 190, 202);
  oComponents.Add('degree (e.g., MD)', 'IS', 360, 203);
  oComponents.Add('coverage application identifier', 'ID', 0, 205);
  oComponents.Add('unique authorization identifier', 'ID', 0, 206);
  oComponents.Add('originating application identifier', 'ID', 0, 207);
  oComponents.Add('unique referral identifier', 'ID', 0, 208);
  oComponents.Add('parameter value', 'IS', 294, 209);
  oComponents.Add('when to charge code', 'ID', 100, 212);
  oComponents.Add('OBX-5-observation results from parent', 'CE', 0, 213);
  oComponents.Add('filler application identifier', 'ID', 0, 214);
  oComponents.Add('to value', 'NM', 0, 216);
  oComponents.Add('range units', 'CE', 0, 217);
  oComponents.Add('price', 'MO', 0, 218);
  oComponents.Add('code identifying error', 'CE', 0, 219);
  oComponents.Add('range type', 'ID', 298, 220);
  oComponents.Add('last data code value', 'ST', 0, 221);
  oComponents.Add('parameter class', 'IS', 0, 222);
  oComponents.Add('message type', 'ID', 76, 223);
  oComponents.Add('field position', 'NM', 0, 224);
  oComponents.Add('segment ID', 'ST', 0, 225);
  oComponents.Add('name type code', 'ID', 200, 227);
  oComponents.Add('telecommunication use code', 'ID', 201, 228);
  oComponents.Add('identifier check digit', 'ST', 0, 229);
  oComponents.Add('processing mode', 'ID', 207, 230);
  oComponents.Add('processing ID', 'ID', 103, 231);
  oComponents.Add('point of care', 'IS', 302, 232);
  oComponents.Add('prefix (e.g., DR)', 'ST', 0, 235);
  oComponents.Add('assigning facility', 'HD', 0, 237);
  oComponents.Add('other qualifying info', 'ST', 0, 238);
  oComponents.Add('application ID', 'HD', 0, 241);
  oComponents.Add('assigning facility ID', 'HD', 300, 243);
  oComponents.Add('name type', 'ID', 200, 244);
  oComponents.Add('facility (HD)', 'HD', 0, 245);
  oComponents.Add('maximum column width', 'NM', 0, 246);
  oComponents.Add('telecommunication equipment type', 'ID', 0, 247);
  oComponents.Add('start day range', 'ID', 267, 248);
  oComponents.Add('from value', 'NM', 0, 249);
  oComponents.Add('email address', 'ST', 0, 250);
  oComponents.Add('county/parish', 'ID', 0, 251);
  oComponents.Add('identifier type code', 'IS', 203, 252);
  oComponents.Add('organization name', 'ST', 0, 253);
  oComponents.Add('occurrence', 'DT', 0, 256);
  oComponents.Add('HL7 date type', 'ST', 0, 257);
  oComponents.Add('end day range', 'ID', 267, 258);
  oComponents.Add('field name', 'ST', 0, 259);
  oComponents.Add('value1&value2&value3', 'ST', 0, 260);
  oComponents.Add('state/other qualifying info', 'ST', 0, 261);
  oComponents.Add('institution', 'CE', 0, 262);
  oComponents.Add('duplicate code', 'ID', 0, 263);
  oComponents.Add('patient identifier', 'CX', 0, 264);
  oComponents.Add('segment unique key (EL)', 'ST', 0, 265);
  oComponents.Add('census tract', 'IS', 288, 266);
  oComponents.Add('job class', 'IS', 328, 267);
  oComponents.Add('segment field name', 'ST', 0, 268);
  oComponents.Add('range end date/time', 'TS', 0, 269);
  oComponents.Add('unique filler appointment identifier', 'ID', 0, 270);
  oComponents.Add('building', 'IS', 307, 271);
  oComponents.Add('source table', 'IS', 297, 272);
  oComponents.Add('suffix (e.g., JR or III)', 'ST', 0, 273);
  oComponents.Add('placer group type', 'ID', 0, 274);
  oComponents.Add('room type', 'ID', 145, 276);
  oComponents.Add('organization name type code', 'IS', 204, 277);
  oComponents.Add('explicit time interval', 'ST', 0, 278);
  oComponents.Add('start hour range', 'TM', 0, 279);
  oComponents.Add('range start date/time', 'TS', 0, 280);
  oComponents.Add('assigning authority', 'HD', 363, 281);
  oComponents.Add('end hour range', 'TM', 0, 282);
  oComponents.Add('pre-certification window', 'TS', 0, 283);
  oComponents.Add('pre-certification required', 'ID', 136, 284);
  oComponents.Add('unique placer group number', 'ST', 0, 285);
  oComponents.Add('price type', 'ID', 205, 286);
  oComponents.Add('denomination', 'ID', 0, 287);
  oComponents.Add('authenticated by whom', 'CN', 0, 288);
  oComponents.Add('when authenticated', 'TS', 0, 290);
  oComponents.Add('unique placer appointment identifier', 'ID', 0, 291);
  oComponents.Add('ID number (ST)', 'ST', 0, 292);
  oComponents.Add('formatted text', 'FT', 0, 294);
  oComponents.Add('alternate formatted text', 'FT', 0, 295);
  oComponents.Add('Issuing State, province, country', 'IS', 333, 296);
  oComponents.Add('ID', 'ST', 0, 297);
  oComponents.Add('code identifying the check digit scheme employed', 'ID', 61, 298);
  oComponents.Add('source application', 'HD', 0, 299);
  oComponents.Add('type of data', 'ID', 191, 300);
  oComponents.Add('encoding', 'ID', 299, 301);
  oComponents.Add('data', 'ST', 0, 302);
  oComponents.Add('entity identifier', 'ST', 0, 303);
  oComponents.Add('Location description', 'ST', 0, 304);
  oComponents.Add('Date/Time Action Performed', 'TS', 0, 305);
  oComponents.Add('segment field name', 'ST', 0, 306);
  oComponents.Add('relational operator', 'ID', 209, 307);
  oComponents.Add('Value', 'ST', 0, 308);
  oComponents.Add('relational conjunction', 'ID', 210, 309);
  oComponents.Add('sample 1 from channel 1', 'NM', 0, 310);
  oComponents.Add('sample 1 from channel 2', 'NM', 0, 311);
  oComponents.Add('sample 1 from channel 3', 'NM', 0, 312);
  oComponents.Add('sample 2 from channel 1', 'NM', 0, 313);
  oComponents.Add('sample 2 from channel 2', 'NM', 0, 314);
  oComponents.Add('sample 2 from channel 3', 'NM', 0, 315);
  oComponents.Add('value1', 'NM', 0, 316);
  oComponents.Add('value2', 'NM', 0, 317);
  oComponents.Add('value3', 'NM', 0, 318);
  oComponents.Add('value4', 'NM', 0, 319);
  oComponents.Add('nursing unit or department or clinic', 'ID', 0, 320);
  oComponents.Add('location status', 'IS', 306, 321);
  oComponents.Add('person location type', 'IS', 305, 322);
  oComponents.Add('floor', 'IS', 308, 323);
  oComponents.Add('pointer', 'ST', 0, 324);
  oComponents.Add('type of data', 'ID', 191, 325);
  oComponents.Add('comparator', 'ST', 0, 326);
  oComponents.Add('num1', 'NM', 0, 327);
  oComponents.Add('separator or suffix', 'ST', 0, 328);
  oComponents.Add('num2', 'NM', 0, 329);
  oComponents.Add('county/parish code', 'IS', 289, 330);
  oComponents.Add('Driver''s License Number', 'ST', 0, 331);
  oComponents.Add('channel identifier', 'WVI', 0, 332);
  oComponents.Add('electrode names', 'WVS', 0, 333);
  oComponents.Add('channel sensitivity/units', 'CSU', 0, 334);
  oComponents.Add('calibration parameters', 'CCP', 0, 335);
  oComponents.Add('sampling frequency', 'NM', 0, 336);
  oComponents.Add('minimum/maximum data values', 'NR', 0, 337);
  oComponents.Add('room type', 'IS', 145, 338);
  oComponents.Add('Channel Name', 'ST', 0, 339);
  oComponents.Add('data subtype', 'ID', 291, 340);
  oComponents.Add('universal ID', 'ST', 0, 341);
  oComponents.Add('namespace ID', 'IS', 363, 342);
  oComponents.Add('universal ID type', 'ID', 301, 343);
  oComponents.Add('Financial Class', 'IS', 64, 344);
  oComponents.Add('Effective Date', 'TS', 0, 345);
  oComponents.Add('subtype', 'ID', 291, 346);
  oComponents.Add('[(999)] 999-9999 [X99999][C any text]', 'TN', 0, 347);
  oComponents.Add('telecommunication use code', 'ID', 201, 348);
  oComponents.Add('telecommunication equipment type (ID)', 'ID', 202, 349);
  oComponents.Add('Email address', 'ST', 0, 350);
  oComponents.Add('Area/city code', 'NM', 0, 351);
  oComponents.Add('Country Code', 'NM', 0, 352);
  oComponents.Add('Phone number', 'NM', 0, 353);
  oComponents.Add('Extension', 'NM', 0, 354);
  oComponents.Add('any text', 'ST', 0, 355);
  oComponents.Add('Name Representation code', 'ID', 4000, 356);
  oComponents.Add('Channel Number', 'NM', 0, 357);
  oComponents.Add('coding system version ID', 'ST', 0, 358);
  oComponents.Add('alternate coding system version ID', 'ST', 0, 359);
  oComponents.Add('original text', 'ST', 0, 360);
  oComponents.Add('last name prefix', 'ST', 0, 361);
  oComponents.Add('version ID', 'ID', 104, 362);
  oComponents.Add('internationalization code', 'CE', 0, 363);
  oComponents.Add('international version ID', 'CE', 0, 364);
  oComponents.Add('address representation code', 'ID', 4000, 365);
  oComponents.Add('message structure', 'ID', 354, 366);
  oComponents.Add('???????????', 'TX', 0, 367);
  oComponents.Add('family+last name', 'FN', 0, 368);
  oComponents.Add('source name 1', 'ST', 0, 370);
  oComponents.Add('source name 2', 'ST', 0, 371);
  oComponents.Add('channel calibration sensitivity correction factor', 'NM', 0, 372);
  oComponents.Add('channel sensitivity', 'NM', 0, 375);
  oComponents.Add('channel calibration baseline', 'NM', 0, 378);
  oComponents.Add('channel calibration time skew', 'NM', 0, 379);
  oComponents.Add('unit of measure identifier', 'ST', 0, 380);
  oComponents.Add('unit of measure description', 'ST', 0, 381);
  oComponents.Add('unit of measure coding system', 'IS', 0, 382);
  oComponents.Add('alternate unit of measure identifier', 'ST', 0, 383);
  oComponents.Add('alternate unit of measure description', 'ST', 0, 384);
  oComponents.Add('alternate unit of measure coding system', 'IS', 0, 385);
  oComponents.Add('type of ID number (IS)', 'IS', 0, 405);
  oComponents.Add('point of care (ST)', 'ST', 302, 406);
  oComponents.Add('collection modifier method code', 'CE', 0, 408);
  oComponents.Add('specimen role', 'CE', 0, 409);
  oComponents.Add('occurrence duration', 'CE', 0, 410);
  oComponents.Add('total occurences', 'NM', 0, 411);
  oComponents.Add('OBX-3 observation identifier of parent result', 'CE', 0, 412);
  oComponents.Add('OBX-4 sub-ID of parent result', 'ST', 0, 413);
  oComponents.Add('part of OBX-5 observation result from parent', 'TX', 0, 414);
  oComponents.Add('name', 'CN', 0, 415);
  oComponents.Add('point of care (IS)', 'IS', 302, 416);
  oComponents.Add('numeric threshold', 'NM', 0, 417);
  oComponents.Add('change computation', 'ST', 0, 418);
  oComponents.Add('length of time-days', 'NM', 0, 419);
  oComponents.Add('sequence/results flag', 'ID', 0, 420);
  oComponents.Add('placer order number: entity identifier', 'ST', 0, 421);
  oComponents.Add('placer order number: namespace ID', 'IS', 0, 422);
  oComponents.Add('filler order number: entity identifier', 'ST', 0, 423);
  oComponents.Add('filler order number: namespace ID', 'IS', 0, 424);
  oComponents.Add('sequence condition value', 'ST', 0, 425);
  oComponents.Add('maximum number of repeats', 'NM', 0, 426);
  oComponents.Add('placer order number: universal ID', 'ST', 0, 427);
  oComponents.Add('placer order number; universal ID type', 'ID', 0, 428);
  oComponents.Add('filler order number: universal ID', 'ST', 0, 429);
  oComponents.Add('filler order number: universal ID type', 'ID', 0, 430);
  oComponents.Add('address', 'AD', 0, 431);
  oComponents.Add('numeric range', 'NR', 0, 432);
  oComponents.Add('administrative sex', 'IS', 0, 433);
  oComponents.Add('age range', 'NR', 0, 434);
  oComponents.Add('gestational age range', 'NR', 0, 435);
  oComponents.Add('species', 'TX', 0, 436);
  oComponents.Add('race/subspecies', 'ST', 0, 437);
  oComponents.Add('conditions', 'TX', 0, 438);
  oComponents.Add('time of an event', 'ST', 0, 439);
  oComponents.Add('degree of precision', 'ST', 0, 440);
  oComponents.Add('namespace ID', 'IS', 363, 441);
  oComponents.Add('universal ID', 'ST', 0, 442);
  oComponents.Add('facility (EI)', 'EI', 0, 443);
  oComponents.Add('second and further given names or initials thereof', 'ST', 0, 444);
  oComponents.Add('assigning authority namespace ID', 'IS', 363, 445);
  oComponents.Add('assigning authority universal ID', 'ST', 0, 446);
  oComponents.Add('assigning authority universal ID type', 'ID', 301, 447);
  oComponents.Add('varies', 'ST', 0, 9999);
End;

procedure Definitions231LoadStructures(oStructures : THL7V2ModelStructures; oComponents : THL7V2ModelComponents);
Var
  oStructure : THL7V2ModelStructure;
Begin
  oStructure := oStructures.Add('XTN', 'extended telecommunication number', 'XTN', 0);
    oStructure.Components.Add(oComponents.GetByNumber(347).Link);
    oStructure.Components.Add(oComponents.GetByNumber(348).Link);
    oStructure.Components.Add(oComponents.GetByNumber(349).Link);
    oStructure.Components.Add(oComponents.GetByNumber(350).Link);
    oStructure.Components.Add(oComponents.GetByNumber(352).Link);
    oStructure.Components.Add(oComponents.GetByNumber(351).Link);
    oStructure.Components.Add(oComponents.GetByNumber(353).Link);
    oStructure.Components.Add(oComponents.GetByNumber(354).Link);
    oStructure.Components.Add(oComponents.GetByNumber(355).Link);
  oStructure := oStructures.Add('XPN', 'extended person name', 'XPN', 0);
    oStructure.Components.Add(oComponents.GetByNumber(368).Link);
    oStructure.Components.Add(oComponents.GetByNumber(22).Link);
    oStructure.Components.Add(oComponents.GetByNumber(23).Link);
    oStructure.Components.Add(oComponents.GetByNumber(273).Link);
    oStructure.Components.Add(oComponents.GetByNumber(235).Link);
    oStructure.Components.Add(oComponents.GetByNumber(203).Link);
    oStructure.Components.Add(oComponents.GetByNumber(227).Link);
    oStructure.Components.Add(oComponents.GetByNumber(356).Link);
  oStructure := oStructures.Add('XON', 'extended composite name and identification number for organizations', 'XON', 0);
    oStructure.Components.Add(oComponents.GetByNumber(253).Link);
    oStructure.Components.Add(oComponents.GetByNumber(277).Link);
    oStructure.Components.Add(oComponents.GetByNumber(119).Link);
    oStructure.Components.Add(oComponents.GetByNumber(18).Link);
    oStructure.Components.Add(oComponents.GetByNumber(298).Link);
    oStructure.Components.Add(oComponents.GetByNumber(281).Link);
    oStructure.Components.Add(oComponents.GetByNumber(252).Link);
    oStructure.Components.Add(oComponents.GetByNumber(243).Link);
    oStructure.Components.Add(oComponents.GetByNumber(356).Link);
  oStructure := oStructures.Add('XCN', 'extended composite ID number and name for persons', 'XCN', 0);
    oStructure.Components.Add(oComponents.GetByNumber(292).Link);
    oStructure.Components.Add(oComponents.GetByNumber(368).Link);
    oStructure.Components.Add(oComponents.GetByNumber(22).Link);
    oStructure.Components.Add(oComponents.GetByNumber(23).Link);
    oStructure.Components.Add(oComponents.GetByNumber(273).Link);
    oStructure.Components.Add(oComponents.GetByNumber(235).Link);
    oStructure.Components.Add(oComponents.GetByNumber(203).Link);
    oStructure.Components.Add(oComponents.GetByNumber(272).Link);
    oStructure.Components.Add(oComponents.GetByNumber(281).Link);
    oStructure.Components.Add(oComponents.GetByNumber(227).Link);
    oStructure.Components.Add(oComponents.GetByNumber(229).Link);
    oStructure.Components.Add(oComponents.GetByNumber(298).Link);
    oStructure.Components.Add(oComponents.GetByNumber(252).Link);
    oStructure.Components.Add(oComponents.GetByNumber(237).Link);
    oStructure.Components.Add(oComponents.GetByNumber(356).Link);
  oStructure := oStructures.Add('XAD', 'extended address', 'XAD', 0);
    oStructure.Components.Add(oComponents.GetByNumber(27).Link);
    oStructure.Components.Add(oComponents.GetByNumber(28).Link);
    oStructure.Components.Add(oComponents.GetByNumber(29).Link);
    oStructure.Components.Add(oComponents.GetByNumber(30).Link);
    oStructure.Components.Add(oComponents.GetByNumber(31).Link);
    oStructure.Components.Add(oComponents.GetByNumber(32).Link);
    oStructure.Components.Add(oComponents.GetByNumber(202).Link);
    oStructure.Components.Add(oComponents.GetByNumber(34).Link);
    oStructure.Components.Add(oComponents.GetByNumber(330).Link);
    oStructure.Components.Add(oComponents.GetByNumber(266).Link);
    oStructure.Components.Add(oComponents.GetByNumber(365).Link);
  oStructure := oStructures.Add('WVS', 'wavefrom source', 'WVS', 0);
    oStructure.Components.Add(oComponents.GetByNumber(370).Link);
    oStructure.Components.Add(oComponents.GetByNumber(371).Link);
  oStructure := oStructures.Add('WVI', 'channel identifier', 'WVI', 0);
    oStructure.Components.Add(oComponents.GetByNumber(357).Link);
    oStructure.Components.Add(oComponents.GetByNumber(339).Link);
  oStructure := oStructures.Add('VR', 'value qualifier', 'VR', 0);
    oStructure.Components.Add(oComponents.GetByNumber(13).Link);
    oStructure.Components.Add(oComponents.GetByNumber(14).Link);
  oStructure := oStructures.Add('VID', 'version identifier', 'VID', 0);
    oStructure.Components.Add(oComponents.GetByNumber(362).Link);
    oStructure.Components.Add(oComponents.GetByNumber(363).Link);
    oStructure.Components.Add(oComponents.GetByNumber(364).Link);
  oStructure := oStructures.Add('VH', 'visiting hours', 'VH', 0);
    oStructure.Components.Add(oComponents.GetByNumber(248).Link);
    oStructure.Components.Add(oComponents.GetByNumber(258).Link);
    oStructure.Components.Add(oComponents.GetByNumber(279).Link);
    oStructure.Components.Add(oComponents.GetByNumber(282).Link);
  oStructure := oStructures.Add('UVC', 'Value code and amount', 'UVC', 0);
    oStructure.Components.Add(oComponents.GetByNumber(115).Link);
    oStructure.Components.Add(oComponents.GetByNumber(127).Link);
  oStructure := oStructures.Add('TX_CHALLENGE', 'challenge information', 'TX', 0);
    oStructure.Components.Add(oComponents.GetByNumber(367).Link);
    oStructure.Components.Add(oComponents.GetByNumber(367).Link);
  oStructure := oStructures.Add('TS', 'time stamp', 'TS', 0);
    oStructure.Components.Add(oComponents.GetByNumber(439).Link);
    oStructure.Components.Add(oComponents.GetByNumber(440).Link);
  oStructure := oStructures.Add('TQ', 'timing quantity', 'TQ', 0);
    oStructure.Components.Add(oComponents.GetByNumber(63).Link);
    oStructure.Components.Add(oComponents.GetByNumber(64).Link);
    oStructure.Components.Add(oComponents.GetByNumber(65).Link);
    oStructure.Components.Add(oComponents.GetByNumber(66).Link);
    oStructure.Components.Add(oComponents.GetByNumber(67).Link);
    oStructure.Components.Add(oComponents.GetByNumber(68).Link);
    oStructure.Components.Add(oComponents.GetByNumber(69).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(71).Link);
    oStructure.Components.Add(oComponents.GetByNumber(72).Link);
    oStructure.Components.Add(oComponents.GetByNumber(410).Link);
    oStructure.Components.Add(oComponents.GetByNumber(411).Link);
  oStructure := oStructures.Add('SPS', 'specimen source', 'SPS', 0);
    oStructure.Components.Add(oComponents.GetByNumber(82).Link);
    oStructure.Components.Add(oComponents.GetByNumber(83).Link);
    oStructure.Components.Add(oComponents.GetByNumber(84).Link);
    oStructure.Components.Add(oComponents.GetByNumber(85).Link);
    oStructure.Components.Add(oComponents.GetByNumber(86).Link);
    oStructure.Components.Add(oComponents.GetByNumber(408).Link);
    oStructure.Components.Add(oComponents.GetByNumber(409).Link);
  oStructure := oStructures.Add('SPD', 'Specialty', 'SPD', 0);
    oStructure.Components.Add(oComponents.GetByNumber(118).Link);
    oStructure.Components.Add(oComponents.GetByNumber(132).Link);
    oStructure.Components.Add(oComponents.GetByNumber(133).Link);
    oStructure.Components.Add(oComponents.GetByNumber(134).Link);
  oStructure := oStructures.Add('SN', 'structured numeric', 'SN', 0);
    oStructure.Components.Add(oComponents.GetByNumber(326).Link);
    oStructure.Components.Add(oComponents.GetByNumber(327).Link);
    oStructure.Components.Add(oComponents.GetByNumber(328).Link);
    oStructure.Components.Add(oComponents.GetByNumber(329).Link);
  oStructure := oStructures.Add('SCV', 'scheduling class value pair', 'SCV', 0);
    oStructure.Components.Add(oComponents.GetByNumber(222).Link);
    oStructure.Components.Add(oComponents.GetByNumber(209).Link);
  oStructure := oStructures.Add('RP', 'reference pointer', 'RP', 0);
    oStructure.Components.Add(oComponents.GetByNumber(324).Link);
    oStructure.Components.Add(oComponents.GetByNumber(241).Link);
    oStructure.Components.Add(oComponents.GetByNumber(325).Link);
    oStructure.Components.Add(oComponents.GetByNumber(346).Link);
  oStructure := oStructures.Add('RMC', 'Room Coverage', 'RMC', 0);
    oStructure.Components.Add(oComponents.GetByNumber(338).Link);
    oStructure.Components.Add(oComponents.GetByNumber(101).Link);
    oStructure.Components.Add(oComponents.GetByNumber(102).Link);
  oStructure := oStructures.Add('RI', 'repeat interval', 'RI', 0);
    oStructure.Components.Add(oComponents.GetByNumber(142).Link);
    oStructure.Components.Add(oComponents.GetByNumber(278).Link);
  oStructure := oStructures.Add('RFR', 'reference range', 'RFR', 0);
    oStructure.Components.Add(oComponents.GetByNumber(432).Link);
    oStructure.Components.Add(oComponents.GetByNumber(433).Link);
    oStructure.Components.Add(oComponents.GetByNumber(434).Link);
    oStructure.Components.Add(oComponents.GetByNumber(435).Link);
    oStructure.Components.Add(oComponents.GetByNumber(436).Link);
    oStructure.Components.Add(oComponents.GetByNumber(437).Link);
    oStructure.Components.Add(oComponents.GetByNumber(438).Link);
  oStructure := oStructures.Add('RCD', 'row column definition', 'RCD', 0);
    oStructure.Components.Add(oComponents.GetByNumber(268).Link);
    oStructure.Components.Add(oComponents.GetByNumber(257).Link);
    oStructure.Components.Add(oComponents.GetByNumber(246).Link);
  oStructure := oStructures.Add('QSC', 'query selection criteria', 'QSC', 0);
    oStructure.Components.Add(oComponents.GetByNumber(306).Link);
    oStructure.Components.Add(oComponents.GetByNumber(307).Link);
    oStructure.Components.Add(oComponents.GetByNumber(308).Link);
    oStructure.Components.Add(oComponents.GetByNumber(309).Link);
  oStructure := oStructures.Add('QIP', 'query input parameter list', 'QIP', 0);
    oStructure.Components.Add(oComponents.GetByNumber(259).Link);
    oStructure.Components.Add(oComponents.GetByNumber(260).Link);
  oStructure := oStructures.Add('PTA', 'Policy Type', 'PTA', 0);
    oStructure.Components.Add(oComponents.GetByNumber(103).Link);
    oStructure.Components.Add(oComponents.GetByNumber(104).Link);
    oStructure.Components.Add(oComponents.GetByNumber(122).Link);
  oStructure := oStructures.Add('PT', 'processing type', 'PT', 0);
    oStructure.Components.Add(oComponents.GetByNumber(231).Link);
    oStructure.Components.Add(oComponents.GetByNumber(230).Link);
  oStructure := oStructures.Add('PRL', 'parent result link', 'PRL', 0);
    oStructure.Components.Add(oComponents.GetByNumber(412).Link);
    oStructure.Components.Add(oComponents.GetByNumber(413).Link);
    oStructure.Components.Add(oComponents.GetByNumber(414).Link);
  oStructure := oStructures.Add('PPN', 'performing person time stamp', 'PPN', 0);
    oStructure.Components.Add(oComponents.GetByNumber(292).Link);
    oStructure.Components.Add(oComponents.GetByNumber(368).Link);
    oStructure.Components.Add(oComponents.GetByNumber(22).Link);
    oStructure.Components.Add(oComponents.GetByNumber(23).Link);
    oStructure.Components.Add(oComponents.GetByNumber(273).Link);
    oStructure.Components.Add(oComponents.GetByNumber(235).Link);
    oStructure.Components.Add(oComponents.GetByNumber(203).Link);
    oStructure.Components.Add(oComponents.GetByNumber(272).Link);
    oStructure.Components.Add(oComponents.GetByNumber(281).Link);
    oStructure.Components.Add(oComponents.GetByNumber(227).Link);
    oStructure.Components.Add(oComponents.GetByNumber(229).Link);
    oStructure.Components.Add(oComponents.GetByNumber(298).Link);
    oStructure.Components.Add(oComponents.GetByNumber(252).Link);
    oStructure.Components.Add(oComponents.GetByNumber(237).Link);
    oStructure.Components.Add(oComponents.GetByNumber(305).Link);
    oStructure.Components.Add(oComponents.GetByNumber(356).Link);
  oStructure := oStructures.Add('PN', 'person name', 'PN', 0);
    oStructure.Components.Add(oComponents.GetByNumber(368).Link);
    oStructure.Components.Add(oComponents.GetByNumber(22).Link);
    oStructure.Components.Add(oComponents.GetByNumber(23).Link);
    oStructure.Components.Add(oComponents.GetByNumber(273).Link);
    oStructure.Components.Add(oComponents.GetByNumber(235).Link);
    oStructure.Components.Add(oComponents.GetByNumber(203).Link);
  oStructure := oStructures.Add('PLN', 'Practitioner ID Numbers', 'PLN', 0);
    oStructure.Components.Add(oComponents.GetByNumber(292).Link);
    oStructure.Components.Add(oComponents.GetByNumber(405).Link);
    oStructure.Components.Add(oComponents.GetByNumber(261).Link);
    oStructure.Components.Add(oComponents.GetByNumber(138).Link);
  oStructure := oStructures.Add('PL', 'person location', 'PL', 0);
    oStructure.Components.Add(oComponents.GetByNumber(232).Link);
    oStructure.Components.Add(oComponents.GetByNumber(38).Link);
    oStructure.Components.Add(oComponents.GetByNumber(39).Link);
    oStructure.Components.Add(oComponents.GetByNumber(245).Link);
    oStructure.Components.Add(oComponents.GetByNumber(321).Link);
    oStructure.Components.Add(oComponents.GetByNumber(322).Link);
    oStructure.Components.Add(oComponents.GetByNumber(271).Link);
    oStructure.Components.Add(oComponents.GetByNumber(323).Link);
    oStructure.Components.Add(oComponents.GetByNumber(304).Link);
  oStructure := oStructures.Add('PIP', 'Privileges', 'PIP', 0);
    oStructure.Components.Add(oComponents.GetByNumber(120).Link);
    oStructure.Components.Add(oComponents.GetByNumber(137).Link);
    oStructure.Components.Add(oComponents.GetByNumber(138).Link);
    oStructure.Components.Add(oComponents.GetByNumber(139).Link);
    oStructure.Components.Add(oComponents.GetByNumber(443).Link);
  oStructure := oStructures.Add('PI', 'person identifier', 'PI', 0);
    oStructure.Components.Add(oComponents.GetByNumber(292).Link);
    oStructure.Components.Add(oComponents.GetByNumber(405).Link);
    oStructure.Components.Add(oComponents.GetByNumber(238).Link);
  oStructure := oStructures.Add('PCF', 'Pre-certification required', 'PCF', 0);
    oStructure.Components.Add(oComponents.GetByNumber(112).Link);
    oStructure.Components.Add(oComponents.GetByNumber(284).Link);
    oStructure.Components.Add(oComponents.GetByNumber(283).Link);
  oStructure := oStructures.Add('OSP', 'occurence span', 'OSP', 0);
    oStructure.Components.Add(oComponents.GetByNumber(116).Link);
    oStructure.Components.Add(oComponents.GetByNumber(129).Link);
    oStructure.Components.Add(oComponents.GetByNumber(130).Link);
  oStructure := oStructures.Add('OSD', 'order sequence', 'OSD', 0);
    oStructure.Components.Add(oComponents.GetByNumber(420).Link);
    oStructure.Components.Add(oComponents.GetByNumber(421).Link);
    oStructure.Components.Add(oComponents.GetByNumber(422).Link);
    oStructure.Components.Add(oComponents.GetByNumber(423).Link);
    oStructure.Components.Add(oComponents.GetByNumber(424).Link);
    oStructure.Components.Add(oComponents.GetByNumber(425).Link);
    oStructure.Components.Add(oComponents.GetByNumber(426).Link);
    oStructure.Components.Add(oComponents.GetByNumber(427).Link);
    oStructure.Components.Add(oComponents.GetByNumber(428).Link);
    oStructure.Components.Add(oComponents.GetByNumber(429).Link);
    oStructure.Components.Add(oComponents.GetByNumber(430).Link);
  oStructure := oStructures.Add('OCD', 'occurence', 'OCD', 0);
    oStructure.Components.Add(oComponents.GetByNumber(114).Link);
    oStructure.Components.Add(oComponents.GetByNumber(128).Link);
  oStructure := oStructures.Add('NR', 'Numeric Range', 'NR', 0);
    oStructure.Components.Add(oComponents.GetByNumber(153).Link);
    oStructure.Components.Add(oComponents.GetByNumber(154).Link);
  oStructure := oStructures.Add('NDL', 'observing practitioner', 'NDL', 0);
    oStructure.Components.Add(oComponents.GetByNumber(415).Link);
    oStructure.Components.Add(oComponents.GetByNumber(66).Link);
    oStructure.Components.Add(oComponents.GetByNumber(67).Link);
    oStructure.Components.Add(oComponents.GetByNumber(416).Link);
    oStructure.Components.Add(oComponents.GetByNumber(38).Link);
    oStructure.Components.Add(oComponents.GetByNumber(39).Link);
    oStructure.Components.Add(oComponents.GetByNumber(245).Link);
    oStructure.Components.Add(oComponents.GetByNumber(321).Link);
    oStructure.Components.Add(oComponents.GetByNumber(322).Link);
    oStructure.Components.Add(oComponents.GetByNumber(271).Link);
    oStructure.Components.Add(oComponents.GetByNumber(323).Link);
  oStructure := oStructures.Add('NA', 'numeric array', 'NA', 0);
    oStructure.Components.Add(oComponents.GetByNumber(316).Link);
    oStructure.Components.Add(oComponents.GetByNumber(317).Link);
    oStructure.Components.Add(oComponents.GetByNumber(318).Link);
    oStructure.Components.Add(oComponents.GetByNumber(319).Link);
  oStructure := oStructures.Add('MSG', 'Message Type', 'MSG', 0);
    oStructure.Components.Add(oComponents.GetByNumber(223).Link);
    oStructure.Components.Add(oComponents.GetByNumber(2).Link);
    oStructure.Components.Add(oComponents.GetByNumber(366).Link);
  oStructure := oStructures.Add('MOP', 'money or percentage', 'MOP', 0);
    oStructure.Components.Add(oComponents.GetByNumber(111).Link);
    oStructure.Components.Add(oComponents.GetByNumber(124).Link);
  oStructure := oStructures.Add('MOC', 'Charge To Practise', 'MOC', 0);
    oStructure.Components.Add(oComponents.GetByNumber(87).Link);
    oStructure.Components.Add(oComponents.GetByNumber(88).Link);
  oStructure := oStructures.Add('MO', 'money', 'MO', 0);
    oStructure.Components.Add(oComponents.GetByNumber(80).Link);
    oStructure.Components.Add(oComponents.GetByNumber(287).Link);
  oStructure := oStructures.Add('MA', 'multiplexed array', 'MA', 0);
    oStructure.Components.Add(oComponents.GetByNumber(310).Link);
    oStructure.Components.Add(oComponents.GetByNumber(311).Link);
    oStructure.Components.Add(oComponents.GetByNumber(312).Link);
    oStructure.Components.Add(oComponents.GetByNumber(313).Link);
    oStructure.Components.Add(oComponents.GetByNumber(314).Link);
    oStructure.Components.Add(oComponents.GetByNumber(315).Link);
  oStructure := oStructures.Add('LA2', 'Location with address information (variant 2)', 'LA2', 0);
    oStructure.Components.Add(oComponents.GetByNumber(416).Link);
    oStructure.Components.Add(oComponents.GetByNumber(38).Link);
    oStructure.Components.Add(oComponents.GetByNumber(39).Link);
    oStructure.Components.Add(oComponents.GetByNumber(245).Link);
    oStructure.Components.Add(oComponents.GetByNumber(321).Link);
    oStructure.Components.Add(oComponents.GetByNumber(322).Link);
    oStructure.Components.Add(oComponents.GetByNumber(271).Link);
    oStructure.Components.Add(oComponents.GetByNumber(323).Link);
    oStructure.Components.Add(oComponents.GetByNumber(27).Link);
    oStructure.Components.Add(oComponents.GetByNumber(28).Link);
    oStructure.Components.Add(oComponents.GetByNumber(29).Link);
    oStructure.Components.Add(oComponents.GetByNumber(30).Link);
    oStructure.Components.Add(oComponents.GetByNumber(31).Link);
    oStructure.Components.Add(oComponents.GetByNumber(32).Link);
    oStructure.Components.Add(oComponents.GetByNumber(202).Link);
    oStructure.Components.Add(oComponents.GetByNumber(34).Link);
  oStructure := oStructures.Add('LA1', 'Location with address information (variant 1)', 'LA1', 0);
    oStructure.Components.Add(oComponents.GetByNumber(416).Link);
    oStructure.Components.Add(oComponents.GetByNumber(38).Link);
    oStructure.Components.Add(oComponents.GetByNumber(39).Link);
    oStructure.Components.Add(oComponents.GetByNumber(245).Link);
    oStructure.Components.Add(oComponents.GetByNumber(321).Link);
    oStructure.Components.Add(oComponents.GetByNumber(322).Link);
    oStructure.Components.Add(oComponents.GetByNumber(271).Link);
    oStructure.Components.Add(oComponents.GetByNumber(323).Link);
    oStructure.Components.Add(oComponents.GetByNumber(431).Link);
  oStructure := oStructures.Add('JCC', 'job code/class', 'JCC', 0);
    oStructure.Components.Add(oComponents.GetByNumber(54).Link);
    oStructure.Components.Add(oComponents.GetByNumber(267).Link);
  oStructure := oStructures.Add('HD', 'hierarchic designator', 'HD', 0);
    oStructure.Components.Add(oComponents.GetByNumber(342).Link);
    oStructure.Components.Add(oComponents.GetByNumber(341).Link);
    oStructure.Components.Add(oComponents.GetByNumber(343).Link);
  oStructure := oStructures.Add('FN', 'family + last name prefix', 'FN', 0);
    oStructure.Components.Add(oComponents.GetByNumber(201).Link);
    oStructure.Components.Add(oComponents.GetByNumber(361).Link);
  oStructure := oStructures.Add('FC', 'financial class', 'FC', 0);
    oStructure.Components.Add(oComponents.GetByNumber(344).Link);
    oStructure.Components.Add(oComponents.GetByNumber(345).Link);
  oStructure := oStructures.Add('ELD', 'error', 'ELD', 0);
    oStructure.Components.Add(oComponents.GetByNumber(225).Link);
    oStructure.Components.Add(oComponents.GetByNumber(10).Link);
    oStructure.Components.Add(oComponents.GetByNumber(224).Link);
    oStructure.Components.Add(oComponents.GetByNumber(219).Link);
  oStructure := oStructures.Add('EIP', 'parent order', 'EIP', 0);
    oStructure.Components.Add(oComponents.GetByNumber(73).Link);
    oStructure.Components.Add(oComponents.GetByNumber(74).Link);
  oStructure := oStructures.Add('EI', 'entity identifier', 'EI', 0);
    oStructure.Components.Add(oComponents.GetByNumber(303).Link);
    oStructure.Components.Add(oComponents.GetByNumber(441).Link);
    oStructure.Components.Add(oComponents.GetByNumber(442).Link);
    oStructure.Components.Add(oComponents.GetByNumber(343).Link);
  oStructure := oStructures.Add('ED', 'encapsulated data', 'ED', 0);
    oStructure.Components.Add(oComponents.GetByNumber(299).Link);
    oStructure.Components.Add(oComponents.GetByNumber(300).Link);
    oStructure.Components.Add(oComponents.GetByNumber(340).Link);
    oStructure.Components.Add(oComponents.GetByNumber(301).Link);
    oStructure.Components.Add(oComponents.GetByNumber(302).Link);
  oStructure := oStructures.Add('DTN', 'Day Type and Number', 'DTN', 0);
    oStructure.Components.Add(oComponents.GetByNumber(140).Link);
    oStructure.Components.Add(oComponents.GetByNumber(123).Link);
  oStructure := oStructures.Add('DR', 'date/time range', 'DR', 0);
    oStructure.Components.Add(oComponents.GetByNumber(280).Link);
    oStructure.Components.Add(oComponents.GetByNumber(269).Link);
  oStructure := oStructures.Add('DLT', 'delta check', 'DLT', 0);
    oStructure.Components.Add(oComponents.GetByNumber(155).Link);
    oStructure.Components.Add(oComponents.GetByNumber(417).Link);
    oStructure.Components.Add(oComponents.GetByNumber(418).Link);
    oStructure.Components.Add(oComponents.GetByNumber(419).Link);
  oStructure := oStructures.Add('DLN', 'driver''s license number', 'DLN', 0);
    oStructure.Components.Add(oComponents.GetByNumber(331).Link);
    oStructure.Components.Add(oComponents.GetByNumber(296).Link);
    oStructure.Components.Add(oComponents.GetByNumber(138).Link);
  oStructure := oStructures.Add('DLD', 'discharge location', 'DLD', 0);
    oStructure.Components.Add(oComponents.GetByNumber(53).Link);
    oStructure.Components.Add(oComponents.GetByNumber(51).Link);
  oStructure := oStructures.Add('DIN', 'activation date', 'DIN', 0);
    oStructure.Components.Add(oComponents.GetByNumber(117).Link);
    oStructure.Components.Add(oComponents.GetByNumber(131).Link);
  oStructure := oStructures.Add('DDI', 'daily deductible', 'DDI', 0);
    oStructure.Components.Add(oComponents.GetByNumber(110).Link);
    oStructure.Components.Add(oComponents.GetByNumber(122).Link);
    oStructure.Components.Add(oComponents.GetByNumber(123).Link);
  oStructure := oStructures.Add('CX', 'extended composite ID with check digit', 'CX', 0);
    oStructure.Components.Add(oComponents.GetByNumber(297).Link);
    oStructure.Components.Add(oComponents.GetByNumber(18).Link);
    oStructure.Components.Add(oComponents.GetByNumber(298).Link);
    oStructure.Components.Add(oComponents.GetByNumber(281).Link);
    oStructure.Components.Add(oComponents.GetByNumber(252).Link);
    oStructure.Components.Add(oComponents.GetByNumber(237).Link);
  oStructure := oStructures.Add('CWE', 'coded with exceptions', 'CWE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
    oStructure.Components.Add(oComponents.GetByNumber(358).Link);
    oStructure.Components.Add(oComponents.GetByNumber(359).Link);
    oStructure.Components.Add(oComponents.GetByNumber(360).Link);
  oStructure := oStructures.Add('CSU', 'channel sensitivity/units', 'CSU', 0);
    oStructure.Components.Add(oComponents.GetByNumber(375).Link);
    oStructure.Components.Add(oComponents.GetByNumber(380).Link);
    oStructure.Components.Add(oComponents.GetByNumber(381).Link);
    oStructure.Components.Add(oComponents.GetByNumber(382).Link);
    oStructure.Components.Add(oComponents.GetByNumber(383).Link);
    oStructure.Components.Add(oComponents.GetByNumber(384).Link);
    oStructure.Components.Add(oComponents.GetByNumber(385).Link);
  oStructure := oStructures.Add('CQ', 'composite quantity with units', 'CQ', 0);
    oStructure.Components.Add(oComponents.GetByNumber(80).Link);
    oStructure.Components.Add(oComponents.GetByNumber(81).Link);
  oStructure := oStructures.Add('CP', 'composite price', 'CP', 0);
    oStructure.Components.Add(oComponents.GetByNumber(218).Link);
    oStructure.Components.Add(oComponents.GetByNumber(286).Link);
    oStructure.Components.Add(oComponents.GetByNumber(249).Link);
    oStructure.Components.Add(oComponents.GetByNumber(216).Link);
    oStructure.Components.Add(oComponents.GetByNumber(217).Link);
    oStructure.Components.Add(oComponents.GetByNumber(220).Link);
  oStructure := oStructures.Add('CNS', 'Composite ID number and Name simplified', 'CNS', 0);
    oStructure.Components.Add(oComponents.GetByNumber(292).Link);
    oStructure.Components.Add(oComponents.GetByNumber(201).Link);
    oStructure.Components.Add(oComponents.GetByNumber(22).Link);
    oStructure.Components.Add(oComponents.GetByNumber(444).Link);
    oStructure.Components.Add(oComponents.GetByNumber(273).Link);
    oStructure.Components.Add(oComponents.GetByNumber(235).Link);
    oStructure.Components.Add(oComponents.GetByNumber(203).Link);
    oStructure.Components.Add(oComponents.GetByNumber(272).Link);
    oStructure.Components.Add(oComponents.GetByNumber(445).Link);
    oStructure.Components.Add(oComponents.GetByNumber(446).Link);
    oStructure.Components.Add(oComponents.GetByNumber(447).Link);
  oStructure := oStructures.Add('CNE', 'coded with no exceptions', 'CNE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
    oStructure.Components.Add(oComponents.GetByNumber(358).Link);
    oStructure.Components.Add(oComponents.GetByNumber(359).Link);
    oStructure.Components.Add(oComponents.GetByNumber(360).Link);
  oStructure := oStructures.Add('CN', 'composite ID number and name', 'CN', 0);
    oStructure.Components.Add(oComponents.GetByNumber(292).Link);
    oStructure.Components.Add(oComponents.GetByNumber(201).Link);
    oStructure.Components.Add(oComponents.GetByNumber(22).Link);
    oStructure.Components.Add(oComponents.GetByNumber(23).Link);
    oStructure.Components.Add(oComponents.GetByNumber(273).Link);
    oStructure.Components.Add(oComponents.GetByNumber(235).Link);
    oStructure.Components.Add(oComponents.GetByNumber(203).Link);
    oStructure.Components.Add(oComponents.GetByNumber(272).Link);
    oStructure.Components.Add(oComponents.GetByNumber(281).Link);
  oStructure := oStructures.Add('CK', 'composite ID with check digit', 'CK', 0);
    oStructure.Components.Add(oComponents.GetByNumber(119).Link);
    oStructure.Components.Add(oComponents.GetByNumber(18).Link);
    oStructure.Components.Add(oComponents.GetByNumber(298).Link);
    oStructure.Components.Add(oComponents.GetByNumber(281).Link);
  oStructure := oStructures.Add('CF', 'coded element with formatted values', 'CF', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(294).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(295).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0364', '', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0358', '', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0351', '', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0349', '', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0348', '', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0347', '', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0346', '', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0345', '', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0344', '', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0343', '', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0342', '', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0341', '', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0340', '', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0339', '', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0336', '', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0325', '', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0324', '', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0296', '', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0293', '', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0292', '', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0286', '', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0285', 'CE_NORM mit Tab. 0285', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0284', 'CE_NORM mit Tab. 0284', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0283', 'CE_NORM mit Tab. 0283', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0282', 'CE_NORM mit Tab. 0282', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0281', 'CE_NORM mit Tab. 0281', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0280', 'CE_NORM mit Tab. 0280', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0278', '', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0277', '', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0276', '', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0265', '', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0259', '', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0258', '', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0255', 'CE_NORM mit Tab. 0255', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0254', 'CE_NORM mit Tab. 0255', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0247', '', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0233', '', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0227', '', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0222', '', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0218', '', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0215', '', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0212', '', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0189', '', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0185', 'CE_NORM mit Tab. 0185', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0184', '', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0181', '', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0175', '', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0172', '', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0171', '', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0165', '', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0164', '', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0163', '', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0162', '', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0160', '', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0136+0262+0263', 'reference three different tables within CE', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(367).Link);
    oStructure.Components.Add(oComponents.GetByNumber(367).Link);
    oStructure.Components.Add(oComponents.GetByNumber(367).Link);
  oStructure := oStructures.Add('CE_0132', '', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0131', '', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0129', '', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0118', '', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0114', '', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0088', '', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0083', '', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0072', '', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0069', '', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0066', '', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0063', '', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0059', '', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0055', '', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0051', '', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0050', '', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0049', 'CE with table 49', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0048', 'CE with table 48', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0006', 'CE with table 6', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0005', 'CE with table 5', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE_0002', 'CE with table 2', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CE', 'coded element', 'CE', 0);
    oStructure.Components.Add(oComponents.GetByNumber(3).Link);
    oStructure.Components.Add(oComponents.GetByNumber(4).Link);
    oStructure.Components.Add(oComponents.GetByNumber(5).Link);
    oStructure.Components.Add(oComponents.GetByNumber(6).Link);
    oStructure.Components.Add(oComponents.GetByNumber(7).Link);
    oStructure.Components.Add(oComponents.GetByNumber(8).Link);
  oStructure := oStructures.Add('CD', 'channel definition', 'CD', 0);
    oStructure.Components.Add(oComponents.GetByNumber(332).Link);
    oStructure.Components.Add(oComponents.GetByNumber(333).Link);
    oStructure.Components.Add(oComponents.GetByNumber(334).Link);
    oStructure.Components.Add(oComponents.GetByNumber(335).Link);
    oStructure.Components.Add(oComponents.GetByNumber(336).Link);
    oStructure.Components.Add(oComponents.GetByNumber(337).Link);
  oStructure := oStructures.Add('CCP', 'channel calibration parameters', 'CCP', 0);
    oStructure.Components.Add(oComponents.GetByNumber(372).Link);
    oStructure.Components.Add(oComponents.GetByNumber(378).Link);
    oStructure.Components.Add(oComponents.GetByNumber(379).Link);
  oStructure := oStructures.Add('CCD', 'charge time', 'CCD', 0);
    oStructure.Components.Add(oComponents.GetByNumber(212).Link);
    oStructure.Components.Add(oComponents.GetByNumber(78).Link);
  oStructure := oStructures.Add('AUI', 'authorization information', 'AUI', 0);
    oStructure.Components.Add(oComponents.GetByNumber(97).Link);
    oStructure.Components.Add(oComponents.GetByNumber(117).Link);
    oStructure.Components.Add(oComponents.GetByNumber(99).Link);
  oStructure := oStructures.Add('AD', 'address', 'AD', 0);
    oStructure.Components.Add(oComponents.GetByNumber(27).Link);
    oStructure.Components.Add(oComponents.GetByNumber(28).Link);
    oStructure.Components.Add(oComponents.GetByNumber(29).Link);
    oStructure.Components.Add(oComponents.GetByNumber(30).Link);
    oStructure.Components.Add(oComponents.GetByNumber(31).Link);
    oStructure.Components.Add(oComponents.GetByNumber(32).Link);
    oStructure.Components.Add(oComponents.GetByNumber(202).Link);
    oStructure.Components.Add(oComponents.GetByNumber(34).Link);
  oStructures.Add('varies', 'variable data type', '*', 1);
  oStructures.Add('TX', 'text data', 'TX', 1);
  oStructures.Add('TN', 'telephone number', 'TN', 1);
  oStructures.Add('TM', 'time', 'TM', 1);
  oStructures.Add('ST', 'string data', 'ST', 1);
  oStructures.Add('SI', 'sequence ID', 'SI', 1);
  oStructures.Add('NM', 'numeric', 'NM', 1);
  oStructures.Add('IS', 'coded value for user-defined tables', 'IS', 1);
  oStructures.Add('ID', 'coded value for HL7 defined tables', 'ID', 1);
  oStructures.Add('FT', 'formatted text data', 'FT', 1);
  oStructures.Add('DT', 'date', 'DT', 1);
End;

procedure LoadDataElements1(oDataElements : THL7V2ModelDataElements);
Begin
  oDataElements.Add('Field Separator', 1, 'ST', 1, 0);
  oDataElements.Add('Encoding Characters', 2, 'ST', 4, 0);
  oDataElements.Add('Sending Application', 3, 'HD', 180, 361);
  oDataElements.Add('Sending Facility', 4, 'HD', 180, 362);
  oDataElements.Add('Receiving Application', 5, 'HD', 180, 361);
  oDataElements.Add('Receiving Facility', 6, 'HD', 180, 362);
  oDataElements.Add('Date/Time Of Message', 7, 'TS', 26, 0);
  oDataElements.Add('Security', 8, 'ST', 40, 0);
  oDataElements.Add('Message Type', 9, 'MSG', 7, 76);
  oDataElements.Add('Message Control ID', 10, 'ST', 20, 0);
  oDataElements.Add('Processing ID', 11, 'PT', 3, 0);
  oDataElements.Add('Version ID', 12, 'VID', 60, 104);
  oDataElements.Add('Sequence Number', 13, 'NM', 15, 0);
  oDataElements.Add('Continuation Pointer', 14, 'ST', 180, 0);
  oDataElements.Add('Accept Acknowledgment Type', 15, 'ID', 2, 155);
  oDataElements.Add('Application Acknowledgment Type', 16, 'ID', 2, 155);
  oDataElements.Add('Country Code', 17, 'ID', 2, 0);
  oDataElements.Add('Acknowledgement Code', 18, 'ID', 2, 8);
  oDataElements.Add('Text Message', 20, 'ST', 80, 0);
  oDataElements.Add('Expected Sequence Number', 21, 'NM', 15, 0);
  oDataElements.Add('Delayed Acknowledgment Type', 22, 'ID', 1, 102);
  oDataElements.Add('Error Condition', 23, 'CE', 100, 0);
  oDataElements.Add('Error Code and Location', 24, 'ELD', 80, 0);
  oDataElements.Add('Query Date/Time', 25, 'TS', 26, 0);
  oDataElements.Add('Query Format Code', 26, 'ID', 1, 106);
  oDataElements.Add('Query Priority', 27, 'ID', 1, 91);
  oDataElements.Add('Query ID', 28, 'ST', 10, 0);
  oDataElements.Add('Deferred Response Type', 29, 'ID', 1, 107);
  oDataElements.Add('Deferred Response Date/Time', 30, 'TS', 26, 0);
  oDataElements.Add('Quantity Limited Request', 31, 'CQ', 10, 126);
  oDataElements.Add('Who Subject Filter', 32, 'XCN', 60, 0);
  oDataElements.Add('What Subject Filter', 33, 'CE_0048', 60, 48);
  oDataElements.Add('What Department Data Code', 34, 'CE', 60, 0);
  oDataElements.Add('What Data Code Value Qual.', 35, 'VR', 20, 0);
  oDataElements.Add('Query Results Level', 36, 'ID', 1, 108);
  oDataElements.Add('Where Subject Filter', 37, 'ST', 20, 0);
  oDataElements.Add('When Data Start Date/Time', 38, 'TS', 26, 0);
  oDataElements.Add('When Data End Date/Time', 39, 'TS', 26, 0);
  oDataElements.Add('What User Qualifier', 40, 'ST', 60, 0);
  oDataElements.Add('Other QRY Subject Filter', 41, 'ST', 60, 0);
  oDataElements.Add('Which Date/Time Qualifier', 42, 'ID', 12, 156);
  oDataElements.Add('Which Date/Time Status Qualifier', 43, 'ID', 12, 157);
  oDataElements.Add('Date/Time Selection Qualifier', 44, 'ID', 12, 158);
  oDataElements.Add('R/U Date/Time', 45, 'TS', 26, 0);
  oDataElements.Add('Report Priority', 46, 'ID', 1, 109);
  oDataElements.Add('R/U Who Subject Definition', 47, 'XCN', 60, 0);
  oDataElements.Add('R/U What Subject Definition', 48, 'CE_0048', 60, 48);
  oDataElements.Add('R/U What Department Code', 49, 'CE', 60, 0);
  oDataElements.Add('R/U Display/Print Locations', 50, 'ST', 20, 0);
  oDataElements.Add('R/U Results Level', 51, 'ID', 1, 108);
  oDataElements.Add('R/U Where Subject Definition', 52, 'ST', 20, 0);
  oDataElements.Add('R/U When Data Start Date/Time', 53, 'TS', 26, 0);
  oDataElements.Add('R/U When Data End Date/Time', 54, 'TS', 26, 0);
  oDataElements.Add('R/U What User Qualifier', 55, 'ST', 20, 0);
  oDataElements.Add('R/U Other Results Subject Definition', 56, 'ST', 20, 0);
  oDataElements.Add('R/U Which Date/Time Qualifier', 57, 'ID', 12, 156);
  oDataElements.Add('R/U Which Date/Time Status Qualifier', 58, 'ID', 12, 157);
  oDataElements.Add('R/U Date/Time Selection Qualifier', 59, 'ID', 12, 158);
  oDataElements.Add('Set ID - DSP', 61, 'SI', 4, 0);
  oDataElements.Add('Display Level', 62, 'SI', 4, 0);
  oDataElements.Add('Data Line', 63, 'TX', 300, 0);
  oDataElements.Add('Logical Break Point', 64, 'ST', 2, 0);
  oDataElements.Add('Result ID', 65, 'TX', 20, 0);
  oDataElements.Add('Addendum Continuation Pointer', 66, 'ST', 65536, 0);
  oDataElements.Add('File Field Separator', 67, 'ST', 1, 0);
  oDataElements.Add('File Encoding Characters', 68, 'ST', 4, 0);
  oDataElements.Add('File Sending Application', 69, 'ST', 15, 0);
  oDataElements.Add('File Sending Facility', 70, 'ST', 20, 0);
  oDataElements.Add('File Receiving Application', 71, 'ST', 15, 0);
  oDataElements.Add('File Receiving Facility', 72, 'ST', 20, 0);
  oDataElements.Add('File Creation Date/Time', 73, 'TS', 26, 0);
  oDataElements.Add('File Security', 74, 'ST', 40, 0);
  oDataElements.Add('File Name/ID', 75, 'ST', 20, 0);
  oDataElements.Add('File Header Comment', 76, 'ST', 80, 0);
  oDataElements.Add('File Control ID', 77, 'ST', 20, 0);
  oDataElements.Add('Reference File Control ID', 78, 'ST', 20, 0);
  oDataElements.Add('File Batch Count', 79, 'NM', 10, 0);
  oDataElements.Add('File Trailer Comment', 80, 'ST', 80, 0);
  oDataElements.Add('Batch Field Separator', 81, 'ST', 1, 0);
  oDataElements.Add('Batch Encoding Characters', 82, 'ST', 3, 0);
  oDataElements.Add('Batch Sending Application', 83, 'ST', 15, 0);
  oDataElements.Add('Batch Sending Facility', 84, 'ST', 20, 0);
  oDataElements.Add('Batch Receiving Application', 85, 'ST', 15, 0);
  oDataElements.Add('Batch Receiving Facility', 86, 'ST', 20, 0);
  oDataElements.Add('Batch Creation Date/Time', 87, 'TS', 26, 0);
  oDataElements.Add('Batch Security', 88, 'ST', 40, 0);
  oDataElements.Add('Batch Name/ID/Type', 89, 'ST', 20, 0);
  oDataElements.Add('Batch Comment', 90, 'ST', 80, 0);
  oDataElements.Add('Batch Control ID', 91, 'ST', 20, 0);
  oDataElements.Add('Reference Batch Control ID', 92, 'ST', 20, 0);
  oDataElements.Add('Batch Message Count', 93, 'ST', 10, 0);
  oDataElements.Add('Batch Totals', 95, 'NM', 100, 0);
  oDataElements.Add('Set ID - NTE', 96, 'SI', 4, 0);
  oDataElements.Add('Source of Comment', 97, 'ID', 8, 105);
  oDataElements.Add('Comment', 98, 'FT', 65536, 0);
  oDataElements.Add('Event Type Code', 99, 'ID', 3, 3);
  oDataElements.Add('Recorded Date/Time', 100, 'TS', 26, 0);
  oDataElements.Add('Date/Time Planned Event', 101, 'TS', 26, 0);
  oDataElements.Add('Event Reason Code', 102, 'IS', 3, 62);
  oDataElements.Add('Operator ID', 103, 'XCN', 60, 188);
  oDataElements.Add('Set ID - PID', 104, 'SI', 4, 0);
  oDataElements.Add('Patient ID', 105, 'CX', 20, 0);
  oDataElements.Add('Patient Identifier List', 106, 'CX', 20, 0);
  oDataElements.Add('Alternate Patient ID - PID', 107, 'CX', 20, 0);
  oDataElements.Add('Patient Name', 108, 'XPN', 48, 0);
  oDataElements.Add('Mother'#146's Maiden Name', 109, 'XPN', 48, 0);
  oDataElements.Add('Date/Time Of Birth', 110, 'TS', 26, 0);
  oDataElements.Add('Sex', 111, 'IS', 1, 1);
  oDataElements.Add('Patient Alias', 112, 'XPN', 48, 0);
  oDataElements.Add('Race', 113, 'CE_0005', 80, 5);
  oDataElements.Add('Patient Address', 114, 'XAD', 106, 0);
  oDataElements.Add('County Code', 115, 'IS', 4, 289);
  oDataElements.Add('Phone Number - Home', 116, 'XTN', 40, 0);
  oDataElements.Add('Phone Number - Business', 117, 'XTN', 40, 0);
  oDataElements.Add('Primary Language', 118, 'CE_0296', 60, 296);
  oDataElements.Add('Marital Status', 119, 'CE_0002', 80, 2);
  oDataElements.Add('Religion', 120, 'CE_0006', 80, 6);
  oDataElements.Add('Patient Account Number', 121, 'CX', 20, 0);
  oDataElements.Add('SSN Number - Patient', 122, 'ST', 16, 0);
  oDataElements.Add('Driver''s License Number - Patient', 123, 'DLN', 25, 0);
  oDataElements.Add('Mother''s Identifier', 124, 'CX', 20, 0);
  oDataElements.Add('Ethnic Group', 125, 'CE_0189', 80, 189);
  oDataElements.Add('Birth Place', 126, 'ST', 60, 0);
  oDataElements.Add('Multiple Birth Indicator', 127, 'ID', 1, 136);
  oDataElements.Add('Birth Order', 128, 'NM', 2, 0);
  oDataElements.Add('Citizenship', 129, 'CE_0171', 80, 171);
  oDataElements.Add('Veterans Military Status', 130, 'CE_0172', 60, 172);
  oDataElements.Add('Set ID - PV1', 131, 'SI', 4, 0);
  oDataElements.Add('Patient Class', 132, 'IS', 1, 4);
  oDataElements.Add('Assigned Patient Location', 133, 'PL', 80, 0);
  oDataElements.Add('Admission Type', 134, 'IS', 2, 7);
  oDataElements.Add('Preadmit Number', 135, 'CX', 20, 0);
  oDataElements.Add('Prior Patient Location', 136, 'PL', 80, 0);
  oDataElements.Add('Attending Doctor', 137, 'XCN', 60, 10);
  oDataElements.Add('Referring Doctor', 138, 'XCN', 60, 10);
  oDataElements.Add('Consulting Doctor', 139, 'XCN', 60, 10);
  oDataElements.Add('Hospital Service', 140, 'IS', 3, 69);
  oDataElements.Add('Temporary Location', 141, 'PL', 80, 0);
  oDataElements.Add('Preadmit Test Indicator', 142, 'IS', 2, 87);
  oDataElements.Add('Re-admission Indicator', 143, 'IS', 2, 92);
  oDataElements.Add('Admit Source', 144, 'IS', 3, 23);
  oDataElements.Add('Ambulatory Status', 145, 'IS', 2, 9);
  oDataElements.Add('VIP Indicator', 146, 'IS', 2, 99);
  oDataElements.Add('Admitting Doctor', 147, 'XCN', 60, 10);
  oDataElements.Add('Patient Type', 148, 'IS', 2, 18);
  oDataElements.Add('Visit Number', 149, 'CX', 20, 0);
  oDataElements.Add('Financial Class', 150, 'FC', 50, 64);
  oDataElements.Add('Charge Price Indicator', 151, 'IS', 2, 32);
  oDataElements.Add('Courtesy Code', 152, 'IS', 2, 45);
  oDataElements.Add('Credit Rating', 153, 'IS', 2, 46);
  oDataElements.Add('Contract Code', 154, 'IS', 2, 44);
  oDataElements.Add('Contract Effective Date', 155, 'DT', 8, 0);
  oDataElements.Add('Contract Amount', 156, 'NM', 12, 0);
  oDataElements.Add('Contract Period', 157, 'NM', 3, 0);
  oDataElements.Add('Interest Code', 158, 'IS', 2, 73);
  oDataElements.Add('Transfer to Bad Debt Code', 159, 'IS', 1, 110);
  oDataElements.Add('Transfer to Bad Debt Date', 160, 'DT', 8, 0);
  oDataElements.Add('Bad Debt Agency Code', 161, 'IS', 10, 21);
  oDataElements.Add('Bad Debt Transfer Amount', 162, 'NM', 12, 0);
  oDataElements.Add('Bad Debt Recovery Amount', 163, 'NM', 12, 0);
  oDataElements.Add('Delete Account Indicator', 164, 'IS', 1, 111);
  oDataElements.Add('Delete Account Date', 165, 'DT', 8, 0);
  oDataElements.Add('Discharge Disposition', 166, 'IS', 3, 112);
  oDataElements.Add('Discharged to Location', 167, 'DLD', 25, 113);
  oDataElements.Add('Diet Type', 168, 'CE_0114', 80, 114);
  oDataElements.Add('Servicing Facility', 169, 'IS', 2, 115);
  oDataElements.Add('Bed Status', 170, 'IS', 1, 116);
  oDataElements.Add('Account Status', 171, 'IS', 2, 117);
  oDataElements.Add('Pending Location', 172, 'PL', 80, 0);
  oDataElements.Add('Prior Temporary Location', 173, 'PL', 80, 0);
  oDataElements.Add('Admit Date/Time', 174, 'TS', 26, 0);
  oDataElements.Add('Discharge Date/Time', 175, 'TS', 26, 0);
  oDataElements.Add('Current Patient Balance', 176, 'NM', 12, 0);
  oDataElements.Add('Total Charges', 177, 'NM', 12, 0);
  oDataElements.Add('Total Adjustments', 178, 'NM', 12, 0);
  oDataElements.Add('Total Payments', 179, 'NM', 12, 0);
  oDataElements.Add('Alternate Visit ID', 180, 'CX', 20, 203);
  oDataElements.Add('Prior Pending Location', 181, 'PL', 80, 0);
  oDataElements.Add('Accommodation Code', 182, 'CE_0129', 60, 129);
  oDataElements.Add('Admit Reason', 183, 'CE', 60, 0);
  oDataElements.Add('Transfer Reason', 184, 'CE', 60, 0);
  oDataElements.Add('Patient Valuables', 185, 'ST', 25, 0);
  oDataElements.Add('Patient Valuables Location', 186, 'ST', 25, 0);
  oDataElements.Add('Visit User Code', 187, 'IS', 2, 130);
  oDataElements.Add('Expected Admit Date/Time', 188, 'TS', 26, 0);
  oDataElements.Add('Expected Discharge Date/Time', 189, 'TS', 26, 0);
  oDataElements.Add('Set ID - NK1', 190, 'SI', 4, 0);
  oDataElements.Add('Name', 191, 'XPN', 48, 0);
  oDataElements.Add('Relationship', 192, 'CE_0063', 60, 63);
  oDataElements.Add('Address', 193, 'XAD', 106, 0);
  oDataElements.Add('Phone Number', 194, 'XTN', 40, 0);
  oDataElements.Add('Business Phone Number', 195, 'XTN', 40, 0);
  oDataElements.Add('Contact Role', 196, 'CE_0131', 200, 131);
  oDataElements.Add('Start Date', 197, 'DT', 8, 0);
  oDataElements.Add('End Date', 198, 'DT', 8, 0);
  oDataElements.Add('Next of Kin / Associated Parties Job Title', 199, 'ST', 60, 0);
  oDataElements.Add('Next of Kin / Associated Parties Job Code/Class', 200, 'JCC', 20, 327);
  oDataElements.Add('Next of Kin / Associated Parties Employee Number', 201, 'CX', 20, 0);
  oDataElements.Add('Organization Name - NK1', 202, 'XON', 90, 0);
  oDataElements.Add('Set ID - AL1', 203, 'SI', 4, 0);
  oDataElements.Add('Allergy Type', 204, 'IS', 2, 127);
  oDataElements.Add('Allergy Code/Mnemonic/Description', 205, 'CE', 60, 0);
  oDataElements.Add('Allergy Severity', 206, 'IS', 2, 128);
  oDataElements.Add('Allergy Reaction', 207, 'ST', 15, 0);
  oDataElements.Add('Identification Date', 208, 'DT', 8, 0);
  oDataElements.Add('Bed Location', 209, 'PL', 80, 0);
  oDataElements.Add('Prior Patient Identifier List', 211, 'CX', 20, 0);
  oDataElements.Add('Prior Alternate Patient ID', 212, 'CX', 20, 0);
  oDataElements.Add('Prior Patient Account Number', 213, 'CX', 20, 0);
  oDataElements.Add('Prior Patient ID', 214, 'CX', 20, 0);
  oDataElements.Add('Order Control', 215, 'ID', 2, 119);
  oDataElements.Add('Placer Order Number', 216, 'EI', 22, 0);
  oDataElements.Add('Filler Order Number', 217, 'EI', 22, 0);
  oDataElements.Add('Placer Group Number', 218, 'EI', 22, 0);
  oDataElements.Add('Order Status', 219, 'ID', 2, 38);
  oDataElements.Add('Response Flag', 220, 'ID', 1, 121);
  oDataElements.Add('Quantity/Timing', 221, 'TQ', 200, 0);
  oDataElements.Add('Parent', 222, 'EIP', 200, 0);
  oDataElements.Add('Date/Time of Transaction', 223, 'TS', 26, 0);
  oDataElements.Add('Entered By', 224, 'XCN', 120, 0);
  oDataElements.Add('Verified By', 225, 'XCN', 120, 0);
  oDataElements.Add('Ordering Provider', 226, 'XCN', 120, 0);
  oDataElements.Add('Enterer'#146's Location', 227, 'PL', 80, 0);
  oDataElements.Add('Call Back Phone Number', 228, 'XTN', 40, 0);
  oDataElements.Add('Order Effective Date/Time', 229, 'TS', 26, 0);
  oDataElements.Add('Order Control Code Reason', 230, 'CE', 200, 0);
  oDataElements.Add('Entering Organization', 231, 'CE', 60, 0);
  oDataElements.Add('Entering Device', 232, 'CE', 60, 0);
  oDataElements.Add('Action By', 233, 'XCN', 120, 0);
  oDataElements.Add('When to Charge', 234, 'CCD', 40, 100);
  oDataElements.Add('Charge Type', 235, 'ID', 50, 122);
  oDataElements.Add('Account ID', 236, 'CX', 100, 0);
  oDataElements.Add('Set ID - OBR', 237, 'SI', 4, 0);
  oDataElements.Add('Universal Service ID', 238, 'CE', 200, 0);
  oDataElements.Add('Priority-OBR', 239, 'ID', 2, 0);
  oDataElements.Add('Requested Date/time', 240, 'TS', 26, 0);
  oDataElements.Add('Observation Date/Time #', 241, 'TS', 26, 0);
  oDataElements.Add('Observation End Date/Time #', 242, 'TS', 26, 0);
  oDataElements.Add('Collection Volume *', 243, 'CQ', 20, 0);
  oDataElements.Add('Collector Identifier *', 244, 'XCN', 60, 0);
  oDataElements.Add('Specimen Action Code *', 245, 'ID', 1, 65);
  oDataElements.Add('Danger Code', 246, 'CE', 60, 0);
  oDataElements.Add('Relevant Clinical Info.', 247, 'ST', 300, 0);
  oDataElements.Add('Specimen Received Date/Time *', 248, 'TS', 26, 0);
  oDataElements.Add('Specimen Source', 249, 'SPS', 300, 70);
  oDataElements.Add('Order Callback Phone Number', 250, 'XTN', 40, 0);
  oDataElements.Add('Placer Field 1', 251, 'ST', 60, 0);
  oDataElements.Add('Placer Field 2', 252, 'ST', 60, 0);
  oDataElements.Add('Filler Field 1 +', 253, 'ST', 60, 0);
  oDataElements.Add('Filler Field 2 +', 254, 'ST', 60, 0);
  oDataElements.Add('Results Rpt/Status Chng - Date/Time +', 255, 'TS', 26, 0);
  oDataElements.Add('Charge to Practice +', 256, 'MOC', 40, 0);
  oDataElements.Add('Diagnostic Serv Sect ID', 257, 'ID', 10, 74);
  oDataElements.Add('Result Status +', 258, 'ID', 1, 123);
  oDataElements.Add('Parent Result +', 259, 'PRL', 200, 0);
  oDataElements.Add('Result Copies To', 260, 'XCN', 150, 0);
  oDataElements.Add('Parent', 261, 'EIP', 200, 0);
  oDataElements.Add('Transportation Mode', 262, 'ID', 20, 124);
  oDataElements.Add('Reason for Study', 263, 'CE', 300, 0);
  oDataElements.Add('Principal Result Interpreter +', 264, 'NDL', 200, 0);
  oDataElements.Add('Assistant Result Interpreter +', 265, 'NDL', 200, 0);
  oDataElements.Add('Technician +', 266, 'NDL', 200, 0);
  oDataElements.Add('Transcriptionist +', 267, 'NDL', 200, 0);
  oDataElements.Add('Scheduled Date/Time +', 268, 'TS', 26, 0);
  oDataElements.Add('Type', 269, 'ID', 1, 159);
  oDataElements.Add('Service Period', 270, 'CE', 60, 0);
  oDataElements.Add('Diet, Supplement, or Preference Code', 271, 'CE', 60, 0);
  oDataElements.Add('Text Instruction', 272, 'ST', 80, 0);
  oDataElements.Add('Tray Type', 273, 'CE_0160', 60, 160);
  oDataElements.Add('Requisition Line Number', 275, 'SI', 4, 0);
  oDataElements.Add('Item Code - Internal', 276, 'CE', 60, 0);
  oDataElements.Add('Item Code - External', 277, 'CE', 60, 0);
  oDataElements.Add('Hospital Item Code', 278, 'CE', 60, 0);
  oDataElements.Add('Requisition Quantity', 279, 'NM', 6, 0);
  oDataElements.Add('Requisition Unit of Measure', 280, 'CE', 60, 0);
  oDataElements.Add('Dept. Cost Center', 281, 'IS', 30, 319);
  oDataElements.Add('Item Natural Account Code', 282, 'IS', 30, 320);
  oDataElements.Add('Deliver To ID', 283, 'CE', 60, 0);
  oDataElements.Add('Date Needed', 284, 'DT', 8, 0);
  oDataElements.Add('Anticipated Price', 285, 'ST', 10, 0);
  oDataElements.Add('Manufacturer ID', 286, 'CE', 60, 0);
  oDataElements.Add('Manufacturer'#146's Catalog', 287, 'ST', 16, 0);
  oDataElements.Add('Vendor ID', 288, 'CE', 60, 0);
  oDataElements.Add('Vendor Catalog', 289, 'ST', 16, 0);
  oDataElements.Add('Taxable', 290, 'ID', 1, 136);
  oDataElements.Add('Substitute Allowed', 291, 'ID', 1, 136);
  oDataElements.Add('Requested Give Code', 292, 'CE', 100, 0);
  oDataElements.Add('Requested Give Amount - Minimum', 293, 'NM', 20, 0);
  oDataElements.Add('Requested Give Amount - Maximum', 294, 'NM', 20, 0);
  oDataElements.Add('Requested Give Units', 295, 'CE', 60, 0);
  oDataElements.Add('Requested Dosage Form', 296, 'CE', 60, 0);
  oDataElements.Add('Provider'#146's Pharmacy/Treatment Instructions', 297, 'CE', 200, 0);
  oDataElements.Add('Provider'#146's Administration Instructions', 298, 'CE', 200, 0);
  oDataElements.Add('Deliver-to Location', 299, 'LA1', 200, 0);
  oDataElements.Add('Allow Substitutions', 300, 'ID', 1, 161);
  oDataElements.Add('Requested Dispense Code', 301, 'CE', 100, 0);
  oDataElements.Add('Requested Dispense Amount', 302, 'NM', 20, 0);
  oDataElements.Add('Requested Dispense Units', 303, 'CE', 60, 0);
  oDataElements.Add('Number Of Refills', 304, 'NM', 3, 0);
  oDataElements.Add('Ordering Provider'#146's DEA Number', 305, 'XCN', 60, 0);
  oDataElements.Add('Pharmacist/Treatment Supplier'#146's Verifier ID', 306, 'XCN', 60, 0);
  oDataElements.Add('Needs Human Review', 307, 'ID', 1, 136);
  oDataElements.Add('Requested Give Per (Time Unit)', 308, 'ST', 20, 0);
  oDataElements.Add('Route', 309, 'CE_0162', 60, 162);
  oDataElements.Add('Site', 310, 'CE_0163', 60, 163);
  oDataElements.Add('Administration Device', 311, 'CE_0164', 60, 164);
  oDataElements.Add('Administration Method', 312, 'CE_0165', 60, 165);
  oDataElements.Add('RX Component Type', 313, 'ID', 1, 166);
  oDataElements.Add('Component Code', 314, 'CE', 100, 0);
  oDataElements.Add('Component Amount', 315, 'NM', 20, 0);
  oDataElements.Add('Component Units', 316, 'CE', 60, 0);
  oDataElements.Add('Give Code', 317, 'CE_0292', 100, 292);
  oDataElements.Add('Give Amount - Minimum', 318, 'NM', 20, 0);
  oDataElements.Add('Give Amount - Maximum', 319, 'NM', 20, 0);
  oDataElements.Add('Give Units', 320, 'CE', 60, 0);
  oDataElements.Add('Give Dosage Form', 321, 'CE', 60, 0);
  oDataElements.Add('Substitution Status', 322, 'ID', 1, 167);
  oDataElements.Add('Dispense Amount', 323, 'NM', 20, 0);
  oDataElements.Add('Dispense Units', 324, 'CE', 60, 0);
  oDataElements.Add('Prescription Number', 325, 'ST', 20, 0);
  oDataElements.Add('Number of Refills Remaining', 326, 'NM', 20, 0);
  oDataElements.Add('Number of Refills/Doses Dispensed', 327, 'NM', 20, 0);
  oDataElements.Add('D/T of Most Recent Refill or Dose Dispensed', 328, 'TS', 26, 0);
  oDataElements.Add('Total Daily Dose', 329, 'CQ', 10, 0);
  oDataElements.Add('Pharmacy/Treatment Supplier'#146's Special Dispensing Instructions', 330, 'CE', 200, 0);
  oDataElements.Add('Give Per (Time Unit)', 331, 'ST', 20, 0);
  oDataElements.Add('Give Rate Amount', 332, 'ST', 6, 0);
  oDataElements.Add('Give Rate Units', 333, 'CE', 60, 0);
  oDataElements.Add('Dispense Sub-ID Counter', 334, 'NM', 4, 0);
  oDataElements.Add('Dispense/Give Code', 335, 'CE_0292', 100, 292);
  oDataElements.Add('Date/Time Dispensed', 336, 'TS', 26, 0);
  oDataElements.Add('Actual Dispense Amount', 337, 'NM', 20, 0);
  oDataElements.Add('Actual Dispense Units', 338, 'CE', 60, 0);
  oDataElements.Add('Actual Dosage Form', 339, 'CE', 60, 0);
  oDataElements.Add('Dispense Notes', 340, 'ST', 200, 0);
  oDataElements.Add('Dispensing Provider', 341, 'XCN', 200, 0);
  oDataElements.Add('Give Sub-ID Counter', 342, 'NM', 4, 0);
  oDataElements.Add('Pharmacy/Treatment Supplier'#146's Special Administration Instructions', 343, 'CE', 200, 0);
  oDataElements.Add('Administration Sub-ID Counter', 344, 'NM', 4, 0);
  oDataElements.Add('Date/Time Start of Administration', 345, 'TS', 26, 0);
  oDataElements.Add('Date/Time End of Administration', 346, 'TS', 26, 0);
  oDataElements.Add('Administered Code', 347, 'CE_0292', 100, 292);
  oDataElements.Add('Administered Amount', 348, 'NM', 20, 0);
  oDataElements.Add('Administered Units', 349, 'CE', 60, 0);
  oDataElements.Add('Administered Dosage Form', 350, 'CE', 60, 0);
  oDataElements.Add('Administration Notes', 351, 'CE', 200, 0);
  oDataElements.Add('Administering Provider', 352, 'XCN', 200, 0);
  oDataElements.Add('Administered-at Location', 353, 'LA2', 200, 0);
  oDataElements.Add('Administered Per (Time Unit)', 354, 'ST', 20, 0);
  oDataElements.Add('Set ID - FT1', 355, 'SI', 4, 0);
  oDataElements.Add('Transaction ID', 356, 'ST', 12, 0);
  oDataElements.Add('Transaction Batch ID', 357, 'ST', 10, 0);
  oDataElements.Add('Transaction Date', 358, 'TS', 26, 0);
  oDataElements.Add('Transaction Posting Date', 359, 'TS', 26, 0);
  oDataElements.Add('Transaction Type', 360, 'IS', 8, 17);
  oDataElements.Add('Transaction Code', 361, 'CE_0132', 80, 132);
  oDataElements.Add('Transaction Description', 362, 'ST', 40, 0);
  oDataElements.Add('Transaction Description - Alt', 363, 'ST', 40, 0);
  oDataElements.Add('Transaction Quantity', 364, 'NM', 6, 0);
  oDataElements.Add('Transaction Amount - Extended', 365, 'CP', 12, 0);
  oDataElements.Add('Transaction Amount - Unit', 366, 'CP', 12, 0);
  oDataElements.Add('Department Code', 367, 'CE_0049', 60, 49);
  oDataElements.Add('Insurance Plan ID', 368, 'CE_0072', 60, 72);
  oDataElements.Add('Insurance Amount', 369, 'CP', 12, 0);
  oDataElements.Add('Fee Schedule', 370, 'IS', 1, 24);
  oDataElements.Add('Diagnosis Code - FT1', 371, 'CE_0051', 60, 51);
  oDataElements.Add('Performed By Code', 372, 'XCN', 120, 84);
  oDataElements.Add('Ordered By Code', 373, 'XCN', 120, 0);
  oDataElements.Add('Unit Cost', 374, 'CP', 12, 0);
  oDataElements.Add('Set ID - DG1', 375, 'SI', 4, 0);
  oDataElements.Add('Diagnosis Coding Method', 376, 'ID', 2, 53);
  oDataElements.Add('Diagnosis Code - DG1', 377, 'CE_0051', 60, 51);
  oDataElements.Add('Diagnosis Description', 378, 'ST', 40, 0);
  oDataElements.Add('Diagnosis Date/Time', 379, 'TS', 26, 0);
  oDataElements.Add('Diagnosis Type', 380, 'IS', 2, 52);
  oDataElements.Add('Major Diagnostic Category', 381, 'CE_0118', 60, 118);
  oDataElements.Add('Diagnostic Related Group', 382, 'CE_0055', 60, 55);
  oDataElements.Add('DRG Approval Indicator', 383, 'ID', 1, 136);
  oDataElements.Add('DRG Grouper Review Code', 384, 'IS', 2, 56);
  oDataElements.Add('Outlier Type', 385, 'CE_0083', 60, 83);
  oDataElements.Add('Outlier Days', 386, 'NM', 3, 0);
  oDataElements.Add('Outlier Cost', 387, 'CP', 12, 0);
  oDataElements.Add('Grouper Version And Type', 388, 'ST', 4, 0);
  oDataElements.Add('Diagnosis Priority', 389, 'ID', 2, 359);
  oDataElements.Add('Diagnosing Clinician', 390, 'XCN', 60, 0);
  oDataElements.Add('Set ID - PR1', 391, 'SI', 4, 0);
  oDataElements.Add('Procedure Coding Method', 392, 'IS', 2, 89);
  oDataElements.Add('Procedure Code', 393, 'CE_0088', 80, 88);
  oDataElements.Add('Procedure Description', 394, 'ST', 40, 0);
  oDataElements.Add('Procedure Date/Time', 395, 'TS', 26, 0);
  oDataElements.Add('Procedure Functional Type', 396, 'IS', 2, 230);
  oDataElements.Add('Procedure Minutes', 397, 'NM', 4, 0);
  oDataElements.Add('Anesthesiologist', 398, 'XCN', 120, 10);
  oDataElements.Add('Anesthesia Code', 399, 'IS', 2, 19);
  oDataElements.Add('Anesthesia Minutes', 400, 'NM', 4, 0);
  oDataElements.Add('Surgeon', 401, 'XCN', 120, 10);
  oDataElements.Add('Procedure Practitioner', 402, 'XCN', 230, 10);
  oDataElements.Add('Consent Code', 403, 'CE_0059', 60, 59);
  oDataElements.Add('Procedure Priority', 404, 'NM', 2, 0);
  oDataElements.Add('Set ID - GT1', 405, 'SI', 4, 0);
  oDataElements.Add('Guarantor Number', 406, 'CX', 59, 0);
  oDataElements.Add('Guarantor Name', 407, 'XPN', 48, 0);
  oDataElements.Add('Guarantor Spouse Name', 408, 'XPN', 48, 0);
  oDataElements.Add('Guarantor Address', 409, 'XAD', 106, 0);
  oDataElements.Add('Guarantor Ph Num-Home', 410, 'XTN', 40, 0);
  oDataElements.Add('Guarantor Ph Num-Business', 411, 'XTN', 40, 0);
  oDataElements.Add('Guarantor Date/Time Of Birth', 412, 'TS', 26, 0);
  oDataElements.Add('Guarantor Sex', 413, 'IS', 1, 1);
  oDataElements.Add('Guarantor Type', 414, 'IS', 2, 68);
  oDataElements.Add('Guarantor Relationship', 415, 'CE_0063', 80, 63);
  oDataElements.Add('Guarantor SSN', 416, 'ST', 11, 0);
  oDataElements.Add('Guarantor Date - Begin', 417, 'DT', 8, 0);
  oDataElements.Add('Guarantor Date - End', 418, 'DT', 8, 0);
  oDataElements.Add('Guarantor Priority', 419, 'NM', 2, 0);
  oDataElements.Add('Guarantor Employer Name', 420, 'XPN', 130, 0);
  oDataElements.Add('Guarantor Employer Address', 421, 'XAD', 106, 0);
  oDataElements.Add('Guarantor Employer Phone Number', 422, 'XTN', 40, 0);
  oDataElements.Add('Guarantor Employee ID Number', 423, 'CX', 20, 0);
  oDataElements.Add('Guarantor Employment Status', 424, 'IS', 2, 66);
  oDataElements.Add('Guarantor Organization Name', 425, 'XON', 130, 0);
  oDataElements.Add('Set ID - IN1', 426, 'SI', 4, 0);
  oDataElements.Add('Insurance Company ID', 428, 'CX', 59, 0);
  oDataElements.Add('Insurance Company Name', 429, 'XON', 130, 0);
  oDataElements.Add('Insurance Company Address', 430, 'XAD', 106, 0);
  oDataElements.Add('Insurance Co Contact Person', 431, 'XPN', 48, 0);
  oDataElements.Add('Insurance Co Phone Number', 432, 'XTN', 40, 0);
  oDataElements.Add('Group Number', 433, 'ST', 12, 0);
  oDataElements.Add('Group Name', 434, 'XON', 130, 0);
  oDataElements.Add('Insured'#146's Group Emp ID', 435, 'CX', 12, 0);
  oDataElements.Add('Insured'#146's Group Emp Name', 436, 'XON', 130, 0);
  oDataElements.Add('Plan Effective Date', 437, 'DT', 8, 0);
  oDataElements.Add('Plan Expiration Date', 438, 'DT', 8, 0);
  oDataElements.Add('Authorization Information', 439, 'AUI', 55, 0);
  oDataElements.Add('Plan Type', 440, 'IS', 3, 86);
  oDataElements.Add('Name Of Insured', 441, 'XPN', 48, 0);
  oDataElements.Add('Insured'#146's Relationship To Patient', 442, 'CE_0063', 80, 63);
  oDataElements.Add('Insured'#146's Date Of Birth', 443, 'TS', 26, 0);
  oDataElements.Add('Insured'#146's Address', 444, 'XAD', 106, 0);
  oDataElements.Add('Assignment Of Benefits', 445, 'IS', 2, 135);
  oDataElements.Add('Coordination Of Benefits', 446, 'IS', 2, 173);
  oDataElements.Add('Coord Of Ben. Priority', 447, 'ST', 2, 0);
  oDataElements.Add('Notice Of Admission Flag', 448, 'ID', 1, 136);
  oDataElements.Add('Notice Of Admission Date', 449, 'DT', 8, 0);
  oDataElements.Add('Report Of Eligibility Flag', 450, 'ID', 1, 136);
  oDataElements.Add('Report Of Eligibility Date', 451, 'DT', 8, 0);
  oDataElements.Add('Release Information Code', 452, 'IS', 2, 93);
  oDataElements.Add('Pre-Admit Cert (PAC)', 453, 'ST', 15, 0);
  oDataElements.Add('Verification Date/Time', 454, 'TS', 26, 0);
  oDataElements.Add('Verification By', 455, 'XCN', 60, 0);
  oDataElements.Add('Type Of Agreement Code', 456, 'IS', 2, 98);
  oDataElements.Add('Billing Status', 457, 'IS', 2, 22);
  oDataElements.Add('Lifetime Reserve Days', 458, 'NM', 4, 0);
  oDataElements.Add('Delay Before L.R. Day', 459, 'NM', 4, 0);
  oDataElements.Add('Company Plan Code', 460, 'IS', 8, 42);
  oDataElements.Add('Policy Number', 461, 'ST', 15, 0);
  oDataElements.Add('Policy Deductible', 462, 'CP', 12, 0);
  oDataElements.Add('Policy Limit - Amount', 463, 'CP', 12, 0);
  oDataElements.Add('Policy Limit - Days', 464, 'NM', 4, 0);
  oDataElements.Add('Room Rate - Semi-Private', 465, 'CP', 12, 0);
  oDataElements.Add('Room Rate - Private', 466, 'CP', 12, 0);
  oDataElements.Add('Insured'#146's Employment Status', 467, 'CE_0066', 60, 66);
  oDataElements.Add('Insured'#146's Sex', 468, 'IS', 1, 1);
  oDataElements.Add('Insured'#146's Employer'#146's Address', 469, 'XAD', 106, 0);
  oDataElements.Add('Verification Status', 470, 'ST', 2, 0);
  oDataElements.Add('Prior Insurance Plan ID', 471, 'IS', 8, 72);
  oDataElements.Add('Insured'#146's Employee ID', 472, 'CX', 59, 0);
  oDataElements.Add('Insured'#146's Social Security Number', 473, 'ST', 11, 0);
  oDataElements.Add('Insured'#146's Employer'#146's Name and ID', 474, 'XCN', 130, 0);
  oDataElements.Add('Employer Information Data', 475, 'IS', 1, 139);
  oDataElements.Add('Mail Claim Party', 476, 'IS', 1, 137);
  oDataElements.Add('Medicare Health Ins Card Number', 477, 'ST', 15, 0);
  oDataElements.Add('Medicaid Case Name', 478, 'XPN', 48, 0);
  oDataElements.Add('Medicaid Case Number', 479, 'ST', 15, 0);
  oDataElements.Add('Military Sponsor Name', 480, 'XPN', 48, 0);
  oDataElements.Add('Military ID Number', 481, 'ST', 20, 0);
  oDataElements.Add('Dependent Of Military Recipient', 482, 'CE_0342', 80, 342);
  oDataElements.Add('Military Organization', 483, 'ST', 25, 0);
  oDataElements.Add('Military Station', 484, 'ST', 25, 0);
  oDataElements.Add('Military Service', 485, 'IS', 14, 140);
  oDataElements.Add('Military Rank/Grade', 486, 'IS', 2, 141);
  oDataElements.Add('Military Status', 487, 'IS', 3, 142);
  oDataElements.Add('Military Retire Date', 488, 'DT', 8, 0);
  oDataElements.Add('Military Non-Avail Cert On File', 489, 'ID', 1, 136);
  oDataElements.Add('Baby Coverage', 490, 'ID', 1, 136);
  oDataElements.Add('Combine Baby Bill', 491, 'ID', 1, 136);
  oDataElements.Add('Blood Deductible', 492, 'ST', 1, 0);
  oDataElements.Add('Special Coverage Approval Name', 493, 'XPN', 48, 0);
  oDataElements.Add('Special Coverage Approval Title', 494, 'ST', 30, 0);
  oDataElements.Add('Non-Covered Insurance Code', 495, 'IS', 8, 143);
  oDataElements.Add('Payor ID', 496, 'CX', 59, 0);
  oDataElements.Add('Payor Subscriber ID', 497, 'CX', 59, 0);
  oDataElements.Add('Eligibility Source', 498, 'IS', 1, 144);
  oDataElements.Add('Room Coverage Type/Amount', 499, 'RMC', 25, 145);
  oDataElements.Add('Policy Type/Amount', 500, 'PTA', 25, 147);
  oDataElements.Add('Daily Deductible', 501, 'DDI', 25, 0);
  oDataElements.Add('Set ID - IN3', 502, 'SI', 4, 0);
  oDataElements.Add('Certification Number', 503, 'CX', 59, 0);
  oDataElements.Add('Certified By', 504, 'XCN', 60, 0);
  oDataElements.Add('Certification Required', 505, 'ID', 1, 136);
  oDataElements.Add('Penalty', 506, 'MOP', 10, 148);
End;

procedure LoadDataElements2(oDataElements : THL7V2ModelDataElements);
Begin
  oDataElements.Add('Certification Date/Time', 507, 'TS', 26, 0);
  oDataElements.Add('Certification Modify Date/Time', 508, 'TS', 26, 0);
  oDataElements.Add('Operator', 509, 'XCN', 60, 0);
  oDataElements.Add('Certification Begin Date', 510, 'DT', 8, 0);
  oDataElements.Add('Certification End Date', 511, 'DT', 8, 0);
  oDataElements.Add('Days', 512, 'DTN', 3, 149);
  oDataElements.Add('Non-Concur Code/Description', 513, 'CE_0233', 60, 233);
  oDataElements.Add('Non-Concur Effective Date/Time', 514, 'TS', 26, 0);
  oDataElements.Add('Physician Reviewer', 515, 'XCN', 60, 10);
  oDataElements.Add('Certification Contact', 516, 'ST', 48, 0);
  oDataElements.Add('Certification Contact Phone Number', 517, 'XTN', 40, 0);
  oDataElements.Add('Appeal Reason', 518, 'CE_0345', 60, 345);
  oDataElements.Add('Certification Agency', 519, 'CE_0346', 60, 346);
  oDataElements.Add('Certification Agency Phone Number', 520, 'XTN', 40, 0);
  oDataElements.Add('Pre-Certification Req/Window', 521, 'PCF', 40, 150);
  oDataElements.Add('Case Manager', 522, 'ST', 48, 0);
  oDataElements.Add('Second Opinion Date', 523, 'DT', 8, 0);
  oDataElements.Add('Second Opinion Status', 524, 'IS', 1, 151);
  oDataElements.Add('Second Opinion Documentation Received', 525, 'IS', 1, 152);
  oDataElements.Add('Second Opinion Physician', 526, 'XCN', 60, 10);
  oDataElements.Add('Accident Date/Time', 527, 'TS', 26, 0);
  oDataElements.Add('Accident Code', 528, 'CE_0050', 60, 50);
  oDataElements.Add('Accident Location', 529, 'ST', 25, 0);
  oDataElements.Add('Set ID - UB1', 530, 'SI', 4, 0);
  oDataElements.Add('Blood Deductible  (43)', 531, 'NM', 1, 0);
  oDataElements.Add('Blood Furnished-Pints Of (40)', 532, 'NM', 2, 0);
  oDataElements.Add('Blood Replaced-Pints (41)', 533, 'NM', 2, 0);
  oDataElements.Add('Blood Not Replaced-Pints(42)', 534, 'NM', 2, 0);
  oDataElements.Add('Co-Insurance Days (25)', 535, 'NM', 2, 0);
  oDataElements.Add('Condition Code (35-39)', 536, 'IS', 14, 43);
  oDataElements.Add('Covered Days - (23)', 537, 'NM', 3, 0);
  oDataElements.Add('Non Covered Days - (24)', 538, 'NM', 3, 0);
  oDataElements.Add('Value Amount & Code (46-49)', 539, 'UVC', 12, 153);
  oDataElements.Add('Number Of Grace Days (90)', 540, 'NM', 2, 0);
  oDataElements.Add('Special Program Indicator (44)', 541, 'CE_0348', 60, 348);
  oDataElements.Add('PSRO/UR Approval Indicator (87)', 542, 'CE_0349', 60, 349);
  oDataElements.Add('PSRO/UR Approved Stay-Fm (88)', 543, 'DT', 8, 0);
  oDataElements.Add('PSRO/UR Approved Stay-To (89)', 544, 'DT', 8, 0);
  oDataElements.Add('Occurrence (28-32)', 545, 'OCD', 20, 350);
  oDataElements.Add('Occurrence Span (33)', 546, 'CE_0351', 60, 351);
  oDataElements.Add('Occur Span Start Date(33)', 547, 'DT', 8, 0);
  oDataElements.Add('Occur Span End Date (33)', 548, 'DT', 8, 0);
  oDataElements.Add('UB-82 Locator 2', 549, 'ST', 30, 0);
  oDataElements.Add('UB-82 Locator 9', 550, 'ST', 7, 0);
  oDataElements.Add('UB-82 Locator 27', 551, 'ST', 8, 0);
  oDataElements.Add('UB-82 Locator 45', 552, 'ST', 17, 0);
  oDataElements.Add('Set ID - UB2', 553, 'SI', 4, 0);
  oDataElements.Add('Co-Insurance Days (9)', 554, 'ST', 3, 0);
  oDataElements.Add('Condition Code (24-30)', 555, 'IS', 2, 43);
  oDataElements.Add('Covered Days (7)', 556, 'ST', 3, 0);
  oDataElements.Add('Non-Covered Days (8)', 557, 'ST', 4, 0);
  oDataElements.Add('Value Amount & Code', 558, 'UVC', 11, 153);
  oDataElements.Add('Occurrence Code & Date (32-35)', 559, 'OCD', 11, 350);
  oDataElements.Add('Occurrence Span Code/Dates (36)', 560, 'OSP', 28, 351);
  oDataElements.Add('UB92 Locator 2 (State)', 561, 'ST', 29, 0);
  oDataElements.Add('UB92 Locator 11 (State)', 562, 'ST', 12, 0);
  oDataElements.Add('UB92 Locator 31 (National)', 563, 'ST', 5, 0);
  oDataElements.Add('Document Control Number', 564, 'ST', 23, 0);
  oDataElements.Add('UB92 Locator 49 (National)', 565, 'ST', 4, 0);
  oDataElements.Add('UB92 Locator 56 (State)', 566, 'ST', 14, 0);
  oDataElements.Add('UB92 Locator 57 (National)', 567, 'ST', 27, 0);
  oDataElements.Add('UB92 Locator 78 (State)', 568, 'ST', 2, 0);
  oDataElements.Add('Set ID - OBX', 569, 'SI', 4, 0);
  oDataElements.Add('Value Type', 570, 'ID', 3, 125);
  oDataElements.Add('Observation Identifier', 571, 'CE', 80, 0);
  oDataElements.Add('Observation Sub-ID', 572, 'ST', 20, 0);
  oDataElements.Add('Observation Value', 573, 'varies', 65536, 0);
  oDataElements.Add('Units', 574, 'CE', 60, 0);
  oDataElements.Add('References Range', 575, 'ST', 60, 0);
  oDataElements.Add('Abnormal Flags', 576, 'ID', 5, 78);
  oDataElements.Add('Probability', 577, 'NM', 5, 0);
  oDataElements.Add('Nature of Abnormal Test', 578, 'ID', 2, 80);
  oDataElements.Add('Observation Result Status', 579, 'ID', 1, 85);
  oDataElements.Add('Date Last Obs Normal Values', 580, 'TS', 26, 0);
  oDataElements.Add('User Defined Access Checks', 581, 'ST', 20, 0);
  oDataElements.Add('Date/Time of the Observation', 582, 'TS', 26, 0);
  oDataElements.Add('Producer''s ID', 583, 'CE', 60, 0);
  oDataElements.Add('Responsible Observer', 584, 'XCN', 80, 0);
  oDataElements.Add('Sequence Number - Test/Observation Master File', 586, 'NM', 4, 0);
  oDataElements.Add('Producer''s Test/Observation ID', 587, 'CE', 200, 0);
  oDataElements.Add('Permitted Data Types', 588, 'ID', 12, 125);
  oDataElements.Add('Specimen Required', 589, 'ID', 1, 136);
  oDataElements.Add('Producer ID', 590, 'CE', 200, 0);
  oDataElements.Add('Observation Description', 591, 'TX', 200, 0);
  oDataElements.Add('Other Test/Observation IDs for the Observation', 592, 'CE', 200, 0);
  oDataElements.Add('Other Names', 593, 'ST', 200, 0);
  oDataElements.Add('Preferred Report Name for the Observation', 594, 'ST', 30, 0);
  oDataElements.Add('Preferred Short Name or Mnemonic for Observation', 595, 'ST', 8, 0);
  oDataElements.Add('Preferred Long Name for the Observation', 596, 'ST', 200, 0);
  oDataElements.Add('Orderability', 597, 'ID', 1, 136);
  oDataElements.Add('Identity of Instrument Used to Perform this Study', 598, 'CE', 60, 0);
  oDataElements.Add('Coded Representation of Method', 599, 'CE', 200, 0);
  oDataElements.Add('Portable', 600, 'ID', 1, 136);
  oDataElements.Add('Observation Producing Department/Section', 601, 'CE', 1, 0);
  oDataElements.Add('Telephone Number of Section', 602, 'XTN', 40, 0);
  oDataElements.Add('Nature of Test/Observation', 603, 'IS', 1, 174);
  oDataElements.Add('Report Subheader', 604, 'CE', 200, 0);
  oDataElements.Add('Report Display Order', 605, 'ST', 20, 0);
  oDataElements.Add('Date/Time Stamp for any change in Definition for the Observation', 606, 'TS', 26, 0);
  oDataElements.Add('Effective Date/Time of Change', 607, 'TS', 26, 0);
  oDataElements.Add('Typical Turn-Around Time', 608, 'NM', 20, 0);
  oDataElements.Add('Processing Time', 609, 'NM', 20, 0);
  oDataElements.Add('Processing Priority', 610, 'ID', 40, 168);
  oDataElements.Add('Reporting Priority', 611, 'ID', 5, 169);
  oDataElements.Add('Outside Site(s) Where Observation may be Performed', 612, 'CE', 200, 0);
  oDataElements.Add('Address of Outside Site(s)', 613, 'XAD', 1000, 0);
  oDataElements.Add('Phone Number of Outside Site', 614, 'XTN', 400, 0);
  oDataElements.Add('Confidentiality Code', 615, 'IS', 1, 177);
  oDataElements.Add('Observations Required to Interpret the Obs', 616, 'CE', 200, 0);
  oDataElements.Add('Interpretation of Observations', 617, 'TX', 65536, 0);
  oDataElements.Add('Contraindications to Observations', 618, 'CE', 65536, 0);
  oDataElements.Add('Reflex Tests/Observations', 619, 'CE', 200, 0);
  oDataElements.Add('Rules that Trigger Reflex Testing', 620, 'TX', 80, 0);
  oDataElements.Add('Fixed Canned Message', 621, 'CE', 65536, 0);
  oDataElements.Add('Patient Preparation', 622, 'TX', 200, 0);
  oDataElements.Add('Procedure Medication', 623, 'CE', 200, 0);
  oDataElements.Add('Factors that may Effect the Observation', 624, 'TX', 200, 0);
  oDataElements.Add('Test/Observation Performance Schedule', 625, 'ST', 60, 0);
  oDataElements.Add('Description of Test Methods', 626, 'TX', 65536, 0);
  oDataElements.Add('Units of Measure', 627, 'CE', 60, 0);
  oDataElements.Add('Range of Decimal Precision', 628, 'NM', 10, 0);
  oDataElements.Add('Corresponding SI Units of Measure', 629, 'CE', 60, 0);
  oDataElements.Add('SI Conversion Factor', 630, 'TX', 60, 0);
  oDataElements.Add('Reference (Normal) Range - Ordinal & Continuous Obs', 631, 'RFR', 200, 0);
  oDataElements.Add('Critical Range for Ordinal & Continuous Obs', 632, 'NR', 200, 0);
  oDataElements.Add('Absolute Range for Ordinal & Continuous Obs', 633, 'RFR', 200, 0);
  oDataElements.Add('Delta Check Criteria', 634, 'DLT', 200, 0);
  oDataElements.Add('Minimum Meaningful Increments', 635, 'NM', 20, 0);
  oDataElements.Add('Preferred Coding System', 636, 'CE', 60, 0);
  oDataElements.Add('Valid Coded '#147'Answers'#148, 637, 'CE', 60, 0);
  oDataElements.Add('Normal Text/Codes for Categorical Observations', 638, 'CE', 200, 0);
  oDataElements.Add('Abnormal Text/Codes for Categorical Observations', 639, 'CE', 200, 0);
  oDataElements.Add('Critical Text Codes for Categorical Observations', 640, 'CE', 200, 0);
  oDataElements.Add('Derived Specimen', 642, 'ID', 1, 170);
  oDataElements.Add('Container Description', 643, 'TX', 60, 0);
  oDataElements.Add('Container Volume', 644, 'NM', 20, 0);
  oDataElements.Add('Container Units', 645, 'CE', 60, 0);
  oDataElements.Add('Specimen', 646, 'CE', 60, 0);
  oDataElements.Add('Additive', 647, 'CE', 60, 0);
  oDataElements.Add('Preparation', 648, 'TX', 10240, 0);
  oDataElements.Add('Special Handling Requirements', 649, 'TX', 10240, 0);
  oDataElements.Add('Normal Collection Volume', 650, 'CQ', 20, 0);
  oDataElements.Add('Minimum Collection Volume', 651, 'CQ', 20, 0);
  oDataElements.Add('Specimen Requirements', 652, 'TX', 10240, 0);
  oDataElements.Add('Specimen Priorities', 653, 'ID', 1, 27);
  oDataElements.Add('Specimen Retention Time', 654, 'CQ', 20, 0);
  oDataElements.Add('Test/Observations Included within an Ordered Test Battery', 655, 'CE', 200, 0);
  oDataElements.Add('Observation ID Suffixes', 656, 'ST', 200, 0);
  oDataElements.Add('Derivation Rule', 657, 'TX', 10240, 0);
  oDataElements.Add('Master File Identifier', 658, 'CE_0175', 60, 175);
  oDataElements.Add('Master File Application Identifier', 659, 'HD', 180, 0);
  oDataElements.Add('File-Level Event Code', 660, 'ID', 3, 178);
  oDataElements.Add('Entered Date/Time', 661, 'TS', 26, 0);
  oDataElements.Add('Effective Date/Time', 662, 'TS', 26, 0);
  oDataElements.Add('Response Level Code', 663, 'ID', 2, 179);
  oDataElements.Add('Record-Level Event Code', 664, 'ID', 3, 180);
  oDataElements.Add('MFN Control ID', 665, 'ST', 20, 0);
  oDataElements.Add('Primary Key Value - MFE', 667, 'varies', 200, 0);
  oDataElements.Add('Event Completion Date/Time', 668, 'TS', 26, 0);
  oDataElements.Add('MFN Record Level Error Return', 669, 'CE_0181', 60, 181);
  oDataElements.Add('Primary Key Value - STF', 671, 'CE', 60, 0);
  oDataElements.Add('Staff ID Code', 672, 'CX', 60, 0);
  oDataElements.Add('Staff Name', 673, 'XPN', 48, 0);
  oDataElements.Add('Staff Type', 674, 'IS', 2, 182);
  oDataElements.Add('Active/Inactive Flag', 675, 'ID', 1, 183);
  oDataElements.Add('Department', 676, 'CE_0184', 200, 184);
  oDataElements.Add('Hospital Service', 677, 'CE_0069', 200, 69);
  oDataElements.Add('Phone', 678, 'XTN', 40, 0);
  oDataElements.Add('Office/Home Address', 679, 'XAD', 106, 0);
  oDataElements.Add('Institution Activation Date', 680, 'DIN', 26, 0);
  oDataElements.Add('Institution Inactivation Date', 681, 'DIN', 26, 0);
  oDataElements.Add('Backup Person ID', 682, 'CE', 60, 0);
  oDataElements.Add('E-Mail Address', 683, 'ST', 40, 0);
  oDataElements.Add('Preferred Method Of Contact', 684, 'CE_0185', 200, 185);
  oDataElements.Add('Primary Key Value - PRA', 685, 'CE', 60, 0);
  oDataElements.Add('Practitioner Group', 686, 'CE_0358', 60, 358);
  oDataElements.Add('Practitioner Category', 687, 'IS', 3, 186);
  oDataElements.Add('Provider Billing', 688, 'ID', 1, 187);
  oDataElements.Add('Specialty', 689, 'SPD', 100, 337);
  oDataElements.Add('Practitioner ID Numbers', 690, 'PLN', 100, 338);
  oDataElements.Add('Privileges', 691, 'PIP', 200, 0);
  oDataElements.Add('Character Set', 692, 'ID', 16, 211);
  oDataElements.Add('Principal Language Of Message', 693, 'CE', 60, 0);
  oDataElements.Add('When Quantity/Timing Qualifier', 694, 'TQ', 60, 0);
  oDataElements.Add('R/U Quantity/Timing Qualifier', 695, 'TQ', 60, 0);
  oDataElements.Add('Query Tag', 696, 'ST', 32, 0);
  oDataElements.Add('Query/ Response Format Code', 697, 'ID', 1, 106);
  oDataElements.Add('VT Query Name', 698, 'CE', 60, 0);
  oDataElements.Add('Virtual Table Name', 699, 'CE', 60, 0);
  oDataElements.Add('Selection Criteria', 700, 'QSC', 256, 0);
  oDataElements.Add('Number of Columns per Row', 701, 'NM', 3, 0);
  oDataElements.Add('Column Description', 702, 'RCD', 40, 0);
  oDataElements.Add('Column Value', 703, 'varies', 0, 0);
  oDataElements.Add('Stored Procedure Name', 704, 'CE', 60, 0);
  oDataElements.Add('Input Parameter List', 705, 'QIP', 256, 0);
  oDataElements.Add('Event Identifier', 706, 'CE', 60, 0);
  oDataElements.Add('Query Response Status', 708, 'ID', 2, 208);
  oDataElements.Add('EQL  Query Name', 709, 'CE', 60, 0);
  oDataElements.Add('EQL  Query Statement', 710, 'ST', 4096, 0);
  oDataElements.Add('Estimated Length of Inpatient Stay', 711, 'NM', 3, 0);
  oDataElements.Add('Actual Length of Inpatient Stay', 712, 'NM', 3, 0);
  oDataElements.Add('Visit Description', 713, 'ST', 50, 0);
  oDataElements.Add('Referral Source Code', 714, 'XCN', 90, 0);
  oDataElements.Add('Previous Service Date', 715, 'DT', 8, 0);
  oDataElements.Add('Employment Illness Related Indicator', 716, 'ID', 1, 136);
  oDataElements.Add('Purge Status Code', 717, 'IS', 1, 213);
  oDataElements.Add('Purge Status Date', 718, 'DT', 8, 0);
  oDataElements.Add('Special Program Code', 719, 'IS', 2, 214);
  oDataElements.Add('Retention Indicator', 720, 'ID', 1, 136);
  oDataElements.Add('Expected Number of Insurance Plans', 721, 'NM', 1, 0);
  oDataElements.Add('Visit Publicity Code', 722, 'IS', 1, 215);
  oDataElements.Add('Visit Protection Indicator', 723, 'ID', 1, 136);
  oDataElements.Add('Clinic Organization Name', 724, 'XON', 90, 0);
  oDataElements.Add('Patient Status Code', 725, 'IS', 2, 216);
  oDataElements.Add('Visit Priority Code', 726, 'IS', 1, 217);
  oDataElements.Add('Previous Treatment Date', 727, 'DT', 8, 0);
  oDataElements.Add('Expected Discharge Disposition', 728, 'IS', 2, 112);
  oDataElements.Add('Signature on File Date', 729, 'DT', 8, 0);
  oDataElements.Add('First Similar Illness Date', 730, 'DT', 8, 0);
  oDataElements.Add('Patient Charge Adjustment Code', 731, 'CE_0218', 80, 218);
  oDataElements.Add('Recurring Service Code', 732, 'IS', 2, 219);
  oDataElements.Add('Billing Media Code', 733, 'ID', 1, 136);
  oDataElements.Add('Expected Surgery Date & Time', 734, 'TS', 26, 0);
  oDataElements.Add('Military Partnership Code', 735, 'ID', 1, 136);
  oDataElements.Add('Military Non-Availability Code', 736, 'ID', 1, 136);
  oDataElements.Add('Newborn Baby Indicator', 737, 'ID', 1, 136);
  oDataElements.Add('Baby Detained Indicator', 738, 'ID', 1, 136);
  oDataElements.Add('Nationality', 739, 'CE_0212', 80, 212);
  oDataElements.Add('Patient Death Date and Time', 740, 'TS', 26, 0);
  oDataElements.Add('Patient Death Indicator', 741, 'ID', 1, 136);
  oDataElements.Add('Living Arrangement', 742, 'IS', 2, 220);
  oDataElements.Add('Publicity Code', 743, 'CE_0215', 80, 215);
  oDataElements.Add('Protection Indicator', 744, 'ID', 1, 136);
  oDataElements.Add('Student Indicator', 745, 'IS', 2, 231);
  oDataElements.Add('Contact Reason', 747, 'CE_0222', 80, 222);
  oDataElements.Add('Contact Person'#146's Name', 748, 'XPN', 48, 0);
  oDataElements.Add('Contact Person'#146's Telephone Number', 749, 'XTN', 40, 0);
  oDataElements.Add('Contact Person'#146's Address', 750, 'XAD', 106, 0);
  oDataElements.Add('Next of Kin/Associated Party'#146's Identifiers', 751, 'CX', 32, 0);
  oDataElements.Add('Job Status', 752, 'IS', 2, 311);
  oDataElements.Add('Handicap', 753, 'IS', 2, 295);
  oDataElements.Add('Contact Person Social Security Number', 754, 'ST', 16, 0);
  oDataElements.Add('Living Dependency', 755, 'IS', 2, 223);
  oDataElements.Add('Patient Primary Facility', 756, 'XON', 90, 0);
  oDataElements.Add('Patient Primary Care Provider Name & ID No.', 757, 'XCN', 90, 0);
  oDataElements.Add('Living Will', 759, 'IS', 2, 315);
  oDataElements.Add('Organ Donor', 760, 'IS', 2, 316);
  oDataElements.Add('Separate Bill', 761, 'ID', 1, 136);
  oDataElements.Add('Duplicate Patient', 762, 'CX', 20, 0);
  oDataElements.Add('Segment Action Code', 763, 'ID', 3, 206);
  oDataElements.Add('Segment Unique Key', 764, 'EI', 80, 0);
  oDataElements.Add('Entered By Code', 765, 'XCN', 120, 0);
  oDataElements.Add('Diagnosis Classification', 766, 'IS', 3, 228);
  oDataElements.Add('Confidential Indicator', 767, 'ID', 1, 136);
  oDataElements.Add('Attestation Date/Time', 768, 'TS', 26, 0);
  oDataElements.Add('DRG Assigned Date/Time', 769, 'TS', 26, 0);
  oDataElements.Add('DRG Payor', 770, 'IS', 1, 229);
  oDataElements.Add('Outlier Reimbursement', 771, 'CP', 9, 0);
  oDataElements.Add('Associated Diagnosis Code', 772, 'CE_0051', 80, 51);
  oDataElements.Add('Guarantor Billing Hold Flag', 773, 'ID', 1, 136);
  oDataElements.Add('Guarantor Credit Rating Code', 774, 'CE_0341', 80, 341);
  oDataElements.Add('Guarantor Death Date And Time', 775, 'TS', 26, 0);
  oDataElements.Add('Guarantor Death Flag', 776, 'ID', 1, 136);
  oDataElements.Add('Guarantor Charge Adjustment Code', 777, 'CE_0218', 80, 218);
  oDataElements.Add('Guarantor Household Annual Income', 778, 'CP', 10, 0);
  oDataElements.Add('Guarantor Household Size', 779, 'NM', 3, 0);
  oDataElements.Add('Guarantor Employer ID Number', 780, 'CX', 20, 0);
  oDataElements.Add('Guarantor Marital Status Code', 781, 'CE_0002', 80, 2);
  oDataElements.Add('Guarantor Hire Effective Date', 782, 'DT', 8, 0);
  oDataElements.Add('Employment Stop Date', 783, 'DT', 8, 0);
  oDataElements.Add('Contact Relationship', 784, 'IS', 2, 63);
  oDataElements.Add('Job Title', 785, 'ST', 20, 0);
  oDataElements.Add('Job Code/Class', 786, 'JCC', 20, 327);
  oDataElements.Add('Insured'#146's Employment Start Date', 787, 'DT', 8, 0);
  oDataElements.Add('Employer Contact Person Name', 789, 'XPN', 48, 0);
  oDataElements.Add('Employer Contact Person Phone Number', 790, 'XTN', 40, 0);
  oDataElements.Add('Employer Contact Reason', 791, 'IS', 2, 222);
  oDataElements.Add('Insured'#146's Contact Person'#146's Name', 792, 'XPN', 48, 0);
  oDataElements.Add('Insured'#146's Contact Person Phone Number', 793, 'XTN', 40, 0);
  oDataElements.Add('Insured'#146's Contact Person Reason', 794, 'IS', 2, 222);
  oDataElements.Add('Relationship To The Patient Start Date', 795, 'DT', 8, 0);
  oDataElements.Add('Relationship To The Patient Stop Date', 796, 'DT', 8, 0);
  oDataElements.Add('Insurance Co. Contact Reason', 797, 'IS', 2, 232);
  oDataElements.Add('Insurance Co Contact Phone Number', 798, 'XTN', 40, 0);
  oDataElements.Add('Policy Scope', 799, 'IS', 2, 312);
  oDataElements.Add('Policy Source', 800, 'IS', 2, 313);
  oDataElements.Add('Patient Member Number', 801, 'CX', 60, 0);
  oDataElements.Add('Guarantor'#146's Relationship To Insured', 802, 'CE_0063', 80, 63);
  oDataElements.Add('Insured'#146's Phone Number - Home', 803, 'XTN', 40, 0);
  oDataElements.Add('Insured'#146's Employer Phone Number', 804, 'XTN', 40, 0);
  oDataElements.Add('Military Handicapped Program', 805, 'CE_0343', 60, 343);
  oDataElements.Add('Suspend Flag', 806, 'ID', 1, 136);
  oDataElements.Add('Copay Limit Flag', 807, 'ID', 1, 136);
  oDataElements.Add('Stoploss Limit Flag', 808, 'ID', 1, 136);
  oDataElements.Add('Insured Organization Name And ID', 809, 'XON', 130, 0);
  oDataElements.Add('Insured Employer Organization Name And ID', 810, 'XON', 130, 0);
  oDataElements.Add('HCFA Patient'#146's Relationship to Insured', 811, 'CE_0344', 60, 344);
  oDataElements.Add('Auto Accident State', 812, 'CE_0347', 60, 347);
  oDataElements.Add('Accident Job Related Indicator', 813, 'ID', 1, 136);
  oDataElements.Add('Accident Death Indicator', 814, 'ID', 12, 136);
  oDataElements.Add('Special Visit Count', 815, 'NM', 3, 0);
  oDataElements.Add('Action Code', 816, 'ID', 2, 287);
  oDataElements.Add('Action Date/Time', 817, 'TS', 26, 0);
  oDataElements.Add('Goal ID', 818, 'CE', 80, 0);
  oDataElements.Add('Goal Instance ID', 819, 'EI', 60, 0);
  oDataElements.Add('Episode of Care ID', 820, 'EI', 60, 0);
  oDataElements.Add('Goal List Priority', 821, 'NM', 60, 0);
  oDataElements.Add('Goal Established Date/Time', 822, 'TS', 26, 0);
  oDataElements.Add('Security/Sensitivity', 823, 'CE', 80, 0);
  oDataElements.Add('Expected Goal Achieve Date/Time', 824, 'TS', 26, 0);
  oDataElements.Add('Goal Classification', 825, 'CE', 80, 0);
  oDataElements.Add('Goal Management Discipline', 826, 'CE', 80, 0);
  oDataElements.Add('Current Goal Review Status', 827, 'CE', 80, 0);
  oDataElements.Add('Current Goal Review Date/Time', 828, 'TS', 26, 0);
  oDataElements.Add('Next Goal Review Date/Time', 829, 'TS', 26, 0);
  oDataElements.Add('Previous Goal Review Date/Time', 830, 'TS', 26, 0);
  oDataElements.Add('Goal Review Interval', 831, 'TQ', 200, 0);
  oDataElements.Add('Goal Evaluation', 832, 'CE', 80, 0);
  oDataElements.Add('Goal Evaluation Comment', 833, 'ST', 300, 0);
  oDataElements.Add('Goal Life Cycle Status', 834, 'CE', 80, 0);
  oDataElements.Add('Goal Life Cycle Status Date/Time', 835, 'TS', 26, 0);
  oDataElements.Add('Goal Target Type', 836, 'CE', 80, 0);
  oDataElements.Add('Goal Target Name', 837, 'XPN', 80, 0);
  oDataElements.Add('Problem ID', 838, 'CE', 80, 0);
  oDataElements.Add('Problem Instance ID', 839, 'EI', 60, 0);
  oDataElements.Add('Problem List Priority', 841, 'NM', 60, 0);
  oDataElements.Add('Problem Established Date/Time', 842, 'TS', 26, 0);
  oDataElements.Add('Anticipated Problem Resolution Date/Time', 843, 'TS', 26, 0);
  oDataElements.Add('Actual Problem Resolution Date/Time', 844, 'TS', 26, 0);
  oDataElements.Add('Problem Classification', 845, 'CE', 80, 0);
  oDataElements.Add('Problem Management Discipline', 846, 'CE', 80, 0);
  oDataElements.Add('Problem Persistence', 847, 'CE', 80, 0);
  oDataElements.Add('Problem Confirmation Status', 848, 'CE', 80, 0);
  oDataElements.Add('Problem Life Cycle Status', 849, 'CE', 80, 0);
  oDataElements.Add('Problem Life Cycle Status Date/Time', 850, 'TS', 26, 0);
  oDataElements.Add('Problem Date of Onset', 851, 'TS', 26, 0);
  oDataElements.Add('Problem Onset Text', 852, 'ST', 80, 0);
  oDataElements.Add('Problem Ranking', 853, 'CE', 80, 0);
  oDataElements.Add('Certainty of Problem', 854, 'CE', 60, 0);
  oDataElements.Add('Probability of Problem (0-1)', 855, 'NM', 5, 0);
  oDataElements.Add('Individual Awareness of Problem', 856, 'CE', 80, 0);
  oDataElements.Add('Problem Prognosis', 857, 'CE', 80, 0);
  oDataElements.Add('Individual Awareness of Prognosis', 858, 'CE', 80, 0);
  oDataElements.Add('Family/Significant Other Awareness of Problem/Prognosis', 859, 'ST', 200, 0);
  oDataElements.Add('Placer Appointment ID', 860, 'EI', 75, 0);
  oDataElements.Add('Filler Appointment ID', 861, 'EI', 75, 0);
  oDataElements.Add('Occurrence Number', 862, 'NM', 5, 0);
  oDataElements.Add('Schedule ID', 864, 'CE', 200, 0);
  oDataElements.Add('Request Event Reason', 865, 'CE', 200, 0);
  oDataElements.Add('Appointment Reason', 866, 'CE_0276', 200, 276);
  oDataElements.Add('Appointment Type', 867, 'CE_0277', 200, 277);
  oDataElements.Add('Appointment Duration', 868, 'NM', 20, 0);
  oDataElements.Add('Appointment Duration Units', 869, 'CE', 200, 0);
  oDataElements.Add('Requested Start Date/Time Range', 870, 'DR', 53, 0);
  oDataElements.Add('Priority-ARQ', 871, 'ST', 5, 0);
  oDataElements.Add('Repeating Interval', 872, 'RI', 100, 0);
  oDataElements.Add('Repeating Interval Duration', 873, 'ST', 5, 0);
  oDataElements.Add('Placer Contact Person', 874, 'XCN', 48, 0);
  oDataElements.Add('Placer Contact Phone Number', 875, 'XTN', 40, 0);
  oDataElements.Add('Placer Contact Address', 876, 'XAD', 106, 0);
  oDataElements.Add('Placer Contact Location', 877, 'PL', 80, 0);
  oDataElements.Add('Entered by Person', 878, 'XCN', 48, 0);
  oDataElements.Add('Entered by Phone Number', 879, 'XTN', 40, 0);
  oDataElements.Add('Entered by Location', 880, 'PL', 80, 0);
  oDataElements.Add('Parent Placer Appointment ID', 881, 'EI', 75, 0);
  oDataElements.Add('Parent Filler Appointment ID', 882, 'EI', 75, 0);
  oDataElements.Add('Event Reason', 883, 'CE', 200, 0);
  oDataElements.Add('Appointment Timing Quantity', 884, 'TQ', 200, 0);
  oDataElements.Add('Filler Contact Person', 885, 'XCN', 38, 0);
  oDataElements.Add('Filler Contact Phone Number', 886, 'XTN', 40, 0);
  oDataElements.Add('Filler Contact Address', 887, 'XAD', 106, 0);
  oDataElements.Add('Filler Contact Location', 888, 'PL', 80, 0);
  oDataElements.Add('Filler Status Code', 889, 'CE_0278', 200, 278);
  oDataElements.Add('Set ID - AIS', 890, 'SI', 4, 0);
  oDataElements.Add('Start Date/Time Offset', 891, 'NM', 20, 0);
  oDataElements.Add('Start Date/Time Offset Units', 892, 'CE', 200, 0);
  oDataElements.Add('Duration', 893, 'NM', 20, 0);
  oDataElements.Add('Duration Units', 894, 'CE', 200, 0);
  oDataElements.Add('Allow Substitution Code', 895, 'IS', 10, 279);
  oDataElements.Add('Set ID - AIG', 896, 'SI', 4, 0);
  oDataElements.Add('Resource ID', 897, 'CE', 200, 0);
  oDataElements.Add('Resource Type', 898, 'CE', 200, 0);
  oDataElements.Add('Resource Group', 899, 'CE', 200, 0);
  oDataElements.Add('Resource Quantity', 900, 'NM', 5, 0);
  oDataElements.Add('Resource Quantity Units', 901, 'CE', 200, 0);
  oDataElements.Add('Set ID - AIL', 902, 'SI', 4, 0);
  oDataElements.Add('Location Resource ID', 903, 'PL', 80, 0);
  oDataElements.Add('Location Type-AIL', 904, 'CE', 200, 0);
  oDataElements.Add('Location Group', 905, 'CE', 200, 0);
  oDataElements.Add('Set ID - AIP', 906, 'SI', 4, 0);
  oDataElements.Add('Resource Role', 907, 'CE', 200, 0);
  oDataElements.Add('Time Selection Criteria', 908, 'SCV', 80, 294);
  oDataElements.Add('Resource Selection Criteria', 909, 'SCV', 80, 294);
  oDataElements.Add('Location Selection Criteria', 910, 'SCV', 80, 294);
  oDataElements.Add('Slot Spacing Criteria', 911, 'NM', 5, 0);
  oDataElements.Add('Filler Override Criteria', 912, 'SCV', 80, 0);
  oDataElements.Add('Personnel Resource ID', 913, 'XCN', 80, 0);
  oDataElements.Add('Set ID - TXA', 914, 'SI', 4, 0);
  oDataElements.Add('Document Type', 915, 'IS', 30, 270);
  oDataElements.Add('Document Content Presentation', 916, 'ID', 2, 191);
  oDataElements.Add('Activity Date/Time', 917, 'TS', 26, 0);
  oDataElements.Add('Primary Activity Provider Code/Name', 918, 'XCN', 60, 0);
  oDataElements.Add('Origination Date/Time', 919, 'TS', 26, 0);
  oDataElements.Add('Transcription Date/Time', 920, 'TS', 26, 0);
  oDataElements.Add('Edit Date/Time', 921, 'TS', 26, 0);
  oDataElements.Add('Originator Code/Name', 922, 'XCN', 60, 0);
  oDataElements.Add('Assigned Document Authenticator', 923, 'XCN', 60, 0);
  oDataElements.Add('Transcriptionist Code/Name', 924, 'XCN', 48, 0);
  oDataElements.Add('Unique Document Number', 925, 'EI', 30, 0);
  oDataElements.Add('Parent Document Number', 926, 'EI', 30, 0);
  oDataElements.Add('Unique Document File Name', 927, 'ST', 30, 0);
  oDataElements.Add('Document Completion Status', 928, 'ID', 2, 271);
  oDataElements.Add('Document Confidentiality Status', 929, 'ID', 2, 272);
  oDataElements.Add('Document Availability Status', 930, 'ID', 2, 273);
  oDataElements.Add('Document Storage Status', 932, 'ID', 2, 275);
  oDataElements.Add('Document Change Reason', 933, 'ST', 30, 0);
  oDataElements.Add('Authentication Person, Time Stamp', 934, 'PPN', 60, 0);
  oDataElements.Add('Distributed Copies (Code and Name of Recipients)', 935, 'XCN', 60, 0);
  oDataElements.Add('Observation Method', 936, 'CE', 60, 0);
  oDataElements.Add('Kind of Quantity Observed', 937, 'CE_0254', 60, 254);
  oDataElements.Add('Point Versus Interval', 938, 'CE_0255', 60, 255);
  oDataElements.Add('Challenge Information', 939, 'TX_CHALLENGE', 200, 256);
  oDataElements.Add('Relationship Modifier', 940, 'CE_0258', 200, 258);
  oDataElements.Add('Target Anatomic Site Of Test', 941, 'CE', 200, 0);
  oDataElements.Add('Modality Of Imaging Measurement', 942, 'CE_0259', 200, 259);
  oDataElements.Add('Primary Key Value - LRL', 943, 'PL', 200, 0);
  oDataElements.Add('Location Description', 944, 'ST', 48, 0);
  oDataElements.Add('Location Type - LOC', 945, 'IS', 2, 260);
  oDataElements.Add('Organization Name - LOC', 947, 'XON', 90, 0);
  oDataElements.Add('Location Address', 948, 'XAD', 106, 0);
  oDataElements.Add('Location Phone', 949, 'XTN', 40, 0);
  oDataElements.Add('License Number', 951, 'CE', 60, 0);
  oDataElements.Add('Location Equipment', 953, 'IS', 3, 261);
  oDataElements.Add('Primary Key Value - LDP', 963, 'PL', 200, 0);
  oDataElements.Add('Location Department', 964, 'IS', 10, 264);
  oDataElements.Add('Location Service', 965, 'IS', 3, 69);
  oDataElements.Add('Specialty Type', 966, 'CE_0265', 60, 265);
  oDataElements.Add('Valid Patient Classes', 967, 'IS', 1, 4);
  oDataElements.Add('Activation Date  LDP', 969, 'TS', 26, 0);
  oDataElements.Add('Inactivation Date - LDP', 970, 'TS', 26, 0);
  oDataElements.Add('Inactivated Reason', 971, 'ST', 80, 0);
  oDataElements.Add('Visiting Hours', 976, 'VH', 80, 267);
  oDataElements.Add('Contact Phone', 978, 'XTN', 40, 0);
  oDataElements.Add('Primary Key Value - LCC', 979, 'PL', 200, 0);
  oDataElements.Add('Accommodation Type', 980, 'CE_0129', 60, 129);
  oDataElements.Add('Charge Code', 981, 'CE_0132', 60, 132);
  oDataElements.Add('Primary Key Value - PRC', 982, 'CE_0132', 200, 132);
  oDataElements.Add('Charge Code Alias', 983, 'CE', 200, 0);
  oDataElements.Add('Charge Description Short', 984, 'ST', 20, 0);
  oDataElements.Add('Charge Description Long', 985, 'ST', 250, 0);
  oDataElements.Add('Description Override Indicator', 986, 'IS', 1, 268);
  oDataElements.Add('Exploding Charges', 987, 'CE', 60, 0);
  oDataElements.Add('Cost', 989, 'MO', 12, 0);
  oDataElements.Add('Inventory Number', 990, 'CE', 60, 0);
  oDataElements.Add('Resource Load', 991, 'NM', 12, 0);
  oDataElements.Add('Contract Number', 992, 'CK', 200, 0);
  oDataElements.Add('Contract Organization', 993, 'XON', 200, 0);
  oDataElements.Add('Room Fee Indicator', 994, 'ID', 1, 136);
  oDataElements.Add('Facility ID - PRC', 995, 'CE', 60, 0);
  oDataElements.Add('Price', 998, 'CP', 12, 0);
  oDataElements.Add('Formula', 999, 'ST', 200, 0);
  oDataElements.Add('Minimum Quantity', 1000, 'NM', 4, 0);
  oDataElements.Add('Maximum Quantity', 1001, 'NM', 4, 0);
  oDataElements.Add('Minimum Price', 1002, 'MO', 12, 0);
  oDataElements.Add('Maximum Price', 1003, 'MO', 12, 0);
  oDataElements.Add('Effective Start Date', 1004, 'TS', 26, 0);
  oDataElements.Add('Effective End Date', 1005, 'TS', 26, 0);
  oDataElements.Add('Price Override Flag', 1006, 'IS', 1, 268);
  oDataElements.Add('Billing Category', 1007, 'CE_0293', 60, 293);
  oDataElements.Add('Chargeable Flag', 1008, 'ID', 1, 136);
  oDataElements.Add('Charge On Indicator', 1009, 'IS', 1, 269);
  oDataElements.Add('Set ID - CM0', 1010, 'SI', 4, 0);
  oDataElements.Add('Sponsor Study ID', 1011, 'EI', 60, 0);
  oDataElements.Add('Title of Study', 1013, 'ST', 300, 0);
  oDataElements.Add('Chairman of Study', 1014, 'XCN', 60, 0);
  oDataElements.Add('Last IRB Approval Date', 1015, 'DT', 8, 0);
  oDataElements.Add('Total Accrual to Date', 1016, 'NM', 8, 0);
  oDataElements.Add('Last Accrual Date', 1017, 'DT', 8, 0);
  oDataElements.Add('Contact for Study', 1018, 'XCN', 60, 0);
  oDataElements.Add('Contact''s Tel. Number', 1019, 'XTN', 40, 0);
  oDataElements.Add('Contact''s Address', 1020, 'XAD', 100, 0);
  oDataElements.Add('Set ID - CM1', 1021, 'SI', 4, 0);
  oDataElements.Add('Study Phase Identifier', 1022, 'CE', 60, 0);
  oDataElements.Add('Description of Study Phase', 1023, 'ST', 300, 0);
  oDataElements.Add('Set ID - CM2', 1024, 'SI', 4, 0);
  oDataElements.Add('Scheduled Time Point', 1025, 'CE', 60, 0);
  oDataElements.Add('Description of Time Point', 1026, 'ST', 300, 0);
  oDataElements.Add('Events Scheduled This Time Point', 1027, 'CE', 60, 0);
  oDataElements.Add('Number of Sample Containers *', 1028, 'NM', 4, 0);
  oDataElements.Add('Transport Logistics of Collected Sample *', 1029, 'CE', 60, 0);
  oDataElements.Add('Collector'#146's Comment *', 1030, 'CE', 200, 0);
  oDataElements.Add('Transport Arrangement Responsibility', 1031, 'CE', 60, 0);
  oDataElements.Add('Transport Arranged', 1032, 'ID', 30, 224);
  oDataElements.Add('Escort Required', 1033, 'ID', 1, 225);
  oDataElements.Add('Planned Patient Transport Comment', 1034, 'CE', 200, 0);
  oDataElements.Add('Alternate Study ID', 1036, 'EI', 60, 0);
  oDataElements.Add('Institution Registering the Patient', 1037, 'CE', 60, 0);
  oDataElements.Add('Sponsor Patient ID', 1038, 'CX', 30, 0);
  oDataElements.Add('Alternate Patient ID - CSR', 1039, 'CX', 30, 0);
  oDataElements.Add('Date/Time Of Patient Study Registration', 1040, 'TS', 26, 0);
End;

procedure LoadDataElements3(oDataElements : THL7V2ModelDataElements);
Begin
  oDataElements.Add('Person Performing Study Registration', 1041, 'XCN', 60, 0);
  oDataElements.Add('Study Authorizing Provider', 1042, 'XCN', 60, 0);
  oDataElements.Add('Date/time Patient Study Consent Signed', 1043, 'TS', 26, 0);
  oDataElements.Add('Patient Study Eligibility Status', 1044, 'CE', 60, 0);
  oDataElements.Add('Study Randomization Date/time', 1045, 'TS', 26, 0);
  oDataElements.Add('Randomized Study Arm', 1046, 'CE', 200, 0);
  oDataElements.Add('Stratum for Study Randomization', 1047, 'CE', 200, 0);
  oDataElements.Add('Patient Evaluability Status', 1048, 'CE', 60, 0);
  oDataElements.Add('Date/time Ended Study', 1049, 'TS', 26, 0);
  oDataElements.Add('Reason Ended Study', 1050, 'CE', 60, 0);
  oDataElements.Add('Date/time Study Phase Began', 1052, 'TS', 26, 0);
  oDataElements.Add('Date/time Study Phase Ended', 1053, 'TS', 26, 0);
  oDataElements.Add('Study Phase Evaluability', 1054, 'CE', 60, 0);
  oDataElements.Add('Study Scheduled Time Point', 1055, 'CE', 60, 0);
  oDataElements.Add('Study Scheduled Patient Time Point', 1056, 'TS', 26, 0);
  oDataElements.Add('Study Quality Control Codes', 1057, 'CE', 60, 0);
  oDataElements.Add('Sender Organization Name', 1059, 'XON', 80, 0);
  oDataElements.Add('Sender Individual Name', 1060, 'XCN', 60, 0);
  oDataElements.Add('Sender Address', 1062, 'XAD', 200, 0);
  oDataElements.Add('Sender Telephone', 1063, 'XTN', 44, 0);
  oDataElements.Add('Sender Event Identifier', 1064, 'EI', 75, 0);
  oDataElements.Add('Sender Sequence Number', 1065, 'NM', 2, 0);
  oDataElements.Add('Sender Event Description', 1066, 'FT', 600, 0);
  oDataElements.Add('Sender Comment', 1067, 'FT', 600, 0);
  oDataElements.Add('Sender Aware Date/Time', 1068, 'TS', 26, 0);
  oDataElements.Add('Event Report Date', 1069, 'TS', 26, 0);
  oDataElements.Add('Event Report Timing/Type', 1070, 'ID', 3, 234);
  oDataElements.Add('Event Report Source', 1071, 'ID', 1, 235);
  oDataElements.Add('Event Reported To', 1072, 'ID', 1, 236);
  oDataElements.Add('Event Identifiers Used', 1073, 'CE', 60, 0);
  oDataElements.Add('Event Symptom/Diagnosis Code', 1074, 'CE', 60, 0);
  oDataElements.Add('Event Onset Date/Time', 1075, 'TS', 26, 0);
  oDataElements.Add('Event Exacerbation Date/Time', 1076, 'TS', 26, 0);
  oDataElements.Add('Event Improved Date/Time', 1077, 'TS', 26, 0);
  oDataElements.Add('Event Ended Data/Time', 1078, 'TS', 26, 0);
  oDataElements.Add('Event Location Occurred Address', 1079, 'XAD', 106, 0);
  oDataElements.Add('Event Qualification', 1080, 'ID', 1, 237);
  oDataElements.Add('Event Serious', 1081, 'ID', 1, 238);
  oDataElements.Add('Event Expected', 1082, 'ID', 1, 239);
  oDataElements.Add('Event Outcome', 1083, 'ID', 1, 240);
  oDataElements.Add('Patient Outcome', 1084, 'ID', 1, 241);
  oDataElements.Add('Event Description From Others', 1085, 'FT', 600, 0);
  oDataElements.Add('Event From Original Reporter', 1086, 'FT', 600, 0);
  oDataElements.Add('Event Description From Patient', 1087, 'FT', 600, 0);
  oDataElements.Add('Event Description From Practitioner', 1088, 'FT', 600, 0);
  oDataElements.Add('Event Description From Autopsy', 1089, 'FT', 600, 0);
  oDataElements.Add('Cause Of Death', 1090, 'CE', 60, 0);
  oDataElements.Add('Primary Observer Name', 1091, 'XPN', 46, 0);
  oDataElements.Add('Primary Observer Address', 1092, 'XAD', 106, 0);
  oDataElements.Add('Primary Observer Telephone', 1093, 'XTN', 40, 0);
  oDataElements.Add('Primary Observer'#146's Qualification', 1094, 'ID', 1, 242);
  oDataElements.Add('Confirmation Provided By', 1095, 'ID', 1, 242);
  oDataElements.Add('Primary Observer Aware Date/Time', 1096, 'TS', 26, 0);
  oDataElements.Add('Primary Observer'#146's identity May Be Divulged', 1097, 'ID', 1, 243);
  oDataElements.Add('Implicated Product', 1098, 'CE', 60, 0);
  oDataElements.Add('Generic Product', 1099, 'IS', 1, 249);
  oDataElements.Add('Product Class', 1100, 'CE', 60, 0);
  oDataElements.Add('Total Duration Of Therapy', 1101, 'CQ', 8, 0);
  oDataElements.Add('Product Manufacture Date', 1102, 'TS', 26, 0);
  oDataElements.Add('Product Expiration Date', 1103, 'TS', 26, 0);
  oDataElements.Add('Product Implantation Date', 1104, 'TS', 26, 0);
  oDataElements.Add('Product Explantation Date', 1105, 'TS', 26, 0);
  oDataElements.Add('Single Use Device', 1106, 'IS', 8, 244);
  oDataElements.Add('Indication For Product Use', 1107, 'CE', 60, 0);
  oDataElements.Add('Product Problem', 1108, 'IS', 8, 245);
  oDataElements.Add('Product Serial/Lot Number', 1109, 'ST', 30, 0);
  oDataElements.Add('Product Available For Inspection', 1110, 'IS', 1, 246);
  oDataElements.Add('Product Evaluation Performed', 1111, 'CE', 60, 0);
  oDataElements.Add('Product Evaluation Status', 1112, 'CE_0247', 60, 247);
  oDataElements.Add('Product Evaluation Results', 1113, 'CE', 60, 0);
  oDataElements.Add('Evaluated Product Source', 1114, 'ID', 8, 248);
  oDataElements.Add('Date Product Returned To Manufacturer', 1115, 'TS', 26, 0);
  oDataElements.Add('Device Operator Qualifications', 1116, 'ID', 1, 242);
  oDataElements.Add('Relatedness Assessment', 1117, 'ID', 1, 250);
  oDataElements.Add('Action Taken In Response To The Event', 1118, 'ID', 2, 251);
  oDataElements.Add('Event Causality Observations', 1119, 'ID', 2, 252);
  oDataElements.Add('Indirect Exposure Mechanism', 1120, 'ID', 1, 253);
  oDataElements.Add('Requested Give Strength', 1121, 'NM', 20, 0);
  oDataElements.Add('Requested Give Strength Units', 1122, 'CE', 60, 0);
  oDataElements.Add('Indication', 1123, 'CE', 200, 0);
  oDataElements.Add('Component Strength', 1124, 'NM', 20, 0);
  oDataElements.Add('Component Strength Units', 1125, 'CE', 60, 0);
  oDataElements.Add('Give Strength', 1126, 'NM', 20, 0);
  oDataElements.Add('Give Strength Units', 1127, 'CE', 60, 0);
  oDataElements.Add('Give Indication', 1128, 'CE', 200, 0);
  oDataElements.Add('Substance Lot Number', 1129, 'ST', 20, 0);
  oDataElements.Add('Substance Expiration Date', 1130, 'TS', 26, 0);
  oDataElements.Add('Substance Manufacturer Name', 1131, 'CE_0227', 60, 227);
  oDataElements.Add('Actual Strength', 1132, 'NM', 20, 0);
  oDataElements.Add('Actual Strength Unit', 1133, 'CE', 60, 0);
  oDataElements.Add('Administered Strength', 1134, 'NM', 20, 0);
  oDataElements.Add('Administered Strength Units', 1135, 'CE', 60, 0);
  oDataElements.Add('Substance Refusal Reason', 1136, 'CE', 200, 0);
  oDataElements.Add('Referral Status', 1137, 'CE_0283', 200, 283);
  oDataElements.Add('Referral Priority', 1138, 'CE_0280', 200, 280);
  oDataElements.Add('Referral Type', 1139, 'CE_0281', 200, 281);
  oDataElements.Add('Referral Disposition', 1140, 'CE_0282', 200, 282);
  oDataElements.Add('Referral Category', 1141, 'CE_0284', 200, 284);
  oDataElements.Add('Originating Referral Identifier', 1142, 'EI', 30, 0);
  oDataElements.Add('Effective Date', 1143, 'TS', 26, 0);
  oDataElements.Add('Expiration Date', 1144, 'TS', 26, 0);
  oDataElements.Add('Process Date', 1145, 'TS', 26, 0);
  oDataElements.Add('Authorizing Payor, Plan ID', 1146, 'CE_0072', 200, 72);
  oDataElements.Add('Authorizing Payor, Company ID', 1147, 'CE_0285', 200, 285);
  oDataElements.Add('Authorizing Payor, Company Name', 1148, 'ST', 45, 0);
  oDataElements.Add('Authorization Effective Date', 1149, 'TS', 26, 0);
  oDataElements.Add('Authorization Expiration Date', 1150, 'TS', 26, 0);
  oDataElements.Add('Authorization Identifier', 1151, 'EI', 30, 0);
  oDataElements.Add('Reimbursement Limit', 1152, 'CP', 25, 0);
  oDataElements.Add('Requested Number of Treatments', 1153, 'NM', 2, 0);
  oDataElements.Add('Authorized Number of Treatments', 1154, 'NM', 2, 0);
  oDataElements.Add('Provider Role', 1155, 'CE_0286', 200, 286);
  oDataElements.Add('Provider Name', 1156, 'XPN', 106, 0);
  oDataElements.Add('Provider Address', 1157, 'XAD', 60, 0);
  oDataElements.Add('Provider Location', 1158, 'PL', 60, 0);
  oDataElements.Add('Provider Communication Information', 1159, 'XTN', 100, 0);
  oDataElements.Add('Provider Identifiers', 1162, 'PI', 100, 0);
  oDataElements.Add('Effective Start Date of Provider Role', 1163, 'TS', 26, 0);
  oDataElements.Add('Effective End Date of Provider Role', 1164, 'TS', 26, 0);
  oDataElements.Add('Contact Name', 1165, 'XPN', 106, 0);
  oDataElements.Add('Contact Address', 1166, 'XAD', 200, 0);
  oDataElements.Add('Contact Location', 1167, 'PL', 60, 0);
  oDataElements.Add('Contact Communication Information', 1168, 'XTN', 100, 0);
  oDataElements.Add('Contact Identifiers', 1171, 'PI', 100, 0);
  oDataElements.Add('System Date/Time', 1172, 'TS', 0, 0);
  oDataElements.Add('Statistics Available', 1173, 'ID', 0, 136);
  oDataElements.Add('Source Identifier', 1174, 'ST', 0, 0);
  oDataElements.Add('Source Type', 1175, 'ID', 0, 0);
  oDataElements.Add('Statistics Start', 1176, 'TS', 0, 0);
  oDataElements.Add('Statistics End', 1177, 'TS', 0, 0);
  oDataElements.Add('Receive Character Count', 1178, 'NM', 0, 0);
  oDataElements.Add('Send Character Count', 1179, 'NM', 0, 0);
  oDataElements.Add('Messages Received', 1180, 'NM', 0, 0);
  oDataElements.Add('Messages Sent', 1181, 'NM', 0, 0);
  oDataElements.Add('Checksum Errors Received', 1182, 'NM', 0, 0);
  oDataElements.Add('Length Errors Received', 1183, 'NM', 0, 0);
  oDataElements.Add('Other Errors Received', 1184, 'NM', 0, 0);
  oDataElements.Add('Connect Timeouts', 1185, 'NM', 0, 0);
  oDataElements.Add('Receive Timeouts', 1186, 'NM', 0, 0);
  oDataElements.Add('Network Errors', 1187, 'NM', 0, 0);
  oDataElements.Add('Network Change Type', 1188, 'IS', 0, 333);
  oDataElements.Add('Current CPU', 1189, 'ST', 0, 0);
  oDataElements.Add('Current Fileserver', 1190, 'ST', 0, 0);
  oDataElements.Add('Current Application', 1191, 'ST', 0, 0);
  oDataElements.Add('Current Facility', 1192, 'ST', 0, 0);
  oDataElements.Add('New CPU', 1193, 'ST', 0, 0);
  oDataElements.Add('New Fileserver', 1194, 'ST', 0, 0);
  oDataElements.Add('New Application', 1195, 'ST', 0, 0);
  oDataElements.Add('New Facility', 1196, 'ST', 0, 0);
  oDataElements.Add('Role-ROL', 1197, 'CE', 80, 0);
  oDataElements.Add('Role Person', 1198, 'XCN', 80, 0);
  oDataElements.Add('Role Begin Date/Time', 1199, 'TS', 26, 0);
  oDataElements.Add('Role End Date/Time', 1200, 'TS', 26, 0);
  oDataElements.Add('Role Duration', 1201, 'CE', 80, 0);
  oDataElements.Add('Start Date/Time', 1202, 'TS', 26, 0);
  oDataElements.Add('Set ID - RGS', 1203, 'SI', 4, 0);
  oDataElements.Add('Resource Group ID', 1204, 'CE', 200, 0);
  oDataElements.Add('Role Action Reason', 1205, 'CE', 80, 0);
  oDataElements.Add('Role Instance ID', 1206, 'EI', 60, 0);
  oDataElements.Add('Pathway ID', 1207, 'CE', 80, 0);
  oDataElements.Add('Pathway Instance ID', 1208, 'EI', 60, 0);
  oDataElements.Add('Pathway Established Date/Time', 1209, 'TS', 26, 0);
  oDataElements.Add('Pathway Life Cycle Status', 1210, 'CE', 80, 0);
  oDataElements.Add('Change Pathway Life Cycle Status Date/Time', 1211, 'TS', 26, 0);
  oDataElements.Add('Variance Instance ID', 1212, 'EI', 60, 0);
  oDataElements.Add('Documented Date/Time', 1213, 'TS', 26, 0);
  oDataElements.Add('Stated Variance Date/Time', 1214, 'TS', 26, 0);
  oDataElements.Add('Variance Originator', 1215, 'XCN', 80, 0);
  oDataElements.Add('Variance Classification', 1216, 'CE', 60, 0);
  oDataElements.Add('Variance Description', 1217, 'ST', 512, 0);
  oDataElements.Add('Requested Give Rate Amount', 1218, 'ST', 6, 0);
  oDataElements.Add('Requested Give Rate Units', 1219, 'CE', 60, 0);
  oDataElements.Add('Dispense Package Size', 1220, 'NM', 20, 0);
  oDataElements.Add('Dispense Package Size Unit', 1221, 'CE', 60, 0);
  oDataElements.Add('Dispense Package Method', 1222, 'ID', 2, 321);
  oDataElements.Add('Completion Status', 1223, 'ID', 2, 322);
  oDataElements.Add('Action Code-RXA', 1224, 'ID', 2, 323);
  oDataElements.Add('System Entry Date/Time', 1225, 'TS', 26, 0);
  oDataElements.Add('Visit Indicator', 1226, 'IS', 1, 326);
  oDataElements.Add('Coverage Type', 1227, 'IS', 3, 309);
  oDataElements.Add('Referral Reason', 1228, 'CE_0336', 200, 336);
  oDataElements.Add('Copy  Auto Ins', 1229, 'ID', 1, 136);
  oDataElements.Add('Insured'#146's ID Number', 1230, 'CX', 12, 0);
  oDataElements.Add('Guarantor Financial Class', 1231, 'FC', 50, 64);
  oDataElements.Add('Auto Ins. Expires', 1232, 'DT', 8, 0);
  oDataElements.Add('Report Type', 1233, 'ST', 60, 0);
  oDataElements.Add('Date Next DMV Review', 1234, 'DT', 8, 0);
  oDataElements.Add('Report Date', 1235, 'TS', 26, 0);
  oDataElements.Add('Report Interval Start Date', 1236, 'TS', 26, 0);
  oDataElements.Add('Report Interval End Date', 1237, 'TS', 26, 0);
  oDataElements.Add('Quantity Manufactured', 1238, 'CQ', 12, 0);
  oDataElements.Add('Quantity Distributed', 1239, 'CQ', 12, 0);
  oDataElements.Add('Quantity Distributed Method', 1240, 'ID', 1, 329);
  oDataElements.Add('Quantity Distributed Comment', 1241, 'FT', 600, 0);
  oDataElements.Add('Quantity in Use', 1242, 'CQ', 12, 0);
  oDataElements.Add('Quantity in Use Method', 1243, 'ID', 1, 329);
  oDataElements.Add('Quantity in Use Comment', 1244, 'FT', 600, 0);
  oDataElements.Add('Number of Product Experience Reports Filed by Facility', 1245, 'NM', 2, 0);
  oDataElements.Add('Number of Product Experience Reports Filed by Distributor', 1246, 'NM', 2, 0);
  oDataElements.Add('Manufacturer/Distributor', 1247, 'XON', 80, 0);
  oDataElements.Add('Country', 1248, 'CE', 60, 0);
  oDataElements.Add('Brand Name', 1249, 'ST', 60, 0);
  oDataElements.Add('Device Family Name', 1250, 'ST', 60, 0);
  oDataElements.Add('Generic Name', 1251, 'CE', 60, 0);
  oDataElements.Add('Model Identifier', 1252, 'ST', 60, 0);
  oDataElements.Add('Catalogue Identifier', 1253, 'ST', 60, 0);
  oDataElements.Add('Other Identifier', 1254, 'ST', 60, 0);
  oDataElements.Add('Product Code', 1255, 'CE', 60, 0);
  oDataElements.Add('Marketing Basis', 1256, 'ID', 4, 330);
  oDataElements.Add('Marketing Approval ID', 1257, 'ST', 60, 0);
  oDataElements.Add('Labeled Shelf Life', 1258, 'CQ', 12, 0);
  oDataElements.Add('Expected Shelf Life', 1259, 'CQ', 12, 0);
  oDataElements.Add('Date First Marketed', 1260, 'TS', 26, 0);
  oDataElements.Add('Date Last Marketed', 1261, 'TS', 26, 0);
  oDataElements.Add('Facility ID-FAC', 1262, 'EI', 20, 0);
  oDataElements.Add('Facility Type', 1263, 'ID', 1, 331);
  oDataElements.Add('Facility Address', 1264, 'XAD', 200, 0);
  oDataElements.Add('Facility Telecommunication', 1265, 'XTN', 44, 0);
  oDataElements.Add('Contact Person', 1266, 'XCN', 60, 0);
  oDataElements.Add('Contact Title', 1267, 'ST', 60, 0);
  oDataElements.Add('Contact Telecommunication', 1269, 'XTN', 44, 0);
  oDataElements.Add('Signature Authority', 1270, 'XCN', 60, 0);
  oDataElements.Add('Signature Authority Title', 1271, 'ST', 60, 0);
  oDataElements.Add('Signature Authority Address', 1272, 'XAD', 200, 0);
  oDataElements.Add('Signature Authority Telecommunication', 1273, 'XTN', 44, 0);
  oDataElements.Add('Other Healthcare Provider', 1274, 'XCN', 60, 10);
  oDataElements.Add('Additional Insured on  Auto', 1275, 'ID', 1, 136);
  oDataElements.Add('Employment Status', 1276, 'IS', 2, 66);
  oDataElements.Add('Location Relationship ID', 1277, 'CE_0325', 80, 325);
  oDataElements.Add('Event Occurred', 1278, 'TS', 26, 0);
  oDataElements.Add('Prior Visit Number', 1279, 'CX', 20, 0);
  oDataElements.Add('Prior Alternate Visit ID', 1280, 'CX', 20, 0);
  oDataElements.Add('Prior Patient Name', 1281, 'XPN', 48, 0);
  oDataElements.Add('Set ID - DB1', 1283, 'SI', 4, 0);
  oDataElements.Add('Disabled Person Code', 1284, 'IS', 2, 334);
  oDataElements.Add('Disabled Person Identifier', 1285, 'CX', 32, 0);
  oDataElements.Add('Disabled Indicator', 1286, 'ID', 1, 136);
  oDataElements.Add('Disability Start Date', 1287, 'DT', 8, 0);
  oDataElements.Add('Disability End Date', 1288, 'DT', 8, 0);
  oDataElements.Add('Disability Return to Work Date', 1289, 'DT', 8, 0);
  oDataElements.Add('Disability Unable to Work Date', 1290, 'DT', 8, 0);
  oDataElements.Add('Guarantor Race', 1291, 'CE_0005', 80, 5);
  oDataElements.Add('Patient Location Relationship Value', 1292, 'PL', 80, 0);
  oDataElements.Add('Location Characteristic Value', 1294, 'CE_0136+0262+0263', 80, 0);
  oDataElements.Add('Location Characteristic ID', 1295, 'CE_0324', 80, 324);
  oDataElements.Add('Date Entered Practice', 1296, 'DT', 8, 0);
  oDataElements.Add('Report Form Identifier', 1297, 'ST', 60, 0);
  oDataElements.Add('Date Last DMV Review', 1298, 'DT', 8, 0);
  oDataElements.Add('Guarantor Employer'#146's Organization Name', 1299, 'XON', 130, 0);
  oDataElements.Add('External Referral Identifier', 1300, 'EI', 30, 0);
  oDataElements.Add('Organizational Location Relationship Value', 1301, 'XON', 80, 0);
  oDataElements.Add('Driver'#146's License Number - Staff', 1302, 'DLN', 25, 0);
  oDataElements.Add('Dispense-To Location', 1303, 'LA2', 200, 0);
  oDataElements.Add('Primary Key Value - LCH', 1305, 'PL', 200, 0);
  oDataElements.Add('Primary Key Value - CDM', 1306, 'CE_0132', 200, 132);
  oDataElements.Add('Primary Key Value - LOC', 1307, 'PL', 200, 0);
  oDataElements.Add('Primary Key Value '#150' MFA', 1308, 'CE', 60, 0);
  oDataElements.Add('Advanced Beneficiary Notice Code', 1310, 'CE_0339', 40, 339);
  oDataElements.Add('Ordering Facility Name', 1311, 'XON', 60, 0);
  oDataElements.Add('Ordering Facility Address', 1312, 'XAD', 106, 0);
  oDataElements.Add('Ordering Facility Phone Number', 1313, 'XTN', 48, 0);
  oDataElements.Add('Ordering Provider Address', 1314, 'XAD', 106, 0);
  oDataElements.Add('Routing Instruction', 1315, 'CE', 60, 0);
  oDataElements.Add('Procedure Code Modifier', 1316, 'CE_0340', 80, 340);
  oDataElements.Add('Alternate Character Set Handling Scheme', 1317, 'ID', 20, 356);
  oDataElements.Add('Comment Type', 1318, 'CE_0364', 60, 364);
  oDataElements.Add('Primary Key Value Type', 1319, 'ID', 3, 355);
  oDataElements.Add('Primary Key Value Type - MFA', 1320, 'ID', 3, 355);
End;

procedure Definitions231LoadDataElements(oDataElements : THL7V2ModelDataElements);
Begin
  LoadDataElements1(oDataElements);
  LoadDataElements2(oDataElements);
  LoadDataElements3(oDataElements);
End;

procedure Definitions231LoadSegments(oSegments : THL7V2ModelSegments);
Var
  oSegment : THL7V2ModelSegment;
Begin
  oSegments.Add('<', 'begin choice');
  oSegments.Add('>', 'end choice');
  oSegment := oSegments.Add('ACC', 'ACC - accident segment');
    oSegment.Fields.Add(527, False, 0, False, 1);
    oSegment.Fields.Add(528, False, 0, False, 2);
    oSegment.Fields.Add(529, False, 0, False, 3);
    oSegment.Fields.Add(812, False, 0, False, 4);
    oSegment.Fields.Add(813, False, 0, False, 5);
    oSegment.Fields.Add(814, False, 0, False, 6);
  oSegment := oSegments.Add('ADD', 'ADD - addendum segment');
    oSegment.Fields.Add(66, False, 0, False, 1);
  oSegment := oSegments.Add('AIG', 'AIG - appointment information - general resource segment');
    oSegment.Fields.Add(896, False, 0, True, 1);
    oSegment.Fields.Add(763, False, 0, False, 2);
    oSegment.Fields.Add(897, False, 0, False, 3);
    oSegment.Fields.Add(898, False, 0, True, 4);
    oSegment.Fields.Add(899, True, 0, False, 5);
    oSegment.Fields.Add(900, False, 0, False, 6);
    oSegment.Fields.Add(901, False, 0, False, 7);
    oSegment.Fields.Add(1202, False, 0, False, 8);
    oSegment.Fields.Add(891, False, 0, False, 9);
    oSegment.Fields.Add(892, False, 0, False, 10);
    oSegment.Fields.Add(893, False, 0, False, 11);
    oSegment.Fields.Add(894, False, 0, False, 12);
    oSegment.Fields.Add(895, False, 0, False, 13);
    oSegment.Fields.Add(889, False, 0, False, 14);
  oSegment := oSegments.Add('AIL', 'AIL - appointment information - location resource segment');
    oSegment.Fields.Add(902, False, 0, True, 1);
    oSegment.Fields.Add(763, False, 0, False, 2);
    oSegment.Fields.Add(903, False, 0, False, 3);
    oSegment.Fields.Add(904, False, 0, True, 4);
    oSegment.Fields.Add(905, False, 0, False, 5);
    oSegment.Fields.Add(1202, False, 0, False, 6);
    oSegment.Fields.Add(891, False, 0, False, 7);
    oSegment.Fields.Add(892, False, 0, False, 8);
    oSegment.Fields.Add(893, False, 0, False, 9);
    oSegment.Fields.Add(894, False, 0, False, 10);
    oSegment.Fields.Add(895, False, 0, False, 11);
    oSegment.Fields.Add(889, False, 0, False, 12);
  oSegment := oSegments.Add('AIP', 'AIP - appointment information - personnel resource segment');
    oSegment.Fields.Add(906, False, 0, True, 1);
    oSegment.Fields.Add(763, False, 0, False, 2);
    oSegment.Fields.Add(913, True, 0, False, 3);
    oSegment.Fields.Add(907, False, 0, True, 4);
    oSegment.Fields.Add(899, False, 0, False, 5);
    oSegment.Fields.Add(1202, False, 0, False, 6);
    oSegment.Fields.Add(891, False, 0, False, 7);
    oSegment.Fields.Add(892, False, 0, False, 8);
    oSegment.Fields.Add(893, False, 0, False, 9);
    oSegment.Fields.Add(894, False, 0, False, 10);
    oSegment.Fields.Add(895, False, 0, False, 11);
    oSegment.Fields.Add(889, False, 0, False, 12);
  oSegment := oSegments.Add('AIS', 'AIS - appointment information - service segment');
    oSegment.Fields.Add(890, False, 0, True, 1);
    oSegment.Fields.Add(763, False, 0, False, 2);
    oSegment.Fields.Add(238, False, 0, True, 3);
    oSegment.Fields.Add(1202, False, 0, False, 4);
    oSegment.Fields.Add(891, False, 0, False, 5);
    oSegment.Fields.Add(892, False, 0, False, 6);
    oSegment.Fields.Add(893, False, 0, False, 7);
    oSegment.Fields.Add(894, False, 0, False, 8);
    oSegment.Fields.Add(895, False, 0, False, 9);
    oSegment.Fields.Add(889, False, 0, False, 10);
  oSegment := oSegments.Add('AL1', 'AL1 - patient allergy information segment');
    oSegment.Fields.Add(203, False, 0, True, 1);
    oSegment.Fields.Add(204, False, 0, False, 2);
    oSegment.Fields.Add(205, False, 0, True, 3);
    oSegment.Fields.Add(206, False, 0, False, 4);
    oSegment.Fields.Add(207, True, 0, False, 5);
    oSegment.Fields.Add(208, False, 0, False, 6);
  oSegment := oSegments.Add('APR', 'APR - appointment preferences segment');
    oSegment.Fields.Add(908, True, 0, False, 1);
    oSegment.Fields.Add(909, True, 0, False, 2);
    oSegment.Fields.Add(910, True, 0, False, 3);
    oSegment.Fields.Add(911, False, 0, False, 4);
    oSegment.Fields.Add(912, True, 0, False, 5);
  oSegment := oSegments.Add('ARQ', 'ARQ - appointment request segment');
    oSegment.Fields.Add(860, False, 0, True, 1);
    oSegment.Fields.Add(861, False, 0, False, 2);
    oSegment.Fields.Add(862, False, 0, False, 3);
    oSegment.Fields.Add(218, False, 0, False, 4);
    oSegment.Fields.Add(864, False, 0, False, 5);
    oSegment.Fields.Add(865, False, 0, False, 6);
    oSegment.Fields.Add(866, False, 0, False, 7);
    oSegment.Fields.Add(867, False, 0, False, 8);
    oSegment.Fields.Add(868, False, 0, False, 9);
    oSegment.Fields.Add(869, False, 0, False, 10);
    oSegment.Fields.Add(870, True, 0, False, 11);
    oSegment.Fields.Add(871, False, 0, False, 12);
    oSegment.Fields.Add(872, False, 0, False, 13);
    oSegment.Fields.Add(873, False, 0, False, 14);
    oSegment.Fields.Add(874, True, 0, True, 15);
    oSegment.Fields.Add(875, True, 0, False, 16);
    oSegment.Fields.Add(876, True, 0, False, 17);
    oSegment.Fields.Add(877, False, 0, False, 18);
    oSegment.Fields.Add(878, True, 0, True, 19);
    oSegment.Fields.Add(879, True, 0, False, 20);
    oSegment.Fields.Add(880, False, 0, False, 21);
    oSegment.Fields.Add(881, False, 0, False, 22);
    oSegment.Fields.Add(882, False, 0, False, 23);
  oSegment := oSegments.Add('AUT', 'Authorization Information');
    oSegment.Fields.Add(1146, False, 0, False, 1);
    oSegment.Fields.Add(1147, False, 0, True, 2);
    oSegment.Fields.Add(1148, False, 0, False, 3);
    oSegment.Fields.Add(1149, False, 0, False, 4);
    oSegment.Fields.Add(1150, False, 0, False, 5);
    oSegment.Fields.Add(1151, False, 0, False, 6);
    oSegment.Fields.Add(1152, False, 0, False, 7);
    oSegment.Fields.Add(1153, False, 0, False, 8);
    oSegment.Fields.Add(1154, False, 0, False, 9);
    oSegment.Fields.Add(1145, False, 0, False, 10);
  oSegment := oSegments.Add('BHS', 'BHS - batch header segment');
    oSegment.Fields.Add(81, False, 0, True, 1);
    oSegment.Fields.Add(82, False, 0, True, 2);
    oSegment.Fields.Add(83, False, 0, False, 3);
    oSegment.Fields.Add(84, False, 0, False, 4);
    oSegment.Fields.Add(85, False, 0, False, 5);
    oSegment.Fields.Add(86, False, 0, False, 6);
    oSegment.Fields.Add(87, False, 0, False, 7);
    oSegment.Fields.Add(88, False, 0, False, 8);
    oSegment.Fields.Add(89, False, 0, False, 9);
    oSegment.Fields.Add(90, False, 0, False, 10);
    oSegment.Fields.Add(91, False, 0, False, 11);
    oSegment.Fields.Add(92, False, 0, False, 12);
  oSegment := oSegments.Add('BLG', 'BLG - billing segment');
    oSegment.Fields.Add(234, False, 0, False, 1);
    oSegment.Fields.Add(235, False, 0, False, 2);
    oSegment.Fields.Add(236, False, 0, False, 3);
  oSegment := oSegments.Add('BTS', 'BTS - batch trailer segment');
    oSegment.Fields.Add(93, False, 0, False, 1);
    oSegment.Fields.Add(90, False, 0, False, 2);
    oSegment.Fields.Add(95, True, 0, False, 3);
  oSegment := oSegments.Add('CDM', 'CDM -  charge description master segment');
    oSegment.Fields.Add(1306, False, 0, True, 1);
    oSegment.Fields.Add(983, True, 0, False, 2);
    oSegment.Fields.Add(984, False, 0, True, 3);
    oSegment.Fields.Add(985, False, 0, False, 4);
    oSegment.Fields.Add(986, False, 0, False, 5);
    oSegment.Fields.Add(987, True, 0, False, 6);
    oSegment.Fields.Add(393, True, 0, False, 7);
    oSegment.Fields.Add(675, False, 0, False, 8);
    oSegment.Fields.Add(990, True, 0, False, 9);
    oSegment.Fields.Add(991, False, 0, False, 10);
    oSegment.Fields.Add(992, True, 0, False, 11);
    oSegment.Fields.Add(993, True, 0, False, 12);
    oSegment.Fields.Add(994, False, 0, False, 13);
  oSegment := oSegments.Add('CM0', 'CM0 - clinical study master segment');
    oSegment.Fields.Add(1010, False, 0, False, 1);
    oSegment.Fields.Add(1011, False, 0, True, 2);
    oSegment.Fields.Add(1036, True, 3, False, 3);
    oSegment.Fields.Add(1013, False, 0, True, 4);
    oSegment.Fields.Add(1014, True, 0, False, 5);
    oSegment.Fields.Add(1015, False, 0, False, 6);
    oSegment.Fields.Add(1016, False, 0, False, 7);
    oSegment.Fields.Add(1017, False, 0, False, 8);
    oSegment.Fields.Add(1018, True, 0, False, 9);
    oSegment.Fields.Add(1019, False, 0, False, 10);
    oSegment.Fields.Add(1020, True, 0, False, 11);
  oSegment := oSegments.Add('CM1', 'CM1 - clinical study phase master segment');
    oSegment.Fields.Add(1021, False, 0, True, 1);
    oSegment.Fields.Add(1022, False, 0, True, 2);
    oSegment.Fields.Add(1023, False, 0, True, 3);
  oSegment := oSegments.Add('CM2', 'CM2 - clinical study schedule master segment');
    oSegment.Fields.Add(1024, False, 0, False, 1);
    oSegment.Fields.Add(1025, False, 0, True, 2);
    oSegment.Fields.Add(1026, False, 0, False, 3);
    oSegment.Fields.Add(1027, True, 200, True, 4);
  oSegment := oSegments.Add('CSP', 'CSP - clinical study phase segment');
    oSegment.Fields.Add(1022, False, 0, True, 1);
    oSegment.Fields.Add(1052, False, 0, True, 2);
    oSegment.Fields.Add(1053, False, 0, False, 3);
    oSegment.Fields.Add(1054, False, 0, False, 4);
  oSegment := oSegments.Add('CSR', 'CSR - clinical study registration segment');
    oSegment.Fields.Add(1011, False, 0, True, 1);
    oSegment.Fields.Add(1036, False, 0, False, 2);
    oSegment.Fields.Add(1037, False, 0, False, 3);
    oSegment.Fields.Add(1038, False, 0, True, 4);
    oSegment.Fields.Add(1039, False, 0, False, 5);
    oSegment.Fields.Add(1040, False, 0, True, 6);
    oSegment.Fields.Add(1041, True, 0, False, 7);
    oSegment.Fields.Add(1042, True, 0, True, 8);
    oSegment.Fields.Add(1043, False, 0, False, 9);
    oSegment.Fields.Add(1044, False, 0, False, 10);
    oSegment.Fields.Add(1045, True, 3, False, 11);
    oSegment.Fields.Add(1046, True, 3, False, 12);
    oSegment.Fields.Add(1047, True, 3, False, 13);
    oSegment.Fields.Add(1048, False, 0, False, 14);
    oSegment.Fields.Add(1049, False, 0, False, 15);
    oSegment.Fields.Add(1050, False, 0, False, 16);
  oSegment := oSegments.Add('CSS', 'CSS - clinical study data schedule segment');
    oSegment.Fields.Add(1055, False, 0, True, 1);
    oSegment.Fields.Add(1056, False, 0, False, 2);
    oSegment.Fields.Add(1057, True, 3, False, 3);
  oSegment := oSegments.Add('CTD', 'Contact Data');
    oSegment.Fields.Add(196, True, 0, False, 1);
    oSegment.Fields.Add(1165, True, 0, False, 2);
    oSegment.Fields.Add(1166, True, 0, False, 3);
    oSegment.Fields.Add(1167, False, 0, False, 4);
    oSegment.Fields.Add(1168, True, 0, False, 5);
    oSegment.Fields.Add(684, False, 0, False, 6);
    oSegment.Fields.Add(1171, True, 0, False, 7);
  oSegment := oSegments.Add('CTI', 'CTI - clinical trial identification segment');
    oSegment.Fields.Add(1011, False, 0, True, 1);
    oSegment.Fields.Add(1022, False, 0, False, 2);
    oSegment.Fields.Add(1055, False, 0, False, 3);
  oSegment := oSegments.Add('DB1', 'DB1 - Disability segment');
    oSegment.Fields.Add(1283, False, 0, True, 1);
    oSegment.Fields.Add(1284, False, 0, False, 2);
    oSegment.Fields.Add(1285, True, 0, False, 3);
    oSegment.Fields.Add(1286, False, 0, False, 4);
    oSegment.Fields.Add(1287, False, 0, False, 5);
    oSegment.Fields.Add(1288, False, 0, False, 6);
    oSegment.Fields.Add(1289, False, 0, False, 7);
    oSegment.Fields.Add(1290, False, 0, False, 8);
  oSegment := oSegments.Add('DG1', 'DG1 - diagnosis segment');
    oSegment.Fields.Add(375, False, 0, True, 1);
    oSegment.Fields.Add(376, False, 0, False, 2);
    oSegment.Fields.Add(377, False, 0, False, 3);
    oSegment.Fields.Add(378, False, 0, False, 4);
    oSegment.Fields.Add(379, False, 0, False, 5);
    oSegment.Fields.Add(380, False, 0, True, 6);
    oSegment.Fields.Add(381, False, 0, False, 7);
    oSegment.Fields.Add(382, False, 0, False, 8);
    oSegment.Fields.Add(383, False, 0, False, 9);
    oSegment.Fields.Add(384, False, 0, False, 10);
    oSegment.Fields.Add(385, False, 0, False, 11);
    oSegment.Fields.Add(386, False, 0, False, 12);
    oSegment.Fields.Add(387, False, 0, False, 13);
    oSegment.Fields.Add(388, False, 0, False, 14);
    oSegment.Fields.Add(389, False, 0, False, 15);
    oSegment.Fields.Add(390, True, 0, False, 16);
    oSegment.Fields.Add(766, False, 0, False, 17);
    oSegment.Fields.Add(767, False, 0, False, 18);
    oSegment.Fields.Add(768, False, 0, False, 19);
  oSegment := oSegments.Add('DRG', 'DRG - diagnosis related group segment');
    oSegment.Fields.Add(382, False, 0, False, 1);
    oSegment.Fields.Add(769, False, 0, False, 2);
    oSegment.Fields.Add(383, False, 0, False, 3);
    oSegment.Fields.Add(384, False, 0, False, 4);
    oSegment.Fields.Add(385, False, 0, False, 5);
    oSegment.Fields.Add(386, False, 0, False, 6);
    oSegment.Fields.Add(387, False, 0, False, 7);
    oSegment.Fields.Add(770, False, 0, False, 8);
    oSegment.Fields.Add(771, False, 0, False, 9);
    oSegment.Fields.Add(767, False, 0, False, 10);
  oSegment := oSegments.Add('DSC', 'DSC - Continuation pointer segment');
    oSegment.Fields.Add(14, False, 0, False, 1);
  oSegment := oSegments.Add('DSP', 'DSP - display data segment');
    oSegment.Fields.Add(61, False, 0, False, 1);
    oSegment.Fields.Add(62, False, 0, False, 2);
    oSegment.Fields.Add(63, False, 0, True, 3);
    oSegment.Fields.Add(64, False, 0, False, 4);
    oSegment.Fields.Add(65, False, 0, False, 5);
  oSegment := oSegments.Add('EQL', 'EQL - embedded query language segment');
    oSegment.Fields.Add(696, False, 0, False, 1);
    oSegment.Fields.Add(697, False, 0, True, 2);
    oSegment.Fields.Add(709, False, 0, True, 3);
    oSegment.Fields.Add(710, False, 0, True, 4);
  oSegment := oSegments.Add('ERQ', 'ERQ - event replay query segment');
    oSegment.Fields.Add(696, False, 0, False, 1);
    oSegment.Fields.Add(706, False, 0, True, 2);
    oSegment.Fields.Add(705, True, 0, False, 3);
  oSegment := oSegments.Add('ERR', 'ERR - error segment');
    oSegment.Fields.Add(24, True, 0, True, 1);
  oSegment := oSegments.Add('EVN', 'EVN - event type segment');
    oSegment.Fields.Add(99, False, 0, False, 1);
    oSegment.Fields.Add(100, False, 0, True, 2);
    oSegment.Fields.Add(101, False, 0, False, 3);
    oSegment.Fields.Add(102, False, 0, False, 4);
    oSegment.Fields.Add(103, True, 0, False, 5);
    oSegment.Fields.Add(1278, False, 0, False, 6);
  oSegment := oSegments.Add('FAC', 'FAC - facility segment');
    oSegment.Fields.Add(1262, False, 0, True, 1);
    oSegment.Fields.Add(1263, False, 0, False, 2);
    oSegment.Fields.Add(1264, True, 0, True, 3);
    oSegment.Fields.Add(1265, False, 0, True, 4);
    oSegment.Fields.Add(1266, True, 0, False, 5);
    oSegment.Fields.Add(1267, True, 0, False, 6);
    oSegment.Fields.Add(1166, True, 0, False, 7);
    oSegment.Fields.Add(1269, True, 0, False, 8);
    oSegment.Fields.Add(1270, True, 0, True, 9);
    oSegment.Fields.Add(1271, False, 0, False, 10);
    oSegment.Fields.Add(1272, True, 0, False, 11);
    oSegment.Fields.Add(1273, False, 0, False, 12);
  oSegment := oSegments.Add('FHS', 'FHS - file header segment');
    oSegment.Fields.Add(67, False, 0, True, 1);
    oSegment.Fields.Add(68, False, 0, True, 2);
    oSegment.Fields.Add(69, False, 0, False, 3);
    oSegment.Fields.Add(70, False, 0, False, 4);
    oSegment.Fields.Add(71, False, 0, False, 5);
    oSegment.Fields.Add(72, False, 0, False, 6);
    oSegment.Fields.Add(73, False, 0, False, 7);
    oSegment.Fields.Add(74, False, 0, False, 8);
    oSegment.Fields.Add(75, False, 0, False, 9);
    oSegment.Fields.Add(76, False, 0, False, 10);
    oSegment.Fields.Add(77, False, 0, False, 11);
    oSegment.Fields.Add(78, False, 0, False, 12);
  oSegment := oSegments.Add('FT1', 'FT1 - financial transaction segment');
    oSegment.Fields.Add(355, False, 0, False, 1);
    oSegment.Fields.Add(356, False, 0, False, 2);
    oSegment.Fields.Add(357, False, 0, False, 3);
    oSegment.Fields.Add(358, False, 0, True, 4);
    oSegment.Fields.Add(359, False, 0, False, 5);
    oSegment.Fields.Add(360, False, 0, True, 6);
    oSegment.Fields.Add(361, False, 0, True, 7);
    oSegment.Fields.Add(362, False, 0, False, 8);
    oSegment.Fields.Add(363, False, 0, False, 9);
    oSegment.Fields.Add(364, False, 0, False, 10);
    oSegment.Fields.Add(365, False, 0, False, 11);
    oSegment.Fields.Add(366, False, 0, False, 12);
    oSegment.Fields.Add(367, False, 0, False, 13);
    oSegment.Fields.Add(368, False, 0, False, 14);
    oSegment.Fields.Add(369, False, 0, False, 15);
    oSegment.Fields.Add(133, False, 0, False, 16);
    oSegment.Fields.Add(370, False, 0, False, 17);
    oSegment.Fields.Add(148, False, 0, False, 18);
    oSegment.Fields.Add(371, True, 0, False, 19);
    oSegment.Fields.Add(372, True, 0, False, 20);
    oSegment.Fields.Add(373, True, 0, False, 21);
    oSegment.Fields.Add(374, False, 0, False, 22);
    oSegment.Fields.Add(217, False, 0, False, 23);
    oSegment.Fields.Add(765, True, 0, False, 24);
    oSegment.Fields.Add(393, False, 0, False, 25);
    oSegment.Fields.Add(1316, True, 0, False, 26);
  oSegment := oSegments.Add('FTS', 'FTS - file trailer segment');
    oSegment.Fields.Add(79, False, 0, False, 1);
    oSegment.Fields.Add(80, False, 0, False, 2);
  oSegment := oSegments.Add('GOL', 'Goal Detail');
    oSegment.Fields.Add(816, False, 0, True, 1);
    oSegment.Fields.Add(817, False, 0, True, 2);
    oSegment.Fields.Add(818, False, 0, True, 3);
    oSegment.Fields.Add(819, False, 0, True, 4);
    oSegment.Fields.Add(820, False, 0, False, 5);
    oSegment.Fields.Add(821, False, 0, False, 6);
    oSegment.Fields.Add(822, False, 0, False, 7);
    oSegment.Fields.Add(824, False, 0, False, 8);
    oSegment.Fields.Add(825, False, 0, False, 9);
    oSegment.Fields.Add(826, False, 0, False, 10);
    oSegment.Fields.Add(827, False, 0, False, 11);
    oSegment.Fields.Add(828, False, 0, False, 12);
    oSegment.Fields.Add(829, False, 0, False, 13);
    oSegment.Fields.Add(830, False, 0, False, 14);
    oSegment.Fields.Add(831, False, 0, False, 15);
    oSegment.Fields.Add(832, False, 0, False, 16);
    oSegment.Fields.Add(833, True, 0, False, 17);
    oSegment.Fields.Add(834, False, 0, False, 18);
    oSegment.Fields.Add(835, False, 0, False, 19);
    oSegment.Fields.Add(836, True, 0, False, 20);
    oSegment.Fields.Add(837, True, 0, False, 21);
  oSegment := oSegments.Add('GT1', 'GT1 - guarantor segment');
    oSegment.Fields.Add(405, False, 0, True, 1);
    oSegment.Fields.Add(406, True, 0, False, 2);
    oSegment.Fields.Add(407, True, 0, True, 3);
    oSegment.Fields.Add(408, True, 0, False, 4);
    oSegment.Fields.Add(409, True, 0, False, 5);
    oSegment.Fields.Add(410, True, 0, False, 6);
    oSegment.Fields.Add(411, True, 0, False, 7);
    oSegment.Fields.Add(412, False, 0, False, 8);
    oSegment.Fields.Add(413, False, 0, False, 9);
    oSegment.Fields.Add(414, False, 0, False, 10);
    oSegment.Fields.Add(415, False, 0, False, 11);
    oSegment.Fields.Add(416, False, 0, False, 12);
    oSegment.Fields.Add(417, False, 0, False, 13);
    oSegment.Fields.Add(418, False, 0, False, 14);
    oSegment.Fields.Add(419, False, 0, False, 15);
    oSegment.Fields.Add(420, True, 0, False, 16);
    oSegment.Fields.Add(421, True, 0, False, 17);
    oSegment.Fields.Add(422, True, 0, False, 18);
    oSegment.Fields.Add(423, True, 0, False, 19);
    oSegment.Fields.Add(424, False, 0, False, 20);
    oSegment.Fields.Add(425, True, 0, False, 21);
    oSegment.Fields.Add(773, False, 0, False, 22);
    oSegment.Fields.Add(774, False, 0, False, 23);
    oSegment.Fields.Add(775, False, 0, False, 24);
    oSegment.Fields.Add(776, False, 0, False, 25);
    oSegment.Fields.Add(777, False, 0, False, 26);
    oSegment.Fields.Add(778, False, 0, False, 27);
    oSegment.Fields.Add(779, False, 0, False, 28);
    oSegment.Fields.Add(780, True, 0, False, 29);
    oSegment.Fields.Add(781, False, 0, False, 30);
    oSegment.Fields.Add(782, False, 0, False, 31);
    oSegment.Fields.Add(783, False, 0, False, 32);
    oSegment.Fields.Add(755, False, 0, False, 33);
    oSegment.Fields.Add(145, True, 0, False, 34);
    oSegment.Fields.Add(129, True, 0, False, 35);
    oSegment.Fields.Add(118, False, 0, False, 36);
    oSegment.Fields.Add(742, False, 0, False, 37);
    oSegment.Fields.Add(743, False, 0, False, 38);
    oSegment.Fields.Add(744, False, 0, False, 39);
    oSegment.Fields.Add(745, False, 0, False, 40);
    oSegment.Fields.Add(120, False, 0, False, 41);
    oSegment.Fields.Add(109, True, 0, False, 42);
    oSegment.Fields.Add(739, False, 0, False, 43);
    oSegment.Fields.Add(125, True, 0, False, 44);
    oSegment.Fields.Add(748, True, 0, False, 45);
    oSegment.Fields.Add(749, True, 0, False, 46);
    oSegment.Fields.Add(747, False, 0, False, 47);
    oSegment.Fields.Add(784, False, 0, False, 48);
    oSegment.Fields.Add(785, False, 0, False, 49);
    oSegment.Fields.Add(786, False, 0, False, 50);
    oSegment.Fields.Add(1299, True, 0, False, 51);
    oSegment.Fields.Add(753, False, 0, False, 52);
    oSegment.Fields.Add(752, False, 0, False, 53);
    oSegment.Fields.Add(1231, False, 0, False, 54);
    oSegment.Fields.Add(1291, True, 0, False, 55);
  oSegments.Add('Hxx', 'any HL7 segment');
  oSegment := oSegments.Add('IN1', 'IN1 - insurance segment');
    oSegment.Fields.Add(426, False, 0, True, 1);
    oSegment.Fields.Add(368, False, 0, True, 2);
    oSegment.Fields.Add(428, True, 0, True, 3);
    oSegment.Fields.Add(429, True, 0, False, 4);
    oSegment.Fields.Add(430, True, 0, False, 5);
    oSegment.Fields.Add(431, True, 0, False, 6);
    oSegment.Fields.Add(432, True, 0, False, 7);
    oSegment.Fields.Add(433, False, 0, False, 8);
    oSegment.Fields.Add(434, True, 0, False, 9);
    oSegment.Fields.Add(435, True, 0, False, 10);
    oSegment.Fields.Add(436, True, 0, False, 11);
    oSegment.Fields.Add(437, False, 0, False, 12);
    oSegment.Fields.Add(438, False, 0, False, 13);
    oSegment.Fields.Add(439, False, 0, False, 14);
    oSegment.Fields.Add(440, False, 0, False, 15);
    oSegment.Fields.Add(441, True, 0, False, 16);
    oSegment.Fields.Add(442, False, 0, False, 17);
    oSegment.Fields.Add(443, False, 0, False, 18);
    oSegment.Fields.Add(444, True, 0, False, 19);
    oSegment.Fields.Add(445, False, 0, False, 20);
    oSegment.Fields.Add(446, False, 0, False, 21);
    oSegment.Fields.Add(447, False, 0, False, 22);
    oSegment.Fields.Add(448, False, 0, False, 23);
    oSegment.Fields.Add(449, False, 0, False, 24);
    oSegment.Fields.Add(450, False, 0, False, 25);
    oSegment.Fields.Add(451, False, 0, False, 26);
    oSegment.Fields.Add(452, False, 0, False, 27);
    oSegment.Fields.Add(453, False, 0, False, 28);
    oSegment.Fields.Add(454, False, 0, False, 29);
    oSegment.Fields.Add(455, True, 0, False, 30);
    oSegment.Fields.Add(456, False, 0, False, 31);
    oSegment.Fields.Add(457, False, 0, False, 32);
    oSegment.Fields.Add(458, False, 0, False, 33);
    oSegment.Fields.Add(459, False, 0, False, 34);
    oSegment.Fields.Add(460, False, 0, False, 35);
    oSegment.Fields.Add(461, False, 0, False, 36);
    oSegment.Fields.Add(462, False, 0, False, 37);
    oSegment.Fields.Add(463, False, 0, False, 38);
    oSegment.Fields.Add(464, False, 0, False, 39);
    oSegment.Fields.Add(465, False, 0, False, 40);
    oSegment.Fields.Add(466, False, 0, False, 41);
    oSegment.Fields.Add(467, False, 0, False, 42);
    oSegment.Fields.Add(468, False, 0, False, 43);
    oSegment.Fields.Add(469, True, 0, False, 44);
    oSegment.Fields.Add(470, False, 0, False, 45);
    oSegment.Fields.Add(471, False, 0, False, 46);
    oSegment.Fields.Add(1227, False, 0, False, 47);
    oSegment.Fields.Add(753, False, 0, False, 48);
    oSegment.Fields.Add(1230, True, 0, False, 49);
  oSegment := oSegments.Add('IN2', 'IN2 - insurance additional information segment');
    oSegment.Fields.Add(472, True, 0, False, 1);
    oSegment.Fields.Add(473, False, 0, False, 2);
    oSegment.Fields.Add(474, True, 0, False, 3);
    oSegment.Fields.Add(475, False, 0, False, 4);
    oSegment.Fields.Add(476, True, 0, False, 5);
    oSegment.Fields.Add(477, False, 0, False, 6);
    oSegment.Fields.Add(478, True, 0, False, 7);
    oSegment.Fields.Add(479, False, 0, False, 8);
    oSegment.Fields.Add(480, True, 0, False, 9);
    oSegment.Fields.Add(481, False, 0, False, 10);
    oSegment.Fields.Add(482, False, 0, False, 11);
    oSegment.Fields.Add(483, False, 0, False, 12);
    oSegment.Fields.Add(484, False, 0, False, 13);
    oSegment.Fields.Add(485, False, 0, False, 14);
    oSegment.Fields.Add(486, False, 0, False, 15);
    oSegment.Fields.Add(487, False, 0, False, 16);
    oSegment.Fields.Add(488, False, 0, False, 17);
    oSegment.Fields.Add(489, False, 0, False, 18);
    oSegment.Fields.Add(490, False, 0, False, 19);
    oSegment.Fields.Add(491, False, 0, False, 20);
    oSegment.Fields.Add(492, False, 0, False, 21);
    oSegment.Fields.Add(493, True, 0, False, 22);
    oSegment.Fields.Add(494, False, 0, False, 23);
    oSegment.Fields.Add(495, True, 0, False, 24);
    oSegment.Fields.Add(496, True, 0, False, 25);
    oSegment.Fields.Add(497, True, 0, False, 26);
    oSegment.Fields.Add(498, False, 0, False, 27);
    oSegment.Fields.Add(499, True, 0, False, 28);
    oSegment.Fields.Add(500, True, 0, False, 29);
    oSegment.Fields.Add(501, False, 0, False, 30);
    oSegment.Fields.Add(755, False, 0, False, 31);
    oSegment.Fields.Add(145, True, 0, False, 32);
    oSegment.Fields.Add(129, True, 0, False, 33);
    oSegment.Fields.Add(118, False, 0, False, 34);
    oSegment.Fields.Add(742, False, 0, False, 35);
    oSegment.Fields.Add(743, False, 0, False, 36);
    oSegment.Fields.Add(744, False, 0, False, 37);
    oSegment.Fields.Add(745, False, 0, False, 38);
    oSegment.Fields.Add(120, False, 0, False, 39);
    oSegment.Fields.Add(109, True, 0, False, 40);
    oSegment.Fields.Add(739, False, 0, False, 41);
    oSegment.Fields.Add(125, True, 0, False, 42);
    oSegment.Fields.Add(119, True, 0, False, 43);
    oSegment.Fields.Add(787, False, 0, False, 44);
    oSegment.Fields.Add(783, False, 0, False, 45);
    oSegment.Fields.Add(785, False, 0, False, 46);
    oSegment.Fields.Add(786, False, 0, False, 47);
    oSegment.Fields.Add(752, False, 0, False, 48);
    oSegment.Fields.Add(789, True, 0, False, 49);
    oSegment.Fields.Add(790, True, 0, False, 50);
    oSegment.Fields.Add(791, False, 0, False, 51);
    oSegment.Fields.Add(792, True, 0, False, 52);
    oSegment.Fields.Add(793, True, 0, False, 53);
    oSegment.Fields.Add(794, True, 0, False, 54);
    oSegment.Fields.Add(795, False, 0, False, 55);
    oSegment.Fields.Add(796, True, 0, False, 56);
    oSegment.Fields.Add(797, False, 0, False, 57);
    oSegment.Fields.Add(798, False, 0, False, 58);
    oSegment.Fields.Add(799, False, 0, False, 59);
    oSegment.Fields.Add(800, False, 0, False, 60);
    oSegment.Fields.Add(801, False, 0, False, 61);
    oSegment.Fields.Add(802, False, 0, False, 62);
    oSegment.Fields.Add(803, True, 0, False, 63);
    oSegment.Fields.Add(804, True, 0, False, 64);
    oSegment.Fields.Add(805, False, 0, False, 65);
    oSegment.Fields.Add(806, False, 0, False, 66);
    oSegment.Fields.Add(807, False, 0, False, 67);
    oSegment.Fields.Add(808, False, 0, False, 68);
    oSegment.Fields.Add(809, True, 0, False, 69);
    oSegment.Fields.Add(810, True, 0, False, 70);
    oSegment.Fields.Add(113, True, 0, False, 71);
    oSegment.Fields.Add(811, False, 0, False, 72);
  oSegment := oSegments.Add('IN3', 'IN3 - insurance additional information, certification segment');
    oSegment.Fields.Add(502, False, 0, True, 1);
    oSegment.Fields.Add(503, False, 0, False, 2);
    oSegment.Fields.Add(504, True, 0, False, 3);
    oSegment.Fields.Add(505, False, 0, False, 4);
    oSegment.Fields.Add(506, False, 0, False, 5);
    oSegment.Fields.Add(507, False, 0, False, 6);
    oSegment.Fields.Add(508, False, 0, False, 7);
    oSegment.Fields.Add(509, True, 0, False, 8);
    oSegment.Fields.Add(510, False, 0, False, 9);
    oSegment.Fields.Add(511, False, 0, False, 10);
    oSegment.Fields.Add(512, False, 0, False, 11);
    oSegment.Fields.Add(513, False, 0, False, 12);
    oSegment.Fields.Add(514, False, 0, False, 13);
    oSegment.Fields.Add(515, True, 0, False, 14);
    oSegment.Fields.Add(516, False, 0, False, 15);
    oSegment.Fields.Add(517, True, 0, False, 16);
    oSegment.Fields.Add(518, False, 0, False, 17);
    oSegment.Fields.Add(519, False, 0, False, 18);
    oSegment.Fields.Add(520, True, 0, False, 19);
    oSegment.Fields.Add(521, True, 0, False, 20);
    oSegment.Fields.Add(522, False, 0, False, 21);
    oSegment.Fields.Add(523, False, 0, False, 22);
    oSegment.Fields.Add(524, False, 0, False, 23);
    oSegment.Fields.Add(525, True, 0, False, 24);
    oSegment.Fields.Add(526, True, 0, False, 25);
  oSegment := oSegments.Add('LCC', 'LCC - location charge code segment');
    oSegment.Fields.Add(979, False, 0, True, 1);
    oSegment.Fields.Add(964, False, 0, True, 2);
    oSegment.Fields.Add(980, True, 0, False, 3);
    oSegment.Fields.Add(981, True, 0, True, 4);
  oSegment := oSegments.Add('LCH', 'LCH - location characteristic segment');
    oSegment.Fields.Add(1305, False, 0, True, 1);
    oSegment.Fields.Add(763, False, 0, False, 2);
    oSegment.Fields.Add(764, False, 0, False, 3);
    oSegment.Fields.Add(1295, False, 0, True, 4);
    oSegment.Fields.Add(1294, False, 0, False, 5);
  oSegment := oSegments.Add('LDP', 'LDP - location department segment');
    oSegment.Fields.Add(963, False, 0, True, 1);
    oSegment.Fields.Add(964, False, 0, True, 2);
    oSegment.Fields.Add(965, True, 0, False, 3);
    oSegment.Fields.Add(966, True, 0, False, 4);
    oSegment.Fields.Add(967, True, 0, False, 5);
    oSegment.Fields.Add(675, False, 0, False, 6);
    oSegment.Fields.Add(969, False, 0, False, 7);
    oSegment.Fields.Add(970, False, 0, False, 8);
    oSegment.Fields.Add(971, False, 0, False, 9);
    oSegment.Fields.Add(976, True, 0, False, 10);
    oSegment.Fields.Add(978, False, 0, False, 11);
  oSegment := oSegments.Add('LOC', 'LOC - location identification segment');
    oSegment.Fields.Add(1307, False, 0, True, 1);
    oSegment.Fields.Add(944, False, 0, False, 2);
    oSegment.Fields.Add(945, True, 0, True, 3);
    oSegment.Fields.Add(947, True, 0, False, 4);
    oSegment.Fields.Add(948, True, 0, False, 5);
    oSegment.Fields.Add(949, True, 0, False, 6);
    oSegment.Fields.Add(951, True, 0, False, 7);
    oSegment.Fields.Add(953, True, 0, False, 8);
  oSegment := oSegments.Add('LRL', 'LRL - location relationship segment');
    oSegment.Fields.Add(943, False, 0, True, 1);
    oSegment.Fields.Add(763, False, 0, False, 2);
    oSegment.Fields.Add(764, False, 0, False, 3);
    oSegment.Fields.Add(1277, False, 0, False, 4);
    oSegment.Fields.Add(1301, True, 0, False, 5);
    oSegment.Fields.Add(1292, False, 0, False, 6);
  oSegment := oSegments.Add('MFA', 'MFA - master file acknowledgment segment');
    oSegment.Fields.Add(664, False, 0, True, 1);
    oSegment.Fields.Add(665, False, 0, False, 2);
    oSegment.Fields.Add(668, False, 0, False, 3);
    oSegment.Fields.Add(669, False, 0, True, 4);
    oSegment.Fields.Add(1308, True, 0, True, 5);
    oSegment.Fields.Add(1320, True, 0, True, 6);
  oSegment := oSegments.Add('MFE', 'MFE - master file entry segment');
    oSegment.Fields.Add(664, False, 0, True, 1);
    oSegment.Fields.Add(665, False, 0, False, 2);
    oSegment.Fields.Add(662, False, 0, False, 3);
    oSegment.Fields.Add(667, True, 0, True, 4);
    oSegment.Fields.Add(1319, True, 0, True, 5);
  oSegment := oSegments.Add('MFI', 'MFI - master file identification segment');
    oSegment.Fields.Add(658, False, 0, True, 1);
    oSegment.Fields.Add(659, False, 0, False, 2);
    oSegment.Fields.Add(660, False, 0, True, 3);
    oSegment.Fields.Add(661, False, 0, False, 4);
    oSegment.Fields.Add(662, False, 0, False, 5);
    oSegment.Fields.Add(663, False, 0, True, 6);
  oSegment := oSegments.Add('MRG', 'MRG - merge patient information segment-');
    oSegment.Fields.Add(211, True, 0, True, 1);
    oSegment.Fields.Add(212, True, 0, False, 2);
    oSegment.Fields.Add(213, False, 0, False, 3);
    oSegment.Fields.Add(214, False, 0, False, 4);
    oSegment.Fields.Add(1279, False, 0, False, 5);
    oSegment.Fields.Add(1280, False, 0, False, 6);
    oSegment.Fields.Add(1281, True, 0, False, 7);
  oSegment := oSegments.Add('MSA', 'MSA - message acknowledgment segment');
    oSegment.Fields.Add(18, False, 0, True, 1);
    oSegment.Fields.Add(10, False, 0, True, 2);
    oSegment.Fields.Add(20, False, 0, False, 3);
    oSegment.Fields.Add(21, False, 0, False, 4);
    oSegment.Fields.Add(22, False, 0, False, 5);
    oSegment.Fields.Add(23, False, 0, False, 6);
  oSegment := oSegments.Add('MSH', 'MSH - message header segment');
    oSegment.Fields.Add(1, False, 0, True, 1);
    oSegment.Fields.Add(2, False, 0, True, 2);
    oSegment.Fields.Add(3, False, 0, False, 3);
    oSegment.Fields.Add(4, False, 0, False, 4);
    oSegment.Fields.Add(5, False, 0, False, 5);
    oSegment.Fields.Add(6, False, 0, False, 6);
    oSegment.Fields.Add(7, False, 0, False, 7);
    oSegment.Fields.Add(8, False, 0, False, 8);
    oSegment.Fields.Add(9, False, 0, True, 9);
    oSegment.Fields.Add(10, False, 0, True, 10);
    oSegment.Fields.Add(11, False, 0, True, 11);
    oSegment.Fields.Add(12, False, 0, True, 12);
    oSegment.Fields.Add(13, False, 0, False, 13);
    oSegment.Fields.Add(14, False, 0, False, 14);
    oSegment.Fields.Add(15, False, 0, False, 15);
    oSegment.Fields.Add(16, False, 0, False, 16);
    oSegment.Fields.Add(17, False, 0, False, 17);
    oSegment.Fields.Add(692, True, 0, False, 18);
    oSegment.Fields.Add(693, False, 0, False, 19);
    oSegment.Fields.Add(1317, False, 0, False, 20);
  oSegment := oSegments.Add('NCK', 'System Clock');
    oSegment.Fields.Add(1172, False, 0, False, 1);
  oSegment := oSegments.Add('NK1', 'NK1 - next of kin / associated parties segment-');
    oSegment.Fields.Add(190, False, 0, True, 1);
    oSegment.Fields.Add(191, True, 0, False, 2);
    oSegment.Fields.Add(192, False, 0, False, 3);
    oSegment.Fields.Add(193, True, 0, False, 4);
    oSegment.Fields.Add(194, True, 0, False, 5);
    oSegment.Fields.Add(195, True, 0, False, 6);
    oSegment.Fields.Add(196, False, 0, False, 7);
    oSegment.Fields.Add(197, False, 0, False, 8);
    oSegment.Fields.Add(198, False, 0, False, 9);
    oSegment.Fields.Add(199, False, 0, False, 10);
    oSegment.Fields.Add(200, False, 0, False, 11);
    oSegment.Fields.Add(201, False, 0, False, 12);
    oSegment.Fields.Add(202, True, 0, False, 13);
    oSegment.Fields.Add(119, False, 0, False, 14);
    oSegment.Fields.Add(111, False, 0, False, 15);
    oSegment.Fields.Add(110, False, 0, False, 16);
    oSegment.Fields.Add(755, True, 0, False, 17);
    oSegment.Fields.Add(145, True, 0, False, 18);
    oSegment.Fields.Add(129, True, 0, False, 19);
    oSegment.Fields.Add(118, False, 0, False, 20);
    oSegment.Fields.Add(742, False, 0, False, 21);
    oSegment.Fields.Add(743, False, 0, False, 22);
    oSegment.Fields.Add(744, False, 0, False, 23);
    oSegment.Fields.Add(745, False, 0, False, 24);
    oSegment.Fields.Add(120, False, 0, False, 25);
    oSegment.Fields.Add(109, True, 0, False, 26);
    oSegment.Fields.Add(739, False, 0, False, 27);
    oSegment.Fields.Add(125, True, 0, False, 28);
    oSegment.Fields.Add(747, True, 0, False, 29);
    oSegment.Fields.Add(748, True, 0, False, 30);
    oSegment.Fields.Add(749, True, 0, False, 31);
    oSegment.Fields.Add(750, True, 0, False, 32);
    oSegment.Fields.Add(751, True, 0, False, 33);
    oSegment.Fields.Add(752, False, 0, False, 34);
    oSegment.Fields.Add(113, True, 0, False, 35);
    oSegment.Fields.Add(753, False, 0, False, 36);
    oSegment.Fields.Add(754, False, 0, False, 37);
  oSegment := oSegments.Add('NPU', 'NPU - bed status update segment');
    oSegment.Fields.Add(209, False, 0, True, 1);
    oSegment.Fields.Add(170, False, 0, False, 2);
  oSegment := oSegments.Add('NSC', 'Application status change');
    oSegment.Fields.Add(1188, False, 0, False, 1);
    oSegment.Fields.Add(1189, False, 0, False, 2);
    oSegment.Fields.Add(1190, False, 0, False, 3);
    oSegment.Fields.Add(1191, False, 0, False, 4);
    oSegment.Fields.Add(1192, False, 0, False, 5);
    oSegment.Fields.Add(1193, False, 0, False, 6);
    oSegment.Fields.Add(1194, False, 0, False, 7);
    oSegment.Fields.Add(1195, False, 0, False, 8);
    oSegment.Fields.Add(1196, False, 0, False, 9);
  oSegment := oSegments.Add('NST', 'Application control level statistics');
    oSegment.Fields.Add(1173, False, 0, False, 1);
    oSegment.Fields.Add(1174, False, 0, False, 2);
    oSegment.Fields.Add(1175, False, 0, False, 3);
    oSegment.Fields.Add(1176, False, 0, False, 4);
    oSegment.Fields.Add(1177, False, 0, False, 5);
    oSegment.Fields.Add(1178, False, 0, False, 6);
    oSegment.Fields.Add(1179, False, 0, False, 7);
    oSegment.Fields.Add(1180, False, 0, False, 8);
    oSegment.Fields.Add(1181, False, 0, False, 9);
    oSegment.Fields.Add(1182, False, 0, False, 10);
    oSegment.Fields.Add(1183, False, 0, False, 11);
    oSegment.Fields.Add(1184, False, 0, False, 12);
    oSegment.Fields.Add(1185, False, 0, False, 13);
    oSegment.Fields.Add(1186, False, 0, False, 14);
    oSegment.Fields.Add(1187, False, 0, False, 15);
  oSegment := oSegments.Add('NTE', 'NTE - notes and comments segment');
    oSegment.Fields.Add(96, False, 0, False, 1);
    oSegment.Fields.Add(97, False, 0, False, 2);
    oSegment.Fields.Add(98, True, 0, False, 3);
    oSegment.Fields.Add(1318, False, 0, False, 4);
  oSegment := oSegments.Add('OBR', 'OBR - observation request segment');
    oSegment.Fields.Add(237, False, 0, False, 1);
    oSegment.Fields.Add(216, False, 0, False, 2);
    oSegment.Fields.Add(217, False, 0, False, 3);
    oSegment.Fields.Add(238, False, 0, True, 4);
    oSegment.Fields.Add(239, False, 0, False, 5);
    oSegment.Fields.Add(240, False, 0, False, 6);
    oSegment.Fields.Add(241, False, 0, False, 7);
    oSegment.Fields.Add(242, False, 0, False, 8);
    oSegment.Fields.Add(243, False, 0, False, 9);
    oSegment.Fields.Add(244, True, 0, False, 10);
    oSegment.Fields.Add(245, False, 0, False, 11);
    oSegment.Fields.Add(246, False, 0, False, 12);
    oSegment.Fields.Add(247, False, 0, False, 13);
    oSegment.Fields.Add(248, False, 0, False, 14);
    oSegment.Fields.Add(249, False, 0, False, 15);
    oSegment.Fields.Add(226, True, 0, False, 16);
    oSegment.Fields.Add(250, True, 2, False, 17);
    oSegment.Fields.Add(251, False, 0, False, 18);
    oSegment.Fields.Add(252, False, 0, False, 19);
    oSegment.Fields.Add(253, False, 0, False, 20);
    oSegment.Fields.Add(254, False, 0, False, 21);
    oSegment.Fields.Add(255, False, 0, False, 22);
    oSegment.Fields.Add(256, False, 0, False, 23);
    oSegment.Fields.Add(257, False, 0, False, 24);
    oSegment.Fields.Add(258, False, 0, False, 25);
    oSegment.Fields.Add(259, False, 0, False, 26);
    oSegment.Fields.Add(221, True, 0, False, 27);
    oSegment.Fields.Add(260, True, 5, False, 28);
    oSegment.Fields.Add(261, False, 0, False, 29);
    oSegment.Fields.Add(262, False, 0, False, 30);
    oSegment.Fields.Add(263, True, 0, False, 31);
    oSegment.Fields.Add(264, False, 0, False, 32);
    oSegment.Fields.Add(265, True, 0, False, 33);
    oSegment.Fields.Add(266, True, 0, False, 34);
    oSegment.Fields.Add(267, True, 0, False, 35);
    oSegment.Fields.Add(268, False, 0, False, 36);
    oSegment.Fields.Add(1028, False, 0, False, 37);
    oSegment.Fields.Add(1029, True, 0, False, 38);
    oSegment.Fields.Add(1030, True, 0, False, 39);
    oSegment.Fields.Add(1031, False, 0, False, 40);
    oSegment.Fields.Add(1032, False, 0, False, 41);
    oSegment.Fields.Add(1033, False, 0, False, 42);
    oSegment.Fields.Add(1034, True, 0, False, 43);
    oSegment.Fields.Add(393, False, 0, False, 44);
    oSegment.Fields.Add(1316, True, 0, False, 45);
  oSegment := oSegments.Add('OBX', 'OBX - observation/result segment');
    oSegment.Fields.Add(569, False, 0, False, 1);
    oSegment.Fields.Add(570, False, 0, False, 2);
    oSegment.Fields.Add(571, False, 0, True, 3);
    oSegment.Fields.Add(572, False, 0, False, 4);
    oSegment.Fields.Add(573, True, 0, False, 5);
    oSegment.Fields.Add(574, False, 0, False, 6);
    oSegment.Fields.Add(575, False, 0, False, 7);
    oSegment.Fields.Add(576, True, 5, False, 8);
    oSegment.Fields.Add(577, True, 5, False, 9);
    oSegment.Fields.Add(578, False, 0, False, 10);
    oSegment.Fields.Add(579, False, 0, True, 11);
    oSegment.Fields.Add(580, False, 0, False, 12);
    oSegment.Fields.Add(581, False, 0, False, 13);
    oSegment.Fields.Add(582, False, 0, False, 14);
    oSegment.Fields.Add(583, False, 0, False, 15);
    oSegment.Fields.Add(584, True, 0, False, 16);
    oSegment.Fields.Add(936, True, 0, False, 17);
  oSegment := oSegments.Add('ODS', 'ODS - dietary orders, supplements, and preferences segment');
    oSegment.Fields.Add(269, False, 0, True, 1);
    oSegment.Fields.Add(270, True, 10, False, 2);
    oSegment.Fields.Add(271, True, 20, True, 3);
    oSegment.Fields.Add(272, True, 2, False, 4);
  oSegment := oSegments.Add('ODT', 'ODT - diet tray instructions segment');
    oSegment.Fields.Add(273, False, 0, True, 1);
    oSegment.Fields.Add(270, True, 10, False, 2);
    oSegment.Fields.Add(272, False, 0, False, 3);
  oSegment := oSegments.Add('OM1', 'OM1 - general segment (fields that apply to most observations)');
    oSegment.Fields.Add(586, False, 0, False, 1);
    oSegment.Fields.Add(587, False, 0, False, 2);
    oSegment.Fields.Add(588, True, 0, False, 3);
    oSegment.Fields.Add(589, False, 0, False, 4);
    oSegment.Fields.Add(590, False, 0, False, 5);
    oSegment.Fields.Add(591, False, 0, False, 6);
    oSegment.Fields.Add(592, False, 0, False, 7);
    oSegment.Fields.Add(593, True, 0, False, 8);
    oSegment.Fields.Add(594, False, 0, False, 9);
    oSegment.Fields.Add(595, False, 0, False, 10);
    oSegment.Fields.Add(596, False, 0, False, 11);
    oSegment.Fields.Add(597, False, 0, False, 12);
    oSegment.Fields.Add(598, True, 0, False, 13);
    oSegment.Fields.Add(599, True, 0, False, 14);
    oSegment.Fields.Add(600, False, 0, False, 15);
    oSegment.Fields.Add(601, True, 0, False, 16);
    oSegment.Fields.Add(602, False, 0, False, 17);
    oSegment.Fields.Add(603, False, 0, True, 18);
    oSegment.Fields.Add(604, False, 0, False, 19);
    oSegment.Fields.Add(605, False, 0, False, 20);
    oSegment.Fields.Add(606, False, 0, False, 21);
    oSegment.Fields.Add(607, False, 0, False, 22);
    oSegment.Fields.Add(608, False, 0, False, 23);
    oSegment.Fields.Add(609, False, 0, False, 24);
    oSegment.Fields.Add(610, True, 0, False, 25);
    oSegment.Fields.Add(611, False, 0, False, 26);
    oSegment.Fields.Add(612, True, 0, False, 27);
    oSegment.Fields.Add(613, True, 0, False, 28);
    oSegment.Fields.Add(614, False, 0, False, 29);
    oSegment.Fields.Add(615, False, 0, False, 30);
    oSegment.Fields.Add(616, False, 0, False, 31);
    oSegment.Fields.Add(617, False, 0, False, 32);
    oSegment.Fields.Add(618, False, 0, False, 33);
    oSegment.Fields.Add(619, True, 0, False, 34);
    oSegment.Fields.Add(620, False, 0, False, 35);
    oSegment.Fields.Add(621, False, 0, False, 36);
    oSegment.Fields.Add(622, False, 0, False, 37);
    oSegment.Fields.Add(623, False, 0, False, 38);
    oSegment.Fields.Add(624, False, 0, False, 39);
    oSegment.Fields.Add(625, True, 0, False, 40);
    oSegment.Fields.Add(626, False, 0, False, 41);
    oSegment.Fields.Add(937, False, 0, False, 42);
    oSegment.Fields.Add(938, False, 0, False, 43);
    oSegment.Fields.Add(939, False, 0, False, 44);
    oSegment.Fields.Add(940, False, 0, False, 45);
    oSegment.Fields.Add(941, False, 0, False, 46);
    oSegment.Fields.Add(942, False, 0, False, 47);
  oSegment := oSegments.Add('OM2', 'OM2 - numeric observation segment');
    oSegment.Fields.Add(586, False, 0, False, 1);
    oSegment.Fields.Add(627, False, 0, False, 2);
    oSegment.Fields.Add(628, True, 0, False, 3);
    oSegment.Fields.Add(629, False, 0, False, 4);
    oSegment.Fields.Add(630, False, 0, False, 5);
    oSegment.Fields.Add(631, False, 0, False, 6);
    oSegment.Fields.Add(632, False, 0, False, 7);
    oSegment.Fields.Add(633, False, 0, False, 8);
    oSegment.Fields.Add(634, True, 0, False, 9);
    oSegment.Fields.Add(635, False, 0, False, 10);
  oSegment := oSegments.Add('OM3', 'OM3 - categorical test/observation segment');
    oSegment.Fields.Add(586, False, 0, False, 1);
    oSegment.Fields.Add(636, False, 0, False, 2);
    oSegment.Fields.Add(637, False, 0, False, 3);
    oSegment.Fields.Add(638, True, 0, False, 4);
    oSegment.Fields.Add(639, False, 0, False, 5);
    oSegment.Fields.Add(640, False, 0, False, 6);
    oSegment.Fields.Add(570, False, 0, False, 7);
  oSegment := oSegments.Add('OM4', 'OM4 - observations that require specimens segment');
    oSegment.Fields.Add(586, False, 0, False, 1);
    oSegment.Fields.Add(642, False, 0, False, 2);
    oSegment.Fields.Add(643, False, 0, False, 3);
    oSegment.Fields.Add(644, False, 0, False, 4);
    oSegment.Fields.Add(645, False, 0, False, 5);
    oSegment.Fields.Add(646, False, 0, False, 6);
    oSegment.Fields.Add(647, False, 0, False, 7);
    oSegment.Fields.Add(648, False, 0, False, 8);
    oSegment.Fields.Add(649, False, 0, False, 9);
    oSegment.Fields.Add(650, False, 0, False, 10);
    oSegment.Fields.Add(651, False, 0, False, 11);
    oSegment.Fields.Add(652, False, 0, False, 12);
    oSegment.Fields.Add(653, True, 0, False, 13);
    oSegment.Fields.Add(654, False, 0, False, 14);
  oSegment := oSegments.Add('OM5', 'OM5 - observation batteries (sets)  segment');
    oSegment.Fields.Add(586, False, 0, False, 1);
    oSegment.Fields.Add(655, True, 0, False, 2);
    oSegment.Fields.Add(656, False, 0, False, 3);
  oSegment := oSegments.Add('OM6', 'OM6 - Observations that are calculated from other observations segment');
    oSegment.Fields.Add(586, False, 0, False, 1);
    oSegment.Fields.Add(657, False, 0, False, 2);
  oSegment := oSegments.Add('ORC', 'ORC - common order segment');
    oSegment.Fields.Add(215, False, 0, False, 1);
    oSegment.Fields.Add(216, False, 0, False, 2);
    oSegment.Fields.Add(217, False, 0, False, 3);
    oSegment.Fields.Add(218, False, 0, False, 4);
    oSegment.Fields.Add(219, False, 0, False, 5);
    oSegment.Fields.Add(220, False, 0, False, 6);
    oSegment.Fields.Add(221, False, 0, False, 7);
    oSegment.Fields.Add(222, False, 0, False, 8);
    oSegment.Fields.Add(223, False, 0, False, 9);
    oSegment.Fields.Add(224, True, 0, False, 10);
    oSegment.Fields.Add(225, True, 0, False, 11);
    oSegment.Fields.Add(226, True, 0, False, 12);
    oSegment.Fields.Add(227, False, 0, False, 13);
    oSegment.Fields.Add(228, True, 2, False, 14);
    oSegment.Fields.Add(229, False, 0, False, 15);
    oSegment.Fields.Add(230, False, 0, False, 16);
    oSegment.Fields.Add(231, False, 0, False, 17);
    oSegment.Fields.Add(232, False, 0, False, 18);
    oSegment.Fields.Add(233, True, 0, False, 19);
    oSegment.Fields.Add(1310, False, 0, False, 20);
    oSegment.Fields.Add(1311, True, 0, False, 21);
    oSegment.Fields.Add(1312, True, 0, False, 22);
    oSegment.Fields.Add(1313, True, 0, False, 23);
    oSegment.Fields.Add(1314, True, 0, False, 24);
  oSegment := oSegments.Add('PCR', 'PCR - possible causal relationship segment');
    oSegment.Fields.Add(1098, False, 0, True, 1);
    oSegment.Fields.Add(1099, False, 0, False, 2);
    oSegment.Fields.Add(1100, False, 0, False, 3);
    oSegment.Fields.Add(1101, False, 0, False, 4);
    oSegment.Fields.Add(1102, False, 0, False, 5);
    oSegment.Fields.Add(1103, False, 0, False, 6);
    oSegment.Fields.Add(1104, False, 0, False, 7);
    oSegment.Fields.Add(1105, False, 0, False, 8);
    oSegment.Fields.Add(1106, False, 0, False, 9);
    oSegment.Fields.Add(1107, False, 0, False, 10);
    oSegment.Fields.Add(1108, False, 0, False, 11);
    oSegment.Fields.Add(1109, True, 3, False, 12);
    oSegment.Fields.Add(1110, False, 0, False, 13);
    oSegment.Fields.Add(1111, False, 0, False, 14);
    oSegment.Fields.Add(1112, False, 0, False, 15);
    oSegment.Fields.Add(1113, False, 0, False, 16);
    oSegment.Fields.Add(1114, False, 0, False, 17);
    oSegment.Fields.Add(1115, False, 0, False, 18);
    oSegment.Fields.Add(1116, False, 0, False, 19);
    oSegment.Fields.Add(1117, False, 0, False, 20);
    oSegment.Fields.Add(1118, True, 6, False, 21);
    oSegment.Fields.Add(1119, True, 6, False, 22);
    oSegment.Fields.Add(1120, True, 3, False, 23);
  oSegment := oSegments.Add('PD1', 'PD1 - patient additional demographic segment');
    oSegment.Fields.Add(755, True, 0, False, 1);
    oSegment.Fields.Add(742, False, 0, False, 2);
    oSegment.Fields.Add(756, True, 0, False, 3);
    oSegment.Fields.Add(757, True, 0, False, 4);
    oSegment.Fields.Add(745, False, 0, False, 5);
    oSegment.Fields.Add(753, False, 0, False, 6);
    oSegment.Fields.Add(759, False, 0, False, 7);
    oSegment.Fields.Add(760, False, 0, False, 8);
    oSegment.Fields.Add(761, False, 0, False, 9);
    oSegment.Fields.Add(762, True, 0, False, 10);
    oSegment.Fields.Add(743, False, 0, False, 11);
    oSegment.Fields.Add(744, False, 0, False, 12);
  oSegment := oSegments.Add('PDC', 'PDC - product detail country segment');
    oSegment.Fields.Add(1247, True, 0, True, 1);
    oSegment.Fields.Add(1248, False, 0, True, 2);
    oSegment.Fields.Add(1249, False, 0, True, 3);
    oSegment.Fields.Add(1250, False, 0, False, 4);
    oSegment.Fields.Add(1251, False, 0, False, 5);
    oSegment.Fields.Add(1252, True, 0, False, 6);
    oSegment.Fields.Add(1253, False, 0, False, 7);
    oSegment.Fields.Add(1254, True, 0, False, 8);
    oSegment.Fields.Add(1255, False, 0, False, 9);
    oSegment.Fields.Add(1256, False, 0, False, 10);
    oSegment.Fields.Add(1257, False, 0, False, 11);
    oSegment.Fields.Add(1258, False, 0, False, 12);
    oSegment.Fields.Add(1259, False, 0, False, 13);
    oSegment.Fields.Add(1260, False, 0, False, 14);
    oSegment.Fields.Add(1261, False, 0, False, 15);
  oSegment := oSegments.Add('PEO', 'PEO - product experience observation segment');
    oSegment.Fields.Add(1073, True, 0, False, 1);
    oSegment.Fields.Add(1074, True, 0, False, 2);
    oSegment.Fields.Add(1075, False, 0, True, 3);
    oSegment.Fields.Add(1076, False, 0, False, 4);
    oSegment.Fields.Add(1077, False, 0, False, 5);
    oSegment.Fields.Add(1078, False, 0, False, 6);
    oSegment.Fields.Add(1079, True, 0, False, 7);
    oSegment.Fields.Add(1080, True, 0, False, 8);
    oSegment.Fields.Add(1081, False, 0, False, 9);
    oSegment.Fields.Add(1082, False, 0, False, 10);
    oSegment.Fields.Add(1083, True, 0, False, 11);
    oSegment.Fields.Add(1084, False, 0, False, 12);
    oSegment.Fields.Add(1085, True, 0, False, 13);
    oSegment.Fields.Add(1086, True, 0, False, 14);
    oSegment.Fields.Add(1087, True, 0, False, 15);
    oSegment.Fields.Add(1088, True, 0, False, 16);
    oSegment.Fields.Add(1089, True, 0, False, 17);
    oSegment.Fields.Add(1090, True, 0, False, 18);
    oSegment.Fields.Add(1091, True, 0, False, 19);
    oSegment.Fields.Add(1092, True, 0, False, 20);
    oSegment.Fields.Add(1093, True, 0, False, 21);
    oSegment.Fields.Add(1094, False, 0, False, 22);
    oSegment.Fields.Add(1095, False, 0, False, 23);
    oSegment.Fields.Add(1096, False, 0, False, 24);
    oSegment.Fields.Add(1097, False, 0, False, 25);
  oSegment := oSegments.Add('PES', 'PES - product experience sender segment');
    oSegment.Fields.Add(1059, True, 0, False, 1);
    oSegment.Fields.Add(1060, True, 0, False, 2);
    oSegment.Fields.Add(1062, True, 0, False, 3);
    oSegment.Fields.Add(1063, True, 0, False, 4);
    oSegment.Fields.Add(1064, False, 0, False, 5);
    oSegment.Fields.Add(1065, False, 0, False, 6);
    oSegment.Fields.Add(1066, True, 0, False, 7);
    oSegment.Fields.Add(1067, False, 0, False, 8);
    oSegment.Fields.Add(1068, False, 0, False, 9);
    oSegment.Fields.Add(1069, False, 0, True, 10);
    oSegment.Fields.Add(1070, True, 2, False, 11);
    oSegment.Fields.Add(1071, False, 0, False, 12);
    oSegment.Fields.Add(1072, True, 0, False, 13);
  oSegment := oSegments.Add('PID', 'PID - patient identification segment');
    oSegment.Fields.Add(104, False, 0, False, 1);
    oSegment.Fields.Add(105, False, 0, False, 2);
    oSegment.Fields.Add(106, True, 0, True, 3);
    oSegment.Fields.Add(107, True, 0, False, 4);
    oSegment.Fields.Add(108, True, 0, True, 5);
    oSegment.Fields.Add(109, True, 0, False, 6);
    oSegment.Fields.Add(110, False, 0, False, 7);
    oSegment.Fields.Add(111, False, 0, False, 8);
    oSegment.Fields.Add(112, True, 0, False, 9);
    oSegment.Fields.Add(113, True, 0, False, 10);
    oSegment.Fields.Add(114, True, 0, False, 11);
    oSegment.Fields.Add(115, False, 0, False, 12);
    oSegment.Fields.Add(116, True, 0, False, 13);
    oSegment.Fields.Add(117, True, 0, False, 14);
    oSegment.Fields.Add(118, False, 0, False, 15);
    oSegment.Fields.Add(119, False, 0, False, 16);
    oSegment.Fields.Add(120, False, 0, False, 17);
    oSegment.Fields.Add(121, False, 0, False, 18);
    oSegment.Fields.Add(122, False, 0, False, 19);
    oSegment.Fields.Add(123, False, 0, False, 20);
    oSegment.Fields.Add(124, True, 0, False, 21);
    oSegment.Fields.Add(125, True, 0, False, 22);
    oSegment.Fields.Add(126, False, 0, False, 23);
    oSegment.Fields.Add(127, False, 0, False, 24);
    oSegment.Fields.Add(128, False, 0, False, 25);
    oSegment.Fields.Add(129, True, 0, False, 26);
    oSegment.Fields.Add(130, False, 0, False, 27);
    oSegment.Fields.Add(739, False, 0, False, 28);
    oSegment.Fields.Add(740, False, 0, False, 29);
    oSegment.Fields.Add(741, False, 0, False, 30);
  oSegment := oSegments.Add('PR1', 'PR1 - procedures segment');
    oSegment.Fields.Add(391, False, 0, True, 1);
    oSegment.Fields.Add(392, False, 0, False, 2);
    oSegment.Fields.Add(393, False, 0, True, 3);
    oSegment.Fields.Add(394, False, 0, False, 4);
    oSegment.Fields.Add(395, False, 0, True, 5);
    oSegment.Fields.Add(396, False, 0, True, 6);
    oSegment.Fields.Add(397, False, 0, False, 7);
    oSegment.Fields.Add(398, True, 0, False, 8);
    oSegment.Fields.Add(399, False, 0, False, 9);
    oSegment.Fields.Add(400, False, 0, False, 10);
    oSegment.Fields.Add(401, True, 0, False, 11);
    oSegment.Fields.Add(402, True, 0, False, 12);
    oSegment.Fields.Add(403, False, 0, False, 13);
    oSegment.Fields.Add(404, False, 0, False, 14);
    oSegment.Fields.Add(772, False, 0, False, 15);
    oSegment.Fields.Add(1316, True, 0, False, 16);
  oSegment := oSegments.Add('PRA', 'PRA - practitioner detail segment');
    oSegment.Fields.Add(685, False, 0, True, 1);
    oSegment.Fields.Add(686, True, 0, False, 2);
    oSegment.Fields.Add(687, True, 0, False, 3);
    oSegment.Fields.Add(688, False, 0, False, 4);
    oSegment.Fields.Add(689, True, 0, False, 5);
    oSegment.Fields.Add(690, True, 0, False, 6);
    oSegment.Fields.Add(691, True, 0, False, 7);
    oSegment.Fields.Add(1296, False, 0, False, 8);
  oSegment := oSegments.Add('PRB', 'Problem Detail');
    oSegment.Fields.Add(816, False, 0, True, 1);
    oSegment.Fields.Add(817, False, 0, True, 2);
    oSegment.Fields.Add(838, False, 0, True, 3);
    oSegment.Fields.Add(839, False, 0, True, 4);
    oSegment.Fields.Add(820, False, 0, False, 5);
    oSegment.Fields.Add(841, False, 0, False, 6);
    oSegment.Fields.Add(842, False, 0, False, 7);
    oSegment.Fields.Add(843, False, 0, False, 8);
    oSegment.Fields.Add(844, False, 0, False, 9);
    oSegment.Fields.Add(845, False, 0, False, 10);
    oSegment.Fields.Add(846, True, 0, False, 11);
    oSegment.Fields.Add(847, False, 0, False, 12);
    oSegment.Fields.Add(848, False, 0, False, 13);
    oSegment.Fields.Add(849, False, 0, False, 14);
    oSegment.Fields.Add(850, False, 0, False, 15);
    oSegment.Fields.Add(851, False, 0, False, 16);
    oSegment.Fields.Add(852, False, 0, False, 17);
    oSegment.Fields.Add(853, False, 0, False, 18);
    oSegment.Fields.Add(854, False, 0, False, 19);
    oSegment.Fields.Add(855, False, 0, False, 20);
    oSegment.Fields.Add(856, False, 0, False, 21);
    oSegment.Fields.Add(857, False, 0, False, 22);
    oSegment.Fields.Add(858, False, 0, False, 23);
    oSegment.Fields.Add(859, False, 0, False, 24);
    oSegment.Fields.Add(823, False, 0, False, 25);
  oSegment := oSegments.Add('PRC', 'PRC -  pricing segment');
    oSegment.Fields.Add(982, False, 0, True, 1);
    oSegment.Fields.Add(995, True, 0, False, 2);
    oSegment.Fields.Add(676, True, 0, False, 3);
    oSegment.Fields.Add(967, True, 0, False, 4);
    oSegment.Fields.Add(998, True, 0, False, 5);
    oSegment.Fields.Add(999, True, 0, False, 6);
    oSegment.Fields.Add(1000, False, 0, False, 7);
    oSegment.Fields.Add(1001, False, 0, False, 8);
    oSegment.Fields.Add(1002, False, 0, False, 9);
    oSegment.Fields.Add(1003, False, 0, False, 10);
    oSegment.Fields.Add(1004, False, 0, False, 11);
    oSegment.Fields.Add(1005, False, 0, False, 12);
    oSegment.Fields.Add(1006, False, 0, False, 13);
    oSegment.Fields.Add(1007, True, 0, False, 14);
    oSegment.Fields.Add(1008, False, 0, False, 15);
    oSegment.Fields.Add(675, False, 0, False, 16);
    oSegment.Fields.Add(989, False, 0, False, 17);
    oSegment.Fields.Add(1009, False, 0, False, 18);
  oSegment := oSegments.Add('PRD', 'Provider Data');
    oSegment.Fields.Add(1155, True, 0, True, 1);
    oSegment.Fields.Add(1156, True, 0, False, 2);
    oSegment.Fields.Add(1157, True, 0, False, 3);
    oSegment.Fields.Add(1158, False, 0, False, 4);
    oSegment.Fields.Add(1159, True, 0, False, 5);
    oSegment.Fields.Add(684, False, 0, False, 6);
    oSegment.Fields.Add(1162, True, 0, False, 7);
    oSegment.Fields.Add(1163, False, 0, False, 8);
    oSegment.Fields.Add(1164, False, 0, False, 9);
  oSegment := oSegments.Add('PSH', 'PSH - product summary header segment');
    oSegment.Fields.Add(1233, False, 0, True, 1);
    oSegment.Fields.Add(1297, False, 0, False, 2);
    oSegment.Fields.Add(1235, False, 0, True, 3);
    oSegment.Fields.Add(1236, False, 0, False, 4);
    oSegment.Fields.Add(1237, False, 0, False, 5);
    oSegment.Fields.Add(1238, False, 0, False, 6);
    oSegment.Fields.Add(1239, False, 0, False, 7);
    oSegment.Fields.Add(1240, False, 0, False, 8);
    oSegment.Fields.Add(1241, False, 0, False, 9);
    oSegment.Fields.Add(1242, False, 0, False, 10);
    oSegment.Fields.Add(1243, False, 0, False, 11);
    oSegment.Fields.Add(1244, False, 0, False, 12);
    oSegment.Fields.Add(1245, True, 8, False, 13);
    oSegment.Fields.Add(1246, True, 8, False, 14);
  oSegment := oSegments.Add('PTH', 'Pathway');
    oSegment.Fields.Add(816, False, 0, True, 1);
    oSegment.Fields.Add(1207, False, 0, True, 2);
    oSegment.Fields.Add(1208, False, 0, True, 3);
    oSegment.Fields.Add(1209, False, 0, True, 4);
    oSegment.Fields.Add(1210, False, 0, False, 5);
    oSegment.Fields.Add(1211, False, 0, False, 6);
  oSegment := oSegments.Add('PV1', 'PV1 - patient visit segment-');
    oSegment.Fields.Add(131, False, 0, False, 1);
    oSegment.Fields.Add(132, False, 0, True, 2);
    oSegment.Fields.Add(133, False, 0, False, 3);
    oSegment.Fields.Add(134, False, 0, False, 4);
    oSegment.Fields.Add(135, False, 0, False, 5);
    oSegment.Fields.Add(136, False, 0, False, 6);
    oSegment.Fields.Add(137, True, 0, False, 7);
    oSegment.Fields.Add(138, True, 0, False, 8);
    oSegment.Fields.Add(139, True, 0, False, 9);
    oSegment.Fields.Add(140, False, 0, False, 10);
    oSegment.Fields.Add(141, False, 0, False, 11);
    oSegment.Fields.Add(142, False, 0, False, 12);
    oSegment.Fields.Add(143, False, 0, False, 13);
    oSegment.Fields.Add(144, False, 0, False, 14);
    oSegment.Fields.Add(145, True, 0, False, 15);
    oSegment.Fields.Add(146, False, 0, False, 16);
    oSegment.Fields.Add(147, True, 0, False, 17);
    oSegment.Fields.Add(148, False, 0, False, 18);
    oSegment.Fields.Add(149, False, 0, False, 19);
    oSegment.Fields.Add(150, True, 0, False, 20);
    oSegment.Fields.Add(151, False, 0, False, 21);
    oSegment.Fields.Add(152, False, 0, False, 22);
    oSegment.Fields.Add(153, False, 0, False, 23);
    oSegment.Fields.Add(154, True, 0, False, 24);
    oSegment.Fields.Add(155, True, 0, False, 25);
    oSegment.Fields.Add(156, True, 0, False, 26);
    oSegment.Fields.Add(157, True, 0, False, 27);
    oSegment.Fields.Add(158, False, 0, False, 28);
    oSegment.Fields.Add(159, False, 0, False, 29);
    oSegment.Fields.Add(160, False, 0, False, 30);
    oSegment.Fields.Add(161, False, 0, False, 31);
    oSegment.Fields.Add(162, False, 0, False, 32);
    oSegment.Fields.Add(163, False, 0, False, 33);
    oSegment.Fields.Add(164, False, 0, False, 34);
    oSegment.Fields.Add(165, False, 0, False, 35);
    oSegment.Fields.Add(166, False, 0, False, 36);
    oSegment.Fields.Add(167, False, 0, False, 37);
    oSegment.Fields.Add(168, False, 0, False, 38);
    oSegment.Fields.Add(169, False, 0, False, 39);
    oSegment.Fields.Add(170, False, 0, False, 40);
    oSegment.Fields.Add(171, False, 0, False, 41);
    oSegment.Fields.Add(172, False, 0, False, 42);
    oSegment.Fields.Add(173, False, 0, False, 43);
    oSegment.Fields.Add(174, False, 0, False, 44);
    oSegment.Fields.Add(175, False, 0, False, 45);
    oSegment.Fields.Add(176, False, 0, False, 46);
    oSegment.Fields.Add(177, False, 0, False, 47);
    oSegment.Fields.Add(178, False, 0, False, 48);
    oSegment.Fields.Add(179, False, 0, False, 49);
    oSegment.Fields.Add(180, False, 0, False, 50);
    oSegment.Fields.Add(1226, False, 0, False, 51);
    oSegment.Fields.Add(1274, True, 0, False, 52);
  oSegment := oSegments.Add('PV2', 'PV2 - patient visit - additional information segment');
    oSegment.Fields.Add(181, False, 0, False, 1);
    oSegment.Fields.Add(182, False, 0, False, 2);
    oSegment.Fields.Add(183, False, 0, False, 3);
    oSegment.Fields.Add(184, False, 0, False, 4);
    oSegment.Fields.Add(185, True, 0, False, 5);
    oSegment.Fields.Add(186, False, 0, False, 6);
    oSegment.Fields.Add(187, False, 0, False, 7);
    oSegment.Fields.Add(188, False, 0, False, 8);
    oSegment.Fields.Add(189, False, 0, False, 9);
    oSegment.Fields.Add(711, False, 0, False, 10);
    oSegment.Fields.Add(712, False, 0, False, 11);
    oSegment.Fields.Add(713, False, 0, False, 12);
    oSegment.Fields.Add(714, True, 0, False, 13);
    oSegment.Fields.Add(715, False, 0, False, 14);
    oSegment.Fields.Add(716, False, 0, False, 15);
    oSegment.Fields.Add(717, False, 0, False, 16);
    oSegment.Fields.Add(718, False, 0, False, 17);
    oSegment.Fields.Add(719, False, 0, False, 18);
    oSegment.Fields.Add(720, False, 0, False, 19);
    oSegment.Fields.Add(721, False, 0, False, 20);
    oSegment.Fields.Add(722, False, 0, False, 21);
    oSegment.Fields.Add(723, False, 0, False, 22);
    oSegment.Fields.Add(724, True, 0, False, 23);
    oSegment.Fields.Add(725, False, 0, False, 24);
    oSegment.Fields.Add(726, False, 0, False, 25);
    oSegment.Fields.Add(727, False, 0, False, 26);
    oSegment.Fields.Add(728, False, 0, False, 27);
    oSegment.Fields.Add(729, False, 0, False, 28);
    oSegment.Fields.Add(730, False, 0, False, 29);
    oSegment.Fields.Add(731, False, 0, False, 30);
    oSegment.Fields.Add(732, False, 0, False, 31);
    oSegment.Fields.Add(733, False, 0, False, 32);
    oSegment.Fields.Add(734, False, 0, False, 33);
    oSegment.Fields.Add(735, False, 0, False, 34);
    oSegment.Fields.Add(736, False, 0, False, 35);
    oSegment.Fields.Add(737, False, 0, False, 36);
    oSegment.Fields.Add(738, False, 0, False, 37);
  oSegment := oSegments.Add('QAK', 'Query Acknowledgement');
    oSegment.Fields.Add(696, False, 0, False, 1);
    oSegment.Fields.Add(708, False, 0, False, 2);
  oSegment := oSegments.Add('QRD', 'QRD - original-style query definition segment');
    oSegment.Fields.Add(25, False, 0, True, 1);
    oSegment.Fields.Add(26, False, 0, True, 2);
    oSegment.Fields.Add(27, False, 0, True, 3);
    oSegment.Fields.Add(28, False, 0, True, 4);
    oSegment.Fields.Add(29, False, 0, False, 5);
    oSegment.Fields.Add(30, False, 0, False, 6);
    oSegment.Fields.Add(31, False, 0, True, 7);
    oSegment.Fields.Add(32, True, 0, True, 8);
    oSegment.Fields.Add(33, True, 0, True, 9);
    oSegment.Fields.Add(34, True, 0, True, 10);
    oSegment.Fields.Add(35, True, 0, False, 11);
    oSegment.Fields.Add(36, False, 0, False, 12);
  oSegment := oSegments.Add('QRF', 'QRF - original style query filter segment');
    oSegment.Fields.Add(37, True, 0, True, 1);
    oSegment.Fields.Add(38, False, 0, False, 2);
    oSegment.Fields.Add(39, False, 0, False, 3);
    oSegment.Fields.Add(40, True, 0, False, 4);
    oSegment.Fields.Add(41, True, 0, False, 5);
    oSegment.Fields.Add(42, True, 0, False, 6);
    oSegment.Fields.Add(43, True, 0, False, 7);
    oSegment.Fields.Add(44, True, 0, False, 8);
    oSegment.Fields.Add(694, False, 0, False, 9);
  oSegment := oSegments.Add('RDF', 'RDF - table row definition segment');
    oSegment.Fields.Add(701, False, 0, True, 1);
    oSegment.Fields.Add(702, True, 0, True, 2);
  oSegment := oSegments.Add('RDT', 'RDT - table row data segment');
    oSegment.Fields.Add(703, False, 0, False, 1);
  oSegment := oSegments.Add('RF1', 'Referral Infomation');
    oSegment.Fields.Add(1137, False, 0, False, 1);
    oSegment.Fields.Add(1138, False, 0, False, 2);
    oSegment.Fields.Add(1139, False, 0, False, 3);
    oSegment.Fields.Add(1140, True, 0, False, 4);
    oSegment.Fields.Add(1141, False, 0, False, 5);
    oSegment.Fields.Add(1142, False, 0, True, 6);
    oSegment.Fields.Add(1143, False, 0, False, 7);
    oSegment.Fields.Add(1144, False, 0, False, 8);
    oSegment.Fields.Add(1145, False, 0, False, 9);
    oSegment.Fields.Add(1228, True, 0, False, 10);
    oSegment.Fields.Add(1300, True, 0, False, 11);
  oSegment := oSegments.Add('RGS', 'RGS - resource group segment');
    oSegment.Fields.Add(1203, False, 0, True, 1);
    oSegment.Fields.Add(763, False, 0, False, 2);
    oSegment.Fields.Add(1204, False, 0, False, 3);
  oSegment := oSegments.Add('ROL', 'Role');
    oSegment.Fields.Add(1206, False, 0, True, 1);
    oSegment.Fields.Add(816, False, 0, True, 2);
    oSegment.Fields.Add(1197, False, 0, True, 3);
    oSegment.Fields.Add(1198, True, 0, True, 4);
    oSegment.Fields.Add(1199, False, 0, False, 5);
    oSegment.Fields.Add(1200, False, 0, False, 6);
    oSegment.Fields.Add(1201, False, 0, False, 7);
    oSegment.Fields.Add(1205, False, 0, False, 8);
  oSegment := oSegments.Add('RQ1', 'RQ1 - requisition detail-1 segment');
    oSegment.Fields.Add(285, False, 0, False, 1);
    oSegment.Fields.Add(286, False, 0, False, 2);
    oSegment.Fields.Add(287, False, 0, False, 3);
    oSegment.Fields.Add(288, False, 0, False, 4);
    oSegment.Fields.Add(289, False, 0, False, 5);
    oSegment.Fields.Add(290, False, 0, False, 6);
    oSegment.Fields.Add(291, False, 0, False, 7);
  oSegment := oSegments.Add('RQD', 'RQD - requisition detail segment');
    oSegment.Fields.Add(275, False, 0, False, 1);
    oSegment.Fields.Add(276, False, 0, False, 2);
    oSegment.Fields.Add(277, False, 0, False, 3);
    oSegment.Fields.Add(278, False, 0, False, 4);
    oSegment.Fields.Add(279, False, 0, False, 5);
    oSegment.Fields.Add(280, False, 0, False, 6);
    oSegment.Fields.Add(281, False, 0, False, 7);
    oSegment.Fields.Add(282, False, 0, False, 8);
    oSegment.Fields.Add(283, False, 0, False, 9);
    oSegment.Fields.Add(284, False, 0, False, 10);
  oSegment := oSegments.Add('RXA', 'RXA - pharmacy/treatment administration segment');
    oSegment.Fields.Add(342, False, 0, True, 1);
    oSegment.Fields.Add(344, False, 0, True, 2);
    oSegment.Fields.Add(345, False, 0, True, 3);
    oSegment.Fields.Add(346, False, 0, True, 4);
    oSegment.Fields.Add(347, False, 0, True, 5);
    oSegment.Fields.Add(348, False, 0, True, 6);
    oSegment.Fields.Add(349, False, 0, False, 7);
    oSegment.Fields.Add(350, False, 0, False, 8);
    oSegment.Fields.Add(351, True, 0, False, 9);
    oSegment.Fields.Add(352, True, 0, False, 10);
    oSegment.Fields.Add(353, False, 0, False, 11);
    oSegment.Fields.Add(354, False, 0, False, 12);
    oSegment.Fields.Add(1134, False, 0, False, 13);
    oSegment.Fields.Add(1135, False, 0, False, 14);
    oSegment.Fields.Add(1129, True, 0, False, 15);
    oSegment.Fields.Add(1130, True, 0, False, 16);
    oSegment.Fields.Add(1131, True, 0, False, 17);
    oSegment.Fields.Add(1136, True, 0, False, 18);
    oSegment.Fields.Add(1123, True, 0, False, 19);
    oSegment.Fields.Add(1223, False, 0, False, 20);
    oSegment.Fields.Add(1224, False, 0, False, 21);
    oSegment.Fields.Add(1225, False, 0, False, 22);
  oSegment := oSegments.Add('RXC', 'RXC - pharmacy/treatment component order segment');
    oSegment.Fields.Add(313, False, 0, True, 1);
    oSegment.Fields.Add(314, False, 0, True, 2);
    oSegment.Fields.Add(315, False, 0, True, 3);
    oSegment.Fields.Add(316, False, 0, True, 4);
    oSegment.Fields.Add(1124, False, 0, False, 5);
    oSegment.Fields.Add(1125, False, 0, False, 6);
  oSegment := oSegments.Add('RXD', 'RXD - pharmacy/treatment dispense segment');
    oSegment.Fields.Add(334, False, 0, True, 1);
    oSegment.Fields.Add(335, False, 0, True, 2);
    oSegment.Fields.Add(336, False, 0, True, 3);
    oSegment.Fields.Add(337, False, 0, True, 4);
    oSegment.Fields.Add(338, False, 0, False, 5);
    oSegment.Fields.Add(339, False, 0, False, 6);
    oSegment.Fields.Add(325, False, 0, True, 7);
    oSegment.Fields.Add(326, False, 0, False, 8);
    oSegment.Fields.Add(340, True, 0, False, 9);
    oSegment.Fields.Add(341, True, 0, False, 10);
    oSegment.Fields.Add(322, False, 0, False, 11);
    oSegment.Fields.Add(329, False, 0, False, 12);
    oSegment.Fields.Add(1303, False, 0, False, 13);
    oSegment.Fields.Add(307, False, 0, False, 14);
    oSegment.Fields.Add(330, True, 0, False, 15);
    oSegment.Fields.Add(1132, False, 0, False, 16);
    oSegment.Fields.Add(1133, False, 0, False, 17);
    oSegment.Fields.Add(1129, True, 0, False, 18);
    oSegment.Fields.Add(1130, True, 0, False, 19);
    oSegment.Fields.Add(1131, True, 0, False, 20);
    oSegment.Fields.Add(1123, True, 0, False, 21);
    oSegment.Fields.Add(1220, False, 0, False, 22);
    oSegment.Fields.Add(1221, False, 0, False, 23);
    oSegment.Fields.Add(1222, False, 0, False, 24);
  oSegment := oSegments.Add('RXE', 'RXE - pharmacy/treatment encoded order segment');
    oSegment.Fields.Add(221, False, 0, True, 1);
    oSegment.Fields.Add(317, False, 0, True, 2);
    oSegment.Fields.Add(318, False, 0, True, 3);
    oSegment.Fields.Add(319, False, 0, False, 4);
    oSegment.Fields.Add(320, False, 0, True, 5);
    oSegment.Fields.Add(321, False, 0, False, 6);
    oSegment.Fields.Add(298, True, 0, False, 7);
    oSegment.Fields.Add(299, False, 0, False, 8);
    oSegment.Fields.Add(322, False, 0, False, 9);
    oSegment.Fields.Add(323, False, 0, False, 10);
    oSegment.Fields.Add(324, False, 0, False, 11);
    oSegment.Fields.Add(304, False, 0, False, 12);
    oSegment.Fields.Add(305, True, 0, False, 13);
    oSegment.Fields.Add(306, True, 0, False, 14);
    oSegment.Fields.Add(325, False, 0, False, 15);
    oSegment.Fields.Add(326, False, 0, False, 16);
    oSegment.Fields.Add(327, False, 0, False, 17);
    oSegment.Fields.Add(328, False, 0, False, 18);
    oSegment.Fields.Add(329, False, 0, False, 19);
    oSegment.Fields.Add(307, False, 0, False, 20);
    oSegment.Fields.Add(330, True, 0, False, 21);
    oSegment.Fields.Add(331, False, 0, False, 22);
    oSegment.Fields.Add(332, False, 0, False, 23);
    oSegment.Fields.Add(333, False, 0, False, 24);
    oSegment.Fields.Add(1126, False, 0, False, 25);
    oSegment.Fields.Add(1127, False, 0, False, 26);
    oSegment.Fields.Add(1128, True, 0, False, 27);
    oSegment.Fields.Add(1220, False, 0, False, 28);
    oSegment.Fields.Add(1221, False, 0, False, 29);
    oSegment.Fields.Add(1222, False, 0, False, 30);
  oSegment := oSegments.Add('RXG', 'RXG - pharmacy/treatment give segment');
    oSegment.Fields.Add(342, False, 0, True, 1);
    oSegment.Fields.Add(334, False, 0, False, 2);
    oSegment.Fields.Add(221, False, 0, True, 3);
    oSegment.Fields.Add(317, False, 0, True, 4);
    oSegment.Fields.Add(318, False, 0, True, 5);
    oSegment.Fields.Add(319, False, 0, False, 6);
    oSegment.Fields.Add(320, False, 0, True, 7);
    oSegment.Fields.Add(321, False, 0, False, 8);
    oSegment.Fields.Add(351, True, 0, False, 9);
    oSegment.Fields.Add(322, False, 0, False, 10);
    oSegment.Fields.Add(1303, False, 0, False, 11);
    oSegment.Fields.Add(307, False, 0, False, 12);
    oSegment.Fields.Add(343, True, 0, False, 13);
    oSegment.Fields.Add(331, False, 0, False, 14);
    oSegment.Fields.Add(332, False, 0, False, 15);
    oSegment.Fields.Add(333, False, 0, False, 16);
    oSegment.Fields.Add(1126, False, 0, False, 17);
    oSegment.Fields.Add(1127, False, 0, False, 18);
    oSegment.Fields.Add(1129, True, 0, False, 19);
    oSegment.Fields.Add(1130, True, 0, False, 20);
    oSegment.Fields.Add(1131, True, 0, False, 21);
    oSegment.Fields.Add(1123, True, 0, False, 22);
  oSegment := oSegments.Add('RXO', 'RXO - pharmacy/treatment order segment');
    oSegment.Fields.Add(292, False, 0, False, 1);
    oSegment.Fields.Add(293, False, 0, False, 2);
    oSegment.Fields.Add(294, False, 0, False, 3);
    oSegment.Fields.Add(295, False, 0, False, 4);
    oSegment.Fields.Add(296, False, 0, False, 5);
    oSegment.Fields.Add(297, True, 0, False, 6);
    oSegment.Fields.Add(298, True, 0, False, 7);
    oSegment.Fields.Add(299, False, 0, False, 8);
    oSegment.Fields.Add(300, False, 0, False, 9);
    oSegment.Fields.Add(301, False, 0, False, 10);
    oSegment.Fields.Add(302, False, 0, False, 11);
    oSegment.Fields.Add(303, False, 0, False, 12);
    oSegment.Fields.Add(304, False, 0, False, 13);
    oSegment.Fields.Add(305, True, 0, False, 14);
    oSegment.Fields.Add(306, True, 0, False, 15);
    oSegment.Fields.Add(307, False, 0, False, 16);
    oSegment.Fields.Add(308, False, 0, False, 17);
    oSegment.Fields.Add(1121, False, 0, False, 18);
    oSegment.Fields.Add(1122, False, 0, False, 19);
    oSegment.Fields.Add(1123, True, 0, False, 20);
    oSegment.Fields.Add(1218, False, 0, False, 21);
    oSegment.Fields.Add(1219, False, 0, False, 22);
    oSegment.Fields.Add(329, False, 0, False, 23);
  oSegment := oSegments.Add('RXR', 'RXR - pharmacy/treatment route segment');
    oSegment.Fields.Add(309, False, 0, True, 1);
    oSegment.Fields.Add(310, False, 0, False, 2);
    oSegment.Fields.Add(311, False, 0, False, 3);
    oSegment.Fields.Add(312, False, 0, False, 4);
    oSegment.Fields.Add(1315, False, 0, False, 5);
  oSegment := oSegments.Add('SCH', 'SCH - schedule activity information segment');
    oSegment.Fields.Add(860, False, 0, False, 1);
    oSegment.Fields.Add(861, False, 0, False, 2);
    oSegment.Fields.Add(862, False, 0, False, 3);
    oSegment.Fields.Add(218, False, 0, False, 4);
    oSegment.Fields.Add(864, False, 0, False, 5);
    oSegment.Fields.Add(883, False, 0, True, 6);
    oSegment.Fields.Add(866, False, 0, False, 7);
    oSegment.Fields.Add(867, False, 0, False, 8);
    oSegment.Fields.Add(868, False, 0, False, 9);
    oSegment.Fields.Add(869, False, 0, False, 10);
    oSegment.Fields.Add(884, True, 0, True, 11);
    oSegment.Fields.Add(874, True, 0, False, 12);
    oSegment.Fields.Add(875, False, 0, False, 13);
    oSegment.Fields.Add(876, True, 0, False, 14);
    oSegment.Fields.Add(877, False, 0, False, 15);
    oSegment.Fields.Add(885, True, 0, True, 16);
    oSegment.Fields.Add(886, False, 0, False, 17);
    oSegment.Fields.Add(887, True, 0, False, 18);
    oSegment.Fields.Add(888, False, 0, False, 19);
    oSegment.Fields.Add(878, True, 0, True, 20);
    oSegment.Fields.Add(879, True, 0, False, 21);
    oSegment.Fields.Add(880, False, 0, False, 22);
    oSegment.Fields.Add(881, False, 0, False, 23);
    oSegment.Fields.Add(882, False, 0, False, 24);
    oSegment.Fields.Add(889, False, 0, False, 25);
  oSegment := oSegments.Add('SPR', 'SPR - stored procedure request definition segment');
    oSegment.Fields.Add(696, False, 0, False, 1);
    oSegment.Fields.Add(697, False, 0, True, 2);
    oSegment.Fields.Add(704, False, 0, True, 3);
    oSegment.Fields.Add(705, True, 0, False, 4);
  oSegment := oSegments.Add('STF', 'STF - staff identification segment');
    oSegment.Fields.Add(671, False, 0, True, 1);
    oSegment.Fields.Add(672, True, 0, False, 2);
    oSegment.Fields.Add(673, True, 0, False, 3);
    oSegment.Fields.Add(674, True, 0, False, 4);
    oSegment.Fields.Add(111, False, 0, False, 5);
    oSegment.Fields.Add(110, False, 0, False, 6);
    oSegment.Fields.Add(675, False, 0, False, 7);
    oSegment.Fields.Add(676, True, 0, False, 8);
    oSegment.Fields.Add(677, True, 0, False, 9);
    oSegment.Fields.Add(678, True, 0, False, 10);
    oSegment.Fields.Add(679, True, 0, False, 11);
    oSegment.Fields.Add(680, True, 0, False, 12);
    oSegment.Fields.Add(681, True, 0, False, 13);
    oSegment.Fields.Add(682, True, 0, False, 14);
    oSegment.Fields.Add(683, True, 0, False, 15);
    oSegment.Fields.Add(684, False, 0, False, 16);
    oSegment.Fields.Add(119, False, 0, False, 17);
    oSegment.Fields.Add(785, False, 0, False, 18);
    oSegment.Fields.Add(786, False, 0, False, 19);
    oSegment.Fields.Add(1276, False, 0, False, 20);
    oSegment.Fields.Add(1275, False, 0, False, 21);
    oSegment.Fields.Add(1302, False, 0, False, 22);
    oSegment.Fields.Add(1229, False, 0, False, 23);
    oSegment.Fields.Add(1232, False, 0, False, 24);
    oSegment.Fields.Add(1298, False, 0, False, 25);
    oSegment.Fields.Add(1234, False, 0, False, 26);
  oSegment := oSegments.Add('TXA', 'Document notification segment');
    oSegment.Fields.Add(914, False, 0, True, 1);
    oSegment.Fields.Add(915, False, 0, True, 2);
    oSegment.Fields.Add(916, False, 0, False, 3);
    oSegment.Fields.Add(917, False, 0, False, 4);
    oSegment.Fields.Add(918, True, 0, False, 5);
    oSegment.Fields.Add(919, False, 0, False, 6);
    oSegment.Fields.Add(920, False, 0, False, 7);
    oSegment.Fields.Add(921, True, 0, False, 8);
    oSegment.Fields.Add(922, True, 0, False, 9);
    oSegment.Fields.Add(923, True, 0, False, 10);
    oSegment.Fields.Add(924, True, 0, False, 11);
    oSegment.Fields.Add(925, False, 0, True, 12);
    oSegment.Fields.Add(926, False, 0, False, 13);
    oSegment.Fields.Add(216, True, 0, False, 14);
    oSegment.Fields.Add(217, False, 0, False, 15);
    oSegment.Fields.Add(927, False, 0, False, 16);
    oSegment.Fields.Add(928, False, 0, True, 17);
    oSegment.Fields.Add(929, False, 0, False, 18);
    oSegment.Fields.Add(930, False, 0, False, 19);
    oSegment.Fields.Add(932, False, 0, False, 20);
    oSegment.Fields.Add(933, False, 0, False, 21);
    oSegment.Fields.Add(934, True, 0, False, 22);
    oSegment.Fields.Add(935, True, 0, False, 23);
  oSegment := oSegments.Add('UB1', 'UB1 - UB82 data segment');
    oSegment.Fields.Add(530, False, 0, False, 1);
    oSegment.Fields.Add(531, False, 0, False, 2);
    oSegment.Fields.Add(532, False, 0, False, 3);
    oSegment.Fields.Add(533, False, 0, False, 4);
    oSegment.Fields.Add(534, False, 0, False, 5);
    oSegment.Fields.Add(535, False, 0, False, 6);
    oSegment.Fields.Add(536, True, 5, False, 7);
    oSegment.Fields.Add(537, False, 0, False, 8);
    oSegment.Fields.Add(538, False, 0, False, 9);
    oSegment.Fields.Add(539, True, 8, False, 10);
    oSegment.Fields.Add(540, False, 0, False, 11);
    oSegment.Fields.Add(541, False, 0, False, 12);
    oSegment.Fields.Add(542, False, 0, False, 13);
    oSegment.Fields.Add(543, False, 0, False, 14);
    oSegment.Fields.Add(544, False, 0, False, 15);
    oSegment.Fields.Add(545, True, 5, False, 16);
    oSegment.Fields.Add(546, False, 0, False, 17);
    oSegment.Fields.Add(547, False, 0, False, 18);
    oSegment.Fields.Add(548, False, 0, False, 19);
    oSegment.Fields.Add(549, False, 0, False, 20);
    oSegment.Fields.Add(550, False, 0, False, 21);
    oSegment.Fields.Add(551, False, 0, False, 22);
    oSegment.Fields.Add(552, False, 0, False, 23);
  oSegment := oSegments.Add('UB2', 'UB2 - UB92 data segment');
    oSegment.Fields.Add(553, False, 0, False, 1);
    oSegment.Fields.Add(554, False, 0, False, 2);
    oSegment.Fields.Add(555, True, 7, False, 3);
    oSegment.Fields.Add(556, False, 0, False, 4);
    oSegment.Fields.Add(557, False, 0, False, 5);
    oSegment.Fields.Add(558, True, 12, False, 6);
    oSegment.Fields.Add(559, True, 8, False, 7);
    oSegment.Fields.Add(560, True, 2, False, 8);
    oSegment.Fields.Add(561, True, 2, False, 9);
    oSegment.Fields.Add(562, True, 2, False, 10);
    oSegment.Fields.Add(563, False, 0, False, 11);
    oSegment.Fields.Add(564, True, 3, False, 12);
    oSegment.Fields.Add(565, True, 23, False, 13);
    oSegment.Fields.Add(566, True, 5, False, 14);
    oSegment.Fields.Add(567, False, 0, False, 15);
    oSegment.Fields.Add(568, True, 2, False, 16);
    oSegment.Fields.Add(815, False, 0, False, 17);
  oSegment := oSegments.Add('URD', 'URD - results/update definition segment');
    oSegment.Fields.Add(45, False, 0, False, 1);
    oSegment.Fields.Add(46, False, 0, False, 2);
    oSegment.Fields.Add(47, True, 0, True, 3);
    oSegment.Fields.Add(48, True, 0, False, 4);
    oSegment.Fields.Add(49, True, 0, False, 5);
    oSegment.Fields.Add(50, True, 0, False, 6);
    oSegment.Fields.Add(51, False, 0, False, 7);
  oSegment := oSegments.Add('URS', 'URS - unsolicited selection segment');
    oSegment.Fields.Add(52, True, 0, True, 1);
    oSegment.Fields.Add(53, False, 0, False, 2);
    oSegment.Fields.Add(54, False, 0, False, 3);
    oSegment.Fields.Add(55, True, 0, False, 4);
    oSegment.Fields.Add(56, True, 0, False, 5);
    oSegment.Fields.Add(57, True, 0, False, 6);
    oSegment.Fields.Add(58, True, 0, False, 7);
    oSegment.Fields.Add(59, True, 0, False, 8);
    oSegment.Fields.Add(695, False, 0, False, 9);
  oSegment := oSegments.Add('VAR', 'Variance');
    oSegment.Fields.Add(1212, False, 0, True, 1);
    oSegment.Fields.Add(1213, False, 0, True, 2);
    oSegment.Fields.Add(1214, False, 0, False, 3);
    oSegment.Fields.Add(1215, True, 0, False, 4);
    oSegment.Fields.Add(1216, False, 0, False, 5);
    oSegment.Fields.Add(1217, True, 0, False, 6);
  oSegment := oSegments.Add('VTQ', 'VTQ - virtual table query request segment');
    oSegment.Fields.Add(696, False, 0, False, 1);
    oSegment.Fields.Add(697, False, 0, True, 2);
    oSegment.Fields.Add(698, False, 0, True, 3);
    oSegment.Fields.Add(699, False, 0, True, 4);
    oSegment.Fields.Add(700, True, 0, False, 5);
  oSegments.Add('ZL7', 'diverses');
  oSegments.Add('Zxx', 'any Z segment');
  oSegments.Add('[', 'begin optional');
  oSegments.Add('[{', 'begin optional + repeating');
  oSegments.Add(']', 'end optional');
  oSegments.Add('{', 'begin repetition');
  oSegments.Add('|', 'next choice');
  oSegments.Add('}', 'end repetition');
  oSegments.Add('}]', 'end optional + repeating');
End;

procedure Definitions231LoadMessageStructures1(oStructures : THL7V2ModelMessageStructures);
Var
  oStructure : THL7V2ModelMessageStructure;
  oGrp1 : THL7V2ModelSegmentGroup;
  oGrp2 : THL7V2ModelSegmentGroup;
  oGrp3 : THL7V2ModelSegmentGroup;
  oGrp4 : THL7V2ModelSegmentGroup;
  oGrp5 : THL7V2ModelSegmentGroup;
  oGrp6 : THL7V2ModelSegmentGroup;
  oGrp7 : THL7V2ModelSegmentGroup;
  oGrp8 : THL7V2ModelSegmentGroup;
  oGrp9 : THL7V2ModelSegmentGroup;
Begin
  oStructures.Add('?', 'unknown', '', '', '');
  oStructure := oStructures.Add('ACK', 'Standard Acknowlegdement', 'A01', 'ACK', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A01', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A01', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A02', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A02', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A03', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A03', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A04', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A04', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A05', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A05', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A06', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A06', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A07', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A07', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A08', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A08', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A09', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A09', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A10', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A10', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A11', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A11', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A12', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A12', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A13', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A13', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A14', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A14', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A15', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A15', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A16', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A16', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A17', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A17', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A18', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A18', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A20', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A20', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A21', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A21', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A22', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A22', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A23', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A23', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A24', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A24', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A25', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A25', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A26', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A26', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A27', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A27', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A28', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A28', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A29', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A29', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A30', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A30', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A31', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A31', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A32', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A32', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A33', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A33', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A34', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A34', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A35', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A35', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A36', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A36', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A37', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A37', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A38', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A38', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A39', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A39', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A40', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A40', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A41', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A41', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A42', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A42', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A43', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A43', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A44', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A44', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A45', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A45', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A46', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A46', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A47', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A47', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A48', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A48', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A49', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A49', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A50', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A50', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_A51', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_A51', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_I07', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_I07', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_P01', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_P01', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_P02', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_P02', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_P03', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_P03', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_P05', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_P05', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_P06', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_P06', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_Q03', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_Q03', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_Q05', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_Q05', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_R01', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_R01', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
  oStructure := oStructures.Add('ACK_T01', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_T01', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_T02', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_T02', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_T03', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_T03', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_T04', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_T04', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_T05', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_T05', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_T06', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_T06', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_T07', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_T07', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_T08', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_T08', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_T09', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_T09', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_T10', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_T10', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ACK_T11', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ACK_T11', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
  oStructure := oStructures.Add('ADR_A19', '', 'A19', 'ADR', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADR_A19', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QAK', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRF', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('QUERY_RESPONSE', False, True, gtGroup);
      oGrp1.Children.Add('EVN', True, False, gtSingle);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp1.Children.Add('PD1', True, False, gtSingle);
      oGrp1.Children.Add('NK1', True, True, gtSingle);
      oGrp1.Children.Add('PV1', False, False, gtSingle);
      oGrp1.Children.Add('PV2', True, False, gtSingle);
      oGrp1.Children.Add('DB1', True, True, gtSingle);
      oGrp1.Children.Add('OBX', True, True, gtSingle);
      oGrp1.Children.Add('AL1', True, True, gtSingle);
      oGrp1.Children.Add('DG1', True, True, gtSingle);
      oGrp1.Children.Add('DRG', True, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('PROCEDURE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('PR1', False, False, gtSingle);
          oGrp3.Children.Add('ROL', True, True, gtSingle);
      oGrp1.Children.Add('GT1', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('INSURANCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('IN1', False, False, gtSingle);
          oGrp3.Children.Add('IN2', True, False, gtSingle);
          oGrp3.Children.Add('IN3', True, True, gtSingle);
      oGrp1.Children.Add('ACC', True, False, gtSingle);
      oGrp1.Children.Add('UB1', True, False, gtSingle);
      oGrp1.Children.Add('UB2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('ADT_A01', 'General', 'A01', 'ADT', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A01', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NK1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DB1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('OBX', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('AL1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DG1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DRG', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROCEDURE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('PR1', False, False, gtSingle);
        oGrp2.Children.Add('ROL', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('GT1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('INSURANCE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('IN1', False, False, gtSingle);
        oGrp2.Children.Add('IN2', True, False, gtSingle);
        oGrp2.Children.Add('IN3', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('ACC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('UB1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('UB2', True, False, gtSingle);
  oStructure := oStructures.Add('ADT_A02', 'Transfer', 'A02', 'ADT', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A02', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DB1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('OBX', True, True, gtSingle);
  oStructure := oStructures.Add('ADT_A03', 'Discharge', 'A03', 'ADT', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A03', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DB1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DG1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DRG', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROCEDURE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('PR1', False, False, gtSingle);
        oGrp2.Children.Add('ROL', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('OBX', True, True, gtSingle);
  oStructure := oStructures.Add('ADT_A04', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A04', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NK1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DB1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('OBX', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('AL1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DG1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DRG', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROCEDURE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('PR1', False, False, gtSingle);
        oGrp2.Children.Add('ROL', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('GT1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('INSURANCE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('IN1', False, False, gtSingle);
        oGrp2.Children.Add('IN2', True, False, gtSingle);
        oGrp2.Children.Add('IN3', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('ACC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('UB1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('UB2', True, False, gtSingle);
  oStructure := oStructures.Add('ADT_A05', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A05', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NK1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DB1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('OBX', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('AL1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DG1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DRG', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROCEDURE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('PR1', False, False, gtSingle);
        oGrp2.Children.Add('ROL', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('GT1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('INSURANCE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('IN1', False, False, gtSingle);
        oGrp2.Children.Add('IN2', True, False, gtSingle);
        oGrp2.Children.Add('IN3', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('ACC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('UB1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('UB2', True, False, gtSingle);
  oStructure := oStructures.Add('ADT_A06', '', 'A06', 'ADT', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A06', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MRG', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NK1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DB1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('OBX', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('AL1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DG1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DRG', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROCEDURE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('PR1', False, False, gtSingle);
        oGrp2.Children.Add('ROL', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('GT1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('INSURANCE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('IN1', False, False, gtSingle);
        oGrp2.Children.Add('IN2', True, False, gtSingle);
        oGrp2.Children.Add('IN3', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('ACC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('UB1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('UB2', True, False, gtSingle);
  oStructure := oStructures.Add('ADT_A07', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A07', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MRG', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NK1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DB1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('OBX', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('AL1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DG1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DRG', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROCEDURE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('PR1', False, False, gtSingle);
        oGrp2.Children.Add('ROL', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('GT1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('INSURANCE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('IN1', False, False, gtSingle);
        oGrp2.Children.Add('IN2', True, False, gtSingle);
        oGrp2.Children.Add('IN3', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('ACC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('UB1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('UB2', True, False, gtSingle);
  oStructure := oStructures.Add('ADT_A08', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A08', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NK1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DB1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('OBX', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('AL1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DG1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DRG', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROCEDURE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('PR1', False, False, gtSingle);
        oGrp2.Children.Add('ROL', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('GT1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('INSURANCE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('IN1', False, False, gtSingle);
        oGrp2.Children.Add('IN2', True, False, gtSingle);
        oGrp2.Children.Add('IN3', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('ACC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('UB1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('UB2', True, False, gtSingle);
  oStructure := oStructures.Add('ADT_A09', 'Track/Cancel', 'A09', 'ADT', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A09', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DB1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('OBX', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DG1', True, True, gtSingle);
  oStructure := oStructures.Add('ADT_A10', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A10', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DB1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('OBX', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DG1', True, True, gtSingle);
  oStructure := oStructures.Add('ADT_A11', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A11', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DB1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('OBX', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DG1', True, True, gtSingle);
  oStructure := oStructures.Add('ADT_A12', '', 'A12', 'ADT', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A12', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DB1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('OBX', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DG1', True, False, gtSingle);
  oStructure := oStructures.Add('ADT_A13', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A13', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NK1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DB1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('OBX', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('AL1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DG1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DRG', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROCEDURE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('PR1', False, False, gtSingle);
        oGrp2.Children.Add('ROL', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('GT1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('INSURANCE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('IN1', False, False, gtSingle);
        oGrp2.Children.Add('IN2', True, False, gtSingle);
        oGrp2.Children.Add('IN3', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('ACC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('UB1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('UB2', True, False, gtSingle);
  oStructure := oStructures.Add('ADT_A14', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A14', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NK1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DB1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('OBX', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('AL1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DG1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DRG', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROCEDURE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('PR1', False, False, gtSingle);
        oGrp2.Children.Add('ROL', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('GT1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('INSURANCE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('IN1', False, False, gtSingle);
        oGrp2.Children.Add('IN2', True, False, gtSingle);
        oGrp2.Children.Add('IN3', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('ACC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('UB1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('UB2', True, False, gtSingle);
  oStructure := oStructures.Add('ADT_A15', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A15', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DB1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('OBX', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DG1', True, True, gtSingle);
  oStructure := oStructures.Add('ADT_A16', '', 'A16', 'ADT', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A16', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DB1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('OBX', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DG1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DRG', True, False, gtSingle);
  oStructure := oStructures.Add('ADT_A17', '', 'A17', 'ADT', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A17', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DB1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('OBX', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DB1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('OBX', True, True, gtSingle);
  oStructure := oStructures.Add('ADT_A18', '', 'A18', 'ADT', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A18', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MRG', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
  oStructure := oStructures.Add('ADT_A20', '', 'A20', 'ADT', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A20', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NPU', False, False, gtSingle);
  oStructure := oStructures.Add('ADT_A21', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A21', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DB1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('OBX', True, True, gtSingle);
  oStructure := oStructures.Add('ADT_A22', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A22', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DB1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('OBX', True, True, gtSingle);
  oStructure := oStructures.Add('ADT_A23', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A23', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DB1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('OBX', True, True, gtSingle);
  oStructure := oStructures.Add('ADT_A24', '', 'A24', 'ADT', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A24', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DB1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DB1', True, True, gtSingle);
  oStructure := oStructures.Add('ADT_A25', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A25', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DB1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('OBX', True, True, gtSingle);
  oStructure := oStructures.Add('ADT_A26', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A26', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DB1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('OBX', True, True, gtSingle);
  oStructure := oStructures.Add('ADT_A27', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A27', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DB1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('OBX', True, True, gtSingle);
  oStructure := oStructures.Add('ADT_A28', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A28', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NK1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DB1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('OBX', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('AL1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DG1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DRG', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROCEDURE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('PR1', False, False, gtSingle);
        oGrp2.Children.Add('ROL', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('GT1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('INSURANCE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('IN1', False, False, gtSingle);
        oGrp2.Children.Add('IN2', True, False, gtSingle);
        oGrp2.Children.Add('IN3', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('ACC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('UB1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('UB2', True, False, gtSingle);
  oStructure := oStructures.Add('ADT_A29', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A29', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DB1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('OBX', True, True, gtSingle);
  oStructure := oStructures.Add('ADT_A30', '', 'A30', 'ADT', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A30', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MRG', False, False, gtSingle);
  oStructure := oStructures.Add('ADT_A31', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A31', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NK1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DB1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('OBX', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('AL1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DG1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DRG', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROCEDURE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('PR1', False, False, gtSingle);
        oGrp2.Children.Add('ROL', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('GT1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('INSURANCE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('IN1', False, False, gtSingle);
        oGrp2.Children.Add('IN2', True, False, gtSingle);
        oGrp2.Children.Add('IN3', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('ACC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('UB1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('UB2', True, False, gtSingle);
  oStructure := oStructures.Add('ADT_A32', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A32', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DB1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('OBX', True, True, gtSingle);
  oStructure := oStructures.Add('ADT_A33', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A33', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DB1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('OBX', True, True, gtSingle);
  oStructure := oStructures.Add('ADT_A34', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A34', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MRG', False, False, gtSingle);
  oStructure := oStructures.Add('ADT_A35', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A35', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MRG', False, False, gtSingle);
  oStructure := oStructures.Add('ADT_A36', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A36', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MRG', False, False, gtSingle);
  oStructure := oStructures.Add('ADT_A37', '', 'A37', 'ADT', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A37', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DB1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DB1', True, True, gtSingle);
  oStructure := oStructures.Add('ADT_A38', '', 'A38', 'ADT', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A38', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DB1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('OBX', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DG1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DRG', False, False, gtSingle);
  oStructure := oStructures.Add('ADT_A39', '', 'A39', 'ADT', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A39', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', False, True, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp1.Children.Add('PD1', True, False, gtSingle);
      oGrp1.Children.Add('MRG', False, False, gtSingle);
      oGrp1.Children.Add('PV1', True, False, gtSingle);
  oStructure := oStructures.Add('ADT_A40', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A40', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', False, True, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp1.Children.Add('PD1', True, False, gtSingle);
      oGrp1.Children.Add('MRG', False, False, gtSingle);
      oGrp1.Children.Add('PV1', True, False, gtSingle);
  oStructure := oStructures.Add('ADT_A41', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A41', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', False, True, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp1.Children.Add('PD1', True, False, gtSingle);
      oGrp1.Children.Add('MRG', False, False, gtSingle);
      oGrp1.Children.Add('PV1', True, False, gtSingle);
  oStructure := oStructures.Add('ADT_A42', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A42', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', False, True, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp1.Children.Add('PD1', True, False, gtSingle);
      oGrp1.Children.Add('MRG', False, False, gtSingle);
      oGrp1.Children.Add('PV1', True, False, gtSingle);
  oStructure := oStructures.Add('ADT_A43', '', 'A43', 'ADT', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A43', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', False, True, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp1.Children.Add('PD1', True, False, gtSingle);
      oGrp1.Children.Add('MRG', False, False, gtSingle);
  oStructure := oStructures.Add('ADT_A44', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A44', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', False, True, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp1.Children.Add('PD1', True, False, gtSingle);
      oGrp1.Children.Add('MRG', False, False, gtSingle);
  oStructure := oStructures.Add('ADT_A45', '', 'A45', 'ADT', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A45', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('MERGE_INFO', False, True, gtGroup);
      oGrp1.Children.Add('MRG', False, False, gtSingle);
      oGrp1.Children.Add('PV1', False, False, gtSingle);
  oStructure := oStructures.Add('ADT_A46', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A46', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MRG', False, False, gtSingle);
  oStructure := oStructures.Add('ADT_A47', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A47', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MRG', False, False, gtSingle);
  oStructure := oStructures.Add('ADT_A48', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A48', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MRG', False, False, gtSingle);
  oStructure := oStructures.Add('ADT_A49', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A49', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MRG', False, False, gtSingle);
  oStructure := oStructures.Add('ADT_A50', '', 'A50', 'ADT', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A50', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MRG', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
  oStructure := oStructures.Add('ADT_A51', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ADT_A51', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MRG', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
  oStructure := oStructures.Add('BAR_P01', 'open account', 'P01', 'BAR', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('BAR_P01', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('VISIT', False, True, gtGroup);
      oGrp1.Children.Add('PV1', True, False, gtSingle);
      oGrp1.Children.Add('PV2', True, False, gtSingle);
      oGrp1.Children.Add('DB1', True, True, gtSingle);
      oGrp1.Children.Add('OBX', True, True, gtSingle);
      oGrp1.Children.Add('AL1', True, True, gtSingle);
      oGrp1.Children.Add('DG1', True, True, gtSingle);
      oGrp1.Children.Add('DRG', True, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('PROCEDURE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('PR1', False, False, gtSingle);
          oGrp3.Children.Add('ROL', True, True, gtSingle);
      oGrp1.Children.Add('GT1', True, True, gtSingle);
      oGrp1.Children.Add('NK1', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('INSURANCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('IN1', False, False, gtSingle);
          oGrp3.Children.Add('IN2', True, False, gtSingle);
          oGrp3.Children.Add('IN3', True, True, gtSingle);
      oGrp1.Children.Add('ACC', True, False, gtSingle);
      oGrp1.Children.Add('UB1', True, False, gtSingle);
      oGrp1.Children.Add('UB2', True, False, gtSingle);
  oStructure := oStructures.Add('BAR_P02', '', 'P02', 'BAR', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('BAR_P02', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', False, True, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp1.Children.Add('PD1', True, False, gtSingle);
      oGrp1.Children.Add('PV1', True, False, gtSingle);
      oGrp1.Children.Add('DB1', True, True, gtSingle);
  oStructure := oStructures.Add('BAR_P05', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('BAR_P05', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('VISIT', False, True, gtGroup);
      oGrp1.Children.Add('PV1', True, False, gtSingle);
      oGrp1.Children.Add('PV2', True, False, gtSingle);
      oGrp1.Children.Add('DB1', True, True, gtSingle);
      oGrp1.Children.Add('OBX', True, True, gtSingle);
      oGrp1.Children.Add('AL1', True, True, gtSingle);
      oGrp1.Children.Add('DG1', True, True, gtSingle);
      oGrp1.Children.Add('DRG', True, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('PROCEDURE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('PR1', False, False, gtSingle);
          oGrp3.Children.Add('ROL', True, True, gtSingle);
      oGrp1.Children.Add('GT1', True, True, gtSingle);
      oGrp1.Children.Add('NK1', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('INSURANCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('IN1', False, False, gtSingle);
          oGrp3.Children.Add('IN2', True, False, gtSingle);
          oGrp3.Children.Add('IN3', True, True, gtSingle);
      oGrp1.Children.Add('ACC', True, False, gtSingle);
      oGrp1.Children.Add('UB1', True, False, gtSingle);
      oGrp1.Children.Add('UB2', True, False, gtSingle);
  oStructure := oStructures.Add('BAR_P06', '', 'P06', 'BAR', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('BAR_P06', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', False, True, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp1.Children.Add('PV1', True, False, gtSingle);
  oStructure := oStructures.Add('CRM_C01', '', 'C01', 'CRM', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('CRM_C01', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', False, True, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp1.Children.Add('PV1', True, False, gtSingle);
      oGrp1.Children.Add('CSR', False, False, gtSingle);
      oGrp1.Children.Add('CSP', True, True, gtSingle);
  oStructure := oStructures.Add('CSU_C09', '', 'C09', 'CSU', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('CSU_C09', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', False, True, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp1.Children.Add('PD1', True, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('VISIT', True, False, gtGroup);
        oGrp2.Children.Add('PV1', False, False, gtSingle);
        oGrp2.Children.Add('PV2', True, False, gtSingle);
      oGrp1.Children.Add('CSR', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('STUDY_PHASE', False, True, gtGroup);
        oGrp2.Children.Add('CSP', True, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('STUDY_SCHEDULE', False, True, gtGroup);
          oGrp3.Children.Add('CSS', True, False, gtSingle);
          oGrp4 := oGrp3.Children.Add('STUDY_OBSERVATION', False, True, gtGroup);
            oGrp4.Children.Add('ORC', True, False, gtSingle);
            oGrp4.Children.Add('OBR', False, False, gtSingle);
            oGrp4.Children.Add('OBX', False, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('STUDY_PHARM', False, True, gtGroup);
            oGrp4.Children.Add('ORC', True, False, gtSingle);
            oGrp5 := oGrp4.Children.Add('RX_ADMIN', False, True, gtGroup);
              oGrp5.Children.Add('RXA', False, False, gtSingle);
              oGrp5.Children.Add('RXR', False, False, gtSingle);
  oStructure := oStructures.Add('DFT_P03', '', 'P03', 'DFT', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('DFT_P03', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DB1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('OBX', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('FINANCIAL', False, True, gtGroup);
      oGrp1.Children.Add('FT1', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('FINANCIAL_PROCEDURE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('PR1', False, False, gtSingle);
          oGrp3.Children.Add('ROL', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DG1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DRG', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('GT1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('INSURANCE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('IN1', False, False, gtSingle);
        oGrp2.Children.Add('IN2', True, False, gtSingle);
        oGrp2.Children.Add('IN3', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('ACC', True, False, gtSingle);
  oStructure := oStructures.Add('DOC_T12', '', 'T12', 'DOC', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('DOC_T12', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QAK', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('RESULT', False, True, gtGroup);
      oGrp1.Children.Add('EVN', True, False, gtSingle);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp1.Children.Add('PV1', False, False, gtSingle);
      oGrp1.Children.Add('TXA', False, False, gtSingle);
      oGrp1.Children.Add('OBX', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('DSR_Q01', '', 'Q01', 'DSR', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('DSR_Q01', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QAK', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRF', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DSP', False, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('DSR_Q03', '', 'Q03', 'DSR', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('DSR_Q03', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QAK', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRF', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DSP', False, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructures.Add('EDR_Q01', '', 'Q01', 'EDR', '');
  oStructure := oStructures.Add('EDR_R07', '', 'R07', 'EDR', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('EDR_R07', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QAK', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DSP', False, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('EQQ_Q04', '', 'Q04', 'EQQ', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('EQQ_Q04', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EQL', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructures.Add('ERP_Q01', '', 'Q01', 'ERP', '');
  oStructure := oStructures.Add('ERP_R09', '', 'R09', 'ERP', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ERP_R09', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QAK', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERQ', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('MDM_T01', '', 'T01', 'MDM', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('MDM_T01', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('TXA', False, False, gtSingle);
  oStructure := oStructures.Add('MDM_T02', '', 'T02', 'MDM', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('MDM_T02', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('TXA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('OBX', False, True, gtSingle);
  oStructure := oStructures.Add('MDM_T03', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('MDM_T03', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('TXA', False, False, gtSingle);
  oStructure := oStructures.Add('MDM_T04', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('MDM_T04', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('TXA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('OBX', False, False, gtSingle);
  oStructure := oStructures.Add('MDM_T05', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('MDM_T05', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('TXA', False, False, gtSingle);
  oStructure := oStructures.Add('MDM_T06', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('MDM_T06', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('TXA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('OBX', False, True, gtSingle);
  oStructure := oStructures.Add('MDM_T07', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('MDM_T07', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('TXA', False, False, gtSingle);
  oStructure := oStructures.Add('MDM_T08', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('MDM_T08', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('TXA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('OBX', False, True, gtSingle);
  oStructure := oStructures.Add('MDM_T09', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('MDM_T09', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('TXA', False, False, gtSingle);
  oStructure := oStructures.Add('MDM_T10', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('MDM_T10', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('TXA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('OBX', False, True, gtSingle);
  oStructure := oStructures.Add('MDM_T11', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('MDM_T11', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PV1', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('TXA', False, False, gtSingle);
  oStructures.Add('MFD_P09', '', 'P09', 'MFD', '');
  oStructure := oStructures.Add('MFK_M01', '', 'M01', 'MFK', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('MFK_M01', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MFI', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MFA', True, True, gtSingle);
  oStructure := oStructures.Add('MFK_M04', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('MFK_M04', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MFI', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MFA', True, True, gtSingle);
  oStructure := oStructures.Add('MFK_M05', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('MFK_M05', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MFI', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MFA', True, True, gtSingle);
  oStructure := oStructures.Add('MFK_M06', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('MFK_M06', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MFI', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MFA', True, True, gtSingle);
  oStructure := oStructures.Add('MFN_M01', '', 'M01', 'MFN', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('MFN_M01', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MFI', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('MF', False, True, gtGroup);
      oGrp1.Children.Add('MFE', False, False, gtSingle);
      oGrp1.Children.Add('Zxx', True, False, gtSingle);
  oStructure := oStructures.Add('MFN_M02', '', 'M02', 'MFN', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('MFN_M02', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MFI', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('MF_STAFF', False, True, gtGroup);
      oGrp1.Children.Add('MFE', False, False, gtSingle);
      oGrp1.Children.Add('STF', False, False, gtSingle);
      oGrp1.Children.Add('PRA', True, False, gtSingle);
  oStructure := oStructures.Add('MFN_M03', '', 'M03', 'MFN', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('MFN_M03', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MFI', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('MF_TEST', False, True, gtGroup);
      oGrp1.Children.Add('MFE', False, False, gtSingle);
      oGrp1.Children.Add('OM1', False, False, gtSingle);
      oGrp1.Children.Add('Hxx', True, False, gtSingle);
  oStructure := oStructures.Add('MFN_M04', '', 'M04', 'MFN', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('MFN_M04', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MFI', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('MF_CDM', False, True, gtGroup);
      oGrp1.Children.Add('MFE', False, False, gtSingle);
      oGrp1.Children.Add('CDM', False, False, gtSingle);
      oGrp1.Children.Add('PRC', True, True, gtSingle);
  oStructure := oStructures.Add('MFN_M05', '', 'M05', 'MFN', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('MFN_M05', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MFI', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('MF_LOCATION', False, True, gtGroup);
      oGrp1.Children.Add('MFE', False, False, gtSingle);
      oGrp1.Children.Add('LOC', False, False, gtSingle);
      oGrp1.Children.Add('LCH', True, True, gtSingle);
      oGrp1.Children.Add('LRL', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('MF_LOC_DEPT', False, True, gtGroup);
        oGrp2.Children.Add('LDP', False, False, gtSingle);
        oGrp2.Children.Add('LCH', True, True, gtSingle);
        oGrp2.Children.Add('LCC', True, True, gtSingle);
  oStructure := oStructures.Add('MFN_M06', '', 'M06', 'MFN', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('MFN_M06', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MFI', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('MF_CLIN_STUDY', False, True, gtGroup);
      oGrp1.Children.Add('MFE', False, False, gtSingle);
      oGrp1.Children.Add('CM0', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('MF_PHASE_SCHED_DETAIL', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('CM1', False, False, gtSingle);
          oGrp3.Children.Add('CM2', True, True, gtSingle);
  oStructures.Add('MFN_M07', '', 'M07', 'MFN', '');
  oStructure := oStructures.Add('MFN_M08', '', 'M08', 'MFN', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('MFN_M08', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MFI', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('MF_TEST_NUMERIC', False, True, gtGroup);
      oGrp1.Children.Add('MFE', False, False, gtSingle);
      oGrp1.Children.Add('OM1', True, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('MF_NUMERIC_OBSERVATION', True, False, gtGroup);
        oGrp2.Children.Add('OM2', True, False, gtSingle);
        oGrp2.Children.Add('OM3', True, False, gtSingle);
        oGrp2.Children.Add('OM4', True, False, gtSingle);
  oStructure := oStructures.Add('MFN_M09', '', 'M09', 'MFN', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('MFN_M09', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MFI', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('MF_TEST_CATEGORICAL', False, True, gtGroup);
      oGrp1.Children.Add('MFE', False, False, gtSingle);
      oGrp1.Children.Add('OM1', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('MF_TEST_CAT_DETAIL', True, False, gtGroup);
        oGrp2.Children.Add('OM3', False, False, gtSingle);
        oGrp2.Children.Add('OM4', True, True, gtSingle);
  oStructure := oStructures.Add('MFN_M10', '', 'M10', 'MFN', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('MFN_M10', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MFI', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('MF_TEST_BATTERIES', False, True, gtGroup);
      oGrp1.Children.Add('MFE', False, False, gtSingle);
      oGrp1.Children.Add('OM1', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('MF_TEST_BATT_DETAIL', True, False, gtGroup);
        oGrp2.Children.Add('OM5', False, False, gtSingle);
        oGrp2.Children.Add('OM4', True, True, gtSingle);
  oStructure := oStructures.Add('MFN_M11', '', 'M11', 'MFN', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('MFN_M11', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MFI', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('MF_TEST_CALCULATED', False, True, gtGroup);
      oGrp1.Children.Add('MFE', False, False, gtSingle);
      oGrp1.Children.Add('OM1', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('MF_TEST_CALC_DETAIL', True, False, gtGroup);
        oGrp2.Children.Add('OM6', False, False, gtSingle);
        oGrp2.Children.Add('OM2', False, False, gtSingle);
  oStructure := oStructures.Add('MFQ_M01', '', 'M01', 'MFQ', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('MFQ_M01', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRF', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('MFR_M01', '', 'M01', 'MFR', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('MFR_M01', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QAK', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRF', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MFI', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('MF_QUERY', False, True, gtGroup);
      oGrp1.Children.Add('MFE', False, False, gtSingle);
      oGrp1.Children.Add('Zxx', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('NMD_N02', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('NMD_N02', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('CLOCK_AND_STATS_WITH_NOTES', False, True, gtGroup);
      oGrp2 := oGrp1.Children.Add('CLOCK', True, False, gtGroup);
        oGrp2.Children.Add('NCK', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('APP_STATS', True, False, gtGroup);
        oGrp2.Children.Add('NST', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('APP_STATUS', True, False, gtGroup);
        oGrp2.Children.Add('NSC', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('NMQ_N01', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('NMQ_N01', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('QRY_WITH_DETAIL', True, False, gtGroup);
      oGrp1.Children.Add('QRD', False, False, gtSingle);
      oGrp1.Children.Add('QRF', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('CLOCK_AND_STATISTICS', False, True, gtGroup);
      oGrp1.Children.Add('NCK', True, False, gtSingle);
      oGrp1.Children.Add('NST', True, False, gtSingle);
      oGrp1.Children.Add('NSC', True, False, gtSingle);
  oStructure := oStructures.Add('NMR_N01', '', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('NMR_N01', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('CLOCK_AND_STATS_WITH_NOTES_ALT', False, True, gtGroup);
      oGrp1.Children.Add('NCK', True, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp1.Children.Add('NST', True, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp1.Children.Add('NSC', True, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
  oStructures.Add('NUL', '', 'NUL', 'NUL', '');
  oStructure := oStructures.Add('OMD_O01', 'Diet Order Message', 'O01', 'ORM', 'order');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('OMD_O01', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', True, False, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp1.Children.Add('PD1', True, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATIENT_VISIT', True, False, gtGroup);
        oGrp2.Children.Add('PV1', False, False, gtSingle);
        oGrp2.Children.Add('PV2', True, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('INSURANCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('IN1', False, False, gtSingle);
          oGrp3.Children.Add('IN2', True, False, gtSingle);
          oGrp3.Children.Add('IN3', True, False, gtSingle);
      oGrp1.Children.Add('GT1', True, False, gtSingle);
      oGrp1.Children.Add('AL1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('ORDER_DIET', False, True, gtGroup);
      oGrp1.Children.Add('ORC', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('DIET', True, False, gtGroup);
        oGrp2.Children.Add('ODS', False, True, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('OBSERVATION', False, True, gtGroup);
          oGrp3.Children.Add('OBX', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('ORDER_TRAY', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('ORC', False, False, gtSingle);
        oGrp2.Children.Add('ODT', False, True, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('OMN_O01', 'non-stock Supply Order Message', 'O01', 'ORM', 'order');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('OMN_O01', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', True, False, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp1.Children.Add('PD1', True, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATIENT_VISIT', True, False, gtGroup);
        oGrp2.Children.Add('PV1', False, False, gtSingle);
        oGrp2.Children.Add('PV2', True, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('INSURANCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('IN1', False, False, gtSingle);
          oGrp3.Children.Add('IN2', True, False, gtSingle);
          oGrp3.Children.Add('IN3', True, False, gtSingle);
      oGrp1.Children.Add('GT1', True, False, gtSingle);
      oGrp1.Children.Add('AL1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('ORDER', False, True, gtGroup);
      oGrp1.Children.Add('ORC', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER_DETAIL', True, False, gtGroup);
        oGrp2.Children.Add('RQD', False, False, gtSingle);
        oGrp2.Children.Add('RQ1', True, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('OBSERVATION', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('OBX', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
      oGrp1.Children.Add('BLG', True, False, gtSingle);
  oStructure := oStructures.Add('OMS_O01', 'Stock Supply Order Message', 'O01', 'ORM', 'order');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('OMS_O01', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', True, False, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp1.Children.Add('PD1', True, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATIENT_VISIT', True, False, gtGroup);
        oGrp2.Children.Add('PV1', False, False, gtSingle);
        oGrp2.Children.Add('PV2', True, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('INSURANCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('IN1', False, False, gtSingle);
          oGrp3.Children.Add('IN2', True, False, gtSingle);
          oGrp3.Children.Add('IN3', True, False, gtSingle);
      oGrp1.Children.Add('GT1', True, False, gtSingle);
      oGrp1.Children.Add('AL1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('ORDER', False, True, gtGroup);
      oGrp1.Children.Add('ORC', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER_DETAIL', True, False, gtGroup);
        oGrp2.Children.Add('RQD', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('OBSERVATION', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('OBX', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
      oGrp1.Children.Add('BLG', True, False, gtSingle);
  oStructure := oStructures.Add('ORD_O02', 'Diet Order Message', 'O02', 'ORR', 'respond');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ORD_O02', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('RESPONSE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('PATIENT', True, False, gtGroup);
        oGrp2.Children.Add('PID', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER_DIET', False, True, gtGroup);
        oGrp2.Children.Add('ORC', False, False, gtSingle);
        oGrp2.Children.Add('ODS', True, True, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER_TRAY', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('ORC', False, False, gtSingle);
          oGrp3.Children.Add('ODT', True, True, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('ORF_R04', '', 'R04', 'ORF', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ORF_R04', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRF', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('QUERY_RESPONSE', False, True, gtGroup);
      oGrp2 := oGrp1.Children.Add('PATIENT', True, False, gtGroup);
        oGrp2.Children.Add('PID', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER', False, True, gtGroup);
        oGrp2.Children.Add('ORC', True, False, gtSingle);
        oGrp2.Children.Add('OBR', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('OBSERVATION', False, True, gtGroup);
          oGrp3.Children.Add('OBX', True, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
        oGrp2.Children.Add('CTI', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QAK', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('ORM_O01', '', 'O01', 'ORM', 'order');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ORM_O01', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', True, False, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp1.Children.Add('PD1', True, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATIENT_VISIT', True, False, gtGroup);
        oGrp2.Children.Add('PV1', False, False, gtSingle);
        oGrp2.Children.Add('PV2', True, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('INSURANCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('IN1', False, False, gtSingle);
          oGrp3.Children.Add('IN2', True, False, gtSingle);
          oGrp3.Children.Add('IN3', True, True, gtSingle);
      oGrp1.Children.Add('GT1', True, False, gtSingle);
      oGrp1.Children.Add('AL1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('ORDER', False, True, gtGroup);
      oGrp1.Children.Add('ORC', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER_DETAIL', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('CHOICE', False, True, gtChoice);
          oGrp3.Children.Add('OBR', False, False, gtSingle);
          oGrp3.Children.Add('RQD', False, False, gtSingle);
          oGrp3.Children.Add('RQ1', False, False, gtSingle);
          oGrp3.Children.Add('ODS', False, False, gtSingle);
          oGrp3.Children.Add('ODT', False, False, gtSingle);
          oGrp3.Children.Add('RXO', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
        oGrp2.Children.Add('DG1', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('OBSERVATION', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('OBX', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
      oGrp1.Children.Add('CTI', True, True, gtSingle);
      oGrp1.Children.Add('BLG', True, False, gtSingle);
  oStructures.Add('ORM_Q06', '', 'Q06', 'ORM', '');
  oStructure := oStructures.Add('ORN_O02', 'non-stock Supply Order Message', 'O02', 'ORR', 'respond');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ORN_O02', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('RESPONSE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('PATIENT', True, False, gtGroup);
        oGrp2.Children.Add('PID', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER', False, True, gtGroup);
        oGrp2.Children.Add('ORC', False, False, gtSingle);
        oGrp2.Children.Add('RQD', False, False, gtSingle);
        oGrp2.Children.Add('RQ1', True, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('ORR_O02', '', 'O02', 'ORR', 'response');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ORR_O02', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('RESPONSE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('PATIENT', True, False, gtGroup);
        oGrp2.Children.Add('PID', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER', False, True, gtGroup);
        oGrp2.Children.Add('ORC', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('CHOICE', False, True, gtChoice);
          oGrp3.Children.Add('OBR', False, False, gtSingle);
          oGrp3.Children.Add('RQD', False, False, gtSingle);
          oGrp3.Children.Add('RQ1', False, False, gtSingle);
          oGrp3.Children.Add('RXO', False, False, gtSingle);
          oGrp3.Children.Add('ODS', False, False, gtSingle);
          oGrp3.Children.Add('ODT', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
        oGrp2.Children.Add('CTI', True, True, gtSingle);
  oStructures.Add('ORR_Q06', '', 'Q06', 'ORR', '');
  oStructure := oStructures.Add('ORS_O02', 'Stock Supply Respond Message', 'O02', 'ORR', 'respond');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ORS_O02', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('RESPONSE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('PATIENT', True, False, gtGroup);
        oGrp2.Children.Add('PID', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER', False, True, gtGroup);
        oGrp2.Children.Add('ORC', False, False, gtSingle);
        oGrp2.Children.Add('RQD', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('ORU_R01', '', 'R01', 'ORU', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ORU_R01', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT_RESULT', False, True, gtGroup);
      oGrp2 := oGrp1.Children.Add('PATIENT', True, False, gtGroup);
        oGrp2.Children.Add('PID', False, False, gtSingle);
        oGrp2.Children.Add('PD1', True, False, gtSingle);
        oGrp2.Children.Add('NK1', True, True, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('VISIT', True, False, gtGroup);
          oGrp3.Children.Add('PV1', False, False, gtSingle);
          oGrp3.Children.Add('PV2', True, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER_OBSERVATION', False, True, gtGroup);
        oGrp2.Children.Add('ORC', True, False, gtSingle);
        oGrp2.Children.Add('OBR', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('OBSERVATION', False, True, gtGroup);
          oGrp3.Children.Add('OBX', True, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
        oGrp2.Children.Add('CTI', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructures.Add('ORU_W01', '', 'W01', 'ORU', '');
  oStructure := oStructures.Add('OSQ_Q06', '', 'Q06', 'OSQ', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('OSQ_Q06', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRF', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('OSR_Q06', '', 'Q06', 'OSR', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('OSR_Q06', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRF', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('RESPONSE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('PATIENT', True, False, gtGroup);
        oGrp2.Children.Add('PID', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('OBSERVATION', False, True, gtGroup);
        oGrp2.Children.Add('ORC', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('CHOICE', False, True, gtChoice);
          oGrp3.Children.Add('OBR', False, False, gtSingle);
          oGrp3.Children.Add('RXO', False, False, gtSingle);
          oGrp3.Children.Add('RQD', False, False, gtSingle);
          oGrp3.Children.Add('RQ1', False, False, gtSingle);
          oGrp3.Children.Add('ODS', False, False, gtSingle);
          oGrp3.Children.Add('ODT', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
        oGrp2.Children.Add('CTI', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('PEX_P07', '', 'P07', 'PEX', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('PEX_P07', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('EVN', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('VISIT', True, False, gtGroup);
      oGrp1.Children.Add('PV1', False, False, gtSingle);
      oGrp1.Children.Add('PV2', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('EXPERIENCE', False, True, gtGroup);
      oGrp1.Children.Add('PES', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('PEX_OBSERVATION', False, True, gtGroup);
        oGrp2.Children.Add('PEO', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('PEX_CAUSE', False, True, gtGroup);
          oGrp3.Children.Add('PCR', False, False, gtSingle);
          oGrp4 := oGrp3.Children.Add('RX_ORDER', True, False, gtGroup);
            oGrp4.Children.Add('RXE', False, False, gtSingle);
            oGrp4.Children.Add('RXR', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('RX_ADMINISTRATION', True, False, gtGroup);
            oGrp5 := oGrp4.Children.Add('', False, True, gtGroup);
              oGrp5.Children.Add('RXA', False, False, gtSingle);
              oGrp5.Children.Add('RXR', True, False, gtSingle);
          oGrp3.Children.Add('PRB', True, True, gtSingle);
          oGrp3.Children.Add('OBX', True, True, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('ASSOCIATED_PERSON', True, False, gtGroup);
            oGrp4.Children.Add('NK1', False, False, gtSingle);
            oGrp5 := oGrp4.Children.Add('ASSOCIATED_RX_ORDER', True, False, gtGroup);
              oGrp5.Children.Add('RXE', False, False, gtSingle);
              oGrp5.Children.Add('RXR', True, True, gtSingle);
            oGrp5 := oGrp4.Children.Add('ASSOCIATED_RX_ADMIN', True, False, gtGroup);
              oGrp6 := oGrp5.Children.Add('', False, True, gtGroup);
                oGrp6.Children.Add('RXA', False, False, gtSingle);
                oGrp6.Children.Add('RXR', True, False, gtSingle);
            oGrp4.Children.Add('PRB', True, True, gtSingle);
            oGrp4.Children.Add('OBX', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('STUDY', True, False, gtGroup);
            oGrp5 := oGrp4.Children.Add('', False, True, gtGroup);
              oGrp5.Children.Add('CSR', False, False, gtSingle);
              oGrp5.Children.Add('CSP', True, True, gtSingle);
  oStructure := oStructures.Add('PGL_PC6', '', 'PC6', 'PGL', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('PGL_PC6', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT_VISIT', True, False, gtGroup);
      oGrp1.Children.Add('PV1', False, False, gtSingle);
      oGrp1.Children.Add('PV2', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('GOAL', False, True, gtGroup);
      oGrp1.Children.Add('GOL', False, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp1.Children.Add('VAR', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('GOAL_ROLE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('ROL', False, False, gtSingle);
          oGrp3.Children.Add('VAR', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATHWAY', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('PTH', False, False, gtSingle);
          oGrp3.Children.Add('VAR', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('OBSERVATION', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('OBX', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PROBLEM', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('PRB', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
          oGrp3.Children.Add('VAR', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('PROBLEM_ROLE', True, False, gtGroup);
            oGrp5 := oGrp4.Children.Add('', False, True, gtGroup);
              oGrp5.Children.Add('ROL', False, False, gtSingle);
              oGrp5.Children.Add('VAR', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('PROBLEM_OBSERVATION', True, False, gtGroup);
            oGrp5 := oGrp4.Children.Add('', False, True, gtGroup);
              oGrp5.Children.Add('OBX', False, False, gtSingle);
              oGrp5.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('ORC', False, False, gtSingle);
          oGrp4 := oGrp3.Children.Add('ORDER_DETAIL', True, False, gtGroup);
            oGrp5 := oGrp4.Children.Add('CHOICE', False, True, gtChoice);
              oGrp5.Children.Add('OBR', False, False, gtSingle);
              oGrp5.Children.Add('RXO', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
            oGrp4.Children.Add('VAR', True, True, gtSingle);
            oGrp5 := oGrp4.Children.Add('ORDER_OBSERVATION', True, False, gtGroup);
              oGrp6 := oGrp5.Children.Add('', False, True, gtGroup);
                oGrp6.Children.Add('OBX', False, False, gtSingle);
                oGrp6.Children.Add('NTE', True, True, gtSingle);
                oGrp6.Children.Add('VAR', True, True, gtSingle);
  oStructure := oStructures.Add('PIN_I07', '', 'I07', 'PIN', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('PIN_I07', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROVIDER', False, True, gtGroup);
      oGrp1.Children.Add('PRD', False, False, gtSingle);
      oGrp1.Children.Add('CTD', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NK1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('GUARANTOR_INSURANCE', True, False, gtGroup);
      oGrp1.Children.Add('GT1', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('INSURANCE', False, True, gtGroup);
        oGrp2.Children.Add('IN1', False, False, gtSingle);
        oGrp2.Children.Add('IN2', True, False, gtSingle);
        oGrp2.Children.Add('IN3', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('PPG_PCG', '', 'PCG', 'PPG', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('PPG_PCG', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT_VISIT', True, False, gtGroup);
      oGrp1.Children.Add('PV1', False, False, gtSingle);
      oGrp1.Children.Add('PV2', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATHWAY', False, True, gtGroup);
      oGrp1.Children.Add('PTH', False, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp1.Children.Add('VAR', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATHWAY_ROLE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('ROL', False, False, gtSingle);
          oGrp3.Children.Add('VAR', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('GOAL', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('GOL', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
          oGrp3.Children.Add('VAR', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('GOAL_ROLE', True, False, gtGroup);
            oGrp5 := oGrp4.Children.Add('', False, True, gtGroup);
              oGrp5.Children.Add('ROL', False, False, gtSingle);
              oGrp5.Children.Add('VAR', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('GOAL_OBSERVATION', True, False, gtGroup);
            oGrp5 := oGrp4.Children.Add('', False, True, gtGroup);
              oGrp5.Children.Add('OBX', False, False, gtSingle);
              oGrp5.Children.Add('NTE', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('PROBLEM', True, False, gtGroup);
            oGrp5 := oGrp4.Children.Add('', False, True, gtGroup);
              oGrp5.Children.Add('PRB', False, False, gtSingle);
              oGrp5.Children.Add('NTE', True, True, gtSingle);
              oGrp5.Children.Add('VAR', True, True, gtSingle);
              oGrp6 := oGrp5.Children.Add('PROBLEM_ROLE', True, False, gtGroup);
                oGrp7 := oGrp6.Children.Add('', False, True, gtGroup);
                  oGrp7.Children.Add('ROL', False, False, gtSingle);
                  oGrp7.Children.Add('VAR', True, True, gtSingle);
              oGrp6 := oGrp5.Children.Add('PROBLEM_OBSERVATION', True, False, gtGroup);
                oGrp7 := oGrp6.Children.Add('', False, True, gtGroup);
                  oGrp7.Children.Add('OBX', False, False, gtSingle);
                  oGrp7.Children.Add('NTE', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('ORDER', True, False, gtGroup);
            oGrp5 := oGrp4.Children.Add('', False, True, gtGroup);
              oGrp5.Children.Add('ORC', False, False, gtSingle);
              oGrp6 := oGrp5.Children.Add('ORDER_DETAIL', True, False, gtGroup);
                oGrp7 := oGrp6.Children.Add('CHOICE', False, True, gtChoice);
                  oGrp7.Children.Add('OBR', False, False, gtSingle);
                  oGrp7.Children.Add('RXO', False, False, gtSingle);
                oGrp6.Children.Add('NTE', True, True, gtSingle);
                oGrp6.Children.Add('VAR', True, True, gtSingle);
                oGrp7 := oGrp6.Children.Add('ORDER_OBSERVATION', True, False, gtGroup);
                  oGrp8 := oGrp7.Children.Add('', False, True, gtGroup);
                    oGrp8.Children.Add('OBX', False, False, gtSingle);
                    oGrp8.Children.Add('NTE', True, True, gtSingle);
                    oGrp8.Children.Add('VAR', True, True, gtSingle);
  oStructure := oStructures.Add('PPP_PCB', '', 'PCB', 'PPP', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('PPP_PCB', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT_VISIT', True, False, gtGroup);
      oGrp1.Children.Add('PV1', False, False, gtSingle);
      oGrp1.Children.Add('PV2', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATHWAY', False, True, gtGroup);
      oGrp1.Children.Add('PTH', False, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp1.Children.Add('VAR', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATHWAY_ROLE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('ROL', False, False, gtSingle);
          oGrp3.Children.Add('VAR', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PROBLEM', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('PRB', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
          oGrp3.Children.Add('VAR', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('PROBLEM_ROLE', True, False, gtGroup);
            oGrp5 := oGrp4.Children.Add('', False, True, gtGroup);
              oGrp5.Children.Add('ROL', False, False, gtSingle);
              oGrp5.Children.Add('VAR', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('PROBLEM_OBSERVATION', True, False, gtGroup);
            oGrp5 := oGrp4.Children.Add('', False, True, gtGroup);
              oGrp5.Children.Add('OBX', False, False, gtSingle);
              oGrp5.Children.Add('NTE', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('GOAL', True, False, gtGroup);
            oGrp5 := oGrp4.Children.Add('', False, True, gtGroup);
              oGrp5.Children.Add('GOL', False, False, gtSingle);
              oGrp5.Children.Add('NTE', True, True, gtSingle);
              oGrp5.Children.Add('VAR', True, True, gtSingle);
              oGrp6 := oGrp5.Children.Add('GOAL_ROLE', True, False, gtGroup);
                oGrp7 := oGrp6.Children.Add('', False, True, gtGroup);
                  oGrp7.Children.Add('ROL', False, False, gtSingle);
                  oGrp7.Children.Add('VAR', True, True, gtSingle);
              oGrp6 := oGrp5.Children.Add('GOAL_OBSERVATION', True, False, gtGroup);
                oGrp7 := oGrp6.Children.Add('', False, True, gtGroup);
                  oGrp7.Children.Add('OBX', False, False, gtSingle);
                  oGrp7.Children.Add('NTE', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('ORDER', True, False, gtGroup);
            oGrp5 := oGrp4.Children.Add('', False, True, gtGroup);
              oGrp5.Children.Add('ORC', False, False, gtSingle);
              oGrp6 := oGrp5.Children.Add('ORDER_DETAIL', True, False, gtGroup);
                oGrp7 := oGrp6.Children.Add('CHOICE', False, True, gtChoice);
                  oGrp7.Children.Add('OBR', False, False, gtSingle);
                  oGrp7.Children.Add('RXO', False, False, gtSingle);
                oGrp6.Children.Add('NTE', True, True, gtSingle);
                oGrp6.Children.Add('VAR', True, True, gtSingle);
                oGrp7 := oGrp6.Children.Add('ORDER_OBSERVATION', True, False, gtGroup);
                  oGrp8 := oGrp7.Children.Add('', False, True, gtGroup);
                    oGrp8.Children.Add('OBX', False, False, gtSingle);
                    oGrp8.Children.Add('NTE', True, True, gtSingle);
                    oGrp8.Children.Add('VAR', True, True, gtSingle);
  oStructure := oStructures.Add('PPR_PC1', '', 'PC1', 'PPR', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('PPR_PC1', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT_VISIT', True, False, gtGroup);
      oGrp1.Children.Add('PV1', False, False, gtSingle);
      oGrp1.Children.Add('PV2', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROBLEM', False, True, gtGroup);
      oGrp1.Children.Add('PRB', False, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp1.Children.Add('VAR', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PROBLEM_ROLE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('ROL', False, False, gtSingle);
          oGrp3.Children.Add('VAR', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATHWAY', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('PTH', False, False, gtSingle);
          oGrp3.Children.Add('VAR', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATHWAY_OBSERVATION', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('OBX', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('GOAL', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('GOL', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
          oGrp3.Children.Add('VAR', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('GOAL_ROLE', True, False, gtGroup);
            oGrp5 := oGrp4.Children.Add('', False, True, gtGroup);
              oGrp5.Children.Add('ROL', False, False, gtSingle);
              oGrp5.Children.Add('VAR', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('GOAL_OBSERVATION', True, False, gtGroup);
            oGrp5 := oGrp4.Children.Add('', False, True, gtGroup);
              oGrp5.Children.Add('OBX', False, False, gtSingle);
              oGrp5.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('ORC', False, False, gtSingle);
          oGrp4 := oGrp3.Children.Add('ORDER_DETAIL', True, False, gtGroup);
            oGrp5 := oGrp4.Children.Add('CHOICE', False, True, gtChoice);
              oGrp5.Children.Add('OBR', False, False, gtSingle);
              oGrp5.Children.Add('RXO', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
            oGrp4.Children.Add('VAR', True, True, gtSingle);
            oGrp5 := oGrp4.Children.Add('ORDER_OBSERVATION', True, False, gtGroup);
              oGrp6 := oGrp5.Children.Add('', False, True, gtGroup);
                oGrp6.Children.Add('OBX', False, False, gtSingle);
                oGrp6.Children.Add('NTE', True, True, gtSingle);
                oGrp6.Children.Add('VAR', True, True, gtSingle);
  oStructure := oStructures.Add('PPT_PCL', '', 'PCL', 'PPT', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('PPT_PCL', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QAK', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', False, True, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATIENT_VISIT', True, False, gtGroup);
        oGrp2.Children.Add('PV1', False, False, gtSingle);
        oGrp2.Children.Add('PV2', True, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATHWAY', False, True, gtGroup);
        oGrp2.Children.Add('PTH', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
        oGrp2.Children.Add('VAR', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('PATHWAY_ROLE', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('ROL', False, False, gtSingle);
            oGrp4.Children.Add('VAR', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('GOAL', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('GOL', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
            oGrp4.Children.Add('VAR', True, True, gtSingle);
            oGrp5 := oGrp4.Children.Add('GOAL_ROLE', True, False, gtGroup);
              oGrp6 := oGrp5.Children.Add('', False, True, gtGroup);
                oGrp6.Children.Add('ROL', False, False, gtSingle);
                oGrp6.Children.Add('VAR', True, True, gtSingle);
            oGrp5 := oGrp4.Children.Add('GOAL_OBSERVATION', True, False, gtGroup);
              oGrp6 := oGrp5.Children.Add('', False, True, gtGroup);
                oGrp6.Children.Add('OBX', False, False, gtSingle);
                oGrp6.Children.Add('NTE', True, True, gtSingle);
            oGrp5 := oGrp4.Children.Add('PROBLEM', True, False, gtGroup);
              oGrp6 := oGrp5.Children.Add('', False, True, gtGroup);
                oGrp6.Children.Add('PRB', False, False, gtSingle);
                oGrp6.Children.Add('NTE', True, True, gtSingle);
                oGrp6.Children.Add('VAR', True, True, gtSingle);
                oGrp7 := oGrp6.Children.Add('PROBLEM_ROLE', True, False, gtGroup);
                  oGrp8 := oGrp7.Children.Add('', False, True, gtGroup);
                    oGrp8.Children.Add('ROL', False, False, gtSingle);
                    oGrp8.Children.Add('VAR', True, True, gtSingle);
                oGrp7 := oGrp6.Children.Add('PROBLEM_OBSERVATION', True, False, gtGroup);
                  oGrp8 := oGrp7.Children.Add('', False, True, gtGroup);
                    oGrp8.Children.Add('OBX', False, False, gtSingle);
                    oGrp8.Children.Add('NTE', True, True, gtSingle);
            oGrp5 := oGrp4.Children.Add('ORDER', True, False, gtGroup);
              oGrp6 := oGrp5.Children.Add('', False, True, gtGroup);
                oGrp6.Children.Add('ORC', False, False, gtSingle);
                oGrp7 := oGrp6.Children.Add('ORDER_DETAIL', True, False, gtGroup);
                  oGrp8 := oGrp7.Children.Add('CHOICE', False, True, gtChoice);
                    oGrp8.Children.Add('OBR', False, False, gtSingle);
                    oGrp8.Children.Add('RXO', False, False, gtSingle);
                  oGrp7.Children.Add('NTE', True, True, gtSingle);
                  oGrp7.Children.Add('VAR', True, True, gtSingle);
                  oGrp8 := oGrp7.Children.Add('ORDER_OBSERVATION', True, False, gtGroup);
                    oGrp9 := oGrp8.Children.Add('', False, True, gtGroup);
                      oGrp9.Children.Add('OBX', False, False, gtSingle);
                      oGrp9.Children.Add('NTE', True, True, gtSingle);
                      oGrp9.Children.Add('VAR', True, True, gtSingle);
  oStructure := oStructures.Add('PPV_PCA', '', 'PCA', 'PPV', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('PPV_PCA', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QAK', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', False, True, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATIENT_VISIT', True, False, gtGroup);
        oGrp2.Children.Add('PV1', False, False, gtSingle);
        oGrp2.Children.Add('PV2', True, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('GOAL', False, True, gtGroup);
        oGrp2.Children.Add('GOL', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
        oGrp2.Children.Add('VAR', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('GOAL_ROLE', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('ROL', False, False, gtSingle);
            oGrp4.Children.Add('VAR', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('GOAL_PATHWAY', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('PTH', False, False, gtSingle);
            oGrp4.Children.Add('VAR', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('GOAL_OBSERVATION', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('OBX', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('PROBLEM', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('PRB', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
            oGrp4.Children.Add('VAR', True, True, gtSingle);
            oGrp5 := oGrp4.Children.Add('PROBLEM_ROLE', True, False, gtGroup);
              oGrp6 := oGrp5.Children.Add('', False, True, gtGroup);
                oGrp6.Children.Add('ROL', False, False, gtSingle);
                oGrp6.Children.Add('VAR', True, True, gtSingle);
            oGrp5 := oGrp4.Children.Add('PROBLEM_OBSERVATION', True, False, gtGroup);
              oGrp6 := oGrp5.Children.Add('', False, True, gtGroup);
                oGrp6.Children.Add('OBX', False, False, gtSingle);
                oGrp6.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('ORDER', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('ORC', False, False, gtSingle);
            oGrp5 := oGrp4.Children.Add('ORDER_DETAIL', True, False, gtGroup);
              oGrp6 := oGrp5.Children.Add('CHOICE', False, True, gtChoice);
                oGrp6.Children.Add('OBR', False, False, gtSingle);
                oGrp6.Children.Add('RXO', False, False, gtSingle);
              oGrp5.Children.Add('NTE', True, True, gtSingle);
              oGrp5.Children.Add('VAR', True, True, gtSingle);
              oGrp6 := oGrp5.Children.Add('ORDER_OBSERVATION', True, False, gtGroup);
                oGrp7 := oGrp6.Children.Add('', False, True, gtGroup);
                  oGrp7.Children.Add('OBX', False, False, gtSingle);
                  oGrp7.Children.Add('NTE', True, True, gtSingle);
                  oGrp7.Children.Add('VAR', True, True, gtSingle);
  oStructure := oStructures.Add('PRR_PC5', '', 'PC5', 'PRR', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('PRR_PC5', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QAK', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', False, True, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATIENT_VISIT', True, False, gtGroup);
        oGrp2.Children.Add('PV1', False, False, gtSingle);
        oGrp2.Children.Add('PV2', True, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('PROBLEM', False, True, gtGroup);
        oGrp2.Children.Add('PRB', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
        oGrp2.Children.Add('VAR', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('PROBLEM_ROLE', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('ROL', False, False, gtSingle);
            oGrp4.Children.Add('VAR', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('PROBLEM_PATHWAY', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('PTH', False, False, gtSingle);
            oGrp4.Children.Add('VAR', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('PROBLEM_OBSERVATION', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('OBX', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('GOAL', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('GOL', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
            oGrp4.Children.Add('VAR', True, True, gtSingle);
            oGrp5 := oGrp4.Children.Add('GOAL_ROLE', True, False, gtGroup);
              oGrp6 := oGrp5.Children.Add('', False, True, gtGroup);
                oGrp6.Children.Add('ROL', False, False, gtSingle);
                oGrp6.Children.Add('VAR', True, True, gtSingle);
            oGrp5 := oGrp4.Children.Add('GOAL_OBSERVATION', True, False, gtGroup);
              oGrp6 := oGrp5.Children.Add('', False, True, gtGroup);
                oGrp6.Children.Add('OBX', False, False, gtSingle);
                oGrp6.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('ORDER', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('ORC', False, False, gtSingle);
            oGrp5 := oGrp4.Children.Add('ORDER_DETAIL', True, False, gtGroup);
              oGrp6 := oGrp5.Children.Add('CHOICE', False, True, gtChoice);
                oGrp6.Children.Add('OBR', False, False, gtSingle);
                oGrp6.Children.Add('RXO', False, False, gtSingle);
              oGrp5.Children.Add('NTE', True, True, gtSingle);
              oGrp5.Children.Add('VAR', True, True, gtSingle);
              oGrp6 := oGrp5.Children.Add('ORDER_OBSERVATION', True, False, gtGroup);
                oGrp7 := oGrp6.Children.Add('', False, True, gtGroup);
                  oGrp7.Children.Add('OBX', False, False, gtSingle);
                  oGrp7.Children.Add('NTE', True, True, gtSingle);
                  oGrp7.Children.Add('VAR', True, True, gtSingle);
  oStructure := oStructures.Add('PTR_PCF', '', 'PCF', 'PTR', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('PTR_PCF', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QAK', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', False, True, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATIENT_VISIT', True, False, gtGroup);
        oGrp2.Children.Add('PV1', False, False, gtSingle);
        oGrp2.Children.Add('PV2', True, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATHWAY', False, True, gtGroup);
        oGrp2.Children.Add('PTH', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
        oGrp2.Children.Add('VAR', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('PATHWAY_ROLE', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('ROL', False, False, gtSingle);
            oGrp4.Children.Add('VAR', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('PROBLEM', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('PRB', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
            oGrp4.Children.Add('VAR', True, True, gtSingle);
            oGrp5 := oGrp4.Children.Add('PROBLEM_ROLE', True, False, gtGroup);
              oGrp6 := oGrp5.Children.Add('', False, True, gtGroup);
                oGrp6.Children.Add('ROL', False, False, gtSingle);
                oGrp6.Children.Add('VAR', True, True, gtSingle);
            oGrp5 := oGrp4.Children.Add('PROBLEM_OBSERVATION', True, False, gtGroup);
              oGrp6 := oGrp5.Children.Add('', False, True, gtGroup);
                oGrp6.Children.Add('OBX', False, False, gtSingle);
                oGrp6.Children.Add('NTE', True, True, gtSingle);
            oGrp5 := oGrp4.Children.Add('GOAL', True, False, gtGroup);
              oGrp6 := oGrp5.Children.Add('', False, True, gtGroup);
                oGrp6.Children.Add('GOL', False, False, gtSingle);
                oGrp6.Children.Add('NTE', True, True, gtSingle);
                oGrp6.Children.Add('VAR', True, True, gtSingle);
                oGrp7 := oGrp6.Children.Add('GOAL_ROLE', True, False, gtGroup);
                  oGrp8 := oGrp7.Children.Add('', False, True, gtGroup);
                    oGrp8.Children.Add('ROL', False, False, gtSingle);
                    oGrp8.Children.Add('VAR', True, True, gtSingle);
                oGrp7 := oGrp6.Children.Add('GOAL_OBSERVATION', True, False, gtGroup);
                  oGrp8 := oGrp7.Children.Add('', False, True, gtGroup);
                    oGrp8.Children.Add('OBX', False, False, gtSingle);
                    oGrp8.Children.Add('NTE', True, True, gtSingle);
            oGrp5 := oGrp4.Children.Add('ORDER', True, False, gtGroup);
              oGrp6 := oGrp5.Children.Add('', False, True, gtGroup);
                oGrp6.Children.Add('ORC', False, False, gtSingle);
                oGrp7 := oGrp6.Children.Add('ORDER_DETAIL', True, False, gtGroup);
                  oGrp8 := oGrp7.Children.Add('CHOICE', False, True, gtChoice);
                    oGrp8.Children.Add('OBR', False, False, gtSingle);
                    oGrp8.Children.Add('RXO', False, False, gtSingle);
                  oGrp7.Children.Add('NTE', True, True, gtSingle);
                  oGrp7.Children.Add('VAR', True, True, gtSingle);
                  oGrp8 := oGrp7.Children.Add('ORDER_OBSERVATION', True, False, gtGroup);
                    oGrp9 := oGrp8.Children.Add('', False, True, gtGroup);
                      oGrp9.Children.Add('OBX', False, False, gtSingle);
                      oGrp9.Children.Add('NTE', True, True, gtSingle);
                      oGrp9.Children.Add('VAR', True, True, gtSingle);
  oStructure := oStructures.Add('QCK_Q02', '', 'Q02', 'QCK', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('QCK_Q02', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QAK', True, False, gtSingle);
  oStructure := oStructures.Add('QRY_A19', '', 'A19', 'QRY', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('QRY_A19', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRF', True, False, gtSingle);
  oStructure := oStructures.Add('QRY_PC4', '', 'PC4', 'QRY', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('QRY_PC4', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRF', True, False, gtSingle);
  oStructure := oStructures.Add('QRY_PC9', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('QRY_PC9', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRF', True, False, gtSingle);
  oStructure := oStructures.Add('QRY_PCE', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('QRY_PCE', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRF', True, False, gtSingle);
  oStructure := oStructures.Add('QRY_PCK', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('QRY_PCK', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRF', True, False, gtSingle);
  oStructure := oStructures.Add('QRY_Q01', '', 'Q01', 'QRY', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('QRY_Q01', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRF', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('QRY_Q02', '', 'Q02', 'QRY', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('QRY_Q02', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRF', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('QRY_R02', '', 'R02', 'QRY', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('QRY_R02', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRF', False, False, gtSingle);
  oStructure := oStructures.Add('QRY_T12', '', 'T12', 'QRY', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('QRY_T12', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRF', True, False, gtSingle);
  oStructure := oStructures.Add('RAR_RAR', '', 'RAR', 'RAR', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RAR_RAR', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('DEFINITION', False, True, gtGroup);
      oGrp1.Children.Add('QRD', False, False, gtSingle);
      oGrp1.Children.Add('QRF', True, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATIENT', True, False, gtGroup);
        oGrp2.Children.Add('PID', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER', False, True, gtGroup);
        oGrp2.Children.Add('ORC', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('ENCODING', True, False, gtGroup);
          oGrp3.Children.Add('RXE', False, False, gtSingle);
          oGrp3.Children.Add('RXR', False, True, gtSingle);
          oGrp3.Children.Add('RXC', True, True, gtSingle);
        oGrp2.Children.Add('RXA', False, True, gtSingle);
        oGrp2.Children.Add('RXR', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('RAS_O01', '', 'O01', 'RAS', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RAS_O01', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', True, False, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp1.Children.Add('PD1', True, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp1.Children.Add('AL1', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATIENT_VISIT', True, False, gtGroup);
        oGrp2.Children.Add('PV1', False, False, gtSingle);
        oGrp2.Children.Add('PV2', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('ORDER', False, True, gtGroup);
      oGrp1.Children.Add('ORC', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER_DETAIL', True, False, gtGroup);
        oGrp2.Children.Add('RXO', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('ORDER_DETAIL_SUPPLEMENT', True, False, gtGroup);
          oGrp3.Children.Add('NTE', False, True, gtSingle);
          oGrp3.Children.Add('RXR', False, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('COMPONENTS', True, False, gtGroup);
            oGrp4.Children.Add('RXC', False, True, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('ENCODING', True, False, gtGroup);
        oGrp2.Children.Add('RXE', False, False, gtSingle);
        oGrp2.Children.Add('RXR', False, True, gtSingle);
        oGrp2.Children.Add('RXC', True, True, gtSingle);
      oGrp1.Children.Add('RXA', False, True, gtSingle);
      oGrp1.Children.Add('RXR', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('OBSERVATION', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('OBX', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp1.Children.Add('CTI', True, True, gtSingle);
  oStructure := oStructures.Add('RCI_I05', '', 'I05', 'RCI', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RCI_I05', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRF', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROVIDER', False, True, gtGroup);
      oGrp1.Children.Add('PRD', False, False, gtSingle);
      oGrp1.Children.Add('CTD', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DG1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DRG', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('AL1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('OBSERVATION', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('OBR', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('RESULTS', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('OBX', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('RCL_I06', '', 'I06', 'RCL', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RCL_I06', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRF', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROVIDER', False, True, gtGroup);
      oGrp1.Children.Add('PRD', False, False, gtSingle);
      oGrp1.Children.Add('CTD', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DG1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DRG', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('AL1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DSP', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('RDE_O01', '', 'O01', 'RDE', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RDE_O01', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', True, False, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp1.Children.Add('PD1', True, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATIENT_VISIT', True, False, gtGroup);
        oGrp2.Children.Add('PV1', False, False, gtSingle);
        oGrp2.Children.Add('PV2', True, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('INSURANCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('IN1', False, False, gtSingle);
          oGrp3.Children.Add('IN2', True, False, gtSingle);
          oGrp3.Children.Add('IN3', True, False, gtSingle);
      oGrp1.Children.Add('GT1', True, False, gtSingle);
      oGrp1.Children.Add('AL1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('ORDER', False, True, gtGroup);
      oGrp1.Children.Add('ORC', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER_DETAIL', True, False, gtGroup);
        oGrp2.Children.Add('RXO', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
        oGrp2.Children.Add('RXR', False, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('COMPONENT', True, False, gtGroup);
          oGrp3.Children.Add('RXC', False, True, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp1.Children.Add('RXE', False, False, gtSingle);
      oGrp1.Children.Add('RXR', False, True, gtSingle);
      oGrp1.Children.Add('RXC', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('OBSERVATION', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('OBX', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp1.Children.Add('CTI', True, True, gtSingle);
End;

procedure Definitions231LoadMessageStructures2(oStructures : THL7V2ModelMessageStructures);
Var
  oStructure : THL7V2ModelMessageStructure;
  oGrp1 : THL7V2ModelSegmentGroup;
  oGrp2 : THL7V2ModelSegmentGroup;
  oGrp3 : THL7V2ModelSegmentGroup;
  oGrp4 : THL7V2ModelSegmentGroup;
  oGrp5 : THL7V2ModelSegmentGroup;
Begin
  oStructure := oStructures.Add('RDO_O01', 'Pharmacy/Treatment Order Message', 'O01', 'ORM', 'order');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RDO_O01', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', True, False, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp1.Children.Add('PD1', True, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATIENT_VISIT', True, False, gtGroup);
        oGrp2.Children.Add('PV1', False, False, gtSingle);
        oGrp2.Children.Add('PV2', True, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('INSURANCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('IN1', False, False, gtSingle);
          oGrp3.Children.Add('IN2', True, False, gtSingle);
          oGrp3.Children.Add('IN3', True, False, gtSingle);
      oGrp1.Children.Add('GT1', True, False, gtSingle);
      oGrp1.Children.Add('AL1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('ORDER', False, True, gtGroup);
      oGrp1.Children.Add('ORC', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER_DETAIL', True, False, gtGroup);
        oGrp2.Children.Add('RXO', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
        oGrp2.Children.Add('RXR', False, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('COMPONENT', True, False, gtGroup);
          oGrp3.Children.Add('RXC', False, True, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('OBSERVATION', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('OBX', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
      oGrp1.Children.Add('BLG', True, False, gtSingle);
  oStructure := oStructures.Add('RDR_RDR', '', 'RDR', 'RDR', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RDR_RDR', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('DEFINITION', False, True, gtGroup);
      oGrp1.Children.Add('QRD', False, False, gtSingle);
      oGrp1.Children.Add('QRF', True, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATIENT', True, False, gtGroup);
        oGrp2.Children.Add('PID', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER', False, True, gtGroup);
        oGrp2.Children.Add('ORC', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('ENCODING', True, False, gtGroup);
          oGrp3.Children.Add('RXE', False, False, gtSingle);
          oGrp3.Children.Add('RXR', False, True, gtSingle);
          oGrp3.Children.Add('RXC', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('DISPENSE', False, True, gtGroup);
          oGrp3.Children.Add('RXD', False, False, gtSingle);
          oGrp3.Children.Add('RXR', False, True, gtSingle);
          oGrp3.Children.Add('RXC', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('RDS_O01', '', 'O01', 'RDS', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RDS_O01', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', True, False, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp1.Children.Add('PD1', True, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp1.Children.Add('AL1', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATIENT_VISIT', True, False, gtGroup);
        oGrp2.Children.Add('PV1', False, False, gtSingle);
        oGrp2.Children.Add('PV2', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('ORDER', False, True, gtGroup);
      oGrp1.Children.Add('ORC', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER_DETAIL', True, False, gtGroup);
        oGrp2.Children.Add('RXO', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('ORDER_DETAIL_SUPPLEMENT', True, False, gtGroup);
          oGrp3.Children.Add('NTE', False, True, gtSingle);
          oGrp3.Children.Add('RXR', False, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('COMPONENT', True, False, gtGroup);
            oGrp4.Children.Add('RXC', False, True, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('ENCODING', True, False, gtGroup);
        oGrp2.Children.Add('RXE', False, False, gtSingle);
        oGrp2.Children.Add('RXR', False, True, gtSingle);
        oGrp2.Children.Add('RXC', True, True, gtSingle);
      oGrp1.Children.Add('RXD', False, False, gtSingle);
      oGrp1.Children.Add('RXR', False, True, gtSingle);
      oGrp1.Children.Add('RXC', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('OBSERVATION', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('OBX', True, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('REF_I12', '', 'I12', 'REF', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('REF_I12', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('RF1', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('AUTHORIZATION_CONTACT', True, False, gtGroup);
      oGrp1.Children.Add('AUT', False, False, gtSingle);
      oGrp1.Children.Add('CTD', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROVIDER', False, True, gtGroup);
      oGrp1.Children.Add('PRD', False, False, gtSingle);
      oGrp1.Children.Add('CTD', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NK1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('GT1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('INSURANCE', True, True, gtGroup);
      oGrp1.Children.Add('IN1', False, False, gtSingle);
      oGrp1.Children.Add('IN2', True, False, gtSingle);
      oGrp1.Children.Add('IN3', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ACC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DG1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DRG', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('AL1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROCEDURE', True, True, gtGroup);
      oGrp1.Children.Add('PR1', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('AUTHORIZATION_CONTACT', True, False, gtGroup);
        oGrp2.Children.Add('AUT', False, False, gtSingle);
        oGrp2.Children.Add('CTD', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('OBSERVATION', True, True, gtGroup);
      oGrp1.Children.Add('OBR', False, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('RESULTS_NOTES', True, True, gtGroup);
        oGrp2.Children.Add('OBX', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT_VISIT', True, False, gtGroup);
      oGrp1.Children.Add('PV1', False, False, gtSingle);
      oGrp1.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('RER_RER', '', 'RER', 'RER', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RER_RER', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('DEFINITION', False, True, gtGroup);
      oGrp1.Children.Add('QRD', False, False, gtSingle);
      oGrp1.Children.Add('QRF', True, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATIENT', True, False, gtGroup);
        oGrp2.Children.Add('PID', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER', False, True, gtGroup);
        oGrp2.Children.Add('ORC', False, False, gtSingle);
        oGrp2.Children.Add('RXE', False, False, gtSingle);
        oGrp2.Children.Add('RXR', False, True, gtSingle);
        oGrp2.Children.Add('RXC', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('RGR_RGR', '', 'RGR', 'RGR', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RGR_RGR', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('DEFINITION', False, True, gtGroup);
      oGrp1.Children.Add('QRD', False, False, gtSingle);
      oGrp1.Children.Add('QRF', True, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATIENT', True, False, gtGroup);
        oGrp2.Children.Add('PID', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER', False, True, gtGroup);
        oGrp2.Children.Add('ORC', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('ENCODING', True, False, gtGroup);
          oGrp3.Children.Add('RXE', False, False, gtSingle);
          oGrp3.Children.Add('RXR', False, True, gtSingle);
          oGrp3.Children.Add('RXC', True, True, gtSingle);
        oGrp2.Children.Add('RXG', False, True, gtSingle);
        oGrp2.Children.Add('RXR', False, True, gtSingle);
        oGrp2.Children.Add('RXC', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('RGV_O01', '', 'O01', 'RGV', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RGV_O01', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', True, False, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp1.Children.Add('AL1', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATIENT_VISIT', True, False, gtGroup);
        oGrp2.Children.Add('PV1', False, False, gtSingle);
        oGrp2.Children.Add('PV2', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('ORDER', False, True, gtGroup);
      oGrp1.Children.Add('ORC', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER_DETAIL', True, False, gtGroup);
        oGrp2.Children.Add('RXO', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('ORDER_DETAIL_SUPPLEMENT', True, False, gtGroup);
          oGrp3.Children.Add('NTE', False, True, gtSingle);
          oGrp3.Children.Add('RXR', False, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('COMPONENTS', True, False, gtGroup);
            oGrp4.Children.Add('RXC', False, True, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('ENCODING', True, False, gtGroup);
        oGrp2.Children.Add('RXE', False, False, gtSingle);
        oGrp2.Children.Add('RXR', False, True, gtSingle);
        oGrp2.Children.Add('RXC', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('GIVE', False, True, gtGroup);
        oGrp2.Children.Add('RXG', False, False, gtSingle);
        oGrp2.Children.Add('RXR', False, True, gtSingle);
        oGrp2.Children.Add('RXC', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('OBSERVATION', False, True, gtGroup);
          oGrp3.Children.Add('OBX', True, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('ROR_R0R', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('ROR_R0R', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('DEFINITION', False, True, gtGroup);
      oGrp1.Children.Add('QRD', False, False, gtSingle);
      oGrp1.Children.Add('QRF', True, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATIENT', True, False, gtGroup);
        oGrp2.Children.Add('PID', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER', False, True, gtGroup);
        oGrp2.Children.Add('ORC', False, False, gtSingle);
        oGrp2.Children.Add('RXO', False, False, gtSingle);
        oGrp2.Children.Add('RXR', False, True, gtSingle);
        oGrp2.Children.Add('RXC', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructures.Add('ROR_ROR', '', 'R0R', 'ROR', '');
  oStructure := oStructures.Add('RPA_I08', '', 'I08', 'RPA', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RPA_I08', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('RF1', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('AUTHORIZATION', True, False, gtGroup);
      oGrp1.Children.Add('AUT', False, False, gtSingle);
      oGrp1.Children.Add('CTD', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROVIDER', False, True, gtGroup);
      oGrp1.Children.Add('PRD', False, False, gtSingle);
      oGrp1.Children.Add('CTD', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NK1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('GT1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('INSURANCE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('IN1', False, False, gtSingle);
        oGrp2.Children.Add('IN2', True, False, gtSingle);
        oGrp2.Children.Add('IN3', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ACC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DG1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DRG', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('AL1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROCEDURE', False, True, gtGroup);
      oGrp1.Children.Add('PR1', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('AUTHORIZATION', True, False, gtGroup);
        oGrp2.Children.Add('AUT', False, False, gtSingle);
        oGrp2.Children.Add('CTD', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('OBSERVATION', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('OBR', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('RESULTS', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('OBX', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('VISIT', True, False, gtGroup);
      oGrp1.Children.Add('PV1', False, False, gtSingle);
      oGrp1.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('RPI_I01', '', 'I01', 'RPI', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RPI_I01', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROVIDER', False, True, gtGroup);
      oGrp1.Children.Add('PRD', False, False, gtSingle);
      oGrp1.Children.Add('CTD', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NK1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('GUARANTOR_INSURANCE', True, False, gtGroup);
      oGrp1.Children.Add('GT1', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('INSURANCE', False, True, gtGroup);
        oGrp2.Children.Add('IN1', False, False, gtSingle);
        oGrp2.Children.Add('IN2', True, False, gtSingle);
        oGrp2.Children.Add('IN3', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('RPI_I04', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RPI_I04', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROVIDER', False, True, gtGroup);
      oGrp1.Children.Add('PRD', False, False, gtSingle);
      oGrp1.Children.Add('CTD', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NK1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('GUARANTOR_INSURANCE', True, False, gtGroup);
      oGrp1.Children.Add('GT1', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('INSURANCE', False, True, gtGroup);
        oGrp2.Children.Add('IN1', False, False, gtSingle);
        oGrp2.Children.Add('IN2', True, False, gtSingle);
        oGrp2.Children.Add('IN3', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('RPL_I02', '', 'I02', 'RPL', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RPL_I02', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROVIDER', False, True, gtGroup);
      oGrp1.Children.Add('PRD', False, False, gtSingle);
      oGrp1.Children.Add('CTD', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DSP', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('RPR_I03', '', 'I03', 'RPR', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RPR_I03', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROVIDER', False, True, gtGroup);
      oGrp1.Children.Add('PRD', False, False, gtSingle);
      oGrp1.Children.Add('CTD', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('RQA_I08', '', 'I08', 'RQA', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RQA_I08', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('RF1', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('AUTHORIZATION', True, False, gtGroup);
      oGrp1.Children.Add('AUT', False, False, gtSingle);
      oGrp1.Children.Add('CTD', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROVIDER', False, True, gtGroup);
      oGrp1.Children.Add('PRD', False, False, gtSingle);
      oGrp1.Children.Add('CTD', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NK1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('GUARANTOR_INSURANCE', True, False, gtGroup);
      oGrp1.Children.Add('GT1', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('INSURANCE', False, True, gtGroup);
        oGrp2.Children.Add('IN1', False, False, gtSingle);
        oGrp2.Children.Add('IN2', True, False, gtSingle);
        oGrp2.Children.Add('IN3', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ACC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DG1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DRG', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('AL1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROCEDURE', True, True, gtGroup);
      oGrp1.Children.Add('PR1', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('AUTHORIZATION', True, False, gtGroup);
        oGrp2.Children.Add('AUT', False, False, gtSingle);
        oGrp2.Children.Add('CTD', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('OBSERVATION', True, True, gtGroup);
      oGrp1.Children.Add('OBR', False, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('RESULTS', True, True, gtGroup);
        oGrp2.Children.Add('OBX', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('VISIT', True, False, gtGroup);
      oGrp1.Children.Add('PV1', False, False, gtSingle);
      oGrp1.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('RQC_I05', '', 'I05', 'RQC', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RQC_I05', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRF', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROVIDER', False, True, gtGroup);
      oGrp1.Children.Add('PRD', False, False, gtSingle);
      oGrp1.Children.Add('CTD', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NK1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('GT1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('RQC_I06', '', 'I06', 'RQC', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RQC_I06', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRF', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROVIDER', False, True, gtGroup);
      oGrp1.Children.Add('PRD', False, False, gtSingle);
      oGrp1.Children.Add('CTD', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NK1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('GT1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('RQI_I01', '', 'I01', 'RQI', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RQI_I01', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROVIDER', False, True, gtGroup);
      oGrp1.Children.Add('PRD', False, False, gtSingle);
      oGrp1.Children.Add('CTD', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NK1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('GUARANTOR_INSURANCE', True, False, gtGroup);
      oGrp1.Children.Add('GT1', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('INSURANCE', False, True, gtGroup);
        oGrp2.Children.Add('IN1', False, False, gtSingle);
        oGrp2.Children.Add('IN2', True, False, gtSingle);
        oGrp2.Children.Add('IN3', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('RQI_I02', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RQI_I02', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROVIDER', False, True, gtGroup);
      oGrp1.Children.Add('PRD', False, False, gtSingle);
      oGrp1.Children.Add('CTD', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NK1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('GUARANTOR_INSURANCE', True, False, gtGroup);
      oGrp1.Children.Add('GT1', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('INSURANCE', False, True, gtGroup);
        oGrp2.Children.Add('IN1', False, False, gtSingle);
        oGrp2.Children.Add('IN2', True, False, gtSingle);
        oGrp2.Children.Add('IN3', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('RQI_I03', '(Implicitly Created)', '', '', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RQI_I03', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROVIDER', False, True, gtGroup);
      oGrp1.Children.Add('PRD', False, False, gtSingle);
      oGrp1.Children.Add('CTD', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NK1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('GUARANTOR_INSURANCE', True, False, gtGroup);
      oGrp1.Children.Add('GT1', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('INSURANCE', False, True, gtGroup);
        oGrp2.Children.Add('IN1', False, False, gtSingle);
        oGrp2.Children.Add('IN2', True, False, gtSingle);
        oGrp2.Children.Add('IN3', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('RQP_I04', '', 'I04', 'RQP', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RQP_I04', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROVIDER', False, True, gtGroup);
      oGrp1.Children.Add('PRD', False, False, gtSingle);
      oGrp1.Children.Add('CTD', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NK1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('GT1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('RQQ_Q09', '', 'Q09', 'RQQ', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RQQ_Q09', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERQ', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('RRA_O02', '', 'O02', 'RRA', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RRA_O02', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('RESPONSE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('PATIENT', True, False, gtGroup);
        oGrp2.Children.Add('PID', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER', False, True, gtGroup);
        oGrp2.Children.Add('ORC', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('ADMINISTRATION', True, False, gtGroup);
          oGrp3.Children.Add('RXA', False, True, gtSingle);
          oGrp3.Children.Add('RXR', False, False, gtSingle);
  oStructure := oStructures.Add('RRD_O02', '', 'O02', 'RRD', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RRD_O02', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('RESPONSE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('PATIENT', True, False, gtGroup);
        oGrp2.Children.Add('PID', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER', False, True, gtGroup);
        oGrp2.Children.Add('ORC', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('DISPENSE', True, False, gtGroup);
          oGrp3.Children.Add('RXD', False, False, gtSingle);
          oGrp3.Children.Add('RXR', False, True, gtSingle);
          oGrp3.Children.Add('RXC', True, True, gtSingle);
  oStructures.Add('RRE_O01', '', 'O01', 'RRE', '');
  oStructure := oStructures.Add('RRE_O02', '', 'O02', 'RRE', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RRE_O02', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('RESPONSE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('PATIENT', True, False, gtGroup);
        oGrp2.Children.Add('PID', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER', False, True, gtGroup);
        oGrp2.Children.Add('ORC', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('ENCODING', True, False, gtGroup);
          oGrp3.Children.Add('RXE', False, False, gtSingle);
          oGrp3.Children.Add('RXR', False, True, gtSingle);
          oGrp3.Children.Add('RXC', True, True, gtSingle);
  oStructure := oStructures.Add('RRG_O02', '', 'O02', 'RRG', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RRG_O02', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('RESPONSE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('PATIENT', True, False, gtGroup);
        oGrp2.Children.Add('PID', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER', False, True, gtGroup);
        oGrp2.Children.Add('ORC', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('GIVE', True, False, gtGroup);
          oGrp3.Children.Add('RXG', False, False, gtSingle);
          oGrp3.Children.Add('RXR', False, True, gtSingle);
          oGrp3.Children.Add('RXC', True, True, gtSingle);
  oStructure := oStructures.Add('RRI_I12', '', 'I12', 'RRI', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RRI_I12', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('RF1', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('AUTHORIZATION_CONTACT', True, False, gtGroup);
      oGrp1.Children.Add('AUT', False, False, gtSingle);
      oGrp1.Children.Add('CTD', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROVIDER_CONTACT', False, True, gtGroup);
      oGrp1.Children.Add('PRD', False, False, gtSingle);
      oGrp1.Children.Add('CTD', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ACC', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DG1', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DRG', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('AL1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PROCEDURE', True, True, gtGroup);
      oGrp1.Children.Add('PR1', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('AUTHORIZATION_CONTACT', True, False, gtGroup);
        oGrp2.Children.Add('AUT', False, False, gtSingle);
        oGrp2.Children.Add('CTD', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('OBSERVATION', True, True, gtGroup);
      oGrp1.Children.Add('OBR', False, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('RESULTS_NOTES', True, True, gtGroup);
        oGrp2.Children.Add('OBX', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT_VISIT', True, False, gtGroup);
      oGrp1.Children.Add('PV1', False, False, gtSingle);
      oGrp1.Children.Add('PV2', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('RRO_O02', 'Pharmacy/Treatment Order Message', 'O02', 'ORR', 'respond');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('RRO_O02', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('RESPONSE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('PATIENT', True, False, gtGroup);
        oGrp2.Children.Add('PID', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('ORDER', False, True, gtGroup);
        oGrp2.Children.Add('ORC', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('ORDER_DETAIL', True, False, gtGroup);
          oGrp3.Children.Add('RXO', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
          oGrp3.Children.Add('RXR', False, True, gtSingle);
          oGrp3.Children.Add('RXC', True, True, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('SIU_S12', '', 'S12', 'SIU', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('SIU_S12', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SCH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('PID', False, False, gtSingle);
        oGrp2.Children.Add('PD1', True, False, gtSingle);
        oGrp2.Children.Add('PV1', True, False, gtSingle);
        oGrp2.Children.Add('PV2', True, False, gtSingle);
        oGrp2.Children.Add('OBX', True, True, gtSingle);
        oGrp2.Children.Add('DG1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('RESOURCES', False, True, gtGroup);
      oGrp1.Children.Add('RGS', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('SERVICE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIS', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('GENERAL_RESOURCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIG', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('LOCATION_RESOURCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIL', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PERSONNEL_RESOURCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIP', False, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('SPQ_Q08', '', 'Q08', 'SPQ', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('SPQ_Q08', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('SPR', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('RDF', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('SQM_S25', '', 'S25', 'SQM', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('SQM_S25', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRF', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('REQUEST', True, False, gtGroup);
      oGrp1.Children.Add('ARQ', False, False, gtSingle);
      oGrp1.Children.Add('APR', True, False, gtSingle);
      oGrp1.Children.Add('PID', True, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('RESOURCES', False, True, gtGroup);
        oGrp2.Children.Add('RGS', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('SERVICE', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('AIS', False, False, gtSingle);
            oGrp4.Children.Add('APR', True, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('GENERAL_RESOURCE', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('AIG', False, False, gtSingle);
            oGrp4.Children.Add('APR', True, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('PERSONNEL_RESOURCE', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('AIP', False, False, gtSingle);
            oGrp4.Children.Add('APR', True, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('LOCATION_RESOURCE', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('AIL', False, False, gtSingle);
            oGrp4.Children.Add('APR', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('SQR_S25', '', 'S25', 'SQR', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('SQR_S25', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QAK', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('SCHEDULE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('SCH', False, False, gtSingle);
        oGrp2.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('PATIENT', True, False, gtGroup);
          oGrp3.Children.Add('PID', False, False, gtSingle);
          oGrp3.Children.Add('PV1', True, False, gtSingle);
          oGrp3.Children.Add('PV2', True, False, gtSingle);
          oGrp3.Children.Add('DG1', True, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('RESOURCES', False, True, gtGroup);
          oGrp3.Children.Add('RGS', False, False, gtSingle);
          oGrp4 := oGrp3.Children.Add('SERVICE', True, False, gtGroup);
            oGrp5 := oGrp4.Children.Add('', False, True, gtGroup);
              oGrp5.Children.Add('AIS', False, False, gtSingle);
              oGrp5.Children.Add('NTE', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('GENERAL_RESOURCE', True, False, gtGroup);
            oGrp5 := oGrp4.Children.Add('', False, True, gtGroup);
              oGrp5.Children.Add('AIG', False, False, gtSingle);
              oGrp5.Children.Add('NTE', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('PERSONNEL_RESOURCE', True, False, gtGroup);
            oGrp5 := oGrp4.Children.Add('', False, True, gtGroup);
              oGrp5.Children.Add('AIP', False, False, gtSingle);
              oGrp5.Children.Add('NTE', True, True, gtSingle);
          oGrp4 := oGrp3.Children.Add('LOCATION_RESOURCE', True, False, gtGroup);
            oGrp5 := oGrp4.Children.Add('', False, True, gtGroup);
              oGrp5.Children.Add('AIL', False, False, gtSingle);
              oGrp5.Children.Add('NTE', True, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('SRM_S01', '', 'S01', 'SRM', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('SRM_S01', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ARQ', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('APR', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NTE', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('PID', False, False, gtSingle);
        oGrp2.Children.Add('PV1', True, False, gtSingle);
        oGrp2.Children.Add('PV2', True, False, gtSingle);
        oGrp2.Children.Add('OBX', True, True, gtSingle);
        oGrp2.Children.Add('DG1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('RESOURCES', False, True, gtGroup);
      oGrp1.Children.Add('RGS', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('SERVICE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIS', False, False, gtSingle);
          oGrp3.Children.Add('APR', True, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('GENERAL_RESOURCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIG', False, False, gtSingle);
          oGrp3.Children.Add('APR', True, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('LOCATION_RESOURCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIL', False, False, gtSingle);
          oGrp3.Children.Add('APR', True, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PERSONNEL_RESOURCE', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('AIP', False, False, gtSingle);
          oGrp3.Children.Add('APR', True, False, gtSingle);
          oGrp3.Children.Add('NTE', True, True, gtSingle);
  oStructures.Add('SRM_T12', '', 'T12', 'SRM', '');
  oStructure := oStructures.Add('SRR_S01', '', 'S01', 'SRR', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('SRR_S01', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('SCHEDULE', True, False, gtGroup);
      oGrp1.Children.Add('SCH', False, False, gtSingle);
      oGrp1.Children.Add('NTE', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('PATIENT', True, False, gtGroup);
        oGrp3 := oGrp2.Children.Add('', False, True, gtGroup);
          oGrp3.Children.Add('PID', False, False, gtSingle);
          oGrp3.Children.Add('PV1', True, False, gtSingle);
          oGrp3.Children.Add('PV2', True, False, gtSingle);
          oGrp3.Children.Add('DG1', True, True, gtSingle);
      oGrp2 := oGrp1.Children.Add('RESOURCES', False, True, gtGroup);
        oGrp2.Children.Add('RGS', False, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('SERVICE', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('AIS', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('GENERAL_RESOURCE', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('AIG', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('LOCATION_RESOURCE', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('AIL', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
        oGrp3 := oGrp2.Children.Add('PERSONNEL_RESOURCE', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('AIP', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
  oStructures.Add('SRR_T12', '', 'T12', 'SRR', '');
  oStructure := oStructures.Add('SUR_P09', '', 'P09', 'SUR', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('SUR_P09', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('FACILITY', False, True, gtGroup);
      oGrp1.Children.Add('FAC', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('PRODUCT', False, True, gtGroup);
        oGrp2.Children.Add('PSH', False, False, gtSingle);
        oGrp2.Children.Add('PDC', False, False, gtSingle);
      oGrp1.Children.Add('PSH', False, False, gtSingle);
      oGrp2 := oGrp1.Children.Add('FACILITY_DETAIL', False, True, gtGroup);
        oGrp2.Children.Add('FAC', False, False, gtSingle);
        oGrp2.Children.Add('PDC', False, False, gtSingle);
        oGrp2.Children.Add('NTE', False, False, gtSingle);
  oStructures.Add('TBR_QQ0', '', 'Q01', 'TBR', '');
  oStructure := oStructures.Add('TBR_R08', '', 'R08', 'TBR', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('TBR_R08', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('ERR', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QAK', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('RDF', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('RDT', False, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('UDM_Q05', '', 'Q05', 'UDM', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('UDM_Q05', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('URD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('URS', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DSP', False, True, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('VQQ_Q07', '', 'Q07', 'VQQ', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('VQQ_Q07', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('VTQ', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('RDF', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('DSC', True, False, gtSingle);
  oStructure := oStructures.Add('VXQ_V01', '', 'V01', 'VXQ', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('VXQ_V01', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRF', True, False, gtSingle);
  oStructure := oStructures.Add('VXR_V03', '', 'V03', 'VXR', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('VXR_V03', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRF', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NK1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT_VISIT', True, False, gtGroup);
      oGrp1.Children.Add('PV1', False, False, gtSingle);
      oGrp1.Children.Add('PV2', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('INSURANCE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('IN1', False, False, gtSingle);
        oGrp2.Children.Add('IN2', True, False, gtSingle);
        oGrp2.Children.Add('IN3', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('ORDER', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('ORC', True, False, gtSingle);
        oGrp2.Children.Add('RXA', False, False, gtSingle);
        oGrp2.Children.Add('RXR', True, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('OBSERVATION', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('OBX', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('VXU_V04', '', 'V04', 'VXU', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('VXU_V04', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PID', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('PD1', True, False, gtSingle);
    oStructure.SegmentMap.Children.Add('NK1', True, True, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', True, False, gtGroup);
      oGrp1.Children.Add('PV1', False, False, gtSingle);
      oGrp1.Children.Add('PV2', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('INSURANCE', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('IN1', False, False, gtSingle);
        oGrp2.Children.Add('IN2', True, False, gtSingle);
        oGrp2.Children.Add('IN3', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('ORDER', True, False, gtGroup);
      oGrp2 := oGrp1.Children.Add('', False, True, gtGroup);
        oGrp2.Children.Add('ORC', True, False, gtSingle);
        oGrp2.Children.Add('RXA', False, False, gtSingle);
        oGrp2.Children.Add('RXR', True, False, gtSingle);
        oGrp3 := oGrp2.Children.Add('OBSERVATION', True, False, gtGroup);
          oGrp4 := oGrp3.Children.Add('', False, True, gtGroup);
            oGrp4.Children.Add('OBX', False, False, gtSingle);
            oGrp4.Children.Add('NTE', True, True, gtSingle);
  oStructure := oStructures.Add('VXX_V02', '', 'V02', 'VXX', '');
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create;
  oStructure.SegmentMap := THL7V2ModelSegmentGroup.Create('VXX_V02', False, False, gtGroup);
    oStructure.SegmentMap.Children.Add('MSH', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('MSA', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRD', False, False, gtSingle);
    oStructure.SegmentMap.Children.Add('QRF', True, False, gtSingle);
    oGrp1 := oStructure.SegmentMap.Children.Add('PATIENT', False, True, gtGroup);
      oGrp1.Children.Add('PID', False, False, gtSingle);
      oGrp1.Children.Add('NK1', True, True, gtSingle);
End;

procedure Definitions231LoadMessageStructures(oStructures : THL7V2ModelMessageStructures);
Begin
  Definitions231LoadMessageStructures1(oStructures);
  Definitions231LoadMessageStructures2(oStructures);
End;

procedure Definitions231LoadEvents(oEvents : THL7V2ModelEvents);
Var
  oEvent : THL7V2ModelEvent;
Begin
  oEvent := oEvents.Add('A01', 'ADT/ACK - Admit / visit notification');
    oEvent.Messages.Add('ADT', 'ADT_A01', 'ACK', 'ACK');
  oEvent := oEvents.Add('A02', 'ADT/ACK -  Transfer a patient');
    oEvent.Messages.Add('ADT', 'ADT_A02', 'ACK', 'ACK');
  oEvent := oEvents.Add('A03', 'ADT/ACK -  Discharge/end visit');
    oEvent.Messages.Add('ADT', 'ADT_A03', 'ACK', 'ACK');
  oEvent := oEvents.Add('A04', 'ADT/ACK -  Register a patient');
    oEvent.Messages.Add('ADT', 'ADT_A01', 'ACK', 'ACK');
  oEvent := oEvents.Add('A05', 'ADT/ACK -  Pre-admit a patient');
    oEvent.Messages.Add('ADT', 'ADT_A01', 'ACK', 'ACK');
  oEvent := oEvents.Add('A06', 'ADT/ACK -  Change an outpatient to an inpatient');
    oEvent.Messages.Add('ADT', 'ADT_A06', 'ACK', 'ACK');
  oEvent := oEvents.Add('A07', 'ADT/ACK -  Change an inpatient to an outpatient');
    oEvent.Messages.Add('ADT', 'ADT_A06', 'ACK', 'ACK');
  oEvent := oEvents.Add('A08', 'ADT/ACK -  Update patient information');
    oEvent.Messages.Add('ADT', 'ADT_A01', 'ACK', 'ACK');
  oEvent := oEvents.Add('A09', 'ADT/ACK -  Patient departing - tracking');
    oEvent.Messages.Add('ADT', 'ADT_A09', 'ACK', 'ACK');
  oEvent := oEvents.Add('A10', 'ADT/ACK -  Patient arriving - tracking');
    oEvent.Messages.Add('ADT', 'ADT_A09', 'ACK', 'ACK');
  oEvent := oEvents.Add('A11', 'ADT/ACK -  Cancel admit/visit notification');
    oEvent.Messages.Add('ADT', 'ADT_A09', 'ACK', 'ACK');
  oEvent := oEvents.Add('A12', 'ADT/ACK -  Cancel transfer');
    oEvent.Messages.Add('ADT', 'ADT_A12', 'ACK', 'ACK');
  oEvent := oEvents.Add('A13', 'ADT/ACK -  Cancel discharge/end visit');
    oEvent.Messages.Add('ADT', 'ADT_A01', 'ACK', 'ACK');
  oEvent := oEvents.Add('A14', 'ADT/ACK -  Pending admit');
    oEvent.Messages.Add('ADT', 'ADT_A01', 'ACK', 'ACK');
  oEvent := oEvents.Add('A15', 'ADT/ACK -  Pending transfer');
    oEvent.Messages.Add('ADT', 'ADT_A09', 'ACK', 'ACK');
  oEvent := oEvents.Add('A16', 'ADT/ACK -  Pending discharge');
    oEvent.Messages.Add('ADT', 'ADT_A16', 'ACK', 'ACK');
  oEvent := oEvents.Add('A17', 'ADT/ACK -  Swap patients');
    oEvent.Messages.Add('ADT', 'ADT_A17', 'ACK', 'ACK');
  oEvent := oEvents.Add('A18', 'ADT/ACK -  Merge patient information');
    oEvent.Messages.Add('ADT', 'ADT_A18', 'ACK', 'ACK');
  oEvent := oEvents.Add('A19', 'QRY/ADR -  Patient query');
    oEvent.Messages.Add('QRY', 'QRY_A19', 'ADR', 'ADR_A19');
  oEvent := oEvents.Add('A20', 'ADT/ACK -  Bed status update');
    oEvent.Messages.Add('ADT', 'ADT_A20', 'ACK', 'ACK');
  oEvent := oEvents.Add('A21', 'ADT/ACK -  Patient goes on a '#147'leave of absence'#148);
    oEvent.Messages.Add('ADT', 'ADT_A02', 'ACK', 'ACK');
  oEvent := oEvents.Add('A22', 'ADT/ACK -  Patient returns from a '#147'leave of absence'#148);
    oEvent.Messages.Add('ADT', 'ADT_A02', 'ACK', 'ACK');
  oEvent := oEvents.Add('A23', 'ADT/ACK -  Delete a patient record');
    oEvent.Messages.Add('ADT', 'ADT_A02', 'ACK', 'ACK');
  oEvent := oEvents.Add('A24', 'ADT/ACK -  Link patient information');
    oEvent.Messages.Add('ADT', 'ADT_A24', 'ACK', 'ACK');
  oEvent := oEvents.Add('A25', 'ADT/ACK -  Cancel pending discharge');
    oEvent.Messages.Add('ADT', 'ADT_A02', 'ACK', 'ACK');
  oEvent := oEvents.Add('A26', 'ADT/ACK -  Cancel pending transfer');
    oEvent.Messages.Add('ADT', 'ADT_A02', 'ACK', 'ACK');
  oEvent := oEvents.Add('A27', 'ADT/ACK -  Cancel pending admit');
    oEvent.Messages.Add('ADT', 'ADT_A02', 'ACK', 'ACK');
  oEvent := oEvents.Add('A28', 'ADT/ACK -  Add person information');
    oEvent.Messages.Add('ADT', 'ADT_A01', 'ACK', 'ACK');
  oEvent := oEvents.Add('A29', 'ADT/ACK -  Delete person information');
    oEvent.Messages.Add('ADT', 'ADT_A02', 'ACK', 'ACK');
  oEvent := oEvents.Add('A30', 'ADT/ACK -  Merge person information');
    oEvent.Messages.Add('ADT', 'ADT_A30', 'ACK', 'ACK');
  oEvent := oEvents.Add('A31', 'ADT/ACK -  Update person information');
    oEvent.Messages.Add('ADT', 'ADT_A01', 'ACK', 'ACK');
  oEvent := oEvents.Add('A32', 'ADT/ACK -  Cancel patient arriving - tracking');
    oEvent.Messages.Add('ADT', 'ADT_A02', 'ACK', 'ACK');
  oEvent := oEvents.Add('A33', 'ADT/ACK -  Cancel patient departing - tracking');
    oEvent.Messages.Add('ADT', 'ADT_A02', 'ACK', 'ACK');
  oEvent := oEvents.Add('A34', 'ADT/ACK -  Merge patient information - patient ID only');
    oEvent.Messages.Add('ADT', 'ADT_A30', 'ACK', 'ACK');
  oEvent := oEvents.Add('A35', 'ADT/ACK -  Merge patient information - account number only');
    oEvent.Messages.Add('ADT', 'ADT_A30', 'ACK', 'ACK');
  oEvent := oEvents.Add('A36', 'ADT/ACK -  Merge patient information - patient ID and account number');
    oEvent.Messages.Add('ADT', 'ADT_A30', 'ACK', 'ACK');
  oEvent := oEvents.Add('A37', 'ADT/ACK -  Unlink patient information');
    oEvent.Messages.Add('ADT', 'ADT_A24', 'ACK', 'ACK');
  oEvent := oEvents.Add('A38', 'ADT/ACK - Cancel pre-admit');
    oEvent.Messages.Add('ADT', 'ADT_A38', 'ACK', 'ACK');
  oEvent := oEvents.Add('A39', 'ADT/ACK - Merge person - external ID');
    oEvent.Messages.Add('ADT', 'ADT_A39', 'ACK', 'ACK');
  oEvent := oEvents.Add('A40', 'ADT/ACK - Merge patient - internal ID');
    oEvent.Messages.Add('ADT', 'ADT_A39', 'ACK', 'ACK');
  oEvent := oEvents.Add('A41', 'ADT/ACK - Merge account - patient account number');
    oEvent.Messages.Add('ADT', 'ADT_A39', 'ACK', 'ACK');
  oEvent := oEvents.Add('A42', 'ADT/ACK - Merge visit - visit number');
    oEvent.Messages.Add('ADT', 'ADT_A39', 'ACK', 'ACK');
  oEvent := oEvents.Add('A43', 'ADT/ACK - Move patient information - internal ID');
    oEvent.Messages.Add('ADT', 'ADT_A43', 'ACK', 'ACK');
  oEvent := oEvents.Add('A44', 'ADT/ACK - Move account information - patient account number');
    oEvent.Messages.Add('ADT', 'ADT_A43', 'ACK', 'ACK');
  oEvent := oEvents.Add('A45', 'ADT/ACK - Move visit information - visit number');
    oEvent.Messages.Add('ADT', 'ADT_A45', 'ACK', 'ACK');
  oEvent := oEvents.Add('A46', 'ADT/ACK - Change external ID');
    oEvent.Messages.Add('ADT', 'ADT_A30', 'ACK', 'ACK');
  oEvent := oEvents.Add('A47', 'ADT/ACK - Change internal ID');
    oEvent.Messages.Add('ADT', 'ADT_A30', 'ACK', 'ACK');
  oEvent := oEvents.Add('A48', 'ADT/ACK - Change alternate patient ID');
    oEvent.Messages.Add('ADT', 'ADT_A30', 'ACK', 'ACK');
  oEvent := oEvents.Add('A49', 'ADT/ACK - Change patient account number');
    oEvent.Messages.Add('ADT', 'ADT_A30', 'ACK', 'ACK');
  oEvent := oEvents.Add('A50', 'ADT/ACK - Change visit number');
    oEvent.Messages.Add('ADT', 'ADT_A50', 'ACK', 'ACK');
  oEvent := oEvents.Add('A51', 'ADT/ACK - Change alternate visit ID');
    oEvent.Messages.Add('ADT', 'ADT_A50', 'ACK', 'ACK');
  oEvent := oEvents.Add('C01', 'CRM - Register a patient on a clinical trial');
    oEvent.Messages.Add('CRM', 'CRM_C01', 'NUL', 'NUL');
  oEvent := oEvents.Add('C02', 'CRM - Cancel a patient registration on clinical trial (for clerical mistakes onl');
    oEvent.Messages.Add('CRM', 'CRM_C01', 'NUL', 'NUL');
  oEvent := oEvents.Add('C03', 'CRM - Correct/update registration information');
    oEvent.Messages.Add('CRM', 'CRM_C01', 'NUL', 'NUL');
  oEvent := oEvents.Add('C04', 'CRM - Patient has gone off a clinical trial');
    oEvent.Messages.Add('CRM', 'CRM_C01', 'NUL', 'NUL');
  oEvent := oEvents.Add('C05', 'CRM - Patient enters phase of clinical trial');
    oEvent.Messages.Add('CRM', 'CRM_C01', 'NUL', 'NUL');
  oEvent := oEvents.Add('C06', 'CRM - Cancel patient entering a phase (clerical mistake)');
    oEvent.Messages.Add('CRM', 'CRM_C01', 'NUL', 'NUL');
  oEvent := oEvents.Add('C07', 'CRM - Correct/update phase information');
    oEvent.Messages.Add('CRM', 'CRM_C01', 'NUL', 'NUL');
  oEvent := oEvents.Add('C08', 'CRM - Patient has gone off phase of clinical trial');
    oEvent.Messages.Add('CRM', 'CRM_C01', 'NUL', 'NUL');
  oEvent := oEvents.Add('C09', 'CSU - Automated time intervals for reporting, like monthly');
    oEvent.Messages.Add('CSU', 'CSU_C09', 'NUL', 'NUL');
  oEvent := oEvents.Add('C10', 'CSU - Patient completes the clinical trial');
    oEvent.Messages.Add('CSU', 'CSU_C09', 'NUL', 'NUL');
  oEvent := oEvents.Add('C11', 'CSU - Patient completes a phase of the clinical trial');
    oEvent.Messages.Add('CSU', 'CSU_C09', 'NUL', 'NUL');
  oEvent := oEvents.Add('C12', 'CSU - Update/correction of patient order/result information');
    oEvent.Messages.Add('CSU', 'CSU_C09', 'NUL', 'NUL');
  oEvents.Add('CNQ', 'QRY/EQQ/SPQ/VQQ/RQQ - Cancel query');
  oEvent := oEvents.Add('I01', 'RQI/RPI - Request for insurance information');
    oEvent.Messages.Add('RQI', 'RQI_I01', 'RPI', 'RPI_I01');
  oEvent := oEvents.Add('I02', 'RQI/RPL - Request/receipt of patient selection display list');
    oEvent.Messages.Add('RQI', 'RQI_I01', 'RPL', 'RPL_I02');
  oEvent := oEvents.Add('I03', 'RQI/RPR - Request/receipt of patient selection list');
    oEvent.Messages.Add('RQI', 'RQI_I01', 'RPR', 'RPL_I02');
  oEvent := oEvents.Add('I04', 'RQD/RPI - Request for patient demographic data');
    oEvent.Messages.Add('RQP', 'RQP_I04', 'RPI', 'RPI_I01');
  oEvent := oEvents.Add('I05', 'RQC/RCI - Request for patient clinical information');
    oEvent.Messages.Add('RQC', 'RQC_I05', 'RCI', 'RCI_I05');
  oEvent := oEvents.Add('I06', 'RQC/RCL - Request/receipt of clinical data listing');
    oEvent.Messages.Add('RQC', 'RQC_I06', 'RCL', 'RCL_I06');
  oEvent := oEvents.Add('I07', 'PIN/ACK - Unsolicited insurance information');
    oEvent.Messages.Add('PIN', 'PIN_I07', 'ACK', 'ACK');
  oEvent := oEvents.Add('I08', 'RQA/RPA - Request for treatment authorization information');
    oEvent.Messages.Add('RQA', 'RQA_I08', 'RPA', 'RPA_I08');
  oEvent := oEvents.Add('I09', 'RQA/RPA - Request for modification to an authorization');
    oEvent.Messages.Add('RQA', 'RQA_I08', 'RPA', 'RPA_I08');
  oEvent := oEvents.Add('I10', 'RQA/RPA - Request for resubmission of an authorization');
    oEvent.Messages.Add('RQA', 'RQA_I08', 'RPA', 'RPA_I08');
  oEvent := oEvents.Add('I11', 'RQA/RPA - Request for cancellation of an authorization');
    oEvent.Messages.Add('RQA', 'RQA_I08', 'RPA', 'RPA_I08');
  oEvent := oEvents.Add('I12', 'REF/RRI -  Patient referral');
    oEvent.Messages.Add('REF', 'REF_I12', 'RRI', 'RRI_I12');
  oEvent := oEvents.Add('I13', 'REF/RRI - Modify patient referral');
    oEvent.Messages.Add('REF', 'REF_I12', 'RRI', 'RRI_I12');
  oEvent := oEvents.Add('I14', 'REF/RRI - Cancel patient referral');
    oEvent.Messages.Add('REF', 'REF_I12', 'RRI', 'RRI_I12');
  oEvent := oEvents.Add('I15', 'REF/RRI - Request patient referral status');
    oEvent.Messages.Add('REF', 'REF_I12', 'RRI', 'RRI_I12');
  oEvent := oEvents.Add('M01', 'MFN/MFK - Master file not otherwise specified (for backward compatibility only)');
    oEvent.Messages.Add('MFN', 'MFN_M01', 'MFK', 'MFK_M01');
    oEvent.Messages.Add('MFQ', 'MFQ_M01', 'MFR', 'MFR_M01');
  oEvent := oEvents.Add('M02', 'MFN/MFK - Master file - Staff Practitioner');
    oEvent.Messages.Add('MFN', 'MFN_M02', 'MFK', 'MFK_M01');
    oEvent.Messages.Add('MFQ', 'MFQ_M01', 'MFR', 'MFR_M01');
  oEvent := oEvents.Add('M03', 'MFN/MFK - Master file - Test/Observation (for backward compatibility only)');
    oEvent.Messages.Add('MFN', 'MFN_M01', 'MFK', 'MFK_M01');
    oEvent.Messages.Add('MFQ', 'MFQ_M01', 'MFR', 'MFR_M01');
  oEvent := oEvents.Add('M04', 'MFN/MFK - Master files charge description');
    oEvent.Messages.Add('MFN', 'MFN_M01', 'MFK', 'MFK_M01');
    oEvent.Messages.Add('MFQ', 'MFQ_M01', 'MFR', 'MFR_M01');
  oEvent := oEvents.Add('M05', 'MFN/MFK - Patient location master file');
    oEvent.Messages.Add('MFN', 'MFN_M01', 'MFK', 'MFK_M01');
    oEvent.Messages.Add('MFQ', 'MFQ_M01', 'MFR', 'MFR_M01');
  oEvent := oEvents.Add('M06', 'MFN/MFK - Clinical study with phases and schedules master file');
    oEvent.Messages.Add('MFN', 'MFN_M01', 'MFK', 'MFK_M01');
    oEvent.Messages.Add('MFQ', 'MFQ_M01', 'MFR', 'MFR_M01');
  oEvent := oEvents.Add('M07', 'MFN/MFK - Clinical study without phases but with schedules master file');
    oEvent.Messages.Add('MFN', 'MFN_M07', 'MFK', 'MFK_M01');
  oEvent := oEvents.Add('M08', 'MFN/MFK - Test/observation (Numeric) master file');
    oEvent.Messages.Add('MFN', 'MFN_M08', 'MFK', 'MFK_M01');
  oEvent := oEvents.Add('M09', 'MFN/MFK - Test/Observation (Categorical) master file');
    oEvent.Messages.Add('MFN', 'MFN_M09', 'MFK', 'MFK_M01');
  oEvent := oEvents.Add('M10', 'MFN/MFK - Test /observation batteries master file');
    oEvent.Messages.Add('MFN', 'MFN_M10', 'MFK', 'MFK_M01');
  oEvent := oEvents.Add('M11', 'MFN/MFK - Test/calculated observations master file');
    oEvent.Messages.Add('MFN', 'MFN_M11', 'MFK', 'MFK_M01');
  oEvent := oEvents.Add('N01', 'NMQ/NMR - Application management query message');
    oEvent.Messages.Add('NMQ', 'NMQ_N01', 'NMR', 'NMR_N01');
  oEvent := oEvents.Add('N02', 'NMD/ACK - Application management data message (unsolicited)');
    oEvent.Messages.Add('NMD', 'NMD_N02', 'ACK', 'ACK');
  oEvent := oEvents.Add('O01', 'ORM - Order message (also RDE, RDS, RGV, RAS)');
    oEvent.Messages.Add('ORM', 'ORM_O01', 'NUL', 'NUL');
    oEvent.Messages.Add('ORM', 'OMD_O01', 'NUL', 'NUL');
    oEvent.Messages.Add('ORM', 'OMN_O01', 'NUL', 'NUL');
    oEvent.Messages.Add('ORM', 'OMS_O01', 'NUL', 'NUL');
    oEvent.Messages.Add('ORM', 'RDO_O01', 'NUL', 'NUL');
    oEvent.Messages.Add('RDE', 'RDE_O01', 'NUL', 'NUL');
    oEvent.Messages.Add('RDS', 'RDS_O01', 'NUL', 'NUL');
    oEvent.Messages.Add('RGV', 'RGV_O01', 'NUL', 'NUL');
    oEvent.Messages.Add('RAS', 'RAS_O01', 'NUL', 'NUL');
  oEvent := oEvents.Add('O02', 'ORR - Order response (also RRE, RRD, RRG, RRA)');
    oEvent.Messages.Add('ORR', 'ORR_O02', 'NUL', 'NUL');
    oEvent.Messages.Add('ORR', 'ORN_O02', 'NUL', 'NUL');
    oEvent.Messages.Add('ORR', 'ORS_O02', 'NUL', 'NUL');
    oEvent.Messages.Add('ORR', 'ORD_O02', 'NUL', 'NUL');
    oEvent.Messages.Add('ORR', 'RRO_O02', 'NUL', 'NUL');
    oEvent.Messages.Add('RRE', 'RRE_O02', 'NUL', 'NUL');
    oEvent.Messages.Add('RRD', 'RRD_O02', 'NUL', 'NUL');
    oEvent.Messages.Add('RRG', 'RRG_O02', 'NUL', 'NUL');
    oEvent.Messages.Add('RRA', 'RRA_O02', 'NUL', 'NUL');
  oEvent := oEvents.Add('P01', 'BAR/ACK - Add patient accounts');
    oEvent.Messages.Add('BAR', 'BAR_P01', 'ACK', 'ACK');
  oEvent := oEvents.Add('P02', 'BAR/ACK - Purge patient accounts');
    oEvent.Messages.Add('BAR', 'BAR_P02', 'ACK', 'ACK');
  oEvent := oEvents.Add('P03', 'DFT/ACK - Post detail financial transaction');
    oEvent.Messages.Add('DFT', 'DFT_P03', 'ACK', 'ACK');
  oEvent := oEvents.Add('P04', 'QRY/DSP - Generate bill and A/R statements');
    oEvent.Messages.Add('QRY', 'NUL', 'DSR', 'NUL');
  oEvent := oEvents.Add('P05', 'BAR/ACK - Update account');
    oEvent.Messages.Add('BAR', 'BAR_P01', 'ACK', 'ACK');
  oEvent := oEvents.Add('P06', 'BAR/ACK - End account');
    oEvent.Messages.Add('BAR', 'BAR_P06', 'ACK', 'ACK');
  oEvent := oEvents.Add('P07', 'PEX - Unsolicited initial individual product experience report');
    oEvent.Messages.Add('PEX', 'PEX_P07', 'NUL', 'NUL');
  oEvent := oEvents.Add('P08', 'PEX - Unsolicited update individual product experience report');
    oEvent.Messages.Add('PEX', 'PEX_P07', 'NUL', 'NUL');
  oEvent := oEvents.Add('P09', 'SUR - Summary product experience report');
    oEvent.Messages.Add('SUR', 'SUR_P09', 'NUL', 'NUL');
  oEvent := oEvents.Add('PC1', 'PPR - PC/ Problem Add');
    oEvent.Messages.Add('PPR', 'PPR_PC1', 'ACK', 'ACK');
  oEvent := oEvents.Add('PC2', 'PPR - PC/ Problem Update');
    oEvent.Messages.Add('PPR', 'PPR_PC1', 'ACK', 'ACK');
  oEvent := oEvents.Add('PC3', 'PPR - PC/ Problem Delete');
    oEvent.Messages.Add('PPR', 'PPR_PC1', 'ACK', 'ACK');
  oEvent := oEvents.Add('PC4', 'PRQ - PC/ Problem Query');
    oEvent.Messages.Add('QRY', 'QRY_PC4', 'ACK', 'ACK');
  oEvent := oEvents.Add('PC5', 'PRR - PC/ Problem Response');
    oEvent.Messages.Add('PRR', 'PRR_PC5', 'ACK', 'ACK');
  oEvent := oEvents.Add('PC6', 'PGL - PC/ Goal Add');
    oEvent.Messages.Add('PGL', 'PGL_PC6', 'ACK', 'ACK');
  oEvent := oEvents.Add('PC7', 'PGL - PC/ Goal Update');
    oEvent.Messages.Add('PGL', 'PGL_PC6', 'ACK', 'ACK');
  oEvent := oEvents.Add('PC8', 'PGL - PC/ Goal Delete');
    oEvent.Messages.Add('PGL', 'PGL_PC6', 'ACK', 'ACK');
  oEvent := oEvents.Add('PC9', 'PGQ - PC/ Goal Query');
    oEvent.Messages.Add('QRY', 'QRY_PC4', 'ACK', 'ACK');
  oEvent := oEvents.Add('PCA', 'PGR - PC/ Goal Response');
    oEvent.Messages.Add('PPV', 'PPV_PCA', 'ACK', 'ACK');
  oEvent := oEvents.Add('PCB', 'PPP - PC/ Pathway (Problem-Oriented) Add');
    oEvent.Messages.Add('PPP', 'PPP_PCB', 'ACK', 'ACK');
  oEvent := oEvents.Add('PCC', 'PPP - PC/ Pathway (Problem-Oriented) Update');
    oEvent.Messages.Add('PPP', 'PPP_PCB', 'ACK', 'ACK');
  oEvent := oEvents.Add('PCD', 'PPP - PC/ Pathway (Problem-Oriented) Delete');
    oEvent.Messages.Add('PPP', 'PPP_PCB', 'ACK', 'ACK');
  oEvent := oEvents.Add('PCE', 'PTQ - PC/ Pathway (Problem-Oriented) Query');
    oEvent.Messages.Add('QRY', 'QRY_PC4', 'ACK', 'ACK');
  oEvent := oEvents.Add('PCF', 'PTR - PC/ Pathway (Problem-Oriented) Query Response');
    oEvent.Messages.Add('PTR', 'PTR_PCF', 'ACK', 'ACK');
  oEvent := oEvents.Add('PCG', 'PPG - PC/ Pathway (Goal-Oriented) Add');
    oEvent.Messages.Add('PPG', 'PPG_PCG', 'ACK', 'ACK');
  oEvent := oEvents.Add('PCH', 'PPG - PC/ Pathway (Goal-Oriented) Update');
    oEvent.Messages.Add('PPG', 'PPG_PCG', 'ACK', 'ACK');
  oEvent := oEvents.Add('PCJ', 'PPG - PC/ Pathway (Goal-Oriented) Delete');
    oEvent.Messages.Add('PPG', 'PPG_PCG', 'ACK', 'ACK');
  oEvent := oEvents.Add('PCK', 'PTU - PC/ Pathway (Goal-Oriented) Query');
    oEvent.Messages.Add('QRY', 'QRY_PC4', 'ACK', 'ACK');
  oEvent := oEvents.Add('PCL', 'PTV - PC/ Pathway (Goal-Oriented) Query Response');
    oEvent.Messages.Add('PPT', 'PPT_PCL', 'ACK', 'ACK');
  oEvent := oEvents.Add('Q01', 'QRY/DSR - Query sent for immediate response');
    oEvent.Messages.Add('QRY', 'QRY_Q01', 'DSR', 'DSR_Q01');
  oEvent := oEvents.Add('Q02', 'QRY/QCK - Query sent for deferred response');
    oEvent.Messages.Add('QRY', 'QRY_Q02', 'QCK', 'QCK_Q02');
  oEvent := oEvents.Add('Q03', 'DSR/ACK - Deferred response to a query');
    oEvent.Messages.Add('DSR', 'DSR_Q03', 'ACK', 'ACK');
  oEvent := oEvents.Add('Q04', 'EQQ - Embedded query language query');
    oEvent.Messages.Add('EQQ', 'EQQ_Q04', 'NUL', 'NUL');
  oEvent := oEvents.Add('Q05', 'UDM/ACK - Unsolicited display update message');
    oEvent.Messages.Add('UDM', 'UDM_Q05', 'ACK', 'ACK');
  oEvent := oEvents.Add('Q06', 'OSQ/OSR - Query for order status');
    oEvent.Messages.Add('OSQ', 'OSQ_Q06', 'OSR', 'OSR_Q06');
  oEvent := oEvents.Add('Q07', 'VQQ - Virtual table query');
    oEvent.Messages.Add('VQQ', 'VQQ_Q07', 'NUL', 'NUL');
  oEvent := oEvents.Add('Q08', 'SPQ - Stored procedure request');
    oEvent.Messages.Add('SPQ', 'SPQ_Q08', 'NUL', 'NUL');
  oEvent := oEvents.Add('Q09', 'RQQ - event replay query');
    oEvent.Messages.Add('RQQ', 'RQQ_Q09', 'NUL', 'NUL');
  oEvent := oEvents.Add('R01', 'ORU/ACK - Unsolicited transmission of an observation message');
    oEvent.Messages.Add('ORU', 'ORU_R01', 'ACK', 'ACK');
  oEvent := oEvents.Add('R02', 'QRY - Query for results of observation');
    oEvent.Messages.Add('QRY', 'QRY_R02', 'NUL', 'NUL');
  oEvents.Add('R03', 'QRY/DSR Display-oriented results, query/unsol. update (for backward compatibilit');
  oEvent := oEvents.Add('R04', 'ORF - Response to query; transmission of requested observation');
    oEvent.Messages.Add('NUL', 'NUL', 'ORF', 'ORF_R04');
  oEvents.Add('R05', 'QRY/DSR - query for display results');
  oEvents.Add('R06', 'UDM - unsolicited update/display results');
  oEvent := oEvents.Add('R07', 'Enhanced Display Response');
    oEvent.Messages.Add('EDR', 'EDR_R07', 'NUL', 'NUL');
  oEvent := oEvents.Add('R08', 'Tabular Data Response');
    oEvent.Messages.Add('TBR', 'TBR_R08', 'NUL', 'NUL');
  oEvent := oEvents.Add('R09', 'Event Replay Response');
    oEvent.Messages.Add('ERP', 'ERP_R09', 'NUL', 'NUL');
  oEvent := oEvents.Add('R0R', 'R0R - Pharmacy prescription order query response');
    oEvent.Messages.Add('ROR', 'ROR_ROR', 'NUL', 'NUL');
  oEvent := oEvents.Add('RAR', 'RAR - Pharmacy administration information query response');
    oEvent.Messages.Add('RAR', 'RAR_RAR', 'NUL', 'NUL');
  oEvent := oEvents.Add('RDR', 'RDR - Pharmacy dispense information query response');
    oEvent.Messages.Add('RDR', 'RDR_RDR', 'NUL', 'NUL');
  oEvent := oEvents.Add('RER', 'RER - Pharmacy encoded order information query response');
    oEvent.Messages.Add('RER', 'RER_RER', 'NUL', 'NUL');
  oEvent := oEvents.Add('RGR', 'RGR - Pharmacy dose information query response');
    oEvent.Messages.Add('RGR', 'RGR_RGR', 'NUL', 'NUL');
  oEvent := oEvents.Add('S01', 'SRM/SRR - Request new appointment booking');
    oEvent.Messages.Add('SRM', 'SRM_S01', 'SRR', 'SRR_S01');
  oEvent := oEvents.Add('S02', 'SRM/SRR - Request appointment rescheduling');
    oEvent.Messages.Add('SRM', 'SRM_S01', 'SRR', 'SRR_S01');
  oEvent := oEvents.Add('S03', 'SRM/SRR - Request appointment modification');
    oEvent.Messages.Add('SRM', 'SRM_S01', 'SRR', 'SRR_S01');
  oEvent := oEvents.Add('S04', 'SRM/SRR - Request appointment cancellation');
    oEvent.Messages.Add('SRM', 'SRM_S01', 'SRR', 'SRR_S01');
  oEvent := oEvents.Add('S05', 'SRM/SRR - Request appointment discontinuation');
    oEvent.Messages.Add('SRM', 'SRM_S01', 'SRR', 'SRR_S01');
  oEvent := oEvents.Add('S06', 'SRM/SRR - Request appointment deletion');
    oEvent.Messages.Add('SRM', 'SRM_S01', 'SRR', 'SRR_S01');
  oEvent := oEvents.Add('S07', 'SRM/SRR - Request addition of service/resource on appointment');
    oEvent.Messages.Add('SRM', 'SRM_S01', 'SRR', 'SRR_S01');
  oEvent := oEvents.Add('S08', 'SRM/SRR - Request modification of service/resource on appointment');
    oEvent.Messages.Add('SRM', 'SRM_S01', 'SRR', 'SRR_S01');
  oEvent := oEvents.Add('S09', 'SRM/SRR - Request cancellation of service/resource on appointment');
    oEvent.Messages.Add('SRM', 'SRM_S01', 'SRR', 'SRR_S01');
  oEvent := oEvents.Add('S10', 'SRM/SRR - Request discontinuation of service/resource on appointment');
    oEvent.Messages.Add('SRM', 'SRM_S01', 'SRR', 'SRR_S01');
  oEvent := oEvents.Add('S11', 'SRM/SRR - Request deletion of service/resource on appointment');
    oEvent.Messages.Add('SRM', 'SRM_S01', 'SRR', 'SRR_S01');
  oEvent := oEvents.Add('S12', 'SIU/ACK - Notification of new appointment booking');
    oEvent.Messages.Add('SIU', 'SIU_S12', 'ACK', 'ACK');
  oEvent := oEvents.Add('S13', 'SIU/ACK - Notification of appointment rescheduling');
    oEvent.Messages.Add('SIU', 'SIU_S12', 'ACK', 'ACK');
  oEvent := oEvents.Add('S14', 'SIU/ACK - Notification of appointment modification');
    oEvent.Messages.Add('SIU', 'SIU_S12', 'ACK', 'ACK');
  oEvent := oEvents.Add('S15', 'SIU/ACK - Notification of appointment cancellation');
    oEvent.Messages.Add('SIU', 'SIU_S12', 'ACK', 'ACK');
  oEvent := oEvents.Add('S16', 'SIU/ACK - Notification of appointment discontinuation');
    oEvent.Messages.Add('SIU', 'SIU_S12', 'ACK', 'ACK');
  oEvent := oEvents.Add('S17', 'SIU/ACK - Notification of appointment deletion');
    oEvent.Messages.Add('SIU', 'SIU_S12', 'ACK', 'ACK');
  oEvent := oEvents.Add('S18', 'SIU/ACK - Notification of addition of service/resource on appointment');
    oEvent.Messages.Add('SIU', 'SIU_S12', 'ACK', 'ACK');
  oEvent := oEvents.Add('S19', 'SIU/ACK - Notification of modification of service/resource on appointment');
    oEvent.Messages.Add('SIU', 'SIU_S12', 'ACK', 'ACK');
  oEvent := oEvents.Add('S20', 'SIU/ACK - Notification of cancellation of service/resource on appointment');
    oEvent.Messages.Add('SIU', 'SIU_S12', 'ACK', 'ACK');
  oEvent := oEvents.Add('S21', 'SIU/ACK - Notification of discontinuation of service/resource on appointment');
    oEvent.Messages.Add('SIU', 'SIU_S12', 'ACK', 'ACK');
  oEvent := oEvents.Add('S22', 'SIU/ACK - Notification of deletion of service/resource on appointment');
    oEvent.Messages.Add('SIU', 'SIU_S12', 'ACK', 'ACK');
  oEvent := oEvents.Add('S23', 'SIU/ACK - Notification of blocked schedule time slot(s)');
    oEvent.Messages.Add('SIU', 'SIU_S12', 'ACK', 'ACK');
  oEvent := oEvents.Add('S24', 'SIU/ACK - Notification of opened ('#147'unblocked'#148') schedule time slot(s)');
    oEvent.Messages.Add('SIU', 'SIU_S12', 'ACK', 'ACK');
  oEvent := oEvents.Add('S25', 'SQM/SQR - Schedule query message and response');
    oEvent.Messages.Add('SQM', 'SQM_S25', 'SQR', 'SQR_S25');
  oEvent := oEvents.Add('S26', 'Notification that patient did not show up for schedule appointment');
    oEvent.Messages.Add('SIU', 'SIU_S12', 'ACK', 'ACK');
  oEvent := oEvents.Add('T01', 'MDM/ACK - Original document notification');
    oEvent.Messages.Add('MDM', 'MDM_T01', 'ACK', 'ACK');
  oEvent := oEvents.Add('T02', 'MDM/ACK - Original document notification and content');
    oEvent.Messages.Add('MDM', 'MDM_T02', 'ACK', 'ACK');
  oEvent := oEvents.Add('T03', 'MDM/ACK - Document status change notification');
    oEvent.Messages.Add('MDM', 'MDM_T01', 'ACK', 'ACK');
  oEvent := oEvents.Add('T04', 'MDM/ACK - Document status change notification and content');
    oEvent.Messages.Add('MDM', 'MDM_T02', 'ACK', 'ACK');
  oEvent := oEvents.Add('T05', 'MDM/ACK - Document addendum notification');
    oEvent.Messages.Add('MDM', 'MDM_T01', 'ACK', 'ACK');
  oEvent := oEvents.Add('T06', 'MDM/ACK - Document addendum notification and content');
    oEvent.Messages.Add('MDM', 'MDM_T02', 'ACK', 'ACK');
  oEvent := oEvents.Add('T07', 'MDM/ACK - Document edit notification');
    oEvent.Messages.Add('MDM', 'MDM_T01', 'ACK', 'ACK');
  oEvent := oEvents.Add('T08', 'MDM/ACK - Document edit notification and content');
    oEvent.Messages.Add('MDM', 'MDM_T02', 'ACK', 'ACK');
  oEvent := oEvents.Add('T09', 'MDM/ACK - Document replacement notification');
    oEvent.Messages.Add('MDM', 'MDM_T01', 'ACK', 'ACK');
  oEvent := oEvents.Add('T10', 'MDM/ACK - Document replacement notification and content');
    oEvent.Messages.Add('MDM', 'MDM_T02', 'ACK', 'ACK');
  oEvent := oEvents.Add('T11', 'MDM/ACK - Document cancel notification');
    oEvent.Messages.Add('MDM', 'MDM_T01', 'ACK', 'ACK');
  oEvent := oEvents.Add('T12', 'QRY/DOC - Document query');
    oEvent.Messages.Add('QRY', 'QRY_T12', 'DOC', 'DOC_T12');
  oEvent := oEvents.Add('V01', 'VXQ - Query for vaccination record');
    oEvent.Messages.Add('VXQ', 'VXQ_V01', 'NUL', 'NUL');
  oEvent := oEvents.Add('V02', 'VXX - Response to vaccination query returning multiple PID matches');
    oEvent.Messages.Add('VXX', 'VXX_V02', 'NUL', 'NUL');
  oEvent := oEvents.Add('V03', 'VXR - Vaccination record response');
    oEvent.Messages.Add('VXR', 'VXR_V03', 'NUL', 'NUL');
  oEvent := oEvents.Add('V04', 'VXU - Unsolicited vaccination record update');
    oEvent.Messages.Add('VXU', 'VXU_V04', 'NUL', 'NUL');
  oEvents.Add('W01', 'ORU - Waveform result, unsolicited transmission of requested information');
  oEvents.Add('W02', 'QRF - Waveform result, response to query');
End;

End.

